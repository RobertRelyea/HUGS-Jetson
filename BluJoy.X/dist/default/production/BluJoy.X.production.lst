

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Aug 13 15:48:38 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16LF18446
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssEEDATA,global,class=EEDATA,space=3,delta=2,noexec
    23                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    24                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    27                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    28                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    29                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    30                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    31                           	psect	inittext,global,class=CODE,delta=2
    32                           	psect	clrtext,global,class=CODE,delta=2
    33                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    34                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    36                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    37                           	psect	text1,local,class=CODE,merge=1,delta=2
    38                           	psect	text2,local,class=CODE,merge=1,delta=2
    39                           	psect	text3,local,class=CODE,merge=1,delta=2
    40                           	psect	text4,local,class=CODE,merge=1,delta=2
    41                           	psect	text5,local,class=CODE,merge=1,delta=2
    42                           	psect	text6,local,class=CODE,merge=1,delta=2
    43                           	psect	text7,local,class=CODE,merge=1,delta=2
    44                           	psect	text8,local,class=CODE,merge=1,delta=2
    45                           	psect	text9,local,class=CODE,merge=1,delta=2
    46                           	psect	text10,local,class=CODE,merge=1,delta=2
    47                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text12,local,class=CODE,merge=1,delta=2
    49                           	psect	text13,local,class=CODE,merge=1,delta=2
    50                           	psect	text14,local,class=CODE,merge=1,delta=2
    51                           	psect	text15,local,class=CODE,merge=1,delta=2
    52                           	psect	text16,local,class=CODE,merge=1,delta=2
    53                           	psect	text17,local,class=CODE,merge=1,delta=2
    54                           	psect	text18,local,class=CODE,merge=1,delta=2
    55                           	psect	text19,local,class=CODE,merge=1,delta=2
    56                           	psect	text20,local,class=CODE,merge=1,delta=2
    57                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text24,local,class=CODE,merge=1,delta=2
    61                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text26,local,class=CODE,merge=1,delta=2
    63                           	psect	text27,local,class=CODE,merge=1,delta=2
    64                           	psect	text28,local,class=CODE,merge=1,delta=2
    65                           	psect	text29,local,class=CODE,merge=1,delta=2
    66                           	psect	text30,local,class=CODE,merge=1,delta=2
    67                           	psect	text31,local,class=CODE,merge=1,delta=2
    68                           	psect	text32,local,class=CODE,merge=1,delta=2
    69                           	psect	text33,local,class=CODE,merge=1,delta=2
    70                           	psect	text34,local,class=CODE,merge=1,delta=2
    71                           	psect	text35,local,class=CODE,merge=1,delta=2
    72                           	psect	text36,local,class=CODE,merge=1,delta=2
    73                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text38,local,class=CODE,merge=1,delta=2
    75                           	psect	text39,local,class=CODE,merge=1,delta=2
    76                           	psect	text40,local,class=CODE,merge=1,delta=2
    77                           	psect	text41,local,class=CODE,merge=1,delta=2
    78                           	psect	text42,local,class=CODE,merge=1,delta=2
    79                           	psect	text43,local,class=CODE,merge=1,delta=2
    80                           	psect	text44,local,class=CODE,merge=1,delta=2
    81                           	psect	text45,local,class=CODE,merge=1,delta=2
    82                           	psect	text46,local,class=CODE,merge=1,delta=2
    83                           	psect	text47,local,class=CODE,merge=1,delta=2
    84                           	psect	text48,local,class=CODE,merge=1,delta=2
    85                           	psect	text49,local,class=CODE,merge=1,delta=2
    86                           	psect	text50,local,class=CODE,merge=1,delta=2
    87                           	psect	text51,local,class=CODE,merge=1,delta=2,group=2
    88                           	psect	text52,local,class=CODE,merge=1,delta=2
    89                           	psect	text53,local,class=CODE,merge=1,delta=2
    90                           	psect	text54,local,class=CODE,merge=1,delta=2
    91                           	psect	text55,local,class=CODE,merge=1,delta=2
    92                           	psect	text56,local,class=CODE,merge=1,delta=2
    93                           	psect	text57,local,class=CODE,merge=1,delta=2
    94                           	psect	text58,local,class=CODE,merge=1,delta=2
    95                           	psect	text59,local,class=CODE,merge=1,delta=2
    96                           	psect	text60,local,class=CODE,merge=1,delta=2
    97                           	psect	text61,local,class=CODE,merge=1,delta=2
    98                           	psect	text62,local,class=CODE,merge=1,delta=2
    99                           	psect	text63,local,class=CODE,merge=1,delta=2
   100                           	psect	text64,local,class=CODE,merge=1,delta=2
   101                           	psect	text65,local,class=CODE,merge=1,delta=2
   102                           	psect	text66,local,class=CODE,merge=1,delta=2
   103                           	psect	text67,local,class=CODE,merge=1,delta=2
   104                           	psect	text68,local,class=CODE,merge=1,delta=2
   105                           	psect	text69,local,class=CODE,merge=1,delta=2
   106                           	psect	text70,local,class=CODE,merge=1,delta=2
   107                           	psect	text71,local,class=CODE,merge=1,delta=2
   108                           	psect	text72,local,class=CODE,merge=1,delta=2
   109                           	psect	text73,local,class=CODE,merge=1,delta=2
   110                           	psect	text74,local,class=CODE,merge=1,delta=2
   111                           	psect	text75,local,class=CODE,merge=1,delta=2
   112                           	psect	text76,local,class=CODE,merge=1,delta=2
   113                           	psect	intentry,global,class=CODE,delta=2
   114                           	psect	text78,local,class=CODE,merge=1,delta=2
   115                           	psect	text79,local,class=CODE,merge=1,delta=2
   116                           	psect	text80,local,class=CODE,merge=1,delta=2
   117                           	psect	text81,local,class=CODE,merge=1,delta=2
   118                           	psect	text82,local,class=CODE,merge=1,delta=2
   119                           	psect	text83,local,class=CODE,merge=1,delta=2
   120                           	psect	text84,local,class=CODE,merge=1,delta=2
   121                           	psect	text85,local,class=CODE,merge=1,delta=2
   122                           	psect	text86,local,class=CODE,merge=1,delta=2
   123                           	psect	text87,local,class=CODE,merge=1,delta=2
   124                           	psect	text88,local,class=CODE,merge=1,delta=2
   125                           	psect	text89,local,class=CODE,merge=1,delta=2
   126                           	psect	text90,local,class=CODE,merge=1,delta=2
   127                           	psect	text91,local,class=CODE,merge=1,delta=2
   128                           	psect	text92,local,class=CODE,merge=1,delta=2
   129                           	psect	text93,local,class=CODE,merge=1,delta=2
   130                           	psect	text94,local,class=CODE,merge=1,delta=2
   131                           	psect	text95,local,class=CODE,merge=1,delta=2
   132                           	psect	text96,local,class=CODE,merge=1,delta=2
   133                           	psect	text97,local,class=CODE,merge=1,delta=2
   134                           	psect	text98,local,class=CODE,merge=1,delta=2
   135                           	psect	text99,local,class=CODE,merge=1,delta=2
   136                           	psect	text100,local,class=CODE,merge=1,delta=2
   137                           	psect	text101,local,class=CODE,merge=1,delta=2
   138                           	psect	text102,local,class=CODE,merge=1,delta=2
   139                           	psect	text103,local,class=CODE,merge=1,delta=2
   140                           	psect	text104,local,class=CODE,merge=1,delta=2
   141                           	psect	text105,local,class=CODE,merge=1,delta=2
   142                           	psect	text106,local,class=CODE,merge=1,delta=2
   143                           	psect	text107,local,class=CODE,merge=1,delta=2
   144                           	psect	text108,local,class=CODE,merge=1,delta=2
   145                           	psect	text109,local,class=CODE,merge=1,delta=2
   146                           	psect	text110,local,class=CODE,merge=1,delta=2
   147                           	psect	text111,local,class=CODE,merge=1,delta=2
   148                           	psect	text112,local,class=CODE,merge=1,delta=2
   149                           	psect	text113,local,class=CODE,merge=1,delta=2
   150                           	psect	text114,local,class=CODE,merge=1,delta=2
   151                           	psect	text115,local,class=CODE,merge=1,delta=2
   152                           	psect	text116,local,class=CODE,merge=1,delta=2
   153                           	psect	text117,local,class=CODE,merge=1,delta=2
   154                           	psect	text118,local,class=CODE,merge=1,delta=2
   155                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   156                           	dabs	1,0x7E,2
   157  0000                     
   158                           ; Version 2.20
   159                           ; Generated 30/04/2020 GMT
   160                           ; 
   161                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   162                           ; All rights reserved.
   163                           ; 
   164                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   165                           ; 
   166                           ; Redistribution and use in source and binary forms, with or without modification, are
   167                           ; permitted provided that the following conditions are met:
   168                           ; 
   169                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   170                           ;        conditions and the following disclaimer.
   171                           ; 
   172                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   173                           ;        of conditions and the following disclaimer in the documentation and/or other
   174                           ;        materials provided with the distribution.
   175                           ; 
   176                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   177                           ;        software without specific prior written permission.
   178                           ; 
   179                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   180                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   181                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   182                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   183                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   184                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   185                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   186                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   187                           ; 
   188                           ; 
   189                           ; Code-generator required, PIC16LF18446 Definitions
   190                           ; 
   191                           ; SFR Addresses
   192  0000                     	;# 
   193  0001                     	;# 
   194  0002                     	;# 
   195  0003                     	;# 
   196  0004                     	;# 
   197  0005                     	;# 
   198  0006                     	;# 
   199  0007                     	;# 
   200  0008                     	;# 
   201  0009                     	;# 
   202  000A                     	;# 
   203  000B                     	;# 
   204  000C                     	;# 
   205  000D                     	;# 
   206  000E                     	;# 
   207  0012                     	;# 
   208  0013                     	;# 
   209  0014                     	;# 
   210  0018                     	;# 
   211  0019                     	;# 
   212  001A                     	;# 
   213  008C                     	;# 
   214  008C                     	;# 
   215  008D                     	;# 
   216  008E                     	;# 
   217  008E                     	;# 
   218  008F                     	;# 
   219  0090                     	;# 
   220  0090                     	;# 
   221  0091                     	;# 
   222  0092                     	;# 
   223  0092                     	;# 
   224  0093                     	;# 
   225  0094                     	;# 
   226  0094                     	;# 
   227  0095                     	;# 
   228  0096                     	;# 
   229  0096                     	;# 
   230  0097                     	;# 
   231  0098                     	;# 
   232  0099                     	;# 
   233  009A                     	;# 
   234  009B                     	;# 
   235  009B                     	;# 
   236  009C                     	;# 
   237  009D                     	;# 
   238  009D                     	;# 
   239  009E                     	;# 
   240  009F                     	;# 
   241  010C                     	;# 
   242  010C                     	;# 
   243  010D                     	;# 
   244  010E                     	;# 
   245  010F                     	;# 
   246  010F                     	;# 
   247  0110                     	;# 
   248  0111                     	;# 
   249  0112                     	;# 
   250  0113                     	;# 
   251  0114                     	;# 
   252  0115                     	;# 
   253  0116                     	;# 
   254  0117                     	;# 
   255  0118                     	;# 
   256  0119                     	;# 
   257  0119                     	;# 
   258  0119                     	;# 
   259  011A                     	;# 
   260  011A                     	;# 
   261  011A                     	;# 
   262  011B                     	;# 
   263  011B                     	;# 
   264  011B                     	;# 
   265  011B                     	;# 
   266  011B                     	;# 
   267  011C                     	;# 
   268  011C                     	;# 
   269  011C                     	;# 
   270  011D                     	;# 
   271  011D                     	;# 
   272  011D                     	;# 
   273  011E                     	;# 
   274  011E                     	;# 
   275  011E                     	;# 
   276  011F                     	;# 
   277  011F                     	;# 
   278  011F                     	;# 
   279  011F                     	;# 
   280  011F                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  018E                     	;# 
   284  018F                     	;# 
   285  0190                     	;# 
   286  0191                     	;# 
   287  0192                     	;# 
   288  0196                     	;# 
   289  0197                     	;# 
   290  0198                     	;# 
   291  0199                     	;# 
   292  019A                     	;# 
   293  019B                     	;# 
   294  019C                     	;# 
   295  020C                     	;# 
   296  020D                     	;# 
   297  020E                     	;# 
   298  020E                     	;# 
   299  020F                     	;# 
   300  020F                     	;# 
   301  0210                     	;# 
   302  0210                     	;# 
   303  0211                     	;# 
   304  0211                     	;# 
   305  0212                     	;# 
   306  0213                     	;# 
   307  0214                     	;# 
   308  0214                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0216                     	;# 
   312  0216                     	;# 
   313  0217                     	;# 
   314  0217                     	;# 
   315  0218                     	;# 
   316  0219                     	;# 
   317  021A                     	;# 
   318  021A                     	;# 
   319  021B                     	;# 
   320  021B                     	;# 
   321  021C                     	;# 
   322  021C                     	;# 
   323  021D                     	;# 
   324  021D                     	;# 
   325  021E                     	;# 
   326  021F                     	;# 
   327  028C                     	;# 
   328  028C                     	;# 
   329  028D                     	;# 
   330  028D                     	;# 
   331  028E                     	;# 
   332  028F                     	;# 
   333  0290                     	;# 
   334  0291                     	;# 
   335  0292                     	;# 
   336  0292                     	;# 
   337  0293                     	;# 
   338  0293                     	;# 
   339  0294                     	;# 
   340  0295                     	;# 
   341  0296                     	;# 
   342  0297                     	;# 
   343  0298                     	;# 
   344  0298                     	;# 
   345  0299                     	;# 
   346  0299                     	;# 
   347  029A                     	;# 
   348  029B                     	;# 
   349  029C                     	;# 
   350  029D                     	;# 
   351  029F                     	;# 
   352  030C                     	;# 
   353  030C                     	;# 
   354  030D                     	;# 
   355  030E                     	;# 
   356  030F                     	;# 
   357  0310                     	;# 
   358  0310                     	;# 
   359  0311                     	;# 
   360  0312                     	;# 
   361  0313                     	;# 
   362  0314                     	;# 
   363  0314                     	;# 
   364  0315                     	;# 
   365  0316                     	;# 
   366  0317                     	;# 
   367  0318                     	;# 
   368  0318                     	;# 
   369  0319                     	;# 
   370  031A                     	;# 
   371  031B                     	;# 
   372  038C                     	;# 
   373  038C                     	;# 
   374  038D                     	;# 
   375  038E                     	;# 
   376  0390                     	;# 
   377  0390                     	;# 
   378  0391                     	;# 
   379  0392                     	;# 
   380  048C                     	;# 
   381  048C                     	;# 
   382  048D                     	;# 
   383  048E                     	;# 
   384  048F                     	;# 
   385  048F                     	;# 
   386  0490                     	;# 
   387  0491                     	;# 
   388  0492                     	;# 
   389  0492                     	;# 
   390  0493                     	;# 
   391  0494                     	;# 
   392  0495                     	;# 
   393  0495                     	;# 
   394  0496                     	;# 
   395  0497                     	;# 
   396  0498                     	;# 
   397  0499                     	;# 
   398  049A                     	;# 
   399  049B                     	;# 
   400  049C                     	;# 
   401  049D                     	;# 
   402  058C                     	;# 
   403  058C                     	;# 
   404  058D                     	;# 
   405  058E                     	;# 
   406  058F                     	;# 
   407  058F                     	;# 
   408  0590                     	;# 
   409  0591                     	;# 
   410  0592                     	;# 
   411  0593                     	;# 
   412  059C                     	;# 
   413  059C                     	;# 
   414  059D                     	;# 
   415  059D                     	;# 
   416  059E                     	;# 
   417  059F                     	;# 
   418  060C                     	;# 
   419  060C                     	;# 
   420  060D                     	;# 
   421  060D                     	;# 
   422  060E                     	;# 
   423  060F                     	;# 
   424  0610                     	;# 
   425  0611                     	;# 
   426  0612                     	;# 
   427  0613                     	;# 
   428  0614                     	;# 
   429  0616                     	;# 
   430  0616                     	;# 
   431  0617                     	;# 
   432  0617                     	;# 
   433  0618                     	;# 
   434  0619                     	;# 
   435  061A                     	;# 
   436  061B                     	;# 
   437  061C                     	;# 
   438  061D                     	;# 
   439  061E                     	;# 
   440  070C                     	;# 
   441  070D                     	;# 
   442  070E                     	;# 
   443  070F                     	;# 
   444  0710                     	;# 
   445  0711                     	;# 
   446  0712                     	;# 
   447  0713                     	;# 
   448  0714                     	;# 
   449  0716                     	;# 
   450  0717                     	;# 
   451  0718                     	;# 
   452  0719                     	;# 
   453  071A                     	;# 
   454  071B                     	;# 
   455  071C                     	;# 
   456  071D                     	;# 
   457  071E                     	;# 
   458  0796                     	;# 
   459  0797                     	;# 
   460  0798                     	;# 
   461  0799                     	;# 
   462  079A                     	;# 
   463  079B                     	;# 
   464  079C                     	;# 
   465  079D                     	;# 
   466  080C                     	;# 
   467  080D                     	;# 
   468  080E                     	;# 
   469  080F                     	;# 
   470  0810                     	;# 
   471  0811                     	;# 
   472  0813                     	;# 
   473  0814                     	;# 
   474  081A                     	;# 
   475  081A                     	;# 
   476  081B                     	;# 
   477  081C                     	;# 
   478  081C                     	;# 
   479  081D                     	;# 
   480  081E                     	;# 
   481  081F                     	;# 
   482  088C                     	;# 
   483  088D                     	;# 
   484  088E                     	;# 
   485  088F                     	;# 
   486  0890                     	;# 
   487  0891                     	;# 
   488  0892                     	;# 
   489  0893                     	;# 
   490  0895                     	;# 
   491  0896                     	;# 
   492  0897                     	;# 
   493  0898                     	;# 
   494  0899                     	;# 
   495  089A                     	;# 
   496  089B                     	;# 
   497  090C                     	;# 
   498  090E                     	;# 
   499  090F                     	;# 
   500  091F                     	;# 
   501  098F                     	;# 
   502  098F                     	;# 
   503  0990                     	;# 
   504  0991                     	;# 
   505  0992                     	;# 
   506  0993                     	;# 
   507  0994                     	;# 
   508  0995                     	;# 
   509  0996                     	;# 
   510  0997                     	;# 
   511  1E0F                     	;# 
   512  1E10                     	;# 
   513  1E11                     	;# 
   514  1E12                     	;# 
   515  1E13                     	;# 
   516  1E14                     	;# 
   517  1E15                     	;# 
   518  1E16                     	;# 
   519  1E17                     	;# 
   520  1E18                     	;# 
   521  1E19                     	;# 
   522  1E1A                     	;# 
   523  1E1B                     	;# 
   524  1E1C                     	;# 
   525  1E1D                     	;# 
   526  1E1E                     	;# 
   527  1E1F                     	;# 
   528  1E20                     	;# 
   529  1E21                     	;# 
   530  1E22                     	;# 
   531  1E23                     	;# 
   532  1E24                     	;# 
   533  1E25                     	;# 
   534  1E26                     	;# 
   535  1E27                     	;# 
   536  1E28                     	;# 
   537  1E29                     	;# 
   538  1E2A                     	;# 
   539  1E2B                     	;# 
   540  1E2C                     	;# 
   541  1E2D                     	;# 
   542  1E2E                     	;# 
   543  1E2F                     	;# 
   544  1E30                     	;# 
   545  1E31                     	;# 
   546  1E32                     	;# 
   547  1E33                     	;# 
   548  1E34                     	;# 
   549  1E35                     	;# 
   550  1E36                     	;# 
   551  1E37                     	;# 
   552  1E8F                     	;# 
   553  1E90                     	;# 
   554  1E91                     	;# 
   555  1E92                     	;# 
   556  1E93                     	;# 
   557  1E94                     	;# 
   558  1E95                     	;# 
   559  1E96                     	;# 
   560  1E97                     	;# 
   561  1E9C                     	;# 
   562  1E9D                     	;# 
   563  1E9E                     	;# 
   564  1EA1                     	;# 
   565  1EA2                     	;# 
   566  1EA3                     	;# 
   567  1EA4                     	;# 
   568  1EA9                     	;# 
   569  1EAA                     	;# 
   570  1EB1                     	;# 
   571  1EB2                     	;# 
   572  1EB8                     	;# 
   573  1EB9                     	;# 
   574  1EBA                     	;# 
   575  1EBB                     	;# 
   576  1EBC                     	;# 
   577  1EBD                     	;# 
   578  1EBE                     	;# 
   579  1EC3                     	;# 
   580  1EC5                     	;# 
   581  1EC6                     	;# 
   582  1EC7                     	;# 
   583  1EC8                     	;# 
   584  1EC9                     	;# 
   585  1ECA                     	;# 
   586  1ECB                     	;# 
   587  1ECB                     	;# 
   588  1ECB                     	;# 
   589  1ECC                     	;# 
   590  1ECC                     	;# 
   591  1ECC                     	;# 
   592  1F10                     	;# 
   593  1F11                     	;# 
   594  1F12                     	;# 
   595  1F14                     	;# 
   596  1F15                     	;# 
   597  1F1C                     	;# 
   598  1F1D                     	;# 
   599  1F1E                     	;# 
   600  1F1F                     	;# 
   601  1F20                     	;# 
   602  1F21                     	;# 
   603  1F22                     	;# 
   604  1F23                     	;# 
   605  1F24                     	;# 
   606  1F25                     	;# 
   607  1F26                     	;# 
   608  1F27                     	;# 
   609  1F38                     	;# 
   610  1F39                     	;# 
   611  1F3A                     	;# 
   612  1F3B                     	;# 
   613  1F3C                     	;# 
   614  1F3D                     	;# 
   615  1F3E                     	;# 
   616  1F3F                     	;# 
   617  1F43                     	;# 
   618  1F44                     	;# 
   619  1F45                     	;# 
   620  1F46                     	;# 
   621  1F47                     	;# 
   622  1F48                     	;# 
   623  1F49                     	;# 
   624  1F4A                     	;# 
   625  1F4E                     	;# 
   626  1F4F                     	;# 
   627  1F50                     	;# 
   628  1F51                     	;# 
   629  1F52                     	;# 
   630  1F53                     	;# 
   631  1F54                     	;# 
   632  1F55                     	;# 
   633  1FE4                     	;# 
   634  1FE5                     	;# 
   635  1FE6                     	;# 
   636  1FE7                     	;# 
   637  1FE8                     	;# 
   638  1FE8                     	;# 
   639  1FE9                     	;# 
   640  1FEA                     	;# 
   641  1FEB                     	;# 
   642  1FED                     	;# 
   643  1FEE                     	;# 
   644  1FEF                     	;# 
   645  0000                     	;# 
   646  0001                     	;# 
   647  0002                     	;# 
   648  0003                     	;# 
   649  0004                     	;# 
   650  0005                     	;# 
   651  0006                     	;# 
   652  0007                     	;# 
   653  0008                     	;# 
   654  0009                     	;# 
   655  000A                     	;# 
   656  000B                     	;# 
   657  000C                     	;# 
   658  000D                     	;# 
   659  000E                     	;# 
   660  0012                     	;# 
   661  0013                     	;# 
   662  0014                     	;# 
   663  0018                     	;# 
   664  0019                     	;# 
   665  001A                     	;# 
   666  008C                     	;# 
   667  008C                     	;# 
   668  008D                     	;# 
   669  008E                     	;# 
   670  008E                     	;# 
   671  008F                     	;# 
   672  0090                     	;# 
   673  0090                     	;# 
   674  0091                     	;# 
   675  0092                     	;# 
   676  0092                     	;# 
   677  0093                     	;# 
   678  0094                     	;# 
   679  0094                     	;# 
   680  0095                     	;# 
   681  0096                     	;# 
   682  0096                     	;# 
   683  0097                     	;# 
   684  0098                     	;# 
   685  0099                     	;# 
   686  009A                     	;# 
   687  009B                     	;# 
   688  009B                     	;# 
   689  009C                     	;# 
   690  009D                     	;# 
   691  009D                     	;# 
   692  009E                     	;# 
   693  009F                     	;# 
   694  010C                     	;# 
   695  010C                     	;# 
   696  010D                     	;# 
   697  010E                     	;# 
   698  010F                     	;# 
   699  010F                     	;# 
   700  0110                     	;# 
   701  0111                     	;# 
   702  0112                     	;# 
   703  0113                     	;# 
   704  0114                     	;# 
   705  0115                     	;# 
   706  0116                     	;# 
   707  0117                     	;# 
   708  0118                     	;# 
   709  0119                     	;# 
   710  0119                     	;# 
   711  0119                     	;# 
   712  011A                     	;# 
   713  011A                     	;# 
   714  011A                     	;# 
   715  011B                     	;# 
   716  011B                     	;# 
   717  011B                     	;# 
   718  011B                     	;# 
   719  011B                     	;# 
   720  011C                     	;# 
   721  011C                     	;# 
   722  011C                     	;# 
   723  011D                     	;# 
   724  011D                     	;# 
   725  011D                     	;# 
   726  011E                     	;# 
   727  011E                     	;# 
   728  011E                     	;# 
   729  011F                     	;# 
   730  011F                     	;# 
   731  011F                     	;# 
   732  011F                     	;# 
   733  011F                     	;# 
   734  018C                     	;# 
   735  018D                     	;# 
   736  018E                     	;# 
   737  018F                     	;# 
   738  0190                     	;# 
   739  0191                     	;# 
   740  0192                     	;# 
   741  0196                     	;# 
   742  0197                     	;# 
   743  0198                     	;# 
   744  0199                     	;# 
   745  019A                     	;# 
   746  019B                     	;# 
   747  019C                     	;# 
   748  020C                     	;# 
   749  020D                     	;# 
   750  020E                     	;# 
   751  020E                     	;# 
   752  020F                     	;# 
   753  020F                     	;# 
   754  0210                     	;# 
   755  0210                     	;# 
   756  0211                     	;# 
   757  0211                     	;# 
   758  0212                     	;# 
   759  0213                     	;# 
   760  0214                     	;# 
   761  0214                     	;# 
   762  0215                     	;# 
   763  0215                     	;# 
   764  0216                     	;# 
   765  0216                     	;# 
   766  0217                     	;# 
   767  0217                     	;# 
   768  0218                     	;# 
   769  0219                     	;# 
   770  021A                     	;# 
   771  021A                     	;# 
   772  021B                     	;# 
   773  021B                     	;# 
   774  021C                     	;# 
   775  021C                     	;# 
   776  021D                     	;# 
   777  021D                     	;# 
   778  021E                     	;# 
   779  021F                     	;# 
   780  028C                     	;# 
   781  028C                     	;# 
   782  028D                     	;# 
   783  028D                     	;# 
   784  028E                     	;# 
   785  028F                     	;# 
   786  0290                     	;# 
   787  0291                     	;# 
   788  0292                     	;# 
   789  0292                     	;# 
   790  0293                     	;# 
   791  0293                     	;# 
   792  0294                     	;# 
   793  0295                     	;# 
   794  0296                     	;# 
   795  0297                     	;# 
   796  0298                     	;# 
   797  0298                     	;# 
   798  0299                     	;# 
   799  0299                     	;# 
   800  029A                     	;# 
   801  029B                     	;# 
   802  029C                     	;# 
   803  029D                     	;# 
   804  029F                     	;# 
   805  030C                     	;# 
   806  030C                     	;# 
   807  030D                     	;# 
   808  030E                     	;# 
   809  030F                     	;# 
   810  0310                     	;# 
   811  0310                     	;# 
   812  0311                     	;# 
   813  0312                     	;# 
   814  0313                     	;# 
   815  0314                     	;# 
   816  0314                     	;# 
   817  0315                     	;# 
   818  0316                     	;# 
   819  0317                     	;# 
   820  0318                     	;# 
   821  0318                     	;# 
   822  0319                     	;# 
   823  031A                     	;# 
   824  031B                     	;# 
   825  038C                     	;# 
   826  038C                     	;# 
   827  038D                     	;# 
   828  038E                     	;# 
   829  0390                     	;# 
   830  0390                     	;# 
   831  0391                     	;# 
   832  0392                     	;# 
   833  048C                     	;# 
   834  048C                     	;# 
   835  048D                     	;# 
   836  048E                     	;# 
   837  048F                     	;# 
   838  048F                     	;# 
   839  0490                     	;# 
   840  0491                     	;# 
   841  0492                     	;# 
   842  0492                     	;# 
   843  0493                     	;# 
   844  0494                     	;# 
   845  0495                     	;# 
   846  0495                     	;# 
   847  0496                     	;# 
   848  0497                     	;# 
   849  0498                     	;# 
   850  0499                     	;# 
   851  049A                     	;# 
   852  049B                     	;# 
   853  049C                     	;# 
   854  049D                     	;# 
   855  058C                     	;# 
   856  058C                     	;# 
   857  058D                     	;# 
   858  058E                     	;# 
   859  058F                     	;# 
   860  058F                     	;# 
   861  0590                     	;# 
   862  0591                     	;# 
   863  0592                     	;# 
   864  0593                     	;# 
   865  059C                     	;# 
   866  059C                     	;# 
   867  059D                     	;# 
   868  059D                     	;# 
   869  059E                     	;# 
   870  059F                     	;# 
   871  060C                     	;# 
   872  060C                     	;# 
   873  060D                     	;# 
   874  060D                     	;# 
   875  060E                     	;# 
   876  060F                     	;# 
   877  0610                     	;# 
   878  0611                     	;# 
   879  0612                     	;# 
   880  0613                     	;# 
   881  0614                     	;# 
   882  0616                     	;# 
   883  0616                     	;# 
   884  0617                     	;# 
   885  0617                     	;# 
   886  0618                     	;# 
   887  0619                     	;# 
   888  061A                     	;# 
   889  061B                     	;# 
   890  061C                     	;# 
   891  061D                     	;# 
   892  061E                     	;# 
   893  070C                     	;# 
   894  070D                     	;# 
   895  070E                     	;# 
   896  070F                     	;# 
   897  0710                     	;# 
   898  0711                     	;# 
   899  0712                     	;# 
   900  0713                     	;# 
   901  0714                     	;# 
   902  0716                     	;# 
   903  0717                     	;# 
   904  0718                     	;# 
   905  0719                     	;# 
   906  071A                     	;# 
   907  071B                     	;# 
   908  071C                     	;# 
   909  071D                     	;# 
   910  071E                     	;# 
   911  0796                     	;# 
   912  0797                     	;# 
   913  0798                     	;# 
   914  0799                     	;# 
   915  079A                     	;# 
   916  079B                     	;# 
   917  079C                     	;# 
   918  079D                     	;# 
   919  080C                     	;# 
   920  080D                     	;# 
   921  080E                     	;# 
   922  080F                     	;# 
   923  0810                     	;# 
   924  0811                     	;# 
   925  0813                     	;# 
   926  0814                     	;# 
   927  081A                     	;# 
   928  081A                     	;# 
   929  081B                     	;# 
   930  081C                     	;# 
   931  081C                     	;# 
   932  081D                     	;# 
   933  081E                     	;# 
   934  081F                     	;# 
   935  088C                     	;# 
   936  088D                     	;# 
   937  088E                     	;# 
   938  088F                     	;# 
   939  0890                     	;# 
   940  0891                     	;# 
   941  0892                     	;# 
   942  0893                     	;# 
   943  0895                     	;# 
   944  0896                     	;# 
   945  0897                     	;# 
   946  0898                     	;# 
   947  0899                     	;# 
   948  089A                     	;# 
   949  089B                     	;# 
   950  090C                     	;# 
   951  090E                     	;# 
   952  090F                     	;# 
   953  091F                     	;# 
   954  098F                     	;# 
   955  098F                     	;# 
   956  0990                     	;# 
   957  0991                     	;# 
   958  0992                     	;# 
   959  0993                     	;# 
   960  0994                     	;# 
   961  0995                     	;# 
   962  0996                     	;# 
   963  0997                     	;# 
   964  1E0F                     	;# 
   965  1E10                     	;# 
   966  1E11                     	;# 
   967  1E12                     	;# 
   968  1E13                     	;# 
   969  1E14                     	;# 
   970  1E15                     	;# 
   971  1E16                     	;# 
   972  1E17                     	;# 
   973  1E18                     	;# 
   974  1E19                     	;# 
   975  1E1A                     	;# 
   976  1E1B                     	;# 
   977  1E1C                     	;# 
   978  1E1D                     	;# 
   979  1E1E                     	;# 
   980  1E1F                     	;# 
   981  1E20                     	;# 
   982  1E21                     	;# 
   983  1E22                     	;# 
   984  1E23                     	;# 
   985  1E24                     	;# 
   986  1E25                     	;# 
   987  1E26                     	;# 
   988  1E27                     	;# 
   989  1E28                     	;# 
   990  1E29                     	;# 
   991  1E2A                     	;# 
   992  1E2B                     	;# 
   993  1E2C                     	;# 
   994  1E2D                     	;# 
   995  1E2E                     	;# 
   996  1E2F                     	;# 
   997  1E30                     	;# 
   998  1E31                     	;# 
   999  1E32                     	;# 
  1000  1E33                     	;# 
  1001  1E34                     	;# 
  1002  1E35                     	;# 
  1003  1E36                     	;# 
  1004  1E37                     	;# 
  1005  1E8F                     	;# 
  1006  1E90                     	;# 
  1007  1E91                     	;# 
  1008  1E92                     	;# 
  1009  1E93                     	;# 
  1010  1E94                     	;# 
  1011  1E95                     	;# 
  1012  1E96                     	;# 
  1013  1E97                     	;# 
  1014  1E9C                     	;# 
  1015  1E9D                     	;# 
  1016  1E9E                     	;# 
  1017  1EA1                     	;# 
  1018  1EA2                     	;# 
  1019  1EA3                     	;# 
  1020  1EA4                     	;# 
  1021  1EA9                     	;# 
  1022  1EAA                     	;# 
  1023  1EB1                     	;# 
  1024  1EB2                     	;# 
  1025  1EB8                     	;# 
  1026  1EB9                     	;# 
  1027  1EBA                     	;# 
  1028  1EBB                     	;# 
  1029  1EBC                     	;# 
  1030  1EBD                     	;# 
  1031  1EBE                     	;# 
  1032  1EC3                     	;# 
  1033  1EC5                     	;# 
  1034  1EC6                     	;# 
  1035  1EC7                     	;# 
  1036  1EC8                     	;# 
  1037  1EC9                     	;# 
  1038  1ECA                     	;# 
  1039  1ECB                     	;# 
  1040  1ECB                     	;# 
  1041  1ECB                     	;# 
  1042  1ECC                     	;# 
  1043  1ECC                     	;# 
  1044  1ECC                     	;# 
  1045  1F10                     	;# 
  1046  1F11                     	;# 
  1047  1F12                     	;# 
  1048  1F14                     	;# 
  1049  1F15                     	;# 
  1050  1F1C                     	;# 
  1051  1F1D                     	;# 
  1052  1F1E                     	;# 
  1053  1F1F                     	;# 
  1054  1F20                     	;# 
  1055  1F21                     	;# 
  1056  1F22                     	;# 
  1057  1F23                     	;# 
  1058  1F24                     	;# 
  1059  1F25                     	;# 
  1060  1F26                     	;# 
  1061  1F27                     	;# 
  1062  1F38                     	;# 
  1063  1F39                     	;# 
  1064  1F3A                     	;# 
  1065  1F3B                     	;# 
  1066  1F3C                     	;# 
  1067  1F3D                     	;# 
  1068  1F3E                     	;# 
  1069  1F3F                     	;# 
  1070  1F43                     	;# 
  1071  1F44                     	;# 
  1072  1F45                     	;# 
  1073  1F46                     	;# 
  1074  1F47                     	;# 
  1075  1F48                     	;# 
  1076  1F49                     	;# 
  1077  1F4A                     	;# 
  1078  1F4E                     	;# 
  1079  1F4F                     	;# 
  1080  1F50                     	;# 
  1081  1F51                     	;# 
  1082  1F52                     	;# 
  1083  1F53                     	;# 
  1084  1F54                     	;# 
  1085  1F55                     	;# 
  1086  1FE4                     	;# 
  1087  1FE5                     	;# 
  1088  1FE6                     	;# 
  1089  1FE7                     	;# 
  1090  1FE8                     	;# 
  1091  1FE8                     	;# 
  1092  1FE9                     	;# 
  1093  1FEA                     	;# 
  1094  1FEB                     	;# 
  1095  1FED                     	;# 
  1096  1FEE                     	;# 
  1097  1FEF                     	;# 
  1098  0000                     	;# 
  1099  0001                     	;# 
  1100  0002                     	;# 
  1101  0003                     	;# 
  1102  0004                     	;# 
  1103  0005                     	;# 
  1104  0006                     	;# 
  1105  0007                     	;# 
  1106  0008                     	;# 
  1107  0009                     	;# 
  1108  000A                     	;# 
  1109  000B                     	;# 
  1110  000C                     	;# 
  1111  000D                     	;# 
  1112  000E                     	;# 
  1113  0012                     	;# 
  1114  0013                     	;# 
  1115  0014                     	;# 
  1116  0018                     	;# 
  1117  0019                     	;# 
  1118  001A                     	;# 
  1119  008C                     	;# 
  1120  008C                     	;# 
  1121  008D                     	;# 
  1122  008E                     	;# 
  1123  008E                     	;# 
  1124  008F                     	;# 
  1125  0090                     	;# 
  1126  0090                     	;# 
  1127  0091                     	;# 
  1128  0092                     	;# 
  1129  0092                     	;# 
  1130  0093                     	;# 
  1131  0094                     	;# 
  1132  0094                     	;# 
  1133  0095                     	;# 
  1134  0096                     	;# 
  1135  0096                     	;# 
  1136  0097                     	;# 
  1137  0098                     	;# 
  1138  0099                     	;# 
  1139  009A                     	;# 
  1140  009B                     	;# 
  1141  009B                     	;# 
  1142  009C                     	;# 
  1143  009D                     	;# 
  1144  009D                     	;# 
  1145  009E                     	;# 
  1146  009F                     	;# 
  1147  010C                     	;# 
  1148  010C                     	;# 
  1149  010D                     	;# 
  1150  010E                     	;# 
  1151  010F                     	;# 
  1152  010F                     	;# 
  1153  0110                     	;# 
  1154  0111                     	;# 
  1155  0112                     	;# 
  1156  0113                     	;# 
  1157  0114                     	;# 
  1158  0115                     	;# 
  1159  0116                     	;# 
  1160  0117                     	;# 
  1161  0118                     	;# 
  1162  0119                     	;# 
  1163  0119                     	;# 
  1164  0119                     	;# 
  1165  011A                     	;# 
  1166  011A                     	;# 
  1167  011A                     	;# 
  1168  011B                     	;# 
  1169  011B                     	;# 
  1170  011B                     	;# 
  1171  011B                     	;# 
  1172  011B                     	;# 
  1173  011C                     	;# 
  1174  011C                     	;# 
  1175  011C                     	;# 
  1176  011D                     	;# 
  1177  011D                     	;# 
  1178  011D                     	;# 
  1179  011E                     	;# 
  1180  011E                     	;# 
  1181  011E                     	;# 
  1182  011F                     	;# 
  1183  011F                     	;# 
  1184  011F                     	;# 
  1185  011F                     	;# 
  1186  011F                     	;# 
  1187  018C                     	;# 
  1188  018D                     	;# 
  1189  018E                     	;# 
  1190  018F                     	;# 
  1191  0190                     	;# 
  1192  0191                     	;# 
  1193  0192                     	;# 
  1194  0196                     	;# 
  1195  0197                     	;# 
  1196  0198                     	;# 
  1197  0199                     	;# 
  1198  019A                     	;# 
  1199  019B                     	;# 
  1200  019C                     	;# 
  1201  020C                     	;# 
  1202  020D                     	;# 
  1203  020E                     	;# 
  1204  020E                     	;# 
  1205  020F                     	;# 
  1206  020F                     	;# 
  1207  0210                     	;# 
  1208  0210                     	;# 
  1209  0211                     	;# 
  1210  0211                     	;# 
  1211  0212                     	;# 
  1212  0213                     	;# 
  1213  0214                     	;# 
  1214  0214                     	;# 
  1215  0215                     	;# 
  1216  0215                     	;# 
  1217  0216                     	;# 
  1218  0216                     	;# 
  1219  0217                     	;# 
  1220  0217                     	;# 
  1221  0218                     	;# 
  1222  0219                     	;# 
  1223  021A                     	;# 
  1224  021A                     	;# 
  1225  021B                     	;# 
  1226  021B                     	;# 
  1227  021C                     	;# 
  1228  021C                     	;# 
  1229  021D                     	;# 
  1230  021D                     	;# 
  1231  021E                     	;# 
  1232  021F                     	;# 
  1233  028C                     	;# 
  1234  028C                     	;# 
  1235  028D                     	;# 
  1236  028D                     	;# 
  1237  028E                     	;# 
  1238  028F                     	;# 
  1239  0290                     	;# 
  1240  0291                     	;# 
  1241  0292                     	;# 
  1242  0292                     	;# 
  1243  0293                     	;# 
  1244  0293                     	;# 
  1245  0294                     	;# 
  1246  0295                     	;# 
  1247  0296                     	;# 
  1248  0297                     	;# 
  1249  0298                     	;# 
  1250  0298                     	;# 
  1251  0299                     	;# 
  1252  0299                     	;# 
  1253  029A                     	;# 
  1254  029B                     	;# 
  1255  029C                     	;# 
  1256  029D                     	;# 
  1257  029F                     	;# 
  1258  030C                     	;# 
  1259  030C                     	;# 
  1260  030D                     	;# 
  1261  030E                     	;# 
  1262  030F                     	;# 
  1263  0310                     	;# 
  1264  0310                     	;# 
  1265  0311                     	;# 
  1266  0312                     	;# 
  1267  0313                     	;# 
  1268  0314                     	;# 
  1269  0314                     	;# 
  1270  0315                     	;# 
  1271  0316                     	;# 
  1272  0317                     	;# 
  1273  0318                     	;# 
  1274  0318                     	;# 
  1275  0319                     	;# 
  1276  031A                     	;# 
  1277  031B                     	;# 
  1278  038C                     	;# 
  1279  038C                     	;# 
  1280  038D                     	;# 
  1281  038E                     	;# 
  1282  0390                     	;# 
  1283  0390                     	;# 
  1284  0391                     	;# 
  1285  0392                     	;# 
  1286  048C                     	;# 
  1287  048C                     	;# 
  1288  048D                     	;# 
  1289  048E                     	;# 
  1290  048F                     	;# 
  1291  048F                     	;# 
  1292  0490                     	;# 
  1293  0491                     	;# 
  1294  0492                     	;# 
  1295  0492                     	;# 
  1296  0493                     	;# 
  1297  0494                     	;# 
  1298  0495                     	;# 
  1299  0495                     	;# 
  1300  0496                     	;# 
  1301  0497                     	;# 
  1302  0498                     	;# 
  1303  0499                     	;# 
  1304  049A                     	;# 
  1305  049B                     	;# 
  1306  049C                     	;# 
  1307  049D                     	;# 
  1308  058C                     	;# 
  1309  058C                     	;# 
  1310  058D                     	;# 
  1311  058E                     	;# 
  1312  058F                     	;# 
  1313  058F                     	;# 
  1314  0590                     	;# 
  1315  0591                     	;# 
  1316  0592                     	;# 
  1317  0593                     	;# 
  1318  059C                     	;# 
  1319  059C                     	;# 
  1320  059D                     	;# 
  1321  059D                     	;# 
  1322  059E                     	;# 
  1323  059F                     	;# 
  1324  060C                     	;# 
  1325  060C                     	;# 
  1326  060D                     	;# 
  1327  060D                     	;# 
  1328  060E                     	;# 
  1329  060F                     	;# 
  1330  0610                     	;# 
  1331  0611                     	;# 
  1332  0612                     	;# 
  1333  0613                     	;# 
  1334  0614                     	;# 
  1335  0616                     	;# 
  1336  0616                     	;# 
  1337  0617                     	;# 
  1338  0617                     	;# 
  1339  0618                     	;# 
  1340  0619                     	;# 
  1341  061A                     	;# 
  1342  061B                     	;# 
  1343  061C                     	;# 
  1344  061D                     	;# 
  1345  061E                     	;# 
  1346  070C                     	;# 
  1347  070D                     	;# 
  1348  070E                     	;# 
  1349  070F                     	;# 
  1350  0710                     	;# 
  1351  0711                     	;# 
  1352  0712                     	;# 
  1353  0713                     	;# 
  1354  0714                     	;# 
  1355  0716                     	;# 
  1356  0717                     	;# 
  1357  0718                     	;# 
  1358  0719                     	;# 
  1359  071A                     	;# 
  1360  071B                     	;# 
  1361  071C                     	;# 
  1362  071D                     	;# 
  1363  071E                     	;# 
  1364  0796                     	;# 
  1365  0797                     	;# 
  1366  0798                     	;# 
  1367  0799                     	;# 
  1368  079A                     	;# 
  1369  079B                     	;# 
  1370  079C                     	;# 
  1371  079D                     	;# 
  1372  080C                     	;# 
  1373  080D                     	;# 
  1374  080E                     	;# 
  1375  080F                     	;# 
  1376  0810                     	;# 
  1377  0811                     	;# 
  1378  0813                     	;# 
  1379  0814                     	;# 
  1380  081A                     	;# 
  1381  081A                     	;# 
  1382  081B                     	;# 
  1383  081C                     	;# 
  1384  081C                     	;# 
  1385  081D                     	;# 
  1386  081E                     	;# 
  1387  081F                     	;# 
  1388  088C                     	;# 
  1389  088D                     	;# 
  1390  088E                     	;# 
  1391  088F                     	;# 
  1392  0890                     	;# 
  1393  0891                     	;# 
  1394  0892                     	;# 
  1395  0893                     	;# 
  1396  0895                     	;# 
  1397  0896                     	;# 
  1398  0897                     	;# 
  1399  0898                     	;# 
  1400  0899                     	;# 
  1401  089A                     	;# 
  1402  089B                     	;# 
  1403  090C                     	;# 
  1404  090E                     	;# 
  1405  090F                     	;# 
  1406  091F                     	;# 
  1407  098F                     	;# 
  1408  098F                     	;# 
  1409  0990                     	;# 
  1410  0991                     	;# 
  1411  0992                     	;# 
  1412  0993                     	;# 
  1413  0994                     	;# 
  1414  0995                     	;# 
  1415  0996                     	;# 
  1416  0997                     	;# 
  1417  1E0F                     	;# 
  1418  1E10                     	;# 
  1419  1E11                     	;# 
  1420  1E12                     	;# 
  1421  1E13                     	;# 
  1422  1E14                     	;# 
  1423  1E15                     	;# 
  1424  1E16                     	;# 
  1425  1E17                     	;# 
  1426  1E18                     	;# 
  1427  1E19                     	;# 
  1428  1E1A                     	;# 
  1429  1E1B                     	;# 
  1430  1E1C                     	;# 
  1431  1E1D                     	;# 
  1432  1E1E                     	;# 
  1433  1E1F                     	;# 
  1434  1E20                     	;# 
  1435  1E21                     	;# 
  1436  1E22                     	;# 
  1437  1E23                     	;# 
  1438  1E24                     	;# 
  1439  1E25                     	;# 
  1440  1E26                     	;# 
  1441  1E27                     	;# 
  1442  1E28                     	;# 
  1443  1E29                     	;# 
  1444  1E2A                     	;# 
  1445  1E2B                     	;# 
  1446  1E2C                     	;# 
  1447  1E2D                     	;# 
  1448  1E2E                     	;# 
  1449  1E2F                     	;# 
  1450  1E30                     	;# 
  1451  1E31                     	;# 
  1452  1E32                     	;# 
  1453  1E33                     	;# 
  1454  1E34                     	;# 
  1455  1E35                     	;# 
  1456  1E36                     	;# 
  1457  1E37                     	;# 
  1458  1E8F                     	;# 
  1459  1E90                     	;# 
  1460  1E91                     	;# 
  1461  1E92                     	;# 
  1462  1E93                     	;# 
  1463  1E94                     	;# 
  1464  1E95                     	;# 
  1465  1E96                     	;# 
  1466  1E97                     	;# 
  1467  1E9C                     	;# 
  1468  1E9D                     	;# 
  1469  1E9E                     	;# 
  1470  1EA1                     	;# 
  1471  1EA2                     	;# 
  1472  1EA3                     	;# 
  1473  1EA4                     	;# 
  1474  1EA9                     	;# 
  1475  1EAA                     	;# 
  1476  1EB1                     	;# 
  1477  1EB2                     	;# 
  1478  1EB8                     	;# 
  1479  1EB9                     	;# 
  1480  1EBA                     	;# 
  1481  1EBB                     	;# 
  1482  1EBC                     	;# 
  1483  1EBD                     	;# 
  1484  1EBE                     	;# 
  1485  1EC3                     	;# 
  1486  1EC5                     	;# 
  1487  1EC6                     	;# 
  1488  1EC7                     	;# 
  1489  1EC8                     	;# 
  1490  1EC9                     	;# 
  1491  1ECA                     	;# 
  1492  1ECB                     	;# 
  1493  1ECB                     	;# 
  1494  1ECB                     	;# 
  1495  1ECC                     	;# 
  1496  1ECC                     	;# 
  1497  1ECC                     	;# 
  1498  1F10                     	;# 
  1499  1F11                     	;# 
  1500  1F12                     	;# 
  1501  1F14                     	;# 
  1502  1F15                     	;# 
  1503  1F1C                     	;# 
  1504  1F1D                     	;# 
  1505  1F1E                     	;# 
  1506  1F1F                     	;# 
  1507  1F20                     	;# 
  1508  1F21                     	;# 
  1509  1F22                     	;# 
  1510  1F23                     	;# 
  1511  1F24                     	;# 
  1512  1F25                     	;# 
  1513  1F26                     	;# 
  1514  1F27                     	;# 
  1515  1F38                     	;# 
  1516  1F39                     	;# 
  1517  1F3A                     	;# 
  1518  1F3B                     	;# 
  1519  1F3C                     	;# 
  1520  1F3D                     	;# 
  1521  1F3E                     	;# 
  1522  1F3F                     	;# 
  1523  1F43                     	;# 
  1524  1F44                     	;# 
  1525  1F45                     	;# 
  1526  1F46                     	;# 
  1527  1F47                     	;# 
  1528  1F48                     	;# 
  1529  1F49                     	;# 
  1530  1F4A                     	;# 
  1531  1F4E                     	;# 
  1532  1F4F                     	;# 
  1533  1F50                     	;# 
  1534  1F51                     	;# 
  1535  1F52                     	;# 
  1536  1F53                     	;# 
  1537  1F54                     	;# 
  1538  1F55                     	;# 
  1539  1FE4                     	;# 
  1540  1FE5                     	;# 
  1541  1FE6                     	;# 
  1542  1FE7                     	;# 
  1543  1FE8                     	;# 
  1544  1FE8                     	;# 
  1545  1FE9                     	;# 
  1546  1FEA                     	;# 
  1547  1FEB                     	;# 
  1548  1FED                     	;# 
  1549  1FEE                     	;# 
  1550  1FEF                     	;# 
  1551  0000                     	;# 
  1552  0001                     	;# 
  1553  0002                     	;# 
  1554  0003                     	;# 
  1555  0004                     	;# 
  1556  0005                     	;# 
  1557  0006                     	;# 
  1558  0007                     	;# 
  1559  0008                     	;# 
  1560  0009                     	;# 
  1561  000A                     	;# 
  1562  000B                     	;# 
  1563  000C                     	;# 
  1564  000D                     	;# 
  1565  000E                     	;# 
  1566  0012                     	;# 
  1567  0013                     	;# 
  1568  0014                     	;# 
  1569  0018                     	;# 
  1570  0019                     	;# 
  1571  001A                     	;# 
  1572  008C                     	;# 
  1573  008C                     	;# 
  1574  008D                     	;# 
  1575  008E                     	;# 
  1576  008E                     	;# 
  1577  008F                     	;# 
  1578  0090                     	;# 
  1579  0090                     	;# 
  1580  0091                     	;# 
  1581  0092                     	;# 
  1582  0092                     	;# 
  1583  0093                     	;# 
  1584  0094                     	;# 
  1585  0094                     	;# 
  1586  0095                     	;# 
  1587  0096                     	;# 
  1588  0096                     	;# 
  1589  0097                     	;# 
  1590  0098                     	;# 
  1591  0099                     	;# 
  1592  009A                     	;# 
  1593  009B                     	;# 
  1594  009B                     	;# 
  1595  009C                     	;# 
  1596  009D                     	;# 
  1597  009D                     	;# 
  1598  009E                     	;# 
  1599  009F                     	;# 
  1600  010C                     	;# 
  1601  010C                     	;# 
  1602  010D                     	;# 
  1603  010E                     	;# 
  1604  010F                     	;# 
  1605  010F                     	;# 
  1606  0110                     	;# 
  1607  0111                     	;# 
  1608  0112                     	;# 
  1609  0113                     	;# 
  1610  0114                     	;# 
  1611  0115                     	;# 
  1612  0116                     	;# 
  1613  0117                     	;# 
  1614  0118                     	;# 
  1615  0119                     	;# 
  1616  0119                     	;# 
  1617  0119                     	;# 
  1618  011A                     	;# 
  1619  011A                     	;# 
  1620  011A                     	;# 
  1621  011B                     	;# 
  1622  011B                     	;# 
  1623  011B                     	;# 
  1624  011B                     	;# 
  1625  011B                     	;# 
  1626  011C                     	;# 
  1627  011C                     	;# 
  1628  011C                     	;# 
  1629  011D                     	;# 
  1630  011D                     	;# 
  1631  011D                     	;# 
  1632  011E                     	;# 
  1633  011E                     	;# 
  1634  011E                     	;# 
  1635  011F                     	;# 
  1636  011F                     	;# 
  1637  011F                     	;# 
  1638  011F                     	;# 
  1639  011F                     	;# 
  1640  018C                     	;# 
  1641  018D                     	;# 
  1642  018E                     	;# 
  1643  018F                     	;# 
  1644  0190                     	;# 
  1645  0191                     	;# 
  1646  0192                     	;# 
  1647  0196                     	;# 
  1648  0197                     	;# 
  1649  0198                     	;# 
  1650  0199                     	;# 
  1651  019A                     	;# 
  1652  019B                     	;# 
  1653  019C                     	;# 
  1654  020C                     	;# 
  1655  020D                     	;# 
  1656  020E                     	;# 
  1657  020E                     	;# 
  1658  020F                     	;# 
  1659  020F                     	;# 
  1660  0210                     	;# 
  1661  0210                     	;# 
  1662  0211                     	;# 
  1663  0211                     	;# 
  1664  0212                     	;# 
  1665  0213                     	;# 
  1666  0214                     	;# 
  1667  0214                     	;# 
  1668  0215                     	;# 
  1669  0215                     	;# 
  1670  0216                     	;# 
  1671  0216                     	;# 
  1672  0217                     	;# 
  1673  0217                     	;# 
  1674  0218                     	;# 
  1675  0219                     	;# 
  1676  021A                     	;# 
  1677  021A                     	;# 
  1678  021B                     	;# 
  1679  021B                     	;# 
  1680  021C                     	;# 
  1681  021C                     	;# 
  1682  021D                     	;# 
  1683  021D                     	;# 
  1684  021E                     	;# 
  1685  021F                     	;# 
  1686  028C                     	;# 
  1687  028C                     	;# 
  1688  028D                     	;# 
  1689  028D                     	;# 
  1690  028E                     	;# 
  1691  028F                     	;# 
  1692  0290                     	;# 
  1693  0291                     	;# 
  1694  0292                     	;# 
  1695  0292                     	;# 
  1696  0293                     	;# 
  1697  0293                     	;# 
  1698  0294                     	;# 
  1699  0295                     	;# 
  1700  0296                     	;# 
  1701  0297                     	;# 
  1702  0298                     	;# 
  1703  0298                     	;# 
  1704  0299                     	;# 
  1705  0299                     	;# 
  1706  029A                     	;# 
  1707  029B                     	;# 
  1708  029C                     	;# 
  1709  029D                     	;# 
  1710  029F                     	;# 
  1711  030C                     	;# 
  1712  030C                     	;# 
  1713  030D                     	;# 
  1714  030E                     	;# 
  1715  030F                     	;# 
  1716  0310                     	;# 
  1717  0310                     	;# 
  1718  0311                     	;# 
  1719  0312                     	;# 
  1720  0313                     	;# 
  1721  0314                     	;# 
  1722  0314                     	;# 
  1723  0315                     	;# 
  1724  0316                     	;# 
  1725  0317                     	;# 
  1726  0318                     	;# 
  1727  0318                     	;# 
  1728  0319                     	;# 
  1729  031A                     	;# 
  1730  031B                     	;# 
  1731  038C                     	;# 
  1732  038C                     	;# 
  1733  038D                     	;# 
  1734  038E                     	;# 
  1735  0390                     	;# 
  1736  0390                     	;# 
  1737  0391                     	;# 
  1738  0392                     	;# 
  1739  048C                     	;# 
  1740  048C                     	;# 
  1741  048D                     	;# 
  1742  048E                     	;# 
  1743  048F                     	;# 
  1744  048F                     	;# 
  1745  0490                     	;# 
  1746  0491                     	;# 
  1747  0492                     	;# 
  1748  0492                     	;# 
  1749  0493                     	;# 
  1750  0494                     	;# 
  1751  0495                     	;# 
  1752  0495                     	;# 
  1753  0496                     	;# 
  1754  0497                     	;# 
  1755  0498                     	;# 
  1756  0499                     	;# 
  1757  049A                     	;# 
  1758  049B                     	;# 
  1759  049C                     	;# 
  1760  049D                     	;# 
  1761  058C                     	;# 
  1762  058C                     	;# 
  1763  058D                     	;# 
  1764  058E                     	;# 
  1765  058F                     	;# 
  1766  058F                     	;# 
  1767  0590                     	;# 
  1768  0591                     	;# 
  1769  0592                     	;# 
  1770  0593                     	;# 
  1771  059C                     	;# 
  1772  059C                     	;# 
  1773  059D                     	;# 
  1774  059D                     	;# 
  1775  059E                     	;# 
  1776  059F                     	;# 
  1777  060C                     	;# 
  1778  060C                     	;# 
  1779  060D                     	;# 
  1780  060D                     	;# 
  1781  060E                     	;# 
  1782  060F                     	;# 
  1783  0610                     	;# 
  1784  0611                     	;# 
  1785  0612                     	;# 
  1786  0613                     	;# 
  1787  0614                     	;# 
  1788  0616                     	;# 
  1789  0616                     	;# 
  1790  0617                     	;# 
  1791  0617                     	;# 
  1792  0618                     	;# 
  1793  0619                     	;# 
  1794  061A                     	;# 
  1795  061B                     	;# 
  1796  061C                     	;# 
  1797  061D                     	;# 
  1798  061E                     	;# 
  1799  070C                     	;# 
  1800  070D                     	;# 
  1801  070E                     	;# 
  1802  070F                     	;# 
  1803  0710                     	;# 
  1804  0711                     	;# 
  1805  0712                     	;# 
  1806  0713                     	;# 
  1807  0714                     	;# 
  1808  0716                     	;# 
  1809  0717                     	;# 
  1810  0718                     	;# 
  1811  0719                     	;# 
  1812  071A                     	;# 
  1813  071B                     	;# 
  1814  071C                     	;# 
  1815  071D                     	;# 
  1816  071E                     	;# 
  1817  0796                     	;# 
  1818  0797                     	;# 
  1819  0798                     	;# 
  1820  0799                     	;# 
  1821  079A                     	;# 
  1822  079B                     	;# 
  1823  079C                     	;# 
  1824  079D                     	;# 
  1825  080C                     	;# 
  1826  080D                     	;# 
  1827  080E                     	;# 
  1828  080F                     	;# 
  1829  0810                     	;# 
  1830  0811                     	;# 
  1831  0813                     	;# 
  1832  0814                     	;# 
  1833  081A                     	;# 
  1834  081A                     	;# 
  1835  081B                     	;# 
  1836  081C                     	;# 
  1837  081C                     	;# 
  1838  081D                     	;# 
  1839  081E                     	;# 
  1840  081F                     	;# 
  1841  088C                     	;# 
  1842  088D                     	;# 
  1843  088E                     	;# 
  1844  088F                     	;# 
  1845  0890                     	;# 
  1846  0891                     	;# 
  1847  0892                     	;# 
  1848  0893                     	;# 
  1849  0895                     	;# 
  1850  0896                     	;# 
  1851  0897                     	;# 
  1852  0898                     	;# 
  1853  0899                     	;# 
  1854  089A                     	;# 
  1855  089B                     	;# 
  1856  090C                     	;# 
  1857  090E                     	;# 
  1858  090F                     	;# 
  1859  091F                     	;# 
  1860  098F                     	;# 
  1861  098F                     	;# 
  1862  0990                     	;# 
  1863  0991                     	;# 
  1864  0992                     	;# 
  1865  0993                     	;# 
  1866  0994                     	;# 
  1867  0995                     	;# 
  1868  0996                     	;# 
  1869  0997                     	;# 
  1870  1E0F                     	;# 
  1871  1E10                     	;# 
  1872  1E11                     	;# 
  1873  1E12                     	;# 
  1874  1E13                     	;# 
  1875  1E14                     	;# 
  1876  1E15                     	;# 
  1877  1E16                     	;# 
  1878  1E17                     	;# 
  1879  1E18                     	;# 
  1880  1E19                     	;# 
  1881  1E1A                     	;# 
  1882  1E1B                     	;# 
  1883  1E1C                     	;# 
  1884  1E1D                     	;# 
  1885  1E1E                     	;# 
  1886  1E1F                     	;# 
  1887  1E20                     	;# 
  1888  1E21                     	;# 
  1889  1E22                     	;# 
  1890  1E23                     	;# 
  1891  1E24                     	;# 
  1892  1E25                     	;# 
  1893  1E26                     	;# 
  1894  1E27                     	;# 
  1895  1E28                     	;# 
  1896  1E29                     	;# 
  1897  1E2A                     	;# 
  1898  1E2B                     	;# 
  1899  1E2C                     	;# 
  1900  1E2D                     	;# 
  1901  1E2E                     	;# 
  1902  1E2F                     	;# 
  1903  1E30                     	;# 
  1904  1E31                     	;# 
  1905  1E32                     	;# 
  1906  1E33                     	;# 
  1907  1E34                     	;# 
  1908  1E35                     	;# 
  1909  1E36                     	;# 
  1910  1E37                     	;# 
  1911  1E8F                     	;# 
  1912  1E90                     	;# 
  1913  1E91                     	;# 
  1914  1E92                     	;# 
  1915  1E93                     	;# 
  1916  1E94                     	;# 
  1917  1E95                     	;# 
  1918  1E96                     	;# 
  1919  1E97                     	;# 
  1920  1E9C                     	;# 
  1921  1E9D                     	;# 
  1922  1E9E                     	;# 
  1923  1EA1                     	;# 
  1924  1EA2                     	;# 
  1925  1EA3                     	;# 
  1926  1EA4                     	;# 
  1927  1EA9                     	;# 
  1928  1EAA                     	;# 
  1929  1EB1                     	;# 
  1930  1EB2                     	;# 
  1931  1EB8                     	;# 
  1932  1EB9                     	;# 
  1933  1EBA                     	;# 
  1934  1EBB                     	;# 
  1935  1EBC                     	;# 
  1936  1EBD                     	;# 
  1937  1EBE                     	;# 
  1938  1EC3                     	;# 
  1939  1EC5                     	;# 
  1940  1EC6                     	;# 
  1941  1EC7                     	;# 
  1942  1EC8                     	;# 
  1943  1EC9                     	;# 
  1944  1ECA                     	;# 
  1945  1ECB                     	;# 
  1946  1ECB                     	;# 
  1947  1ECB                     	;# 
  1948  1ECC                     	;# 
  1949  1ECC                     	;# 
  1950  1ECC                     	;# 
  1951  1F10                     	;# 
  1952  1F11                     	;# 
  1953  1F12                     	;# 
  1954  1F14                     	;# 
  1955  1F15                     	;# 
  1956  1F1C                     	;# 
  1957  1F1D                     	;# 
  1958  1F1E                     	;# 
  1959  1F1F                     	;# 
  1960  1F20                     	;# 
  1961  1F21                     	;# 
  1962  1F22                     	;# 
  1963  1F23                     	;# 
  1964  1F24                     	;# 
  1965  1F25                     	;# 
  1966  1F26                     	;# 
  1967  1F27                     	;# 
  1968  1F38                     	;# 
  1969  1F39                     	;# 
  1970  1F3A                     	;# 
  1971  1F3B                     	;# 
  1972  1F3C                     	;# 
  1973  1F3D                     	;# 
  1974  1F3E                     	;# 
  1975  1F3F                     	;# 
  1976  1F43                     	;# 
  1977  1F44                     	;# 
  1978  1F45                     	;# 
  1979  1F46                     	;# 
  1980  1F47                     	;# 
  1981  1F48                     	;# 
  1982  1F49                     	;# 
  1983  1F4A                     	;# 
  1984  1F4E                     	;# 
  1985  1F4F                     	;# 
  1986  1F50                     	;# 
  1987  1F51                     	;# 
  1988  1F52                     	;# 
  1989  1F53                     	;# 
  1990  1F54                     	;# 
  1991  1F55                     	;# 
  1992  1FE4                     	;# 
  1993  1FE5                     	;# 
  1994  1FE6                     	;# 
  1995  1FE7                     	;# 
  1996  1FE8                     	;# 
  1997  1FE8                     	;# 
  1998  1FE9                     	;# 
  1999  1FEA                     	;# 
  2000  1FEB                     	;# 
  2001  1FED                     	;# 
  2002  1FEE                     	;# 
  2003  1FEF                     	;# 
  2004  0000                     	;# 
  2005  0001                     	;# 
  2006  0002                     	;# 
  2007  0003                     	;# 
  2008  0004                     	;# 
  2009  0005                     	;# 
  2010  0006                     	;# 
  2011  0007                     	;# 
  2012  0008                     	;# 
  2013  0009                     	;# 
  2014  000A                     	;# 
  2015  000B                     	;# 
  2016  000C                     	;# 
  2017  000D                     	;# 
  2018  000E                     	;# 
  2019  0012                     	;# 
  2020  0013                     	;# 
  2021  0014                     	;# 
  2022  0018                     	;# 
  2023  0019                     	;# 
  2024  001A                     	;# 
  2025  008C                     	;# 
  2026  008C                     	;# 
  2027  008D                     	;# 
  2028  008E                     	;# 
  2029  008E                     	;# 
  2030  008F                     	;# 
  2031  0090                     	;# 
  2032  0090                     	;# 
  2033  0091                     	;# 
  2034  0092                     	;# 
  2035  0092                     	;# 
  2036  0093                     	;# 
  2037  0094                     	;# 
  2038  0094                     	;# 
  2039  0095                     	;# 
  2040  0096                     	;# 
  2041  0096                     	;# 
  2042  0097                     	;# 
  2043  0098                     	;# 
  2044  0099                     	;# 
  2045  009A                     	;# 
  2046  009B                     	;# 
  2047  009B                     	;# 
  2048  009C                     	;# 
  2049  009D                     	;# 
  2050  009D                     	;# 
  2051  009E                     	;# 
  2052  009F                     	;# 
  2053  010C                     	;# 
  2054  010C                     	;# 
  2055  010D                     	;# 
  2056  010E                     	;# 
  2057  010F                     	;# 
  2058  010F                     	;# 
  2059  0110                     	;# 
  2060  0111                     	;# 
  2061  0112                     	;# 
  2062  0113                     	;# 
  2063  0114                     	;# 
  2064  0115                     	;# 
  2065  0116                     	;# 
  2066  0117                     	;# 
  2067  0118                     	;# 
  2068  0119                     	;# 
  2069  0119                     	;# 
  2070  0119                     	;# 
  2071  011A                     	;# 
  2072  011A                     	;# 
  2073  011A                     	;# 
  2074  011B                     	;# 
  2075  011B                     	;# 
  2076  011B                     	;# 
  2077  011B                     	;# 
  2078  011B                     	;# 
  2079  011C                     	;# 
  2080  011C                     	;# 
  2081  011C                     	;# 
  2082  011D                     	;# 
  2083  011D                     	;# 
  2084  011D                     	;# 
  2085  011E                     	;# 
  2086  011E                     	;# 
  2087  011E                     	;# 
  2088  011F                     	;# 
  2089  011F                     	;# 
  2090  011F                     	;# 
  2091  011F                     	;# 
  2092  011F                     	;# 
  2093  018C                     	;# 
  2094  018D                     	;# 
  2095  018E                     	;# 
  2096  018F                     	;# 
  2097  0190                     	;# 
  2098  0191                     	;# 
  2099  0192                     	;# 
  2100  0196                     	;# 
  2101  0197                     	;# 
  2102  0198                     	;# 
  2103  0199                     	;# 
  2104  019A                     	;# 
  2105  019B                     	;# 
  2106  019C                     	;# 
  2107  020C                     	;# 
  2108  020D                     	;# 
  2109  020E                     	;# 
  2110  020E                     	;# 
  2111  020F                     	;# 
  2112  020F                     	;# 
  2113  0210                     	;# 
  2114  0210                     	;# 
  2115  0211                     	;# 
  2116  0211                     	;# 
  2117  0212                     	;# 
  2118  0213                     	;# 
  2119  0214                     	;# 
  2120  0214                     	;# 
  2121  0215                     	;# 
  2122  0215                     	;# 
  2123  0216                     	;# 
  2124  0216                     	;# 
  2125  0217                     	;# 
  2126  0217                     	;# 
  2127  0218                     	;# 
  2128  0219                     	;# 
  2129  021A                     	;# 
  2130  021A                     	;# 
  2131  021B                     	;# 
  2132  021B                     	;# 
  2133  021C                     	;# 
  2134  021C                     	;# 
  2135  021D                     	;# 
  2136  021D                     	;# 
  2137  021E                     	;# 
  2138  021F                     	;# 
  2139  028C                     	;# 
  2140  028C                     	;# 
  2141  028D                     	;# 
  2142  028D                     	;# 
  2143  028E                     	;# 
  2144  028F                     	;# 
  2145  0290                     	;# 
  2146  0291                     	;# 
  2147  0292                     	;# 
  2148  0292                     	;# 
  2149  0293                     	;# 
  2150  0293                     	;# 
  2151  0294                     	;# 
  2152  0295                     	;# 
  2153  0296                     	;# 
  2154  0297                     	;# 
  2155  0298                     	;# 
  2156  0298                     	;# 
  2157  0299                     	;# 
  2158  0299                     	;# 
  2159  029A                     	;# 
  2160  029B                     	;# 
  2161  029C                     	;# 
  2162  029D                     	;# 
  2163  029F                     	;# 
  2164  030C                     	;# 
  2165  030C                     	;# 
  2166  030D                     	;# 
  2167  030E                     	;# 
  2168  030F                     	;# 
  2169  0310                     	;# 
  2170  0310                     	;# 
  2171  0311                     	;# 
  2172  0312                     	;# 
  2173  0313                     	;# 
  2174  0314                     	;# 
  2175  0314                     	;# 
  2176  0315                     	;# 
  2177  0316                     	;# 
  2178  0317                     	;# 
  2179  0318                     	;# 
  2180  0318                     	;# 
  2181  0319                     	;# 
  2182  031A                     	;# 
  2183  031B                     	;# 
  2184  038C                     	;# 
  2185  038C                     	;# 
  2186  038D                     	;# 
  2187  038E                     	;# 
  2188  0390                     	;# 
  2189  0390                     	;# 
  2190  0391                     	;# 
  2191  0392                     	;# 
  2192  048C                     	;# 
  2193  048C                     	;# 
  2194  048D                     	;# 
  2195  048E                     	;# 
  2196  048F                     	;# 
  2197  048F                     	;# 
  2198  0490                     	;# 
  2199  0491                     	;# 
  2200  0492                     	;# 
  2201  0492                     	;# 
  2202  0493                     	;# 
  2203  0494                     	;# 
  2204  0495                     	;# 
  2205  0495                     	;# 
  2206  0496                     	;# 
  2207  0497                     	;# 
  2208  0498                     	;# 
  2209  0499                     	;# 
  2210  049A                     	;# 
  2211  049B                     	;# 
  2212  049C                     	;# 
  2213  049D                     	;# 
  2214  058C                     	;# 
  2215  058C                     	;# 
  2216  058D                     	;# 
  2217  058E                     	;# 
  2218  058F                     	;# 
  2219  058F                     	;# 
  2220  0590                     	;# 
  2221  0591                     	;# 
  2222  0592                     	;# 
  2223  0593                     	;# 
  2224  059C                     	;# 
  2225  059C                     	;# 
  2226  059D                     	;# 
  2227  059D                     	;# 
  2228  059E                     	;# 
  2229  059F                     	;# 
  2230  060C                     	;# 
  2231  060C                     	;# 
  2232  060D                     	;# 
  2233  060D                     	;# 
  2234  060E                     	;# 
  2235  060F                     	;# 
  2236  0610                     	;# 
  2237  0611                     	;# 
  2238  0612                     	;# 
  2239  0613                     	;# 
  2240  0614                     	;# 
  2241  0616                     	;# 
  2242  0616                     	;# 
  2243  0617                     	;# 
  2244  0617                     	;# 
  2245  0618                     	;# 
  2246  0619                     	;# 
  2247  061A                     	;# 
  2248  061B                     	;# 
  2249  061C                     	;# 
  2250  061D                     	;# 
  2251  061E                     	;# 
  2252  070C                     	;# 
  2253  070D                     	;# 
  2254  070E                     	;# 
  2255  070F                     	;# 
  2256  0710                     	;# 
  2257  0711                     	;# 
  2258  0712                     	;# 
  2259  0713                     	;# 
  2260  0714                     	;# 
  2261  0716                     	;# 
  2262  0717                     	;# 
  2263  0718                     	;# 
  2264  0719                     	;# 
  2265  071A                     	;# 
  2266  071B                     	;# 
  2267  071C                     	;# 
  2268  071D                     	;# 
  2269  071E                     	;# 
  2270  0796                     	;# 
  2271  0797                     	;# 
  2272  0798                     	;# 
  2273  0799                     	;# 
  2274  079A                     	;# 
  2275  079B                     	;# 
  2276  079C                     	;# 
  2277  079D                     	;# 
  2278  080C                     	;# 
  2279  080D                     	;# 
  2280  080E                     	;# 
  2281  080F                     	;# 
  2282  0810                     	;# 
  2283  0811                     	;# 
  2284  0813                     	;# 
  2285  0814                     	;# 
  2286  081A                     	;# 
  2287  081A                     	;# 
  2288  081B                     	;# 
  2289  081C                     	;# 
  2290  081C                     	;# 
  2291  081D                     	;# 
  2292  081E                     	;# 
  2293  081F                     	;# 
  2294  088C                     	;# 
  2295  088D                     	;# 
  2296  088E                     	;# 
  2297  088F                     	;# 
  2298  0890                     	;# 
  2299  0891                     	;# 
  2300  0892                     	;# 
  2301  0893                     	;# 
  2302  0895                     	;# 
  2303  0896                     	;# 
  2304  0897                     	;# 
  2305  0898                     	;# 
  2306  0899                     	;# 
  2307  089A                     	;# 
  2308  089B                     	;# 
  2309  090C                     	;# 
  2310  090E                     	;# 
  2311  090F                     	;# 
  2312  091F                     	;# 
  2313  098F                     	;# 
  2314  098F                     	;# 
  2315  0990                     	;# 
  2316  0991                     	;# 
  2317  0992                     	;# 
  2318  0993                     	;# 
  2319  0994                     	;# 
  2320  0995                     	;# 
  2321  0996                     	;# 
  2322  0997                     	;# 
  2323  1E0F                     	;# 
  2324  1E10                     	;# 
  2325  1E11                     	;# 
  2326  1E12                     	;# 
  2327  1E13                     	;# 
  2328  1E14                     	;# 
  2329  1E15                     	;# 
  2330  1E16                     	;# 
  2331  1E17                     	;# 
  2332  1E18                     	;# 
  2333  1E19                     	;# 
  2334  1E1A                     	;# 
  2335  1E1B                     	;# 
  2336  1E1C                     	;# 
  2337  1E1D                     	;# 
  2338  1E1E                     	;# 
  2339  1E1F                     	;# 
  2340  1E20                     	;# 
  2341  1E21                     	;# 
  2342  1E22                     	;# 
  2343  1E23                     	;# 
  2344  1E24                     	;# 
  2345  1E25                     	;# 
  2346  1E26                     	;# 
  2347  1E27                     	;# 
  2348  1E28                     	;# 
  2349  1E29                     	;# 
  2350  1E2A                     	;# 
  2351  1E2B                     	;# 
  2352  1E2C                     	;# 
  2353  1E2D                     	;# 
  2354  1E2E                     	;# 
  2355  1E2F                     	;# 
  2356  1E30                     	;# 
  2357  1E31                     	;# 
  2358  1E32                     	;# 
  2359  1E33                     	;# 
  2360  1E34                     	;# 
  2361  1E35                     	;# 
  2362  1E36                     	;# 
  2363  1E37                     	;# 
  2364  1E8F                     	;# 
  2365  1E90                     	;# 
  2366  1E91                     	;# 
  2367  1E92                     	;# 
  2368  1E93                     	;# 
  2369  1E94                     	;# 
  2370  1E95                     	;# 
  2371  1E96                     	;# 
  2372  1E97                     	;# 
  2373  1E9C                     	;# 
  2374  1E9D                     	;# 
  2375  1E9E                     	;# 
  2376  1EA1                     	;# 
  2377  1EA2                     	;# 
  2378  1EA3                     	;# 
  2379  1EA4                     	;# 
  2380  1EA9                     	;# 
  2381  1EAA                     	;# 
  2382  1EB1                     	;# 
  2383  1EB2                     	;# 
  2384  1EB8                     	;# 
  2385  1EB9                     	;# 
  2386  1EBA                     	;# 
  2387  1EBB                     	;# 
  2388  1EBC                     	;# 
  2389  1EBD                     	;# 
  2390  1EBE                     	;# 
  2391  1EC3                     	;# 
  2392  1EC5                     	;# 
  2393  1EC6                     	;# 
  2394  1EC7                     	;# 
  2395  1EC8                     	;# 
  2396  1EC9                     	;# 
  2397  1ECA                     	;# 
  2398  1ECB                     	;# 
  2399  1ECB                     	;# 
  2400  1ECB                     	;# 
  2401  1ECC                     	;# 
  2402  1ECC                     	;# 
  2403  1ECC                     	;# 
  2404  1F10                     	;# 
  2405  1F11                     	;# 
  2406  1F12                     	;# 
  2407  1F14                     	;# 
  2408  1F15                     	;# 
  2409  1F1C                     	;# 
  2410  1F1D                     	;# 
  2411  1F1E                     	;# 
  2412  1F1F                     	;# 
  2413  1F20                     	;# 
  2414  1F21                     	;# 
  2415  1F22                     	;# 
  2416  1F23                     	;# 
  2417  1F24                     	;# 
  2418  1F25                     	;# 
  2419  1F26                     	;# 
  2420  1F27                     	;# 
  2421  1F38                     	;# 
  2422  1F39                     	;# 
  2423  1F3A                     	;# 
  2424  1F3B                     	;# 
  2425  1F3C                     	;# 
  2426  1F3D                     	;# 
  2427  1F3E                     	;# 
  2428  1F3F                     	;# 
  2429  1F43                     	;# 
  2430  1F44                     	;# 
  2431  1F45                     	;# 
  2432  1F46                     	;# 
  2433  1F47                     	;# 
  2434  1F48                     	;# 
  2435  1F49                     	;# 
  2436  1F4A                     	;# 
  2437  1F4E                     	;# 
  2438  1F4F                     	;# 
  2439  1F50                     	;# 
  2440  1F51                     	;# 
  2441  1F52                     	;# 
  2442  1F53                     	;# 
  2443  1F54                     	;# 
  2444  1F55                     	;# 
  2445  1FE4                     	;# 
  2446  1FE5                     	;# 
  2447  1FE6                     	;# 
  2448  1FE7                     	;# 
  2449  1FE8                     	;# 
  2450  1FE8                     	;# 
  2451  1FE9                     	;# 
  2452  1FEA                     	;# 
  2453  1FEB                     	;# 
  2454  1FED                     	;# 
  2455  1FEE                     	;# 
  2456  1FEF                     	;# 
  2457  0000                     	;# 
  2458  0001                     	;# 
  2459  0002                     	;# 
  2460  0003                     	;# 
  2461  0004                     	;# 
  2462  0005                     	;# 
  2463  0006                     	;# 
  2464  0007                     	;# 
  2465  0008                     	;# 
  2466  0009                     	;# 
  2467  000A                     	;# 
  2468  000B                     	;# 
  2469  000C                     	;# 
  2470  000D                     	;# 
  2471  000E                     	;# 
  2472  0012                     	;# 
  2473  0013                     	;# 
  2474  0014                     	;# 
  2475  0018                     	;# 
  2476  0019                     	;# 
  2477  001A                     	;# 
  2478  008C                     	;# 
  2479  008C                     	;# 
  2480  008D                     	;# 
  2481  008E                     	;# 
  2482  008E                     	;# 
  2483  008F                     	;# 
  2484  0090                     	;# 
  2485  0090                     	;# 
  2486  0091                     	;# 
  2487  0092                     	;# 
  2488  0092                     	;# 
  2489  0093                     	;# 
  2490  0094                     	;# 
  2491  0094                     	;# 
  2492  0095                     	;# 
  2493  0096                     	;# 
  2494  0096                     	;# 
  2495  0097                     	;# 
  2496  0098                     	;# 
  2497  0099                     	;# 
  2498  009A                     	;# 
  2499  009B                     	;# 
  2500  009B                     	;# 
  2501  009C                     	;# 
  2502  009D                     	;# 
  2503  009D                     	;# 
  2504  009E                     	;# 
  2505  009F                     	;# 
  2506  010C                     	;# 
  2507  010C                     	;# 
  2508  010D                     	;# 
  2509  010E                     	;# 
  2510  010F                     	;# 
  2511  010F                     	;# 
  2512  0110                     	;# 
  2513  0111                     	;# 
  2514  0112                     	;# 
  2515  0113                     	;# 
  2516  0114                     	;# 
  2517  0115                     	;# 
  2518  0116                     	;# 
  2519  0117                     	;# 
  2520  0118                     	;# 
  2521  0119                     	;# 
  2522  0119                     	;# 
  2523  0119                     	;# 
  2524  011A                     	;# 
  2525  011A                     	;# 
  2526  011A                     	;# 
  2527  011B                     	;# 
  2528  011B                     	;# 
  2529  011B                     	;# 
  2530  011B                     	;# 
  2531  011B                     	;# 
  2532  011C                     	;# 
  2533  011C                     	;# 
  2534  011C                     	;# 
  2535  011D                     	;# 
  2536  011D                     	;# 
  2537  011D                     	;# 
  2538  011E                     	;# 
  2539  011E                     	;# 
  2540  011E                     	;# 
  2541  011F                     	;# 
  2542  011F                     	;# 
  2543  011F                     	;# 
  2544  011F                     	;# 
  2545  011F                     	;# 
  2546  018C                     	;# 
  2547  018D                     	;# 
  2548  018E                     	;# 
  2549  018F                     	;# 
  2550  0190                     	;# 
  2551  0191                     	;# 
  2552  0192                     	;# 
  2553  0196                     	;# 
  2554  0197                     	;# 
  2555  0198                     	;# 
  2556  0199                     	;# 
  2557  019A                     	;# 
  2558  019B                     	;# 
  2559  019C                     	;# 
  2560  020C                     	;# 
  2561  020D                     	;# 
  2562  020E                     	;# 
  2563  020E                     	;# 
  2564  020F                     	;# 
  2565  020F                     	;# 
  2566  0210                     	;# 
  2567  0210                     	;# 
  2568  0211                     	;# 
  2569  0211                     	;# 
  2570  0212                     	;# 
  2571  0213                     	;# 
  2572  0214                     	;# 
  2573  0214                     	;# 
  2574  0215                     	;# 
  2575  0215                     	;# 
  2576  0216                     	;# 
  2577  0216                     	;# 
  2578  0217                     	;# 
  2579  0217                     	;# 
  2580  0218                     	;# 
  2581  0219                     	;# 
  2582  021A                     	;# 
  2583  021A                     	;# 
  2584  021B                     	;# 
  2585  021B                     	;# 
  2586  021C                     	;# 
  2587  021C                     	;# 
  2588  021D                     	;# 
  2589  021D                     	;# 
  2590  021E                     	;# 
  2591  021F                     	;# 
  2592  028C                     	;# 
  2593  028C                     	;# 
  2594  028D                     	;# 
  2595  028D                     	;# 
  2596  028E                     	;# 
  2597  028F                     	;# 
  2598  0290                     	;# 
  2599  0291                     	;# 
  2600  0292                     	;# 
  2601  0292                     	;# 
  2602  0293                     	;# 
  2603  0293                     	;# 
  2604  0294                     	;# 
  2605  0295                     	;# 
  2606  0296                     	;# 
  2607  0297                     	;# 
  2608  0298                     	;# 
  2609  0298                     	;# 
  2610  0299                     	;# 
  2611  0299                     	;# 
  2612  029A                     	;# 
  2613  029B                     	;# 
  2614  029C                     	;# 
  2615  029D                     	;# 
  2616  029F                     	;# 
  2617  030C                     	;# 
  2618  030C                     	;# 
  2619  030D                     	;# 
  2620  030E                     	;# 
  2621  030F                     	;# 
  2622  0310                     	;# 
  2623  0310                     	;# 
  2624  0311                     	;# 
  2625  0312                     	;# 
  2626  0313                     	;# 
  2627  0314                     	;# 
  2628  0314                     	;# 
  2629  0315                     	;# 
  2630  0316                     	;# 
  2631  0317                     	;# 
  2632  0318                     	;# 
  2633  0318                     	;# 
  2634  0319                     	;# 
  2635  031A                     	;# 
  2636  031B                     	;# 
  2637  038C                     	;# 
  2638  038C                     	;# 
  2639  038D                     	;# 
  2640  038E                     	;# 
  2641  0390                     	;# 
  2642  0390                     	;# 
  2643  0391                     	;# 
  2644  0392                     	;# 
  2645  048C                     	;# 
  2646  048C                     	;# 
  2647  048D                     	;# 
  2648  048E                     	;# 
  2649  048F                     	;# 
  2650  048F                     	;# 
  2651  0490                     	;# 
  2652  0491                     	;# 
  2653  0492                     	;# 
  2654  0492                     	;# 
  2655  0493                     	;# 
  2656  0494                     	;# 
  2657  0495                     	;# 
  2658  0495                     	;# 
  2659  0496                     	;# 
  2660  0497                     	;# 
  2661  0498                     	;# 
  2662  0499                     	;# 
  2663  049A                     	;# 
  2664  049B                     	;# 
  2665  049C                     	;# 
  2666  049D                     	;# 
  2667  058C                     	;# 
  2668  058C                     	;# 
  2669  058D                     	;# 
  2670  058E                     	;# 
  2671  058F                     	;# 
  2672  058F                     	;# 
  2673  0590                     	;# 
  2674  0591                     	;# 
  2675  0592                     	;# 
  2676  0593                     	;# 
  2677  059C                     	;# 
  2678  059C                     	;# 
  2679  059D                     	;# 
  2680  059D                     	;# 
  2681  059E                     	;# 
  2682  059F                     	;# 
  2683  060C                     	;# 
  2684  060C                     	;# 
  2685  060D                     	;# 
  2686  060D                     	;# 
  2687  060E                     	;# 
  2688  060F                     	;# 
  2689  0610                     	;# 
  2690  0611                     	;# 
  2691  0612                     	;# 
  2692  0613                     	;# 
  2693  0614                     	;# 
  2694  0616                     	;# 
  2695  0616                     	;# 
  2696  0617                     	;# 
  2697  0617                     	;# 
  2698  0618                     	;# 
  2699  0619                     	;# 
  2700  061A                     	;# 
  2701  061B                     	;# 
  2702  061C                     	;# 
  2703  061D                     	;# 
  2704  061E                     	;# 
  2705  070C                     	;# 
  2706  070D                     	;# 
  2707  070E                     	;# 
  2708  070F                     	;# 
  2709  0710                     	;# 
  2710  0711                     	;# 
  2711  0712                     	;# 
  2712  0713                     	;# 
  2713  0714                     	;# 
  2714  0716                     	;# 
  2715  0717                     	;# 
  2716  0718                     	;# 
  2717  0719                     	;# 
  2718  071A                     	;# 
  2719  071B                     	;# 
  2720  071C                     	;# 
  2721  071D                     	;# 
  2722  071E                     	;# 
  2723  0796                     	;# 
  2724  0797                     	;# 
  2725  0798                     	;# 
  2726  0799                     	;# 
  2727  079A                     	;# 
  2728  079B                     	;# 
  2729  079C                     	;# 
  2730  079D                     	;# 
  2731  080C                     	;# 
  2732  080D                     	;# 
  2733  080E                     	;# 
  2734  080F                     	;# 
  2735  0810                     	;# 
  2736  0811                     	;# 
  2737  0813                     	;# 
  2738  0814                     	;# 
  2739  081A                     	;# 
  2740  081A                     	;# 
  2741  081B                     	;# 
  2742  081C                     	;# 
  2743  081C                     	;# 
  2744  081D                     	;# 
  2745  081E                     	;# 
  2746  081F                     	;# 
  2747  088C                     	;# 
  2748  088D                     	;# 
  2749  088E                     	;# 
  2750  088F                     	;# 
  2751  0890                     	;# 
  2752  0891                     	;# 
  2753  0892                     	;# 
  2754  0893                     	;# 
  2755  0895                     	;# 
  2756  0896                     	;# 
  2757  0897                     	;# 
  2758  0898                     	;# 
  2759  0899                     	;# 
  2760  089A                     	;# 
  2761  089B                     	;# 
  2762  090C                     	;# 
  2763  090E                     	;# 
  2764  090F                     	;# 
  2765  091F                     	;# 
  2766  098F                     	;# 
  2767  098F                     	;# 
  2768  0990                     	;# 
  2769  0991                     	;# 
  2770  0992                     	;# 
  2771  0993                     	;# 
  2772  0994                     	;# 
  2773  0995                     	;# 
  2774  0996                     	;# 
  2775  0997                     	;# 
  2776  1E0F                     	;# 
  2777  1E10                     	;# 
  2778  1E11                     	;# 
  2779  1E12                     	;# 
  2780  1E13                     	;# 
  2781  1E14                     	;# 
  2782  1E15                     	;# 
  2783  1E16                     	;# 
  2784  1E17                     	;# 
  2785  1E18                     	;# 
  2786  1E19                     	;# 
  2787  1E1A                     	;# 
  2788  1E1B                     	;# 
  2789  1E1C                     	;# 
  2790  1E1D                     	;# 
  2791  1E1E                     	;# 
  2792  1E1F                     	;# 
  2793  1E20                     	;# 
  2794  1E21                     	;# 
  2795  1E22                     	;# 
  2796  1E23                     	;# 
  2797  1E24                     	;# 
  2798  1E25                     	;# 
  2799  1E26                     	;# 
  2800  1E27                     	;# 
  2801  1E28                     	;# 
  2802  1E29                     	;# 
  2803  1E2A                     	;# 
  2804  1E2B                     	;# 
  2805  1E2C                     	;# 
  2806  1E2D                     	;# 
  2807  1E2E                     	;# 
  2808  1E2F                     	;# 
  2809  1E30                     	;# 
  2810  1E31                     	;# 
  2811  1E32                     	;# 
  2812  1E33                     	;# 
  2813  1E34                     	;# 
  2814  1E35                     	;# 
  2815  1E36                     	;# 
  2816  1E37                     	;# 
  2817  1E8F                     	;# 
  2818  1E90                     	;# 
  2819  1E91                     	;# 
  2820  1E92                     	;# 
  2821  1E93                     	;# 
  2822  1E94                     	;# 
  2823  1E95                     	;# 
  2824  1E96                     	;# 
  2825  1E97                     	;# 
  2826  1E9C                     	;# 
  2827  1E9D                     	;# 
  2828  1E9E                     	;# 
  2829  1EA1                     	;# 
  2830  1EA2                     	;# 
  2831  1EA3                     	;# 
  2832  1EA4                     	;# 
  2833  1EA9                     	;# 
  2834  1EAA                     	;# 
  2835  1EB1                     	;# 
  2836  1EB2                     	;# 
  2837  1EB8                     	;# 
  2838  1EB9                     	;# 
  2839  1EBA                     	;# 
  2840  1EBB                     	;# 
  2841  1EBC                     	;# 
  2842  1EBD                     	;# 
  2843  1EBE                     	;# 
  2844  1EC3                     	;# 
  2845  1EC5                     	;# 
  2846  1EC6                     	;# 
  2847  1EC7                     	;# 
  2848  1EC8                     	;# 
  2849  1EC9                     	;# 
  2850  1ECA                     	;# 
  2851  1ECB                     	;# 
  2852  1ECB                     	;# 
  2853  1ECB                     	;# 
  2854  1ECC                     	;# 
  2855  1ECC                     	;# 
  2856  1ECC                     	;# 
  2857  1F10                     	;# 
  2858  1F11                     	;# 
  2859  1F12                     	;# 
  2860  1F14                     	;# 
  2861  1F15                     	;# 
  2862  1F1C                     	;# 
  2863  1F1D                     	;# 
  2864  1F1E                     	;# 
  2865  1F1F                     	;# 
  2866  1F20                     	;# 
  2867  1F21                     	;# 
  2868  1F22                     	;# 
  2869  1F23                     	;# 
  2870  1F24                     	;# 
  2871  1F25                     	;# 
  2872  1F26                     	;# 
  2873  1F27                     	;# 
  2874  1F38                     	;# 
  2875  1F39                     	;# 
  2876  1F3A                     	;# 
  2877  1F3B                     	;# 
  2878  1F3C                     	;# 
  2879  1F3D                     	;# 
  2880  1F3E                     	;# 
  2881  1F3F                     	;# 
  2882  1F43                     	;# 
  2883  1F44                     	;# 
  2884  1F45                     	;# 
  2885  1F46                     	;# 
  2886  1F47                     	;# 
  2887  1F48                     	;# 
  2888  1F49                     	;# 
  2889  1F4A                     	;# 
  2890  1F4E                     	;# 
  2891  1F4F                     	;# 
  2892  1F50                     	;# 
  2893  1F51                     	;# 
  2894  1F52                     	;# 
  2895  1F53                     	;# 
  2896  1F54                     	;# 
  2897  1F55                     	;# 
  2898  1FE4                     	;# 
  2899  1FE5                     	;# 
  2900  1FE6                     	;# 
  2901  1FE7                     	;# 
  2902  1FE8                     	;# 
  2903  1FE8                     	;# 
  2904  1FE9                     	;# 
  2905  1FEA                     	;# 
  2906  1FEB                     	;# 
  2907  1FED                     	;# 
  2908  1FEE                     	;# 
  2909  1FEF                     	;# 
  2910  0000                     	;# 
  2911  0001                     	;# 
  2912  0002                     	;# 
  2913  0003                     	;# 
  2914  0004                     	;# 
  2915  0005                     	;# 
  2916  0006                     	;# 
  2917  0007                     	;# 
  2918  0008                     	;# 
  2919  0009                     	;# 
  2920  000A                     	;# 
  2921  000B                     	;# 
  2922  000C                     	;# 
  2923  000D                     	;# 
  2924  000E                     	;# 
  2925  0012                     	;# 
  2926  0013                     	;# 
  2927  0014                     	;# 
  2928  0018                     	;# 
  2929  0019                     	;# 
  2930  001A                     	;# 
  2931  008C                     	;# 
  2932  008C                     	;# 
  2933  008D                     	;# 
  2934  008E                     	;# 
  2935  008E                     	;# 
  2936  008F                     	;# 
  2937  0090                     	;# 
  2938  0090                     	;# 
  2939  0091                     	;# 
  2940  0092                     	;# 
  2941  0092                     	;# 
  2942  0093                     	;# 
  2943  0094                     	;# 
  2944  0094                     	;# 
  2945  0095                     	;# 
  2946  0096                     	;# 
  2947  0096                     	;# 
  2948  0097                     	;# 
  2949  0098                     	;# 
  2950  0099                     	;# 
  2951  009A                     	;# 
  2952  009B                     	;# 
  2953  009B                     	;# 
  2954  009C                     	;# 
  2955  009D                     	;# 
  2956  009D                     	;# 
  2957  009E                     	;# 
  2958  009F                     	;# 
  2959  010C                     	;# 
  2960  010C                     	;# 
  2961  010D                     	;# 
  2962  010E                     	;# 
  2963  010F                     	;# 
  2964  010F                     	;# 
  2965  0110                     	;# 
  2966  0111                     	;# 
  2967  0112                     	;# 
  2968  0113                     	;# 
  2969  0114                     	;# 
  2970  0115                     	;# 
  2971  0116                     	;# 
  2972  0117                     	;# 
  2973  0118                     	;# 
  2974  0119                     	;# 
  2975  0119                     	;# 
  2976  0119                     	;# 
  2977  011A                     	;# 
  2978  011A                     	;# 
  2979  011A                     	;# 
  2980  011B                     	;# 
  2981  011B                     	;# 
  2982  011B                     	;# 
  2983  011B                     	;# 
  2984  011B                     	;# 
  2985  011C                     	;# 
  2986  011C                     	;# 
  2987  011C                     	;# 
  2988  011D                     	;# 
  2989  011D                     	;# 
  2990  011D                     	;# 
  2991  011E                     	;# 
  2992  011E                     	;# 
  2993  011E                     	;# 
  2994  011F                     	;# 
  2995  011F                     	;# 
  2996  011F                     	;# 
  2997  011F                     	;# 
  2998  011F                     	;# 
  2999  018C                     	;# 
  3000  018D                     	;# 
  3001  018E                     	;# 
  3002  018F                     	;# 
  3003  0190                     	;# 
  3004  0191                     	;# 
  3005  0192                     	;# 
  3006  0196                     	;# 
  3007  0197                     	;# 
  3008  0198                     	;# 
  3009  0199                     	;# 
  3010  019A                     	;# 
  3011  019B                     	;# 
  3012  019C                     	;# 
  3013  020C                     	;# 
  3014  020D                     	;# 
  3015  020E                     	;# 
  3016  020E                     	;# 
  3017  020F                     	;# 
  3018  020F                     	;# 
  3019  0210                     	;# 
  3020  0210                     	;# 
  3021  0211                     	;# 
  3022  0211                     	;# 
  3023  0212                     	;# 
  3024  0213                     	;# 
  3025  0214                     	;# 
  3026  0214                     	;# 
  3027  0215                     	;# 
  3028  0215                     	;# 
  3029  0216                     	;# 
  3030  0216                     	;# 
  3031  0217                     	;# 
  3032  0217                     	;# 
  3033  0218                     	;# 
  3034  0219                     	;# 
  3035  021A                     	;# 
  3036  021A                     	;# 
  3037  021B                     	;# 
  3038  021B                     	;# 
  3039  021C                     	;# 
  3040  021C                     	;# 
  3041  021D                     	;# 
  3042  021D                     	;# 
  3043  021E                     	;# 
  3044  021F                     	;# 
  3045  028C                     	;# 
  3046  028C                     	;# 
  3047  028D                     	;# 
  3048  028D                     	;# 
  3049  028E                     	;# 
  3050  028F                     	;# 
  3051  0290                     	;# 
  3052  0291                     	;# 
  3053  0292                     	;# 
  3054  0292                     	;# 
  3055  0293                     	;# 
  3056  0293                     	;# 
  3057  0294                     	;# 
  3058  0295                     	;# 
  3059  0296                     	;# 
  3060  0297                     	;# 
  3061  0298                     	;# 
  3062  0298                     	;# 
  3063  0299                     	;# 
  3064  0299                     	;# 
  3065  029A                     	;# 
  3066  029B                     	;# 
  3067  029C                     	;# 
  3068  029D                     	;# 
  3069  029F                     	;# 
  3070  030C                     	;# 
  3071  030C                     	;# 
  3072  030D                     	;# 
  3073  030E                     	;# 
  3074  030F                     	;# 
  3075  0310                     	;# 
  3076  0310                     	;# 
  3077  0311                     	;# 
  3078  0312                     	;# 
  3079  0313                     	;# 
  3080  0314                     	;# 
  3081  0314                     	;# 
  3082  0315                     	;# 
  3083  0316                     	;# 
  3084  0317                     	;# 
  3085  0318                     	;# 
  3086  0318                     	;# 
  3087  0319                     	;# 
  3088  031A                     	;# 
  3089  031B                     	;# 
  3090  038C                     	;# 
  3091  038C                     	;# 
  3092  038D                     	;# 
  3093  038E                     	;# 
  3094  0390                     	;# 
  3095  0390                     	;# 
  3096  0391                     	;# 
  3097  0392                     	;# 
  3098  048C                     	;# 
  3099  048C                     	;# 
  3100  048D                     	;# 
  3101  048E                     	;# 
  3102  048F                     	;# 
  3103  048F                     	;# 
  3104  0490                     	;# 
  3105  0491                     	;# 
  3106  0492                     	;# 
  3107  0492                     	;# 
  3108  0493                     	;# 
  3109  0494                     	;# 
  3110  0495                     	;# 
  3111  0495                     	;# 
  3112  0496                     	;# 
  3113  0497                     	;# 
  3114  0498                     	;# 
  3115  0499                     	;# 
  3116  049A                     	;# 
  3117  049B                     	;# 
  3118  049C                     	;# 
  3119  049D                     	;# 
  3120  058C                     	;# 
  3121  058C                     	;# 
  3122  058D                     	;# 
  3123  058E                     	;# 
  3124  058F                     	;# 
  3125  058F                     	;# 
  3126  0590                     	;# 
  3127  0591                     	;# 
  3128  0592                     	;# 
  3129  0593                     	;# 
  3130  059C                     	;# 
  3131  059C                     	;# 
  3132  059D                     	;# 
  3133  059D                     	;# 
  3134  059E                     	;# 
  3135  059F                     	;# 
  3136  060C                     	;# 
  3137  060C                     	;# 
  3138  060D                     	;# 
  3139  060D                     	;# 
  3140  060E                     	;# 
  3141  060F                     	;# 
  3142  0610                     	;# 
  3143  0611                     	;# 
  3144  0612                     	;# 
  3145  0613                     	;# 
  3146  0614                     	;# 
  3147  0616                     	;# 
  3148  0616                     	;# 
  3149  0617                     	;# 
  3150  0617                     	;# 
  3151  0618                     	;# 
  3152  0619                     	;# 
  3153  061A                     	;# 
  3154  061B                     	;# 
  3155  061C                     	;# 
  3156  061D                     	;# 
  3157  061E                     	;# 
  3158  070C                     	;# 
  3159  070D                     	;# 
  3160  070E                     	;# 
  3161  070F                     	;# 
  3162  0710                     	;# 
  3163  0711                     	;# 
  3164  0712                     	;# 
  3165  0713                     	;# 
  3166  0714                     	;# 
  3167  0716                     	;# 
  3168  0717                     	;# 
  3169  0718                     	;# 
  3170  0719                     	;# 
  3171  071A                     	;# 
  3172  071B                     	;# 
  3173  071C                     	;# 
  3174  071D                     	;# 
  3175  071E                     	;# 
  3176  0796                     	;# 
  3177  0797                     	;# 
  3178  0798                     	;# 
  3179  0799                     	;# 
  3180  079A                     	;# 
  3181  079B                     	;# 
  3182  079C                     	;# 
  3183  079D                     	;# 
  3184  080C                     	;# 
  3185  080D                     	;# 
  3186  080E                     	;# 
  3187  080F                     	;# 
  3188  0810                     	;# 
  3189  0811                     	;# 
  3190  0813                     	;# 
  3191  0814                     	;# 
  3192  081A                     	;# 
  3193  081A                     	;# 
  3194  081B                     	;# 
  3195  081C                     	;# 
  3196  081C                     	;# 
  3197  081D                     	;# 
  3198  081E                     	;# 
  3199  081F                     	;# 
  3200  088C                     	;# 
  3201  088D                     	;# 
  3202  088E                     	;# 
  3203  088F                     	;# 
  3204  0890                     	;# 
  3205  0891                     	;# 
  3206  0892                     	;# 
  3207  0893                     	;# 
  3208  0895                     	;# 
  3209  0896                     	;# 
  3210  0897                     	;# 
  3211  0898                     	;# 
  3212  0899                     	;# 
  3213  089A                     	;# 
  3214  089B                     	;# 
  3215  090C                     	;# 
  3216  090E                     	;# 
  3217  090F                     	;# 
  3218  091F                     	;# 
  3219  098F                     	;# 
  3220  098F                     	;# 
  3221  0990                     	;# 
  3222  0991                     	;# 
  3223  0992                     	;# 
  3224  0993                     	;# 
  3225  0994                     	;# 
  3226  0995                     	;# 
  3227  0996                     	;# 
  3228  0997                     	;# 
  3229  1E0F                     	;# 
  3230  1E10                     	;# 
  3231  1E11                     	;# 
  3232  1E12                     	;# 
  3233  1E13                     	;# 
  3234  1E14                     	;# 
  3235  1E15                     	;# 
  3236  1E16                     	;# 
  3237  1E17                     	;# 
  3238  1E18                     	;# 
  3239  1E19                     	;# 
  3240  1E1A                     	;# 
  3241  1E1B                     	;# 
  3242  1E1C                     	;# 
  3243  1E1D                     	;# 
  3244  1E1E                     	;# 
  3245  1E1F                     	;# 
  3246  1E20                     	;# 
  3247  1E21                     	;# 
  3248  1E22                     	;# 
  3249  1E23                     	;# 
  3250  1E24                     	;# 
  3251  1E25                     	;# 
  3252  1E26                     	;# 
  3253  1E27                     	;# 
  3254  1E28                     	;# 
  3255  1E29                     	;# 
  3256  1E2A                     	;# 
  3257  1E2B                     	;# 
  3258  1E2C                     	;# 
  3259  1E2D                     	;# 
  3260  1E2E                     	;# 
  3261  1E2F                     	;# 
  3262  1E30                     	;# 
  3263  1E31                     	;# 
  3264  1E32                     	;# 
  3265  1E33                     	;# 
  3266  1E34                     	;# 
  3267  1E35                     	;# 
  3268  1E36                     	;# 
  3269  1E37                     	;# 
  3270  1E8F                     	;# 
  3271  1E90                     	;# 
  3272  1E91                     	;# 
  3273  1E92                     	;# 
  3274  1E93                     	;# 
  3275  1E94                     	;# 
  3276  1E95                     	;# 
  3277  1E96                     	;# 
  3278  1E97                     	;# 
  3279  1E9C                     	;# 
  3280  1E9D                     	;# 
  3281  1E9E                     	;# 
  3282  1EA1                     	;# 
  3283  1EA2                     	;# 
  3284  1EA3                     	;# 
  3285  1EA4                     	;# 
  3286  1EA9                     	;# 
  3287  1EAA                     	;# 
  3288  1EB1                     	;# 
  3289  1EB2                     	;# 
  3290  1EB8                     	;# 
  3291  1EB9                     	;# 
  3292  1EBA                     	;# 
  3293  1EBB                     	;# 
  3294  1EBC                     	;# 
  3295  1EBD                     	;# 
  3296  1EBE                     	;# 
  3297  1EC3                     	;# 
  3298  1EC5                     	;# 
  3299  1EC6                     	;# 
  3300  1EC7                     	;# 
  3301  1EC8                     	;# 
  3302  1EC9                     	;# 
  3303  1ECA                     	;# 
  3304  1ECB                     	;# 
  3305  1ECB                     	;# 
  3306  1ECB                     	;# 
  3307  1ECC                     	;# 
  3308  1ECC                     	;# 
  3309  1ECC                     	;# 
  3310  1F10                     	;# 
  3311  1F11                     	;# 
  3312  1F12                     	;# 
  3313  1F14                     	;# 
  3314  1F15                     	;# 
  3315  1F1C                     	;# 
  3316  1F1D                     	;# 
  3317  1F1E                     	;# 
  3318  1F1F                     	;# 
  3319  1F20                     	;# 
  3320  1F21                     	;# 
  3321  1F22                     	;# 
  3322  1F23                     	;# 
  3323  1F24                     	;# 
  3324  1F25                     	;# 
  3325  1F26                     	;# 
  3326  1F27                     	;# 
  3327  1F38                     	;# 
  3328  1F39                     	;# 
  3329  1F3A                     	;# 
  3330  1F3B                     	;# 
  3331  1F3C                     	;# 
  3332  1F3D                     	;# 
  3333  1F3E                     	;# 
  3334  1F3F                     	;# 
  3335  1F43                     	;# 
  3336  1F44                     	;# 
  3337  1F45                     	;# 
  3338  1F46                     	;# 
  3339  1F47                     	;# 
  3340  1F48                     	;# 
  3341  1F49                     	;# 
  3342  1F4A                     	;# 
  3343  1F4E                     	;# 
  3344  1F4F                     	;# 
  3345  1F50                     	;# 
  3346  1F51                     	;# 
  3347  1F52                     	;# 
  3348  1F53                     	;# 
  3349  1F54                     	;# 
  3350  1F55                     	;# 
  3351  1FE4                     	;# 
  3352  1FE5                     	;# 
  3353  1FE6                     	;# 
  3354  1FE7                     	;# 
  3355  1FE8                     	;# 
  3356  1FE8                     	;# 
  3357  1FE9                     	;# 
  3358  1FEA                     	;# 
  3359  1FEB                     	;# 
  3360  1FED                     	;# 
  3361  1FEE                     	;# 
  3362  1FEF                     	;# 
  3363  0000                     	;# 
  3364  0001                     	;# 
  3365  0002                     	;# 
  3366  0003                     	;# 
  3367  0004                     	;# 
  3368  0005                     	;# 
  3369  0006                     	;# 
  3370  0007                     	;# 
  3371  0008                     	;# 
  3372  0009                     	;# 
  3373  000A                     	;# 
  3374  000B                     	;# 
  3375  000C                     	;# 
  3376  000D                     	;# 
  3377  000E                     	;# 
  3378  0012                     	;# 
  3379  0013                     	;# 
  3380  0014                     	;# 
  3381  0018                     	;# 
  3382  0019                     	;# 
  3383  001A                     	;# 
  3384  008C                     	;# 
  3385  008C                     	;# 
  3386  008D                     	;# 
  3387  008E                     	;# 
  3388  008E                     	;# 
  3389  008F                     	;# 
  3390  0090                     	;# 
  3391  0090                     	;# 
  3392  0091                     	;# 
  3393  0092                     	;# 
  3394  0092                     	;# 
  3395  0093                     	;# 
  3396  0094                     	;# 
  3397  0094                     	;# 
  3398  0095                     	;# 
  3399  0096                     	;# 
  3400  0096                     	;# 
  3401  0097                     	;# 
  3402  0098                     	;# 
  3403  0099                     	;# 
  3404  009A                     	;# 
  3405  009B                     	;# 
  3406  009B                     	;# 
  3407  009C                     	;# 
  3408  009D                     	;# 
  3409  009D                     	;# 
  3410  009E                     	;# 
  3411  009F                     	;# 
  3412  010C                     	;# 
  3413  010C                     	;# 
  3414  010D                     	;# 
  3415  010E                     	;# 
  3416  010F                     	;# 
  3417  010F                     	;# 
  3418  0110                     	;# 
  3419  0111                     	;# 
  3420  0112                     	;# 
  3421  0113                     	;# 
  3422  0114                     	;# 
  3423  0115                     	;# 
  3424  0116                     	;# 
  3425  0117                     	;# 
  3426  0118                     	;# 
  3427  0119                     	;# 
  3428  0119                     	;# 
  3429  0119                     	;# 
  3430  011A                     	;# 
  3431  011A                     	;# 
  3432  011A                     	;# 
  3433  011B                     	;# 
  3434  011B                     	;# 
  3435  011B                     	;# 
  3436  011B                     	;# 
  3437  011B                     	;# 
  3438  011C                     	;# 
  3439  011C                     	;# 
  3440  011C                     	;# 
  3441  011D                     	;# 
  3442  011D                     	;# 
  3443  011D                     	;# 
  3444  011E                     	;# 
  3445  011E                     	;# 
  3446  011E                     	;# 
  3447  011F                     	;# 
  3448  011F                     	;# 
  3449  011F                     	;# 
  3450  011F                     	;# 
  3451  011F                     	;# 
  3452  018C                     	;# 
  3453  018D                     	;# 
  3454  018E                     	;# 
  3455  018F                     	;# 
  3456  0190                     	;# 
  3457  0191                     	;# 
  3458  0192                     	;# 
  3459  0196                     	;# 
  3460  0197                     	;# 
  3461  0198                     	;# 
  3462  0199                     	;# 
  3463  019A                     	;# 
  3464  019B                     	;# 
  3465  019C                     	;# 
  3466  020C                     	;# 
  3467  020D                     	;# 
  3468  020E                     	;# 
  3469  020E                     	;# 
  3470  020F                     	;# 
  3471  020F                     	;# 
  3472  0210                     	;# 
  3473  0210                     	;# 
  3474  0211                     	;# 
  3475  0211                     	;# 
  3476  0212                     	;# 
  3477  0213                     	;# 
  3478  0214                     	;# 
  3479  0214                     	;# 
  3480  0215                     	;# 
  3481  0215                     	;# 
  3482  0216                     	;# 
  3483  0216                     	;# 
  3484  0217                     	;# 
  3485  0217                     	;# 
  3486  0218                     	;# 
  3487  0219                     	;# 
  3488  021A                     	;# 
  3489  021A                     	;# 
  3490  021B                     	;# 
  3491  021B                     	;# 
  3492  021C                     	;# 
  3493  021C                     	;# 
  3494  021D                     	;# 
  3495  021D                     	;# 
  3496  021E                     	;# 
  3497  021F                     	;# 
  3498  028C                     	;# 
  3499  028C                     	;# 
  3500  028D                     	;# 
  3501  028D                     	;# 
  3502  028E                     	;# 
  3503  028F                     	;# 
  3504  0290                     	;# 
  3505  0291                     	;# 
  3506  0292                     	;# 
  3507  0292                     	;# 
  3508  0293                     	;# 
  3509  0293                     	;# 
  3510  0294                     	;# 
  3511  0295                     	;# 
  3512  0296                     	;# 
  3513  0297                     	;# 
  3514  0298                     	;# 
  3515  0298                     	;# 
  3516  0299                     	;# 
  3517  0299                     	;# 
  3518  029A                     	;# 
  3519  029B                     	;# 
  3520  029C                     	;# 
  3521  029D                     	;# 
  3522  029F                     	;# 
  3523  030C                     	;# 
  3524  030C                     	;# 
  3525  030D                     	;# 
  3526  030E                     	;# 
  3527  030F                     	;# 
  3528  0310                     	;# 
  3529  0310                     	;# 
  3530  0311                     	;# 
  3531  0312                     	;# 
  3532  0313                     	;# 
  3533  0314                     	;# 
  3534  0314                     	;# 
  3535  0315                     	;# 
  3536  0316                     	;# 
  3537  0317                     	;# 
  3538  0318                     	;# 
  3539  0318                     	;# 
  3540  0319                     	;# 
  3541  031A                     	;# 
  3542  031B                     	;# 
  3543  038C                     	;# 
  3544  038C                     	;# 
  3545  038D                     	;# 
  3546  038E                     	;# 
  3547  0390                     	;# 
  3548  0390                     	;# 
  3549  0391                     	;# 
  3550  0392                     	;# 
  3551  048C                     	;# 
  3552  048C                     	;# 
  3553  048D                     	;# 
  3554  048E                     	;# 
  3555  048F                     	;# 
  3556  048F                     	;# 
  3557  0490                     	;# 
  3558  0491                     	;# 
  3559  0492                     	;# 
  3560  0492                     	;# 
  3561  0493                     	;# 
  3562  0494                     	;# 
  3563  0495                     	;# 
  3564  0495                     	;# 
  3565  0496                     	;# 
  3566  0497                     	;# 
  3567  0498                     	;# 
  3568  0499                     	;# 
  3569  049A                     	;# 
  3570  049B                     	;# 
  3571  049C                     	;# 
  3572  049D                     	;# 
  3573  058C                     	;# 
  3574  058C                     	;# 
  3575  058D                     	;# 
  3576  058E                     	;# 
  3577  058F                     	;# 
  3578  058F                     	;# 
  3579  0590                     	;# 
  3580  0591                     	;# 
  3581  0592                     	;# 
  3582  0593                     	;# 
  3583  059C                     	;# 
  3584  059C                     	;# 
  3585  059D                     	;# 
  3586  059D                     	;# 
  3587  059E                     	;# 
  3588  059F                     	;# 
  3589  060C                     	;# 
  3590  060C                     	;# 
  3591  060D                     	;# 
  3592  060D                     	;# 
  3593  060E                     	;# 
  3594  060F                     	;# 
  3595  0610                     	;# 
  3596  0611                     	;# 
  3597  0612                     	;# 
  3598  0613                     	;# 
  3599  0614                     	;# 
  3600  0616                     	;# 
  3601  0616                     	;# 
  3602  0617                     	;# 
  3603  0617                     	;# 
  3604  0618                     	;# 
  3605  0619                     	;# 
  3606  061A                     	;# 
  3607  061B                     	;# 
  3608  061C                     	;# 
  3609  061D                     	;# 
  3610  061E                     	;# 
  3611  070C                     	;# 
  3612  070D                     	;# 
  3613  070E                     	;# 
  3614  070F                     	;# 
  3615  0710                     	;# 
  3616  0711                     	;# 
  3617  0712                     	;# 
  3618  0713                     	;# 
  3619  0714                     	;# 
  3620  0716                     	;# 
  3621  0717                     	;# 
  3622  0718                     	;# 
  3623  0719                     	;# 
  3624  071A                     	;# 
  3625  071B                     	;# 
  3626  071C                     	;# 
  3627  071D                     	;# 
  3628  071E                     	;# 
  3629  0796                     	;# 
  3630  0797                     	;# 
  3631  0798                     	;# 
  3632  0799                     	;# 
  3633  079A                     	;# 
  3634  079B                     	;# 
  3635  079C                     	;# 
  3636  079D                     	;# 
  3637  080C                     	;# 
  3638  080D                     	;# 
  3639  080E                     	;# 
  3640  080F                     	;# 
  3641  0810                     	;# 
  3642  0811                     	;# 
  3643  0813                     	;# 
  3644  0814                     	;# 
  3645  081A                     	;# 
  3646  081A                     	;# 
  3647  081B                     	;# 
  3648  081C                     	;# 
  3649  081C                     	;# 
  3650  081D                     	;# 
  3651  081E                     	;# 
  3652  081F                     	;# 
  3653  088C                     	;# 
  3654  088D                     	;# 
  3655  088E                     	;# 
  3656  088F                     	;# 
  3657  0890                     	;# 
  3658  0891                     	;# 
  3659  0892                     	;# 
  3660  0893                     	;# 
  3661  0895                     	;# 
  3662  0896                     	;# 
  3663  0897                     	;# 
  3664  0898                     	;# 
  3665  0899                     	;# 
  3666  089A                     	;# 
  3667  089B                     	;# 
  3668  090C                     	;# 
  3669  090E                     	;# 
  3670  090F                     	;# 
  3671  091F                     	;# 
  3672  098F                     	;# 
  3673  098F                     	;# 
  3674  0990                     	;# 
  3675  0991                     	;# 
  3676  0992                     	;# 
  3677  0993                     	;# 
  3678  0994                     	;# 
  3679  0995                     	;# 
  3680  0996                     	;# 
  3681  0997                     	;# 
  3682  1E0F                     	;# 
  3683  1E10                     	;# 
  3684  1E11                     	;# 
  3685  1E12                     	;# 
  3686  1E13                     	;# 
  3687  1E14                     	;# 
  3688  1E15                     	;# 
  3689  1E16                     	;# 
  3690  1E17                     	;# 
  3691  1E18                     	;# 
  3692  1E19                     	;# 
  3693  1E1A                     	;# 
  3694  1E1B                     	;# 
  3695  1E1C                     	;# 
  3696  1E1D                     	;# 
  3697  1E1E                     	;# 
  3698  1E1F                     	;# 
  3699  1E20                     	;# 
  3700  1E21                     	;# 
  3701  1E22                     	;# 
  3702  1E23                     	;# 
  3703  1E24                     	;# 
  3704  1E25                     	;# 
  3705  1E26                     	;# 
  3706  1E27                     	;# 
  3707  1E28                     	;# 
  3708  1E29                     	;# 
  3709  1E2A                     	;# 
  3710  1E2B                     	;# 
  3711  1E2C                     	;# 
  3712  1E2D                     	;# 
  3713  1E2E                     	;# 
  3714  1E2F                     	;# 
  3715  1E30                     	;# 
  3716  1E31                     	;# 
  3717  1E32                     	;# 
  3718  1E33                     	;# 
  3719  1E34                     	;# 
  3720  1E35                     	;# 
  3721  1E36                     	;# 
  3722  1E37                     	;# 
  3723  1E8F                     	;# 
  3724  1E90                     	;# 
  3725  1E91                     	;# 
  3726  1E92                     	;# 
  3727  1E93                     	;# 
  3728  1E94                     	;# 
  3729  1E95                     	;# 
  3730  1E96                     	;# 
  3731  1E97                     	;# 
  3732  1E9C                     	;# 
  3733  1E9D                     	;# 
  3734  1E9E                     	;# 
  3735  1EA1                     	;# 
  3736  1EA2                     	;# 
  3737  1EA3                     	;# 
  3738  1EA4                     	;# 
  3739  1EA9                     	;# 
  3740  1EAA                     	;# 
  3741  1EB1                     	;# 
  3742  1EB2                     	;# 
  3743  1EB8                     	;# 
  3744  1EB9                     	;# 
  3745  1EBA                     	;# 
  3746  1EBB                     	;# 
  3747  1EBC                     	;# 
  3748  1EBD                     	;# 
  3749  1EBE                     	;# 
  3750  1EC3                     	;# 
  3751  1EC5                     	;# 
  3752  1EC6                     	;# 
  3753  1EC7                     	;# 
  3754  1EC8                     	;# 
  3755  1EC9                     	;# 
  3756  1ECA                     	;# 
  3757  1ECB                     	;# 
  3758  1ECB                     	;# 
  3759  1ECB                     	;# 
  3760  1ECC                     	;# 
  3761  1ECC                     	;# 
  3762  1ECC                     	;# 
  3763  1F10                     	;# 
  3764  1F11                     	;# 
  3765  1F12                     	;# 
  3766  1F14                     	;# 
  3767  1F15                     	;# 
  3768  1F1C                     	;# 
  3769  1F1D                     	;# 
  3770  1F1E                     	;# 
  3771  1F1F                     	;# 
  3772  1F20                     	;# 
  3773  1F21                     	;# 
  3774  1F22                     	;# 
  3775  1F23                     	;# 
  3776  1F24                     	;# 
  3777  1F25                     	;# 
  3778  1F26                     	;# 
  3779  1F27                     	;# 
  3780  1F38                     	;# 
  3781  1F39                     	;# 
  3782  1F3A                     	;# 
  3783  1F3B                     	;# 
  3784  1F3C                     	;# 
  3785  1F3D                     	;# 
  3786  1F3E                     	;# 
  3787  1F3F                     	;# 
  3788  1F43                     	;# 
  3789  1F44                     	;# 
  3790  1F45                     	;# 
  3791  1F46                     	;# 
  3792  1F47                     	;# 
  3793  1F48                     	;# 
  3794  1F49                     	;# 
  3795  1F4A                     	;# 
  3796  1F4E                     	;# 
  3797  1F4F                     	;# 
  3798  1F50                     	;# 
  3799  1F51                     	;# 
  3800  1F52                     	;# 
  3801  1F53                     	;# 
  3802  1F54                     	;# 
  3803  1F55                     	;# 
  3804  1FE4                     	;# 
  3805  1FE5                     	;# 
  3806  1FE6                     	;# 
  3807  1FE7                     	;# 
  3808  1FE8                     	;# 
  3809  1FE8                     	;# 
  3810  1FE9                     	;# 
  3811  1FEA                     	;# 
  3812  1FEB                     	;# 
  3813  1FED                     	;# 
  3814  1FEE                     	;# 
  3815  1FEF                     	;# 
  3816  0000                     	;# 
  3817  0001                     	;# 
  3818  0002                     	;# 
  3819  0003                     	;# 
  3820  0004                     	;# 
  3821  0005                     	;# 
  3822  0006                     	;# 
  3823  0007                     	;# 
  3824  0008                     	;# 
  3825  0009                     	;# 
  3826  000A                     	;# 
  3827  000B                     	;# 
  3828  000C                     	;# 
  3829  000D                     	;# 
  3830  000E                     	;# 
  3831  0012                     	;# 
  3832  0013                     	;# 
  3833  0014                     	;# 
  3834  0018                     	;# 
  3835  0019                     	;# 
  3836  001A                     	;# 
  3837  008C                     	;# 
  3838  008C                     	;# 
  3839  008D                     	;# 
  3840  008E                     	;# 
  3841  008E                     	;# 
  3842  008F                     	;# 
  3843  0090                     	;# 
  3844  0090                     	;# 
  3845  0091                     	;# 
  3846  0092                     	;# 
  3847  0092                     	;# 
  3848  0093                     	;# 
  3849  0094                     	;# 
  3850  0094                     	;# 
  3851  0095                     	;# 
  3852  0096                     	;# 
  3853  0096                     	;# 
  3854  0097                     	;# 
  3855  0098                     	;# 
  3856  0099                     	;# 
  3857  009A                     	;# 
  3858  009B                     	;# 
  3859  009B                     	;# 
  3860  009C                     	;# 
  3861  009D                     	;# 
  3862  009D                     	;# 
  3863  009E                     	;# 
  3864  009F                     	;# 
  3865  010C                     	;# 
  3866  010C                     	;# 
  3867  010D                     	;# 
  3868  010E                     	;# 
  3869  010F                     	;# 
  3870  010F                     	;# 
  3871  0110                     	;# 
  3872  0111                     	;# 
  3873  0112                     	;# 
  3874  0113                     	;# 
  3875  0114                     	;# 
  3876  0115                     	;# 
  3877  0116                     	;# 
  3878  0117                     	;# 
  3879  0118                     	;# 
  3880  0119                     	;# 
  3881  0119                     	;# 
  3882  0119                     	;# 
  3883  011A                     	;# 
  3884  011A                     	;# 
  3885  011A                     	;# 
  3886  011B                     	;# 
  3887  011B                     	;# 
  3888  011B                     	;# 
  3889  011B                     	;# 
  3890  011B                     	;# 
  3891  011C                     	;# 
  3892  011C                     	;# 
  3893  011C                     	;# 
  3894  011D                     	;# 
  3895  011D                     	;# 
  3896  011D                     	;# 
  3897  011E                     	;# 
  3898  011E                     	;# 
  3899  011E                     	;# 
  3900  011F                     	;# 
  3901  011F                     	;# 
  3902  011F                     	;# 
  3903  011F                     	;# 
  3904  011F                     	;# 
  3905  018C                     	;# 
  3906  018D                     	;# 
  3907  018E                     	;# 
  3908  018F                     	;# 
  3909  0190                     	;# 
  3910  0191                     	;# 
  3911  0192                     	;# 
  3912  0196                     	;# 
  3913  0197                     	;# 
  3914  0198                     	;# 
  3915  0199                     	;# 
  3916  019A                     	;# 
  3917  019B                     	;# 
  3918  019C                     	;# 
  3919  020C                     	;# 
  3920  020D                     	;# 
  3921  020E                     	;# 
  3922  020E                     	;# 
  3923  020F                     	;# 
  3924  020F                     	;# 
  3925  0210                     	;# 
  3926  0210                     	;# 
  3927  0211                     	;# 
  3928  0211                     	;# 
  3929  0212                     	;# 
  3930  0213                     	;# 
  3931  0214                     	;# 
  3932  0214                     	;# 
  3933  0215                     	;# 
  3934  0215                     	;# 
  3935  0216                     	;# 
  3936  0216                     	;# 
  3937  0217                     	;# 
  3938  0217                     	;# 
  3939  0218                     	;# 
  3940  0219                     	;# 
  3941  021A                     	;# 
  3942  021A                     	;# 
  3943  021B                     	;# 
  3944  021B                     	;# 
  3945  021C                     	;# 
  3946  021C                     	;# 
  3947  021D                     	;# 
  3948  021D                     	;# 
  3949  021E                     	;# 
  3950  021F                     	;# 
  3951  028C                     	;# 
  3952  028C                     	;# 
  3953  028D                     	;# 
  3954  028D                     	;# 
  3955  028E                     	;# 
  3956  028F                     	;# 
  3957  0290                     	;# 
  3958  0291                     	;# 
  3959  0292                     	;# 
  3960  0292                     	;# 
  3961  0293                     	;# 
  3962  0293                     	;# 
  3963  0294                     	;# 
  3964  0295                     	;# 
  3965  0296                     	;# 
  3966  0297                     	;# 
  3967  0298                     	;# 
  3968  0298                     	;# 
  3969  0299                     	;# 
  3970  0299                     	;# 
  3971  029A                     	;# 
  3972  029B                     	;# 
  3973  029C                     	;# 
  3974  029D                     	;# 
  3975  029F                     	;# 
  3976  030C                     	;# 
  3977  030C                     	;# 
  3978  030D                     	;# 
  3979  030E                     	;# 
  3980  030F                     	;# 
  3981  0310                     	;# 
  3982  0310                     	;# 
  3983  0311                     	;# 
  3984  0312                     	;# 
  3985  0313                     	;# 
  3986  0314                     	;# 
  3987  0314                     	;# 
  3988  0315                     	;# 
  3989  0316                     	;# 
  3990  0317                     	;# 
  3991  0318                     	;# 
  3992  0318                     	;# 
  3993  0319                     	;# 
  3994  031A                     	;# 
  3995  031B                     	;# 
  3996  038C                     	;# 
  3997  038C                     	;# 
  3998  038D                     	;# 
  3999  038E                     	;# 
  4000  0390                     	;# 
  4001  0390                     	;# 
  4002  0391                     	;# 
  4003  0392                     	;# 
  4004  048C                     	;# 
  4005  048C                     	;# 
  4006  048D                     	;# 
  4007  048E                     	;# 
  4008  048F                     	;# 
  4009  048F                     	;# 
  4010  0490                     	;# 
  4011  0491                     	;# 
  4012  0492                     	;# 
  4013  0492                     	;# 
  4014  0493                     	;# 
  4015  0494                     	;# 
  4016  0495                     	;# 
  4017  0495                     	;# 
  4018  0496                     	;# 
  4019  0497                     	;# 
  4020  0498                     	;# 
  4021  0499                     	;# 
  4022  049A                     	;# 
  4023  049B                     	;# 
  4024  049C                     	;# 
  4025  049D                     	;# 
  4026  058C                     	;# 
  4027  058C                     	;# 
  4028  058D                     	;# 
  4029  058E                     	;# 
  4030  058F                     	;# 
  4031  058F                     	;# 
  4032  0590                     	;# 
  4033  0591                     	;# 
  4034  0592                     	;# 
  4035  0593                     	;# 
  4036  059C                     	;# 
  4037  059C                     	;# 
  4038  059D                     	;# 
  4039  059D                     	;# 
  4040  059E                     	;# 
  4041  059F                     	;# 
  4042  060C                     	;# 
  4043  060C                     	;# 
  4044  060D                     	;# 
  4045  060D                     	;# 
  4046  060E                     	;# 
  4047  060F                     	;# 
  4048  0610                     	;# 
  4049  0611                     	;# 
  4050  0612                     	;# 
  4051  0613                     	;# 
  4052  0614                     	;# 
  4053  0616                     	;# 
  4054  0616                     	;# 
  4055  0617                     	;# 
  4056  0617                     	;# 
  4057  0618                     	;# 
  4058  0619                     	;# 
  4059  061A                     	;# 
  4060  061B                     	;# 
  4061  061C                     	;# 
  4062  061D                     	;# 
  4063  061E                     	;# 
  4064  070C                     	;# 
  4065  070D                     	;# 
  4066  070E                     	;# 
  4067  070F                     	;# 
  4068  0710                     	;# 
  4069  0711                     	;# 
  4070  0712                     	;# 
  4071  0713                     	;# 
  4072  0714                     	;# 
  4073  0716                     	;# 
  4074  0717                     	;# 
  4075  0718                     	;# 
  4076  0719                     	;# 
  4077  071A                     	;# 
  4078  071B                     	;# 
  4079  071C                     	;# 
  4080  071D                     	;# 
  4081  071E                     	;# 
  4082  0796                     	;# 
  4083  0797                     	;# 
  4084  0798                     	;# 
  4085  0799                     	;# 
  4086  079A                     	;# 
  4087  079B                     	;# 
  4088  079C                     	;# 
  4089  079D                     	;# 
  4090  080C                     	;# 
  4091  080D                     	;# 
  4092  080E                     	;# 
  4093  080F                     	;# 
  4094  0810                     	;# 
  4095  0811                     	;# 
  4096  0813                     	;# 
  4097  0814                     	;# 
  4098  081A                     	;# 
  4099  081A                     	;# 
  4100  081B                     	;# 
  4101  081C                     	;# 
  4102  081C                     	;# 
  4103  081D                     	;# 
  4104  081E                     	;# 
  4105  081F                     	;# 
  4106  088C                     	;# 
  4107  088D                     	;# 
  4108  088E                     	;# 
  4109  088F                     	;# 
  4110  0890                     	;# 
  4111  0891                     	;# 
  4112  0892                     	;# 
  4113  0893                     	;# 
  4114  0895                     	;# 
  4115  0896                     	;# 
  4116  0897                     	;# 
  4117  0898                     	;# 
  4118  0899                     	;# 
  4119  089A                     	;# 
  4120  089B                     	;# 
  4121  090C                     	;# 
  4122  090E                     	;# 
  4123  090F                     	;# 
  4124  091F                     	;# 
  4125  098F                     	;# 
  4126  098F                     	;# 
  4127  0990                     	;# 
  4128  0991                     	;# 
  4129  0992                     	;# 
  4130  0993                     	;# 
  4131  0994                     	;# 
  4132  0995                     	;# 
  4133  0996                     	;# 
  4134  0997                     	;# 
  4135  1E0F                     	;# 
  4136  1E10                     	;# 
  4137  1E11                     	;# 
  4138  1E12                     	;# 
  4139  1E13                     	;# 
  4140  1E14                     	;# 
  4141  1E15                     	;# 
  4142  1E16                     	;# 
  4143  1E17                     	;# 
  4144  1E18                     	;# 
  4145  1E19                     	;# 
  4146  1E1A                     	;# 
  4147  1E1B                     	;# 
  4148  1E1C                     	;# 
  4149  1E1D                     	;# 
  4150  1E1E                     	;# 
  4151  1E1F                     	;# 
  4152  1E20                     	;# 
  4153  1E21                     	;# 
  4154  1E22                     	;# 
  4155  1E23                     	;# 
  4156  1E24                     	;# 
  4157  1E25                     	;# 
  4158  1E26                     	;# 
  4159  1E27                     	;# 
  4160  1E28                     	;# 
  4161  1E29                     	;# 
  4162  1E2A                     	;# 
  4163  1E2B                     	;# 
  4164  1E2C                     	;# 
  4165  1E2D                     	;# 
  4166  1E2E                     	;# 
  4167  1E2F                     	;# 
  4168  1E30                     	;# 
  4169  1E31                     	;# 
  4170  1E32                     	;# 
  4171  1E33                     	;# 
  4172  1E34                     	;# 
  4173  1E35                     	;# 
  4174  1E36                     	;# 
  4175  1E37                     	;# 
  4176  1E8F                     	;# 
  4177  1E90                     	;# 
  4178  1E91                     	;# 
  4179  1E92                     	;# 
  4180  1E93                     	;# 
  4181  1E94                     	;# 
  4182  1E95                     	;# 
  4183  1E96                     	;# 
  4184  1E97                     	;# 
  4185  1E9C                     	;# 
  4186  1E9D                     	;# 
  4187  1E9E                     	;# 
  4188  1EA1                     	;# 
  4189  1EA2                     	;# 
  4190  1EA3                     	;# 
  4191  1EA4                     	;# 
  4192  1EA9                     	;# 
  4193  1EAA                     	;# 
  4194  1EB1                     	;# 
  4195  1EB2                     	;# 
  4196  1EB8                     	;# 
  4197  1EB9                     	;# 
  4198  1EBA                     	;# 
  4199  1EBB                     	;# 
  4200  1EBC                     	;# 
  4201  1EBD                     	;# 
  4202  1EBE                     	;# 
  4203  1EC3                     	;# 
  4204  1EC5                     	;# 
  4205  1EC6                     	;# 
  4206  1EC7                     	;# 
  4207  1EC8                     	;# 
  4208  1EC9                     	;# 
  4209  1ECA                     	;# 
  4210  1ECB                     	;# 
  4211  1ECB                     	;# 
  4212  1ECB                     	;# 
  4213  1ECC                     	;# 
  4214  1ECC                     	;# 
  4215  1ECC                     	;# 
  4216  1F10                     	;# 
  4217  1F11                     	;# 
  4218  1F12                     	;# 
  4219  1F14                     	;# 
  4220  1F15                     	;# 
  4221  1F1C                     	;# 
  4222  1F1D                     	;# 
  4223  1F1E                     	;# 
  4224  1F1F                     	;# 
  4225  1F20                     	;# 
  4226  1F21                     	;# 
  4227  1F22                     	;# 
  4228  1F23                     	;# 
  4229  1F24                     	;# 
  4230  1F25                     	;# 
  4231  1F26                     	;# 
  4232  1F27                     	;# 
  4233  1F38                     	;# 
  4234  1F39                     	;# 
  4235  1F3A                     	;# 
  4236  1F3B                     	;# 
  4237  1F3C                     	;# 
  4238  1F3D                     	;# 
  4239  1F3E                     	;# 
  4240  1F3F                     	;# 
  4241  1F43                     	;# 
  4242  1F44                     	;# 
  4243  1F45                     	;# 
  4244  1F46                     	;# 
  4245  1F47                     	;# 
  4246  1F48                     	;# 
  4247  1F49                     	;# 
  4248  1F4A                     	;# 
  4249  1F4E                     	;# 
  4250  1F4F                     	;# 
  4251  1F50                     	;# 
  4252  1F51                     	;# 
  4253  1F52                     	;# 
  4254  1F53                     	;# 
  4255  1F54                     	;# 
  4256  1F55                     	;# 
  4257  1FE4                     	;# 
  4258  1FE5                     	;# 
  4259  1FE6                     	;# 
  4260  1FE7                     	;# 
  4261  1FE8                     	;# 
  4262  1FE8                     	;# 
  4263  1FE9                     	;# 
  4264  1FEA                     	;# 
  4265  1FEB                     	;# 
  4266  1FED                     	;# 
  4267  1FEE                     	;# 
  4268  1FEF                     	;# 
  4269  0000                     	;# 
  4270  0001                     	;# 
  4271  0002                     	;# 
  4272  0003                     	;# 
  4273  0004                     	;# 
  4274  0005                     	;# 
  4275  0006                     	;# 
  4276  0007                     	;# 
  4277  0008                     	;# 
  4278  0009                     	;# 
  4279  000A                     	;# 
  4280  000B                     	;# 
  4281  000C                     	;# 
  4282  000D                     	;# 
  4283  000E                     	;# 
  4284  0012                     	;# 
  4285  0013                     	;# 
  4286  0014                     	;# 
  4287  0018                     	;# 
  4288  0019                     	;# 
  4289  001A                     	;# 
  4290  008C                     	;# 
  4291  008C                     	;# 
  4292  008D                     	;# 
  4293  008E                     	;# 
  4294  008E                     	;# 
  4295  008F                     	;# 
  4296  0090                     	;# 
  4297  0090                     	;# 
  4298  0091                     	;# 
  4299  0092                     	;# 
  4300  0092                     	;# 
  4301  0093                     	;# 
  4302  0094                     	;# 
  4303  0094                     	;# 
  4304  0095                     	;# 
  4305  0096                     	;# 
  4306  0096                     	;# 
  4307  0097                     	;# 
  4308  0098                     	;# 
  4309  0099                     	;# 
  4310  009A                     	;# 
  4311  009B                     	;# 
  4312  009B                     	;# 
  4313  009C                     	;# 
  4314  009D                     	;# 
  4315  009D                     	;# 
  4316  009E                     	;# 
  4317  009F                     	;# 
  4318  010C                     	;# 
  4319  010C                     	;# 
  4320  010D                     	;# 
  4321  010E                     	;# 
  4322  010F                     	;# 
  4323  010F                     	;# 
  4324  0110                     	;# 
  4325  0111                     	;# 
  4326  0112                     	;# 
  4327  0113                     	;# 
  4328  0114                     	;# 
  4329  0115                     	;# 
  4330  0116                     	;# 
  4331  0117                     	;# 
  4332  0118                     	;# 
  4333  0119                     	;# 
  4334  0119                     	;# 
  4335  0119                     	;# 
  4336  011A                     	;# 
  4337  011A                     	;# 
  4338  011A                     	;# 
  4339  011B                     	;# 
  4340  011B                     	;# 
  4341  011B                     	;# 
  4342  011B                     	;# 
  4343  011B                     	;# 
  4344  011C                     	;# 
  4345  011C                     	;# 
  4346  011C                     	;# 
  4347  011D                     	;# 
  4348  011D                     	;# 
  4349  011D                     	;# 
  4350  011E                     	;# 
  4351  011E                     	;# 
  4352  011E                     	;# 
  4353  011F                     	;# 
  4354  011F                     	;# 
  4355  011F                     	;# 
  4356  011F                     	;# 
  4357  011F                     	;# 
  4358  018C                     	;# 
  4359  018D                     	;# 
  4360  018E                     	;# 
  4361  018F                     	;# 
  4362  0190                     	;# 
  4363  0191                     	;# 
  4364  0192                     	;# 
  4365  0196                     	;# 
  4366  0197                     	;# 
  4367  0198                     	;# 
  4368  0199                     	;# 
  4369  019A                     	;# 
  4370  019B                     	;# 
  4371  019C                     	;# 
  4372  020C                     	;# 
  4373  020D                     	;# 
  4374  020E                     	;# 
  4375  020E                     	;# 
  4376  020F                     	;# 
  4377  020F                     	;# 
  4378  0210                     	;# 
  4379  0210                     	;# 
  4380  0211                     	;# 
  4381  0211                     	;# 
  4382  0212                     	;# 
  4383  0213                     	;# 
  4384  0214                     	;# 
  4385  0214                     	;# 
  4386  0215                     	;# 
  4387  0215                     	;# 
  4388  0216                     	;# 
  4389  0216                     	;# 
  4390  0217                     	;# 
  4391  0217                     	;# 
  4392  0218                     	;# 
  4393  0219                     	;# 
  4394  021A                     	;# 
  4395  021A                     	;# 
  4396  021B                     	;# 
  4397  021B                     	;# 
  4398  021C                     	;# 
  4399  021C                     	;# 
  4400  021D                     	;# 
  4401  021D                     	;# 
  4402  021E                     	;# 
  4403  021F                     	;# 
  4404  028C                     	;# 
  4405  028C                     	;# 
  4406  028D                     	;# 
  4407  028D                     	;# 
  4408  028E                     	;# 
  4409  028F                     	;# 
  4410  0290                     	;# 
  4411  0291                     	;# 
  4412  0292                     	;# 
  4413  0292                     	;# 
  4414  0293                     	;# 
  4415  0293                     	;# 
  4416  0294                     	;# 
  4417  0295                     	;# 
  4418  0296                     	;# 
  4419  0297                     	;# 
  4420  0298                     	;# 
  4421  0298                     	;# 
  4422  0299                     	;# 
  4423  0299                     	;# 
  4424  029A                     	;# 
  4425  029B                     	;# 
  4426  029C                     	;# 
  4427  029D                     	;# 
  4428  029F                     	;# 
  4429  030C                     	;# 
  4430  030C                     	;# 
  4431  030D                     	;# 
  4432  030E                     	;# 
  4433  030F                     	;# 
  4434  0310                     	;# 
  4435  0310                     	;# 
  4436  0311                     	;# 
  4437  0312                     	;# 
  4438  0313                     	;# 
  4439  0314                     	;# 
  4440  0314                     	;# 
  4441  0315                     	;# 
  4442  0316                     	;# 
  4443  0317                     	;# 
  4444  0318                     	;# 
  4445  0318                     	;# 
  4446  0319                     	;# 
  4447  031A                     	;# 
  4448  031B                     	;# 
  4449  038C                     	;# 
  4450  038C                     	;# 
  4451  038D                     	;# 
  4452  038E                     	;# 
  4453  0390                     	;# 
  4454  0390                     	;# 
  4455  0391                     	;# 
  4456  0392                     	;# 
  4457  048C                     	;# 
  4458  048C                     	;# 
  4459  048D                     	;# 
  4460  048E                     	;# 
  4461  048F                     	;# 
  4462  048F                     	;# 
  4463  0490                     	;# 
  4464  0491                     	;# 
  4465  0492                     	;# 
  4466  0492                     	;# 
  4467  0493                     	;# 
  4468  0494                     	;# 
  4469  0495                     	;# 
  4470  0495                     	;# 
  4471  0496                     	;# 
  4472  0497                     	;# 
  4473  0498                     	;# 
  4474  0499                     	;# 
  4475  049A                     	;# 
  4476  049B                     	;# 
  4477  049C                     	;# 
  4478  049D                     	;# 
  4479  058C                     	;# 
  4480  058C                     	;# 
  4481  058D                     	;# 
  4482  058E                     	;# 
  4483  058F                     	;# 
  4484  058F                     	;# 
  4485  0590                     	;# 
  4486  0591                     	;# 
  4487  0592                     	;# 
  4488  0593                     	;# 
  4489  059C                     	;# 
  4490  059C                     	;# 
  4491  059D                     	;# 
  4492  059D                     	;# 
  4493  059E                     	;# 
  4494  059F                     	;# 
  4495  060C                     	;# 
  4496  060C                     	;# 
  4497  060D                     	;# 
  4498  060D                     	;# 
  4499  060E                     	;# 
  4500  060F                     	;# 
  4501  0610                     	;# 
  4502  0611                     	;# 
  4503  0612                     	;# 
  4504  0613                     	;# 
  4505  0614                     	;# 
  4506  0616                     	;# 
  4507  0616                     	;# 
  4508  0617                     	;# 
  4509  0617                     	;# 
  4510  0618                     	;# 
  4511  0619                     	;# 
  4512  061A                     	;# 
  4513  061B                     	;# 
  4514  061C                     	;# 
  4515  061D                     	;# 
  4516  061E                     	;# 
  4517  070C                     	;# 
  4518  070D                     	;# 
  4519  070E                     	;# 
  4520  070F                     	;# 
  4521  0710                     	;# 
  4522  0711                     	;# 
  4523  0712                     	;# 
  4524  0713                     	;# 
  4525  0714                     	;# 
  4526  0716                     	;# 
  4527  0717                     	;# 
  4528  0718                     	;# 
  4529  0719                     	;# 
  4530  071A                     	;# 
  4531  071B                     	;# 
  4532  071C                     	;# 
  4533  071D                     	;# 
  4534  071E                     	;# 
  4535  0796                     	;# 
  4536  0797                     	;# 
  4537  0798                     	;# 
  4538  0799                     	;# 
  4539  079A                     	;# 
  4540  079B                     	;# 
  4541  079C                     	;# 
  4542  079D                     	;# 
  4543  080C                     	;# 
  4544  080D                     	;# 
  4545  080E                     	;# 
  4546  080F                     	;# 
  4547  0810                     	;# 
  4548  0811                     	;# 
  4549  0813                     	;# 
  4550  0814                     	;# 
  4551  081A                     	;# 
  4552  081A                     	;# 
  4553  081B                     	;# 
  4554  081C                     	;# 
  4555  081C                     	;# 
  4556  081D                     	;# 
  4557  081E                     	;# 
  4558  081F                     	;# 
  4559  088C                     	;# 
  4560  088D                     	;# 
  4561  088E                     	;# 
  4562  088F                     	;# 
  4563  0890                     	;# 
  4564  0891                     	;# 
  4565  0892                     	;# 
  4566  0893                     	;# 
  4567  0895                     	;# 
  4568  0896                     	;# 
  4569  0897                     	;# 
  4570  0898                     	;# 
  4571  0899                     	;# 
  4572  089A                     	;# 
  4573  089B                     	;# 
  4574  090C                     	;# 
  4575  090E                     	;# 
  4576  090F                     	;# 
  4577  091F                     	;# 
  4578  098F                     	;# 
  4579  098F                     	;# 
  4580  0990                     	;# 
  4581  0991                     	;# 
  4582  0992                     	;# 
  4583  0993                     	;# 
  4584  0994                     	;# 
  4585  0995                     	;# 
  4586  0996                     	;# 
  4587  0997                     	;# 
  4588  1E0F                     	;# 
  4589  1E10                     	;# 
  4590  1E11                     	;# 
  4591  1E12                     	;# 
  4592  1E13                     	;# 
  4593  1E14                     	;# 
  4594  1E15                     	;# 
  4595  1E16                     	;# 
  4596  1E17                     	;# 
  4597  1E18                     	;# 
  4598  1E19                     	;# 
  4599  1E1A                     	;# 
  4600  1E1B                     	;# 
  4601  1E1C                     	;# 
  4602  1E1D                     	;# 
  4603  1E1E                     	;# 
  4604  1E1F                     	;# 
  4605  1E20                     	;# 
  4606  1E21                     	;# 
  4607  1E22                     	;# 
  4608  1E23                     	;# 
  4609  1E24                     	;# 
  4610  1E25                     	;# 
  4611  1E26                     	;# 
  4612  1E27                     	;# 
  4613  1E28                     	;# 
  4614  1E29                     	;# 
  4615  1E2A                     	;# 
  4616  1E2B                     	;# 
  4617  1E2C                     	;# 
  4618  1E2D                     	;# 
  4619  1E2E                     	;# 
  4620  1E2F                     	;# 
  4621  1E30                     	;# 
  4622  1E31                     	;# 
  4623  1E32                     	;# 
  4624  1E33                     	;# 
  4625  1E34                     	;# 
  4626  1E35                     	;# 
  4627  1E36                     	;# 
  4628  1E37                     	;# 
  4629  1E8F                     	;# 
  4630  1E90                     	;# 
  4631  1E91                     	;# 
  4632  1E92                     	;# 
  4633  1E93                     	;# 
  4634  1E94                     	;# 
  4635  1E95                     	;# 
  4636  1E96                     	;# 
  4637  1E97                     	;# 
  4638  1E9C                     	;# 
  4639  1E9D                     	;# 
  4640  1E9E                     	;# 
  4641  1EA1                     	;# 
  4642  1EA2                     	;# 
  4643  1EA3                     	;# 
  4644  1EA4                     	;# 
  4645  1EA9                     	;# 
  4646  1EAA                     	;# 
  4647  1EB1                     	;# 
  4648  1EB2                     	;# 
  4649  1EB8                     	;# 
  4650  1EB9                     	;# 
  4651  1EBA                     	;# 
  4652  1EBB                     	;# 
  4653  1EBC                     	;# 
  4654  1EBD                     	;# 
  4655  1EBE                     	;# 
  4656  1EC3                     	;# 
  4657  1EC5                     	;# 
  4658  1EC6                     	;# 
  4659  1EC7                     	;# 
  4660  1EC8                     	;# 
  4661  1EC9                     	;# 
  4662  1ECA                     	;# 
  4663  1ECB                     	;# 
  4664  1ECB                     	;# 
  4665  1ECB                     	;# 
  4666  1ECC                     	;# 
  4667  1ECC                     	;# 
  4668  1ECC                     	;# 
  4669  1F10                     	;# 
  4670  1F11                     	;# 
  4671  1F12                     	;# 
  4672  1F14                     	;# 
  4673  1F15                     	;# 
  4674  1F1C                     	;# 
  4675  1F1D                     	;# 
  4676  1F1E                     	;# 
  4677  1F1F                     	;# 
  4678  1F20                     	;# 
  4679  1F21                     	;# 
  4680  1F22                     	;# 
  4681  1F23                     	;# 
  4682  1F24                     	;# 
  4683  1F25                     	;# 
  4684  1F26                     	;# 
  4685  1F27                     	;# 
  4686  1F38                     	;# 
  4687  1F39                     	;# 
  4688  1F3A                     	;# 
  4689  1F3B                     	;# 
  4690  1F3C                     	;# 
  4691  1F3D                     	;# 
  4692  1F3E                     	;# 
  4693  1F3F                     	;# 
  4694  1F43                     	;# 
  4695  1F44                     	;# 
  4696  1F45                     	;# 
  4697  1F46                     	;# 
  4698  1F47                     	;# 
  4699  1F48                     	;# 
  4700  1F49                     	;# 
  4701  1F4A                     	;# 
  4702  1F4E                     	;# 
  4703  1F4F                     	;# 
  4704  1F50                     	;# 
  4705  1F51                     	;# 
  4706  1F52                     	;# 
  4707  1F53                     	;# 
  4708  1F54                     	;# 
  4709  1F55                     	;# 
  4710  1FE4                     	;# 
  4711  1FE5                     	;# 
  4712  1FE6                     	;# 
  4713  1FE7                     	;# 
  4714  1FE8                     	;# 
  4715  1FE8                     	;# 
  4716  1FE9                     	;# 
  4717  1FEA                     	;# 
  4718  1FEB                     	;# 
  4719  1FED                     	;# 
  4720  1FEE                     	;# 
  4721  1FEF                     	;# 
  4722  0000                     	;# 
  4723  0001                     	;# 
  4724  0002                     	;# 
  4725  0003                     	;# 
  4726  0004                     	;# 
  4727  0005                     	;# 
  4728  0006                     	;# 
  4729  0007                     	;# 
  4730  0008                     	;# 
  4731  0009                     	;# 
  4732  000A                     	;# 
  4733  000B                     	;# 
  4734  000C                     	;# 
  4735  000D                     	;# 
  4736  000E                     	;# 
  4737  0012                     	;# 
  4738  0013                     	;# 
  4739  0014                     	;# 
  4740  0018                     	;# 
  4741  0019                     	;# 
  4742  001A                     	;# 
  4743  008C                     	;# 
  4744  008C                     	;# 
  4745  008D                     	;# 
  4746  008E                     	;# 
  4747  008E                     	;# 
  4748  008F                     	;# 
  4749  0090                     	;# 
  4750  0090                     	;# 
  4751  0091                     	;# 
  4752  0092                     	;# 
  4753  0092                     	;# 
  4754  0093                     	;# 
  4755  0094                     	;# 
  4756  0094                     	;# 
  4757  0095                     	;# 
  4758  0096                     	;# 
  4759  0096                     	;# 
  4760  0097                     	;# 
  4761  0098                     	;# 
  4762  0099                     	;# 
  4763  009A                     	;# 
  4764  009B                     	;# 
  4765  009B                     	;# 
  4766  009C                     	;# 
  4767  009D                     	;# 
  4768  009D                     	;# 
  4769  009E                     	;# 
  4770  009F                     	;# 
  4771  010C                     	;# 
  4772  010C                     	;# 
  4773  010D                     	;# 
  4774  010E                     	;# 
  4775  010F                     	;# 
  4776  010F                     	;# 
  4777  0110                     	;# 
  4778  0111                     	;# 
  4779  0112                     	;# 
  4780  0113                     	;# 
  4781  0114                     	;# 
  4782  0115                     	;# 
  4783  0116                     	;# 
  4784  0117                     	;# 
  4785  0118                     	;# 
  4786  0119                     	;# 
  4787  0119                     	;# 
  4788  0119                     	;# 
  4789  011A                     	;# 
  4790  011A                     	;# 
  4791  011A                     	;# 
  4792  011B                     	;# 
  4793  011B                     	;# 
  4794  011B                     	;# 
  4795  011B                     	;# 
  4796  011B                     	;# 
  4797  011C                     	;# 
  4798  011C                     	;# 
  4799  011C                     	;# 
  4800  011D                     	;# 
  4801  011D                     	;# 
  4802  011D                     	;# 
  4803  011E                     	;# 
  4804  011E                     	;# 
  4805  011E                     	;# 
  4806  011F                     	;# 
  4807  011F                     	;# 
  4808  011F                     	;# 
  4809  011F                     	;# 
  4810  011F                     	;# 
  4811  018C                     	;# 
  4812  018D                     	;# 
  4813  018E                     	;# 
  4814  018F                     	;# 
  4815  0190                     	;# 
  4816  0191                     	;# 
  4817  0192                     	;# 
  4818  0196                     	;# 
  4819  0197                     	;# 
  4820  0198                     	;# 
  4821  0199                     	;# 
  4822  019A                     	;# 
  4823  019B                     	;# 
  4824  019C                     	;# 
  4825  020C                     	;# 
  4826  020D                     	;# 
  4827  020E                     	;# 
  4828  020E                     	;# 
  4829  020F                     	;# 
  4830  020F                     	;# 
  4831  0210                     	;# 
  4832  0210                     	;# 
  4833  0211                     	;# 
  4834  0211                     	;# 
  4835  0212                     	;# 
  4836  0213                     	;# 
  4837  0214                     	;# 
  4838  0214                     	;# 
  4839  0215                     	;# 
  4840  0215                     	;# 
  4841  0216                     	;# 
  4842  0216                     	;# 
  4843  0217                     	;# 
  4844  0217                     	;# 
  4845  0218                     	;# 
  4846  0219                     	;# 
  4847  021A                     	;# 
  4848  021A                     	;# 
  4849  021B                     	;# 
  4850  021B                     	;# 
  4851  021C                     	;# 
  4852  021C                     	;# 
  4853  021D                     	;# 
  4854  021D                     	;# 
  4855  021E                     	;# 
  4856  021F                     	;# 
  4857  028C                     	;# 
  4858  028C                     	;# 
  4859  028D                     	;# 
  4860  028D                     	;# 
  4861  028E                     	;# 
  4862  028F                     	;# 
  4863  0290                     	;# 
  4864  0291                     	;# 
  4865  0292                     	;# 
  4866  0292                     	;# 
  4867  0293                     	;# 
  4868  0293                     	;# 
  4869  0294                     	;# 
  4870  0295                     	;# 
  4871  0296                     	;# 
  4872  0297                     	;# 
  4873  0298                     	;# 
  4874  0298                     	;# 
  4875  0299                     	;# 
  4876  0299                     	;# 
  4877  029A                     	;# 
  4878  029B                     	;# 
  4879  029C                     	;# 
  4880  029D                     	;# 
  4881  029F                     	;# 
  4882  030C                     	;# 
  4883  030C                     	;# 
  4884  030D                     	;# 
  4885  030E                     	;# 
  4886  030F                     	;# 
  4887  0310                     	;# 
  4888  0310                     	;# 
  4889  0311                     	;# 
  4890  0312                     	;# 
  4891  0313                     	;# 
  4892  0314                     	;# 
  4893  0314                     	;# 
  4894  0315                     	;# 
  4895  0316                     	;# 
  4896  0317                     	;# 
  4897  0318                     	;# 
  4898  0318                     	;# 
  4899  0319                     	;# 
  4900  031A                     	;# 
  4901  031B                     	;# 
  4902  038C                     	;# 
  4903  038C                     	;# 
  4904  038D                     	;# 
  4905  038E                     	;# 
  4906  0390                     	;# 
  4907  0390                     	;# 
  4908  0391                     	;# 
  4909  0392                     	;# 
  4910  048C                     	;# 
  4911  048C                     	;# 
  4912  048D                     	;# 
  4913  048E                     	;# 
  4914  048F                     	;# 
  4915  048F                     	;# 
  4916  0490                     	;# 
  4917  0491                     	;# 
  4918  0492                     	;# 
  4919  0492                     	;# 
  4920  0493                     	;# 
  4921  0494                     	;# 
  4922  0495                     	;# 
  4923  0495                     	;# 
  4924  0496                     	;# 
  4925  0497                     	;# 
  4926  0498                     	;# 
  4927  0499                     	;# 
  4928  049A                     	;# 
  4929  049B                     	;# 
  4930  049C                     	;# 
  4931  049D                     	;# 
  4932  058C                     	;# 
  4933  058C                     	;# 
  4934  058D                     	;# 
  4935  058E                     	;# 
  4936  058F                     	;# 
  4937  058F                     	;# 
  4938  0590                     	;# 
  4939  0591                     	;# 
  4940  0592                     	;# 
  4941  0593                     	;# 
  4942  059C                     	;# 
  4943  059C                     	;# 
  4944  059D                     	;# 
  4945  059D                     	;# 
  4946  059E                     	;# 
  4947  059F                     	;# 
  4948  060C                     	;# 
  4949  060C                     	;# 
  4950  060D                     	;# 
  4951  060D                     	;# 
  4952  060E                     	;# 
  4953  060F                     	;# 
  4954  0610                     	;# 
  4955  0611                     	;# 
  4956  0612                     	;# 
  4957  0613                     	;# 
  4958  0614                     	;# 
  4959  0616                     	;# 
  4960  0616                     	;# 
  4961  0617                     	;# 
  4962  0617                     	;# 
  4963  0618                     	;# 
  4964  0619                     	;# 
  4965  061A                     	;# 
  4966  061B                     	;# 
  4967  061C                     	;# 
  4968  061D                     	;# 
  4969  061E                     	;# 
  4970  070C                     	;# 
  4971  070D                     	;# 
  4972  070E                     	;# 
  4973  070F                     	;# 
  4974  0710                     	;# 
  4975  0711                     	;# 
  4976  0712                     	;# 
  4977  0713                     	;# 
  4978  0714                     	;# 
  4979  0716                     	;# 
  4980  0717                     	;# 
  4981  0718                     	;# 
  4982  0719                     	;# 
  4983  071A                     	;# 
  4984  071B                     	;# 
  4985  071C                     	;# 
  4986  071D                     	;# 
  4987  071E                     	;# 
  4988  0796                     	;# 
  4989  0797                     	;# 
  4990  0798                     	;# 
  4991  0799                     	;# 
  4992  079A                     	;# 
  4993  079B                     	;# 
  4994  079C                     	;# 
  4995  079D                     	;# 
  4996  080C                     	;# 
  4997  080D                     	;# 
  4998  080E                     	;# 
  4999  080F                     	;# 
  5000  0810                     	;# 
  5001  0811                     	;# 
  5002  0813                     	;# 
  5003  0814                     	;# 
  5004  081A                     	;# 
  5005  081A                     	;# 
  5006  081B                     	;# 
  5007  081C                     	;# 
  5008  081C                     	;# 
  5009  081D                     	;# 
  5010  081E                     	;# 
  5011  081F                     	;# 
  5012  088C                     	;# 
  5013  088D                     	;# 
  5014  088E                     	;# 
  5015  088F                     	;# 
  5016  0890                     	;# 
  5017  0891                     	;# 
  5018  0892                     	;# 
  5019  0893                     	;# 
  5020  0895                     	;# 
  5021  0896                     	;# 
  5022  0897                     	;# 
  5023  0898                     	;# 
  5024  0899                     	;# 
  5025  089A                     	;# 
  5026  089B                     	;# 
  5027  090C                     	;# 
  5028  090E                     	;# 
  5029  090F                     	;# 
  5030  091F                     	;# 
  5031  098F                     	;# 
  5032  098F                     	;# 
  5033  0990                     	;# 
  5034  0991                     	;# 
  5035  0992                     	;# 
  5036  0993                     	;# 
  5037  0994                     	;# 
  5038  0995                     	;# 
  5039  0996                     	;# 
  5040  0997                     	;# 
  5041  1E0F                     	;# 
  5042  1E10                     	;# 
  5043  1E11                     	;# 
  5044  1E12                     	;# 
  5045  1E13                     	;# 
  5046  1E14                     	;# 
  5047  1E15                     	;# 
  5048  1E16                     	;# 
  5049  1E17                     	;# 
  5050  1E18                     	;# 
  5051  1E19                     	;# 
  5052  1E1A                     	;# 
  5053  1E1B                     	;# 
  5054  1E1C                     	;# 
  5055  1E1D                     	;# 
  5056  1E1E                     	;# 
  5057  1E1F                     	;# 
  5058  1E20                     	;# 
  5059  1E21                     	;# 
  5060  1E22                     	;# 
  5061  1E23                     	;# 
  5062  1E24                     	;# 
  5063  1E25                     	;# 
  5064  1E26                     	;# 
  5065  1E27                     	;# 
  5066  1E28                     	;# 
  5067  1E29                     	;# 
  5068  1E2A                     	;# 
  5069  1E2B                     	;# 
  5070  1E2C                     	;# 
  5071  1E2D                     	;# 
  5072  1E2E                     	;# 
  5073  1E2F                     	;# 
  5074  1E30                     	;# 
  5075  1E31                     	;# 
  5076  1E32                     	;# 
  5077  1E33                     	;# 
  5078  1E34                     	;# 
  5079  1E35                     	;# 
  5080  1E36                     	;# 
  5081  1E37                     	;# 
  5082  1E8F                     	;# 
  5083  1E90                     	;# 
  5084  1E91                     	;# 
  5085  1E92                     	;# 
  5086  1E93                     	;# 
  5087  1E94                     	;# 
  5088  1E95                     	;# 
  5089  1E96                     	;# 
  5090  1E97                     	;# 
  5091  1E9C                     	;# 
  5092  1E9D                     	;# 
  5093  1E9E                     	;# 
  5094  1EA1                     	;# 
  5095  1EA2                     	;# 
  5096  1EA3                     	;# 
  5097  1EA4                     	;# 
  5098  1EA9                     	;# 
  5099  1EAA                     	;# 
  5100  1EB1                     	;# 
  5101  1EB2                     	;# 
  5102  1EB8                     	;# 
  5103  1EB9                     	;# 
  5104  1EBA                     	;# 
  5105  1EBB                     	;# 
  5106  1EBC                     	;# 
  5107  1EBD                     	;# 
  5108  1EBE                     	;# 
  5109  1EC3                     	;# 
  5110  1EC5                     	;# 
  5111  1EC6                     	;# 
  5112  1EC7                     	;# 
  5113  1EC8                     	;# 
  5114  1EC9                     	;# 
  5115  1ECA                     	;# 
  5116  1ECB                     	;# 
  5117  1ECB                     	;# 
  5118  1ECB                     	;# 
  5119  1ECC                     	;# 
  5120  1ECC                     	;# 
  5121  1ECC                     	;# 
  5122  1F10                     	;# 
  5123  1F11                     	;# 
  5124  1F12                     	;# 
  5125  1F14                     	;# 
  5126  1F15                     	;# 
  5127  1F1C                     	;# 
  5128  1F1D                     	;# 
  5129  1F1E                     	;# 
  5130  1F1F                     	;# 
  5131  1F20                     	;# 
  5132  1F21                     	;# 
  5133  1F22                     	;# 
  5134  1F23                     	;# 
  5135  1F24                     	;# 
  5136  1F25                     	;# 
  5137  1F26                     	;# 
  5138  1F27                     	;# 
  5139  1F38                     	;# 
  5140  1F39                     	;# 
  5141  1F3A                     	;# 
  5142  1F3B                     	;# 
  5143  1F3C                     	;# 
  5144  1F3D                     	;# 
  5145  1F3E                     	;# 
  5146  1F3F                     	;# 
  5147  1F43                     	;# 
  5148  1F44                     	;# 
  5149  1F45                     	;# 
  5150  1F46                     	;# 
  5151  1F47                     	;# 
  5152  1F48                     	;# 
  5153  1F49                     	;# 
  5154  1F4A                     	;# 
  5155  1F4E                     	;# 
  5156  1F4F                     	;# 
  5157  1F50                     	;# 
  5158  1F51                     	;# 
  5159  1F52                     	;# 
  5160  1F53                     	;# 
  5161  1F54                     	;# 
  5162  1F55                     	;# 
  5163  1FE4                     	;# 
  5164  1FE5                     	;# 
  5165  1FE6                     	;# 
  5166  1FE7                     	;# 
  5167  1FE8                     	;# 
  5168  1FE8                     	;# 
  5169  1FE9                     	;# 
  5170  1FEA                     	;# 
  5171  1FEB                     	;# 
  5172  1FED                     	;# 
  5173  1FEE                     	;# 
  5174  1FEF                     	;# 
  5175  0000                     	;# 
  5176  0001                     	;# 
  5177  0002                     	;# 
  5178  0003                     	;# 
  5179  0004                     	;# 
  5180  0005                     	;# 
  5181  0006                     	;# 
  5182  0007                     	;# 
  5183  0008                     	;# 
  5184  0009                     	;# 
  5185  000A                     	;# 
  5186  000B                     	;# 
  5187  000C                     	;# 
  5188  000D                     	;# 
  5189  000E                     	;# 
  5190  0012                     	;# 
  5191  0013                     	;# 
  5192  0014                     	;# 
  5193  0018                     	;# 
  5194  0019                     	;# 
  5195  001A                     	;# 
  5196  008C                     	;# 
  5197  008C                     	;# 
  5198  008D                     	;# 
  5199  008E                     	;# 
  5200  008E                     	;# 
  5201  008F                     	;# 
  5202  0090                     	;# 
  5203  0090                     	;# 
  5204  0091                     	;# 
  5205  0092                     	;# 
  5206  0092                     	;# 
  5207  0093                     	;# 
  5208  0094                     	;# 
  5209  0094                     	;# 
  5210  0095                     	;# 
  5211  0096                     	;# 
  5212  0096                     	;# 
  5213  0097                     	;# 
  5214  0098                     	;# 
  5215  0099                     	;# 
  5216  009A                     	;# 
  5217  009B                     	;# 
  5218  009B                     	;# 
  5219  009C                     	;# 
  5220  009D                     	;# 
  5221  009D                     	;# 
  5222  009E                     	;# 
  5223  009F                     	;# 
  5224  010C                     	;# 
  5225  010C                     	;# 
  5226  010D                     	;# 
  5227  010E                     	;# 
  5228  010F                     	;# 
  5229  010F                     	;# 
  5230  0110                     	;# 
  5231  0111                     	;# 
  5232  0112                     	;# 
  5233  0113                     	;# 
  5234  0114                     	;# 
  5235  0115                     	;# 
  5236  0116                     	;# 
  5237  0117                     	;# 
  5238  0118                     	;# 
  5239  0119                     	;# 
  5240  0119                     	;# 
  5241  0119                     	;# 
  5242  011A                     	;# 
  5243  011A                     	;# 
  5244  011A                     	;# 
  5245  011B                     	;# 
  5246  011B                     	;# 
  5247  011B                     	;# 
  5248  011B                     	;# 
  5249  011B                     	;# 
  5250  011C                     	;# 
  5251  011C                     	;# 
  5252  011C                     	;# 
  5253  011D                     	;# 
  5254  011D                     	;# 
  5255  011D                     	;# 
  5256  011E                     	;# 
  5257  011E                     	;# 
  5258  011E                     	;# 
  5259  011F                     	;# 
  5260  011F                     	;# 
  5261  011F                     	;# 
  5262  011F                     	;# 
  5263  011F                     	;# 
  5264  018C                     	;# 
  5265  018D                     	;# 
  5266  018E                     	;# 
  5267  018F                     	;# 
  5268  0190                     	;# 
  5269  0191                     	;# 
  5270  0192                     	;# 
  5271  0196                     	;# 
  5272  0197                     	;# 
  5273  0198                     	;# 
  5274  0199                     	;# 
  5275  019A                     	;# 
  5276  019B                     	;# 
  5277  019C                     	;# 
  5278  020C                     	;# 
  5279  020D                     	;# 
  5280  020E                     	;# 
  5281  020E                     	;# 
  5282  020F                     	;# 
  5283  020F                     	;# 
  5284  0210                     	;# 
  5285  0210                     	;# 
  5286  0211                     	;# 
  5287  0211                     	;# 
  5288  0212                     	;# 
  5289  0213                     	;# 
  5290  0214                     	;# 
  5291  0214                     	;# 
  5292  0215                     	;# 
  5293  0215                     	;# 
  5294  0216                     	;# 
  5295  0216                     	;# 
  5296  0217                     	;# 
  5297  0217                     	;# 
  5298  0218                     	;# 
  5299  0219                     	;# 
  5300  021A                     	;# 
  5301  021A                     	;# 
  5302  021B                     	;# 
  5303  021B                     	;# 
  5304  021C                     	;# 
  5305  021C                     	;# 
  5306  021D                     	;# 
  5307  021D                     	;# 
  5308  021E                     	;# 
  5309  021F                     	;# 
  5310  028C                     	;# 
  5311  028C                     	;# 
  5312  028D                     	;# 
  5313  028D                     	;# 
  5314  028E                     	;# 
  5315  028F                     	;# 
  5316  0290                     	;# 
  5317  0291                     	;# 
  5318  0292                     	;# 
  5319  0292                     	;# 
  5320  0293                     	;# 
  5321  0293                     	;# 
  5322  0294                     	;# 
  5323  0295                     	;# 
  5324  0296                     	;# 
  5325  0297                     	;# 
  5326  0298                     	;# 
  5327  0298                     	;# 
  5328  0299                     	;# 
  5329  0299                     	;# 
  5330  029A                     	;# 
  5331  029B                     	;# 
  5332  029C                     	;# 
  5333  029D                     	;# 
  5334  029F                     	;# 
  5335  030C                     	;# 
  5336  030C                     	;# 
  5337  030D                     	;# 
  5338  030E                     	;# 
  5339  030F                     	;# 
  5340  0310                     	;# 
  5341  0310                     	;# 
  5342  0311                     	;# 
  5343  0312                     	;# 
  5344  0313                     	;# 
  5345  0314                     	;# 
  5346  0314                     	;# 
  5347  0315                     	;# 
  5348  0316                     	;# 
  5349  0317                     	;# 
  5350  0318                     	;# 
  5351  0318                     	;# 
  5352  0319                     	;# 
  5353  031A                     	;# 
  5354  031B                     	;# 
  5355  038C                     	;# 
  5356  038C                     	;# 
  5357  038D                     	;# 
  5358  038E                     	;# 
  5359  0390                     	;# 
  5360  0390                     	;# 
  5361  0391                     	;# 
  5362  0392                     	;# 
  5363  048C                     	;# 
  5364  048C                     	;# 
  5365  048D                     	;# 
  5366  048E                     	;# 
  5367  048F                     	;# 
  5368  048F                     	;# 
  5369  0490                     	;# 
  5370  0491                     	;# 
  5371  0492                     	;# 
  5372  0492                     	;# 
  5373  0493                     	;# 
  5374  0494                     	;# 
  5375  0495                     	;# 
  5376  0495                     	;# 
  5377  0496                     	;# 
  5378  0497                     	;# 
  5379  0498                     	;# 
  5380  0499                     	;# 
  5381  049A                     	;# 
  5382  049B                     	;# 
  5383  049C                     	;# 
  5384  049D                     	;# 
  5385  058C                     	;# 
  5386  058C                     	;# 
  5387  058D                     	;# 
  5388  058E                     	;# 
  5389  058F                     	;# 
  5390  058F                     	;# 
  5391  0590                     	;# 
  5392  0591                     	;# 
  5393  0592                     	;# 
  5394  0593                     	;# 
  5395  059C                     	;# 
  5396  059C                     	;# 
  5397  059D                     	;# 
  5398  059D                     	;# 
  5399  059E                     	;# 
  5400  059F                     	;# 
  5401  060C                     	;# 
  5402  060C                     	;# 
  5403  060D                     	;# 
  5404  060D                     	;# 
  5405  060E                     	;# 
  5406  060F                     	;# 
  5407  0610                     	;# 
  5408  0611                     	;# 
  5409  0612                     	;# 
  5410  0613                     	;# 
  5411  0614                     	;# 
  5412  0616                     	;# 
  5413  0616                     	;# 
  5414  0617                     	;# 
  5415  0617                     	;# 
  5416  0618                     	;# 
  5417  0619                     	;# 
  5418  061A                     	;# 
  5419  061B                     	;# 
  5420  061C                     	;# 
  5421  061D                     	;# 
  5422  061E                     	;# 
  5423  070C                     	;# 
  5424  070D                     	;# 
  5425  070E                     	;# 
  5426  070F                     	;# 
  5427  0710                     	;# 
  5428  0711                     	;# 
  5429  0712                     	;# 
  5430  0713                     	;# 
  5431  0714                     	;# 
  5432  0716                     	;# 
  5433  0717                     	;# 
  5434  0718                     	;# 
  5435  0719                     	;# 
  5436  071A                     	;# 
  5437  071B                     	;# 
  5438  071C                     	;# 
  5439  071D                     	;# 
  5440  071E                     	;# 
  5441  0796                     	;# 
  5442  0797                     	;# 
  5443  0798                     	;# 
  5444  0799                     	;# 
  5445  079A                     	;# 
  5446  079B                     	;# 
  5447  079C                     	;# 
  5448  079D                     	;# 
  5449  080C                     	;# 
  5450  080D                     	;# 
  5451  080E                     	;# 
  5452  080F                     	;# 
  5453  0810                     	;# 
  5454  0811                     	;# 
  5455  0813                     	;# 
  5456  0814                     	;# 
  5457  081A                     	;# 
  5458  081A                     	;# 
  5459  081B                     	;# 
  5460  081C                     	;# 
  5461  081C                     	;# 
  5462  081D                     	;# 
  5463  081E                     	;# 
  5464  081F                     	;# 
  5465  088C                     	;# 
  5466  088D                     	;# 
  5467  088E                     	;# 
  5468  088F                     	;# 
  5469  0890                     	;# 
  5470  0891                     	;# 
  5471  0892                     	;# 
  5472  0893                     	;# 
  5473  0895                     	;# 
  5474  0896                     	;# 
  5475  0897                     	;# 
  5476  0898                     	;# 
  5477  0899                     	;# 
  5478  089A                     	;# 
  5479  089B                     	;# 
  5480  090C                     	;# 
  5481  090E                     	;# 
  5482  090F                     	;# 
  5483  091F                     	;# 
  5484  098F                     	;# 
  5485  098F                     	;# 
  5486  0990                     	;# 
  5487  0991                     	;# 
  5488  0992                     	;# 
  5489  0993                     	;# 
  5490  0994                     	;# 
  5491  0995                     	;# 
  5492  0996                     	;# 
  5493  0997                     	;# 
  5494  1E0F                     	;# 
  5495  1E10                     	;# 
  5496  1E11                     	;# 
  5497  1E12                     	;# 
  5498  1E13                     	;# 
  5499  1E14                     	;# 
  5500  1E15                     	;# 
  5501  1E16                     	;# 
  5502  1E17                     	;# 
  5503  1E18                     	;# 
  5504  1E19                     	;# 
  5505  1E1A                     	;# 
  5506  1E1B                     	;# 
  5507  1E1C                     	;# 
  5508  1E1D                     	;# 
  5509  1E1E                     	;# 
  5510  1E1F                     	;# 
  5511  1E20                     	;# 
  5512  1E21                     	;# 
  5513  1E22                     	;# 
  5514  1E23                     	;# 
  5515  1E24                     	;# 
  5516  1E25                     	;# 
  5517  1E26                     	;# 
  5518  1E27                     	;# 
  5519  1E28                     	;# 
  5520  1E29                     	;# 
  5521  1E2A                     	;# 
  5522  1E2B                     	;# 
  5523  1E2C                     	;# 
  5524  1E2D                     	;# 
  5525  1E2E                     	;# 
  5526  1E2F                     	;# 
  5527  1E30                     	;# 
  5528  1E31                     	;# 
  5529  1E32                     	;# 
  5530  1E33                     	;# 
  5531  1E34                     	;# 
  5532  1E35                     	;# 
  5533  1E36                     	;# 
  5534  1E37                     	;# 
  5535  1E8F                     	;# 
  5536  1E90                     	;# 
  5537  1E91                     	;# 
  5538  1E92                     	;# 
  5539  1E93                     	;# 
  5540  1E94                     	;# 
  5541  1E95                     	;# 
  5542  1E96                     	;# 
  5543  1E97                     	;# 
  5544  1E9C                     	;# 
  5545  1E9D                     	;# 
  5546  1E9E                     	;# 
  5547  1EA1                     	;# 
  5548  1EA2                     	;# 
  5549  1EA3                     	;# 
  5550  1EA4                     	;# 
  5551  1EA9                     	;# 
  5552  1EAA                     	;# 
  5553  1EB1                     	;# 
  5554  1EB2                     	;# 
  5555  1EB8                     	;# 
  5556  1EB9                     	;# 
  5557  1EBA                     	;# 
  5558  1EBB                     	;# 
  5559  1EBC                     	;# 
  5560  1EBD                     	;# 
  5561  1EBE                     	;# 
  5562  1EC3                     	;# 
  5563  1EC5                     	;# 
  5564  1EC6                     	;# 
  5565  1EC7                     	;# 
  5566  1EC8                     	;# 
  5567  1EC9                     	;# 
  5568  1ECA                     	;# 
  5569  1ECB                     	;# 
  5570  1ECB                     	;# 
  5571  1ECB                     	;# 
  5572  1ECC                     	;# 
  5573  1ECC                     	;# 
  5574  1ECC                     	;# 
  5575  1F10                     	;# 
  5576  1F11                     	;# 
  5577  1F12                     	;# 
  5578  1F14                     	;# 
  5579  1F15                     	;# 
  5580  1F1C                     	;# 
  5581  1F1D                     	;# 
  5582  1F1E                     	;# 
  5583  1F1F                     	;# 
  5584  1F20                     	;# 
  5585  1F21                     	;# 
  5586  1F22                     	;# 
  5587  1F23                     	;# 
  5588  1F24                     	;# 
  5589  1F25                     	;# 
  5590  1F26                     	;# 
  5591  1F27                     	;# 
  5592  1F38                     	;# 
  5593  1F39                     	;# 
  5594  1F3A                     	;# 
  5595  1F3B                     	;# 
  5596  1F3C                     	;# 
  5597  1F3D                     	;# 
  5598  1F3E                     	;# 
  5599  1F3F                     	;# 
  5600  1F43                     	;# 
  5601  1F44                     	;# 
  5602  1F45                     	;# 
  5603  1F46                     	;# 
  5604  1F47                     	;# 
  5605  1F48                     	;# 
  5606  1F49                     	;# 
  5607  1F4A                     	;# 
  5608  1F4E                     	;# 
  5609  1F4F                     	;# 
  5610  1F50                     	;# 
  5611  1F51                     	;# 
  5612  1F52                     	;# 
  5613  1F53                     	;# 
  5614  1F54                     	;# 
  5615  1F55                     	;# 
  5616  1FE4                     	;# 
  5617  1FE5                     	;# 
  5618  1FE6                     	;# 
  5619  1FE7                     	;# 
  5620  1FE8                     	;# 
  5621  1FE8                     	;# 
  5622  1FE9                     	;# 
  5623  1FEA                     	;# 
  5624  1FEB                     	;# 
  5625  1FED                     	;# 
  5626  1FEE                     	;# 
  5627  1FEF                     	;# 
  5628  0000                     	;# 
  5629  0001                     	;# 
  5630  0002                     	;# 
  5631  0003                     	;# 
  5632  0004                     	;# 
  5633  0005                     	;# 
  5634  0006                     	;# 
  5635  0007                     	;# 
  5636  0008                     	;# 
  5637  0009                     	;# 
  5638  000A                     	;# 
  5639  000B                     	;# 
  5640  000C                     	;# 
  5641  000D                     	;# 
  5642  000E                     	;# 
  5643  0012                     	;# 
  5644  0013                     	;# 
  5645  0014                     	;# 
  5646  0018                     	;# 
  5647  0019                     	;# 
  5648  001A                     	;# 
  5649  008C                     	;# 
  5650  008C                     	;# 
  5651  008D                     	;# 
  5652  008E                     	;# 
  5653  008E                     	;# 
  5654  008F                     	;# 
  5655  0090                     	;# 
  5656  0090                     	;# 
  5657  0091                     	;# 
  5658  0092                     	;# 
  5659  0092                     	;# 
  5660  0093                     	;# 
  5661  0094                     	;# 
  5662  0094                     	;# 
  5663  0095                     	;# 
  5664  0096                     	;# 
  5665  0096                     	;# 
  5666  0097                     	;# 
  5667  0098                     	;# 
  5668  0099                     	;# 
  5669  009A                     	;# 
  5670  009B                     	;# 
  5671  009B                     	;# 
  5672  009C                     	;# 
  5673  009D                     	;# 
  5674  009D                     	;# 
  5675  009E                     	;# 
  5676  009F                     	;# 
  5677  010C                     	;# 
  5678  010C                     	;# 
  5679  010D                     	;# 
  5680  010E                     	;# 
  5681  010F                     	;# 
  5682  010F                     	;# 
  5683  0110                     	;# 
  5684  0111                     	;# 
  5685  0112                     	;# 
  5686  0113                     	;# 
  5687  0114                     	;# 
  5688  0115                     	;# 
  5689  0116                     	;# 
  5690  0117                     	;# 
  5691  0118                     	;# 
  5692  0119                     	;# 
  5693  0119                     	;# 
  5694  0119                     	;# 
  5695  011A                     	;# 
  5696  011A                     	;# 
  5697  011A                     	;# 
  5698  011B                     	;# 
  5699  011B                     	;# 
  5700  011B                     	;# 
  5701  011B                     	;# 
  5702  011B                     	;# 
  5703  011C                     	;# 
  5704  011C                     	;# 
  5705  011C                     	;# 
  5706  011D                     	;# 
  5707  011D                     	;# 
  5708  011D                     	;# 
  5709  011E                     	;# 
  5710  011E                     	;# 
  5711  011E                     	;# 
  5712  011F                     	;# 
  5713  011F                     	;# 
  5714  011F                     	;# 
  5715  011F                     	;# 
  5716  011F                     	;# 
  5717  018C                     	;# 
  5718  018D                     	;# 
  5719  018E                     	;# 
  5720  018F                     	;# 
  5721  0190                     	;# 
  5722  0191                     	;# 
  5723  0192                     	;# 
  5724  0196                     	;# 
  5725  0197                     	;# 
  5726  0198                     	;# 
  5727  0199                     	;# 
  5728  019A                     	;# 
  5729  019B                     	;# 
  5730  019C                     	;# 
  5731  020C                     	;# 
  5732  020D                     	;# 
  5733  020E                     	;# 
  5734  020E                     	;# 
  5735  020F                     	;# 
  5736  020F                     	;# 
  5737  0210                     	;# 
  5738  0210                     	;# 
  5739  0211                     	;# 
  5740  0211                     	;# 
  5741  0212                     	;# 
  5742  0213                     	;# 
  5743  0214                     	;# 
  5744  0214                     	;# 
  5745  0215                     	;# 
  5746  0215                     	;# 
  5747  0216                     	;# 
  5748  0216                     	;# 
  5749  0217                     	;# 
  5750  0217                     	;# 
  5751  0218                     	;# 
  5752  0219                     	;# 
  5753  021A                     	;# 
  5754  021A                     	;# 
  5755  021B                     	;# 
  5756  021B                     	;# 
  5757  021C                     	;# 
  5758  021C                     	;# 
  5759  021D                     	;# 
  5760  021D                     	;# 
  5761  021E                     	;# 
  5762  021F                     	;# 
  5763  028C                     	;# 
  5764  028C                     	;# 
  5765  028D                     	;# 
  5766  028D                     	;# 
  5767  028E                     	;# 
  5768  028F                     	;# 
  5769  0290                     	;# 
  5770  0291                     	;# 
  5771  0292                     	;# 
  5772  0292                     	;# 
  5773  0293                     	;# 
  5774  0293                     	;# 
  5775  0294                     	;# 
  5776  0295                     	;# 
  5777  0296                     	;# 
  5778  0297                     	;# 
  5779  0298                     	;# 
  5780  0298                     	;# 
  5781  0299                     	;# 
  5782  0299                     	;# 
  5783  029A                     	;# 
  5784  029B                     	;# 
  5785  029C                     	;# 
  5786  029D                     	;# 
  5787  029F                     	;# 
  5788  030C                     	;# 
  5789  030C                     	;# 
  5790  030D                     	;# 
  5791  030E                     	;# 
  5792  030F                     	;# 
  5793  0310                     	;# 
  5794  0310                     	;# 
  5795  0311                     	;# 
  5796  0312                     	;# 
  5797  0313                     	;# 
  5798  0314                     	;# 
  5799  0314                     	;# 
  5800  0315                     	;# 
  5801  0316                     	;# 
  5802  0317                     	;# 
  5803  0318                     	;# 
  5804  0318                     	;# 
  5805  0319                     	;# 
  5806  031A                     	;# 
  5807  031B                     	;# 
  5808  038C                     	;# 
  5809  038C                     	;# 
  5810  038D                     	;# 
  5811  038E                     	;# 
  5812  0390                     	;# 
  5813  0390                     	;# 
  5814  0391                     	;# 
  5815  0392                     	;# 
  5816  048C                     	;# 
  5817  048C                     	;# 
  5818  048D                     	;# 
  5819  048E                     	;# 
  5820  048F                     	;# 
  5821  048F                     	;# 
  5822  0490                     	;# 
  5823  0491                     	;# 
  5824  0492                     	;# 
  5825  0492                     	;# 
  5826  0493                     	;# 
  5827  0494                     	;# 
  5828  0495                     	;# 
  5829  0495                     	;# 
  5830  0496                     	;# 
  5831  0497                     	;# 
  5832  0498                     	;# 
  5833  0499                     	;# 
  5834  049A                     	;# 
  5835  049B                     	;# 
  5836  049C                     	;# 
  5837  049D                     	;# 
  5838  058C                     	;# 
  5839  058C                     	;# 
  5840  058D                     	;# 
  5841  058E                     	;# 
  5842  058F                     	;# 
  5843  058F                     	;# 
  5844  0590                     	;# 
  5845  0591                     	;# 
  5846  0592                     	;# 
  5847  0593                     	;# 
  5848  059C                     	;# 
  5849  059C                     	;# 
  5850  059D                     	;# 
  5851  059D                     	;# 
  5852  059E                     	;# 
  5853  059F                     	;# 
  5854  060C                     	;# 
  5855  060C                     	;# 
  5856  060D                     	;# 
  5857  060D                     	;# 
  5858  060E                     	;# 
  5859  060F                     	;# 
  5860  0610                     	;# 
  5861  0611                     	;# 
  5862  0612                     	;# 
  5863  0613                     	;# 
  5864  0614                     	;# 
  5865  0616                     	;# 
  5866  0616                     	;# 
  5867  0617                     	;# 
  5868  0617                     	;# 
  5869  0618                     	;# 
  5870  0619                     	;# 
  5871  061A                     	;# 
  5872  061B                     	;# 
  5873  061C                     	;# 
  5874  061D                     	;# 
  5875  061E                     	;# 
  5876  070C                     	;# 
  5877  070D                     	;# 
  5878  070E                     	;# 
  5879  070F                     	;# 
  5880  0710                     	;# 
  5881  0711                     	;# 
  5882  0712                     	;# 
  5883  0713                     	;# 
  5884  0714                     	;# 
  5885  0716                     	;# 
  5886  0717                     	;# 
  5887  0718                     	;# 
  5888  0719                     	;# 
  5889  071A                     	;# 
  5890  071B                     	;# 
  5891  071C                     	;# 
  5892  071D                     	;# 
  5893  071E                     	;# 
  5894  0796                     	;# 
  5895  0797                     	;# 
  5896  0798                     	;# 
  5897  0799                     	;# 
  5898  079A                     	;# 
  5899  079B                     	;# 
  5900  079C                     	;# 
  5901  079D                     	;# 
  5902  080C                     	;# 
  5903  080D                     	;# 
  5904  080E                     	;# 
  5905  080F                     	;# 
  5906  0810                     	;# 
  5907  0811                     	;# 
  5908  0813                     	;# 
  5909  0814                     	;# 
  5910  081A                     	;# 
  5911  081A                     	;# 
  5912  081B                     	;# 
  5913  081C                     	;# 
  5914  081C                     	;# 
  5915  081D                     	;# 
  5916  081E                     	;# 
  5917  081F                     	;# 
  5918  088C                     	;# 
  5919  088D                     	;# 
  5920  088E                     	;# 
  5921  088F                     	;# 
  5922  0890                     	;# 
  5923  0891                     	;# 
  5924  0892                     	;# 
  5925  0893                     	;# 
  5926  0895                     	;# 
  5927  0896                     	;# 
  5928  0897                     	;# 
  5929  0898                     	;# 
  5930  0899                     	;# 
  5931  089A                     	;# 
  5932  089B                     	;# 
  5933  090C                     	;# 
  5934  090E                     	;# 
  5935  090F                     	;# 
  5936  091F                     	;# 
  5937  098F                     	;# 
  5938  098F                     	;# 
  5939  0990                     	;# 
  5940  0991                     	;# 
  5941  0992                     	;# 
  5942  0993                     	;# 
  5943  0994                     	;# 
  5944  0995                     	;# 
  5945  0996                     	;# 
  5946  0997                     	;# 
  5947  1E0F                     	;# 
  5948  1E10                     	;# 
  5949  1E11                     	;# 
  5950  1E12                     	;# 
  5951  1E13                     	;# 
  5952  1E14                     	;# 
  5953  1E15                     	;# 
  5954  1E16                     	;# 
  5955  1E17                     	;# 
  5956  1E18                     	;# 
  5957  1E19                     	;# 
  5958  1E1A                     	;# 
  5959  1E1B                     	;# 
  5960  1E1C                     	;# 
  5961  1E1D                     	;# 
  5962  1E1E                     	;# 
  5963  1E1F                     	;# 
  5964  1E20                     	;# 
  5965  1E21                     	;# 
  5966  1E22                     	;# 
  5967  1E23                     	;# 
  5968  1E24                     	;# 
  5969  1E25                     	;# 
  5970  1E26                     	;# 
  5971  1E27                     	;# 
  5972  1E28                     	;# 
  5973  1E29                     	;# 
  5974  1E2A                     	;# 
  5975  1E2B                     	;# 
  5976  1E2C                     	;# 
  5977  1E2D                     	;# 
  5978  1E2E                     	;# 
  5979  1E2F                     	;# 
  5980  1E30                     	;# 
  5981  1E31                     	;# 
  5982  1E32                     	;# 
  5983  1E33                     	;# 
  5984  1E34                     	;# 
  5985  1E35                     	;# 
  5986  1E36                     	;# 
  5987  1E37                     	;# 
  5988  1E8F                     	;# 
  5989  1E90                     	;# 
  5990  1E91                     	;# 
  5991  1E92                     	;# 
  5992  1E93                     	;# 
  5993  1E94                     	;# 
  5994  1E95                     	;# 
  5995  1E96                     	;# 
  5996  1E97                     	;# 
  5997  1E9C                     	;# 
  5998  1E9D                     	;# 
  5999  1E9E                     	;# 
  6000  1EA1                     	;# 
  6001  1EA2                     	;# 
  6002  1EA3                     	;# 
  6003  1EA4                     	;# 
  6004  1EA9                     	;# 
  6005  1EAA                     	;# 
  6006  1EB1                     	;# 
  6007  1EB2                     	;# 
  6008  1EB8                     	;# 
  6009  1EB9                     	;# 
  6010  1EBA                     	;# 
  6011  1EBB                     	;# 
  6012  1EBC                     	;# 
  6013  1EBD                     	;# 
  6014  1EBE                     	;# 
  6015  1EC3                     	;# 
  6016  1EC5                     	;# 
  6017  1EC6                     	;# 
  6018  1EC7                     	;# 
  6019  1EC8                     	;# 
  6020  1EC9                     	;# 
  6021  1ECA                     	;# 
  6022  1ECB                     	;# 
  6023  1ECB                     	;# 
  6024  1ECB                     	;# 
  6025  1ECC                     	;# 
  6026  1ECC                     	;# 
  6027  1ECC                     	;# 
  6028  1F10                     	;# 
  6029  1F11                     	;# 
  6030  1F12                     	;# 
  6031  1F14                     	;# 
  6032  1F15                     	;# 
  6033  1F1C                     	;# 
  6034  1F1D                     	;# 
  6035  1F1E                     	;# 
  6036  1F1F                     	;# 
  6037  1F20                     	;# 
  6038  1F21                     	;# 
  6039  1F22                     	;# 
  6040  1F23                     	;# 
  6041  1F24                     	;# 
  6042  1F25                     	;# 
  6043  1F26                     	;# 
  6044  1F27                     	;# 
  6045  1F38                     	;# 
  6046  1F39                     	;# 
  6047  1F3A                     	;# 
  6048  1F3B                     	;# 
  6049  1F3C                     	;# 
  6050  1F3D                     	;# 
  6051  1F3E                     	;# 
  6052  1F3F                     	;# 
  6053  1F43                     	;# 
  6054  1F44                     	;# 
  6055  1F45                     	;# 
  6056  1F46                     	;# 
  6057  1F47                     	;# 
  6058  1F48                     	;# 
  6059  1F49                     	;# 
  6060  1F4A                     	;# 
  6061  1F4E                     	;# 
  6062  1F4F                     	;# 
  6063  1F50                     	;# 
  6064  1F51                     	;# 
  6065  1F52                     	;# 
  6066  1F53                     	;# 
  6067  1F54                     	;# 
  6068  1F55                     	;# 
  6069  1FE4                     	;# 
  6070  1FE5                     	;# 
  6071  1FE6                     	;# 
  6072  1FE7                     	;# 
  6073  1FE8                     	;# 
  6074  1FE8                     	;# 
  6075  1FE9                     	;# 
  6076  1FEA                     	;# 
  6077  1FEB                     	;# 
  6078  1FED                     	;# 
  6079  1FEE                     	;# 
  6080  1FEF                     	;# 
  6081  0000                     	;# 
  6082  0001                     	;# 
  6083  0002                     	;# 
  6084  0003                     	;# 
  6085  0004                     	;# 
  6086  0005                     	;# 
  6087  0006                     	;# 
  6088  0007                     	;# 
  6089  0008                     	;# 
  6090  0009                     	;# 
  6091  000A                     	;# 
  6092  000B                     	;# 
  6093  000C                     	;# 
  6094  000D                     	;# 
  6095  000E                     	;# 
  6096  0012                     	;# 
  6097  0013                     	;# 
  6098  0014                     	;# 
  6099  0018                     	;# 
  6100  0019                     	;# 
  6101  001A                     	;# 
  6102  008C                     	;# 
  6103  008C                     	;# 
  6104  008D                     	;# 
  6105  008E                     	;# 
  6106  008E                     	;# 
  6107  008F                     	;# 
  6108  0090                     	;# 
  6109  0090                     	;# 
  6110  0091                     	;# 
  6111  0092                     	;# 
  6112  0092                     	;# 
  6113  0093                     	;# 
  6114  0094                     	;# 
  6115  0094                     	;# 
  6116  0095                     	;# 
  6117  0096                     	;# 
  6118  0096                     	;# 
  6119  0097                     	;# 
  6120  0098                     	;# 
  6121  0099                     	;# 
  6122  009A                     	;# 
  6123  009B                     	;# 
  6124  009B                     	;# 
  6125  009C                     	;# 
  6126  009D                     	;# 
  6127  009D                     	;# 
  6128  009E                     	;# 
  6129  009F                     	;# 
  6130  010C                     	;# 
  6131  010C                     	;# 
  6132  010D                     	;# 
  6133  010E                     	;# 
  6134  010F                     	;# 
  6135  010F                     	;# 
  6136  0110                     	;# 
  6137  0111                     	;# 
  6138  0112                     	;# 
  6139  0113                     	;# 
  6140  0114                     	;# 
  6141  0115                     	;# 
  6142  0116                     	;# 
  6143  0117                     	;# 
  6144  0118                     	;# 
  6145  0119                     	;# 
  6146  0119                     	;# 
  6147  0119                     	;# 
  6148  011A                     	;# 
  6149  011A                     	;# 
  6150  011A                     	;# 
  6151  011B                     	;# 
  6152  011B                     	;# 
  6153  011B                     	;# 
  6154  011B                     	;# 
  6155  011B                     	;# 
  6156  011C                     	;# 
  6157  011C                     	;# 
  6158  011C                     	;# 
  6159  011D                     	;# 
  6160  011D                     	;# 
  6161  011D                     	;# 
  6162  011E                     	;# 
  6163  011E                     	;# 
  6164  011E                     	;# 
  6165  011F                     	;# 
  6166  011F                     	;# 
  6167  011F                     	;# 
  6168  011F                     	;# 
  6169  011F                     	;# 
  6170  018C                     	;# 
  6171  018D                     	;# 
  6172  018E                     	;# 
  6173  018F                     	;# 
  6174  0190                     	;# 
  6175  0191                     	;# 
  6176  0192                     	;# 
  6177  0196                     	;# 
  6178  0197                     	;# 
  6179  0198                     	;# 
  6180  0199                     	;# 
  6181  019A                     	;# 
  6182  019B                     	;# 
  6183  019C                     	;# 
  6184  020C                     	;# 
  6185  020D                     	;# 
  6186  020E                     	;# 
  6187  020E                     	;# 
  6188  020F                     	;# 
  6189  020F                     	;# 
  6190  0210                     	;# 
  6191  0210                     	;# 
  6192  0211                     	;# 
  6193  0211                     	;# 
  6194  0212                     	;# 
  6195  0213                     	;# 
  6196  0214                     	;# 
  6197  0214                     	;# 
  6198  0215                     	;# 
  6199  0215                     	;# 
  6200  0216                     	;# 
  6201  0216                     	;# 
  6202  0217                     	;# 
  6203  0217                     	;# 
  6204  0218                     	;# 
  6205  0219                     	;# 
  6206  021A                     	;# 
  6207  021A                     	;# 
  6208  021B                     	;# 
  6209  021B                     	;# 
  6210  021C                     	;# 
  6211  021C                     	;# 
  6212  021D                     	;# 
  6213  021D                     	;# 
  6214  021E                     	;# 
  6215  021F                     	;# 
  6216  028C                     	;# 
  6217  028C                     	;# 
  6218  028D                     	;# 
  6219  028D                     	;# 
  6220  028E                     	;# 
  6221  028F                     	;# 
  6222  0290                     	;# 
  6223  0291                     	;# 
  6224  0292                     	;# 
  6225  0292                     	;# 
  6226  0293                     	;# 
  6227  0293                     	;# 
  6228  0294                     	;# 
  6229  0295                     	;# 
  6230  0296                     	;# 
  6231  0297                     	;# 
  6232  0298                     	;# 
  6233  0298                     	;# 
  6234  0299                     	;# 
  6235  0299                     	;# 
  6236  029A                     	;# 
  6237  029B                     	;# 
  6238  029C                     	;# 
  6239  029D                     	;# 
  6240  029F                     	;# 
  6241  030C                     	;# 
  6242  030C                     	;# 
  6243  030D                     	;# 
  6244  030E                     	;# 
  6245  030F                     	;# 
  6246  0310                     	;# 
  6247  0310                     	;# 
  6248  0311                     	;# 
  6249  0312                     	;# 
  6250  0313                     	;# 
  6251  0314                     	;# 
  6252  0314                     	;# 
  6253  0315                     	;# 
  6254  0316                     	;# 
  6255  0317                     	;# 
  6256  0318                     	;# 
  6257  0318                     	;# 
  6258  0319                     	;# 
  6259  031A                     	;# 
  6260  031B                     	;# 
  6261  038C                     	;# 
  6262  038C                     	;# 
  6263  038D                     	;# 
  6264  038E                     	;# 
  6265  0390                     	;# 
  6266  0390                     	;# 
  6267  0391                     	;# 
  6268  0392                     	;# 
  6269  048C                     	;# 
  6270  048C                     	;# 
  6271  048D                     	;# 
  6272  048E                     	;# 
  6273  048F                     	;# 
  6274  048F                     	;# 
  6275  0490                     	;# 
  6276  0491                     	;# 
  6277  0492                     	;# 
  6278  0492                     	;# 
  6279  0493                     	;# 
  6280  0494                     	;# 
  6281  0495                     	;# 
  6282  0495                     	;# 
  6283  0496                     	;# 
  6284  0497                     	;# 
  6285  0498                     	;# 
  6286  0499                     	;# 
  6287  049A                     	;# 
  6288  049B                     	;# 
  6289  049C                     	;# 
  6290  049D                     	;# 
  6291  058C                     	;# 
  6292  058C                     	;# 
  6293  058D                     	;# 
  6294  058E                     	;# 
  6295  058F                     	;# 
  6296  058F                     	;# 
  6297  0590                     	;# 
  6298  0591                     	;# 
  6299  0592                     	;# 
  6300  0593                     	;# 
  6301  059C                     	;# 
  6302  059C                     	;# 
  6303  059D                     	;# 
  6304  059D                     	;# 
  6305  059E                     	;# 
  6306  059F                     	;# 
  6307  060C                     	;# 
  6308  060C                     	;# 
  6309  060D                     	;# 
  6310  060D                     	;# 
  6311  060E                     	;# 
  6312  060F                     	;# 
  6313  0610                     	;# 
  6314  0611                     	;# 
  6315  0612                     	;# 
  6316  0613                     	;# 
  6317  0614                     	;# 
  6318  0616                     	;# 
  6319  0616                     	;# 
  6320  0617                     	;# 
  6321  0617                     	;# 
  6322  0618                     	;# 
  6323  0619                     	;# 
  6324  061A                     	;# 
  6325  061B                     	;# 
  6326  061C                     	;# 
  6327  061D                     	;# 
  6328  061E                     	;# 
  6329  070C                     	;# 
  6330  070D                     	;# 
  6331  070E                     	;# 
  6332  070F                     	;# 
  6333  0710                     	;# 
  6334  0711                     	;# 
  6335  0712                     	;# 
  6336  0713                     	;# 
  6337  0714                     	;# 
  6338  0716                     	;# 
  6339  0717                     	;# 
  6340  0718                     	;# 
  6341  0719                     	;# 
  6342  071A                     	;# 
  6343  071B                     	;# 
  6344  071C                     	;# 
  6345  071D                     	;# 
  6346  071E                     	;# 
  6347  0796                     	;# 
  6348  0797                     	;# 
  6349  0798                     	;# 
  6350  0799                     	;# 
  6351  079A                     	;# 
  6352  079B                     	;# 
  6353  079C                     	;# 
  6354  079D                     	;# 
  6355  080C                     	;# 
  6356  080D                     	;# 
  6357  080E                     	;# 
  6358  080F                     	;# 
  6359  0810                     	;# 
  6360  0811                     	;# 
  6361  0813                     	;# 
  6362  0814                     	;# 
  6363  081A                     	;# 
  6364  081A                     	;# 
  6365  081B                     	;# 
  6366  081C                     	;# 
  6367  081C                     	;# 
  6368  081D                     	;# 
  6369  081E                     	;# 
  6370  081F                     	;# 
  6371  088C                     	;# 
  6372  088D                     	;# 
  6373  088E                     	;# 
  6374  088F                     	;# 
  6375  0890                     	;# 
  6376  0891                     	;# 
  6377  0892                     	;# 
  6378  0893                     	;# 
  6379  0895                     	;# 
  6380  0896                     	;# 
  6381  0897                     	;# 
  6382  0898                     	;# 
  6383  0899                     	;# 
  6384  089A                     	;# 
  6385  089B                     	;# 
  6386  090C                     	;# 
  6387  090E                     	;# 
  6388  090F                     	;# 
  6389  091F                     	;# 
  6390  098F                     	;# 
  6391  098F                     	;# 
  6392  0990                     	;# 
  6393  0991                     	;# 
  6394  0992                     	;# 
  6395  0993                     	;# 
  6396  0994                     	;# 
  6397  0995                     	;# 
  6398  0996                     	;# 
  6399  0997                     	;# 
  6400  1E0F                     	;# 
  6401  1E10                     	;# 
  6402  1E11                     	;# 
  6403  1E12                     	;# 
  6404  1E13                     	;# 
  6405  1E14                     	;# 
  6406  1E15                     	;# 
  6407  1E16                     	;# 
  6408  1E17                     	;# 
  6409  1E18                     	;# 
  6410  1E19                     	;# 
  6411  1E1A                     	;# 
  6412  1E1B                     	;# 
  6413  1E1C                     	;# 
  6414  1E1D                     	;# 
  6415  1E1E                     	;# 
  6416  1E1F                     	;# 
  6417  1E20                     	;# 
  6418  1E21                     	;# 
  6419  1E22                     	;# 
  6420  1E23                     	;# 
  6421  1E24                     	;# 
  6422  1E25                     	;# 
  6423  1E26                     	;# 
  6424  1E27                     	;# 
  6425  1E28                     	;# 
  6426  1E29                     	;# 
  6427  1E2A                     	;# 
  6428  1E2B                     	;# 
  6429  1E2C                     	;# 
  6430  1E2D                     	;# 
  6431  1E2E                     	;# 
  6432  1E2F                     	;# 
  6433  1E30                     	;# 
  6434  1E31                     	;# 
  6435  1E32                     	;# 
  6436  1E33                     	;# 
  6437  1E34                     	;# 
  6438  1E35                     	;# 
  6439  1E36                     	;# 
  6440  1E37                     	;# 
  6441  1E8F                     	;# 
  6442  1E90                     	;# 
  6443  1E91                     	;# 
  6444  1E92                     	;# 
  6445  1E93                     	;# 
  6446  1E94                     	;# 
  6447  1E95                     	;# 
  6448  1E96                     	;# 
  6449  1E97                     	;# 
  6450  1E9C                     	;# 
  6451  1E9D                     	;# 
  6452  1E9E                     	;# 
  6453  1EA1                     	;# 
  6454  1EA2                     	;# 
  6455  1EA3                     	;# 
  6456  1EA4                     	;# 
  6457  1EA9                     	;# 
  6458  1EAA                     	;# 
  6459  1EB1                     	;# 
  6460  1EB2                     	;# 
  6461  1EB8                     	;# 
  6462  1EB9                     	;# 
  6463  1EBA                     	;# 
  6464  1EBB                     	;# 
  6465  1EBC                     	;# 
  6466  1EBD                     	;# 
  6467  1EBE                     	;# 
  6468  1EC3                     	;# 
  6469  1EC5                     	;# 
  6470  1EC6                     	;# 
  6471  1EC7                     	;# 
  6472  1EC8                     	;# 
  6473  1EC9                     	;# 
  6474  1ECA                     	;# 
  6475  1ECB                     	;# 
  6476  1ECB                     	;# 
  6477  1ECB                     	;# 
  6478  1ECC                     	;# 
  6479  1ECC                     	;# 
  6480  1ECC                     	;# 
  6481  1F10                     	;# 
  6482  1F11                     	;# 
  6483  1F12                     	;# 
  6484  1F14                     	;# 
  6485  1F15                     	;# 
  6486  1F1C                     	;# 
  6487  1F1D                     	;# 
  6488  1F1E                     	;# 
  6489  1F1F                     	;# 
  6490  1F20                     	;# 
  6491  1F21                     	;# 
  6492  1F22                     	;# 
  6493  1F23                     	;# 
  6494  1F24                     	;# 
  6495  1F25                     	;# 
  6496  1F26                     	;# 
  6497  1F27                     	;# 
  6498  1F38                     	;# 
  6499  1F39                     	;# 
  6500  1F3A                     	;# 
  6501  1F3B                     	;# 
  6502  1F3C                     	;# 
  6503  1F3D                     	;# 
  6504  1F3E                     	;# 
  6505  1F3F                     	;# 
  6506  1F43                     	;# 
  6507  1F44                     	;# 
  6508  1F45                     	;# 
  6509  1F46                     	;# 
  6510  1F47                     	;# 
  6511  1F48                     	;# 
  6512  1F49                     	;# 
  6513  1F4A                     	;# 
  6514  1F4E                     	;# 
  6515  1F4F                     	;# 
  6516  1F50                     	;# 
  6517  1F51                     	;# 
  6518  1F52                     	;# 
  6519  1F53                     	;# 
  6520  1F54                     	;# 
  6521  1F55                     	;# 
  6522  1FE4                     	;# 
  6523  1FE5                     	;# 
  6524  1FE6                     	;# 
  6525  1FE7                     	;# 
  6526  1FE8                     	;# 
  6527  1FE8                     	;# 
  6528  1FE9                     	;# 
  6529  1FEA                     	;# 
  6530  1FEB                     	;# 
  6531  1FED                     	;# 
  6532  1FEE                     	;# 
  6533  1FEF                     	;# 
  6534                           
  6535                           	psect	idataBANK0
  6536  14A3                     __pidataBANK0:
  6537                           
  6538                           ;initializer for _topYawSpeedFP
  6539  14A3  3418               	retlw	24
  6540  14A4  3401               	retlw	1
  6541                           
  6542                           ;initializer for _topAxialSpeedFP
  6543  14A5  34D0               	retlw	208
  6544  14A6  3407               	retlw	7
  6545                           
  6546                           ;initializer for _accelLimitSweepFP
  6547  14A7  340A               	retlw	10
  6548  14A8  3400               	retlw	0
  6549                           
  6550                           	psect	idataBANK1
  6551  160C                     __pidataBANK1:
  6552                           
  6553                           ;initializer for _topSweepSpeedFP
  6554  160C  34C8               	retlw	200
  6555  160D  3400               	retlw	0
  6556                           
  6557                           ;initializer for _accelLimitYawStopFP
  6558  160E  34C8               	retlw	200
  6559  160F  3400               	retlw	0
  6560                           
  6561                           ;initializer for _accelLimitYawFP
  6562  1610  3414               	retlw	20
  6563  1611  3400               	retlw	0
  6564                           
  6565                           ;initializer for _accelLimitAxialFP
  6566  1612  3478               	retlw	120
  6567  1613  3400               	retlw	0
  6568                           
  6569                           ;initializer for _estopBuffer
  6570  1614  342F               	retlw	47
  6571  1615  3400               	retlw	0
  6572  1616  3400               	retlw	0
  6573  1617  34FF               	retlw	255
  6574  1618  3400               	retlw	0
  6575  1619  3400               	retlw	0
  6576  161A  3400               	retlw	0
  6577  161B  340A               	retlw	10
  6578                           
  6579                           	psect	nvBANK0
  6580  0068                     __pnvBANK0:
  6581  0068                     _eusart1TxBufferRemaining:
  6582  0068                     	ds	1
  6583                           
  6584                           	psect	nvBANK1
  6585  00C2                     __pnvBANK1:
  6586  00C2                     _TMR3_InterruptHandler:
  6587  00C2                     	ds	2
  6588  00C4                     _timer3ReloadVal:
  6589  00C4                     	ds	2
  6590  00C6                     _IOCCF2_InterruptHandler:
  6591  00C6                     	ds	2
  6592  00C8                     _IOCCF0_InterruptHandler:
  6593  00C8                     	ds	2
  6594  00CA                     _EUSART1_ErrorHandler:
  6595  00CA                     	ds	2
  6596  00CC                     _EUSART1_OverrunErrorHandler:
  6597  00CC                     	ds	2
  6598  00CE                     _EUSART1_FramingErrorHandler:
  6599  00CE                     	ds	2
  6600  00D0                     _EUSART1_RxDefaultInterruptHandler:
  6601  00D0                     	ds	2
  6602  00D2                     _EUSART1_TxDefaultInterruptHandler:
  6603  00D2                     	ds	2
  6604  00D4                     _TMR2_InterruptHandler:
  6605  00D4                     	ds	2
  6606  00D6                     _TMR1_InterruptHandler:
  6607  00D6                     	ds	2
  6608  00D8                     _timer1ReloadVal:
  6609  00D8                     	ds	2
  6610  0003                     _STATUSbits	set	3
  6611  000D                     _PORTBbits	set	13
  6612  0019                     _LATBbits	set	25
  6613  0018                     _LATAbits	set	24
  6614  000C                     _PORTAbits	set	12
  6615  000E                     _PORTCbits	set	14
  6616  000B                     _INTCONbits	set	11
  6617  0014                     _TRISC	set	20
  6618  0013                     _TRISB	set	19
  6619  0012                     _TRISA	set	18
  6620  001A                     _LATC	set	26
  6621  0019                     _LATB	set	25
  6622  0018                     _LATA	set	24
  6623  0119                     _RC1REG	set	281
  6624  011D                     _RC1STAbits	set	285
  6625  011A                     _TX1REG	set	282
  6626  011E                     _TX1STAbits	set	286
  6627  011C                     _SP1BRGH	set	284
  6628  011B                     _SP1BRGL	set	283
  6629  011E                     _TX1STA	set	286
  6630  011D                     _RC1STA	set	285
  6631  011F                     _BAUD1CON	set	287
  6632  0215                     _T3GCONbits	set	533
  6633  0214                     _T3CONbits	set	532
  6634  0214                     _T3CON	set	532
  6635  0212                     _TMR3L	set	530
  6636  0213                     _TMR3H	set	531
  6637  0217                     _T3CLK	set	535
  6638  0216                     _T3GATE	set	534
  6639  0215                     _T3GCON	set	533
  6640  020F                     _T1GCONbits	set	527
  6641  020E                     _T1CONbits	set	526
  6642  020E                     _T1CON	set	526
  6643  020C                     _TMR1L	set	524
  6644  020D                     _TMR1H	set	525
  6645  0211                     _T1CLK	set	529
  6646  0210                     _T1GATE	set	528
  6647  020F                     _T1GCON	set	527
  6648  028D                     _PR2	set	653
  6649  028C                     _TMR2	set	652
  6650  028E                     _T2CONbits	set	654
  6651  0291                     _T2RSTbits	set	657
  6652  028F                     _T2HLTbits	set	655
  6653  028E                     _T2CON	set	654
  6654  028C                     _T2TMR	set	652
  6655  028D                     _T2PR	set	653
  6656  0291                     _T2RST	set	657
  6657  028F                     _T2HLT	set	655
  6658  0290                     _T2CLKCON	set	656
  6659  070F                     _PIR3bits	set	1807
  6660  070C                     _PIR0bits	set	1804
  6661  0716                     _PIE0bits	set	1814
  6662  0719                     _PIE3bits	set	1817
  6663  071A                     _PIE4bits	set	1818
  6664  0710                     _PIR4bits	set	1808
  6665  079D                     _PMD7	set	1949
  6666  079C                     _PMD6	set	1948
  6667  079B                     _PMD5	set	1947
  6668  079A                     _PMD4	set	1946
  6669  0799                     _PMD3	set	1945
  6670  0798                     _PMD2	set	1944
  6671  0797                     _PMD1	set	1943
  6672  0796                     _PMD0	set	1942
  6673  081F                     _NVMCON2	set	2079
  6674  081D                     _NVMDATH	set	2077
  6675  081C                     _NVMDATL	set	2076
  6676  081B                     _NVMADRH	set	2075
  6677  081A                     _NVMADRL	set	2074
  6678  081E                     _NVMCON1bits	set	2078
  6679  0892                     _OSCTUNE	set	2194
  6680  0893                     _OSCFRQ	set	2195
  6681  0891                     _OSCEN	set	2193
  6682  088F                     _OSCCON3	set	2191
  6683  088D                     _OSCCON1	set	2189
  6684  1ECB                     _RX1DTPPS	set	7883
  6685  1F26                     _RC6PPS	set	7974
  6686  1F24                     _RC4PPS	set	7972
  6687  1F53                     _IOCCPbits	set	8019
  6688  1F54                     _IOCCNbits	set	8020
  6689  1F55                     _IOCCFbits	set	8021
  6690  1F52                     _INLVLC	set	8018
  6691  1F47                     _INLVLB	set	8007
  6692  1F3C                     _INLVLA	set	7996
  6693  1F51                     _SLRCONC	set	8017
  6694  1F46                     _SLRCONB	set	8006
  6695  1F3B                     _SLRCONA	set	7995
  6696  1F50                     _ODCONC	set	8016
  6697  1F45                     _ODCONB	set	8005
  6698  1F3A                     _ODCONA	set	7994
  6699  1F4F                     _WPUC	set	8015
  6700  1F39                     _WPUA	set	7993
  6701  1F44                     _WPUB	set	8004
  6702  1F38                     _ANSELA	set	7992
  6703  1F43                     _ANSELB	set	8003
  6704  1F4E                     _ANSELC	set	8014
  6705                           
  6706                           	psect	stringtext1
  6707  1800                     __pstringtext1:
  6708  1800                     STR_20:
  6709  1800  3441               	retlw	65	;'A'
  6710  1801  3454               	retlw	84	;'T'
  6711  1802  342B               	retlw	43	;'+'
  6712  1803  3442               	retlw	66	;'B'
  6713  1804  3441               	retlw	65	;'A'
  6714  1805  3455               	retlw	85	;'U'
  6715  1806  3444               	retlw	68	;'D'
  6716  1807  3430               	retlw	48	;'0'
  6717  1808  3400               	retlw	0
  6718                           
  6719                           	psect	stringtext2
  6720  1809                     __pstringtext2:
  6721  1809                     STR_10:
  6722  1809  3441               	retlw	65	;'A'
  6723  180A  3454               	retlw	84	;'T'
  6724  180B  342B               	retlw	43	;'+'
  6725  180C  3452               	retlw	82	;'R'
  6726  180D  344F               	retlw	79	;'O'
  6727  180E  344C               	retlw	76	;'L'
  6728  180F  3445               	retlw	69	;'E'
  6729  1810  3430               	retlw	48	;'0'
  6730  1811  3400               	retlw	0
  6731                           
  6732                           	psect	stringtext3
  6733  1812                     __pstringtext3:
  6734  1812                     STR_9:
  6735  1812  3441               	retlw	65	;'A'
  6736  1813  3454               	retlw	84	;'T'
  6737  1814  342B               	retlw	43	;'+'
  6738  1815  3452               	retlw	82	;'R'
  6739  1816  344F               	retlw	79	;'O'
  6740  1817  344C               	retlw	76	;'L'
  6741  1818  3445               	retlw	69	;'E'
  6742  1819  3431               	retlw	49	;'1'
  6743  181A  3400               	retlw	0
  6744                           
  6745                           	psect	stringtext4
  6746  181B                     __pstringtext4:
  6747  181B                     STR_5:
  6748  181B  3441               	retlw	65	;'A'
  6749  181C  3454               	retlw	84	;'T'
  6750  181D  342B               	retlw	43	;'+'
  6751  181E  3442               	retlw	66	;'B'
  6752  181F  3441               	retlw	65	;'A'
  6753  1820  3455               	retlw	85	;'U'
  6754  1821  3444               	retlw	68	;'D'
  6755  1822  3432               	retlw	50	;'2'
  6756  1823  3400               	retlw	0
  6757                           
  6758                           	psect	stringtext5
  6759  1824                     __pstringtext5:
  6760  1824                     STR_12:
  6761  1824  3441               	retlw	65	;'A'
  6762  1825  3454               	retlw	84	;'T'
  6763  1826  342B               	retlw	43	;'+'
  6764  1827  3441               	retlw	65	;'A'
  6765  1828  3444               	retlw	68	;'D'
  6766  1829  3444               	retlw	68	;'D'
  6767  182A  3452               	retlw	82	;'R'
  6768  182B  343F               	retlw	63	;'?'
  6769  182C  3400               	retlw	0
  6770                           
  6771                           	psect	stringtext6
  6772  182D                     __pstringtext6:
  6773  182D                     STR_7:
  6774  182D  3441               	retlw	65	;'A'
  6775  182E  3454               	retlw	84	;'T'
  6776  182F  342B               	retlw	43	;'+'
  6777  1830  3452               	retlw	82	;'R'
  6778  1831  3445               	retlw	69	;'E'
  6779  1832  3453               	retlw	83	;'S'
  6780  1833  3445               	retlw	69	;'E'
  6781  1834  3454               	retlw	84	;'T'
  6782  1835  3400               	retlw	0
  6783                           
  6784                           	psect	stringtext7
  6785  1836                     __pstringtext7:
  6786  1836                     STR_22:
  6787  1836  3441               	retlw	65	;'A'
  6788  1837  3454               	retlw	84	;'T'
  6789  1838  342B               	retlw	43	;'+'
  6790  1839  3452               	retlw	82	;'R'
  6791  183A  3445               	retlw	69	;'E'
  6792  183B  344E               	retlw	78	;'N'
  6793  183C  3445               	retlw	69	;'E'
  6794  183D  3457               	retlw	87	;'W'
  6795  183E  3400               	retlw	0
  6796                           
  6797                           	psect	stringtext8
  6798  183F                     __pstringtext8:
  6799  183F                     STR_16:
  6800  183F  3441               	retlw	65	;'A'
  6801  1840  3454               	retlw	84	;'T'
  6802  1841  342B               	retlw	43	;'+'
  6803  1842  3443               	retlw	67	;'C'
  6804  1843  344F               	retlw	79	;'O'
  6805  1844  344E               	retlw	78	;'N'
  6806  1845  3400               	retlw	0
  6807                           
  6808                           	psect	stringtext9
  6809  1846                     __pstringtext9:
  6810  1846                     STR_1:
  6811  1846  3448               	retlw	72	;'H'
  6812  1847  3455               	retlw	85	;'U'
  6813  1848  3447               	retlw	71	;'G'
  6814  1849  3453               	retlw	83	;'S'
  6815  184A  340A               	retlw	10
  6816  184B  3400               	retlw	0
  6817                           
  6818                           	psect	stringtext10
  6819  184C                     __pstringtext10:
  6820  184C                     STR_13:
  6821  184C  3441               	retlw	65	;'A'
  6822  184D  3444               	retlw	68	;'D'
  6823  184E  3444               	retlw	68	;'D'
  6824  184F  3452               	retlw	82	;'R'
  6825  1850  343A               	retlw	58	;':'
  6826  1851  3400               	retlw	0
  6827                           
  6828                           	psect	stringtext11
  6829  1852                     __pstringtext11:
  6830  1852                     STR_11:
  6831  1852  344F               	retlw	79	;'O'
  6832  1853  344B               	retlw	75	;'K'
  6833  1854  3400               	retlw	0
  6834                           
  6835                           	psect	stringtext12
  6836  1855                     __pstringtext12:
  6837  1855                     STR_4:
  6838  1855  3441               	retlw	65	;'A'
  6839  1856  3454               	retlw	84	;'T'
  6840  1857  3400               	retlw	0
  6841                           
  6842                           	psect	stringtext13
  6843  0000                     __pstringtext13:
  6844  1846                     
  6845                           	psect	cinit
  6846  005D                     start_initialization:	
  6847                           ; #config settings
  6848                           
  6849  005D                     __initialization:
  6850                           
  6851                           ; Initialize objects allocated to BANK0
  6852  005D  30A3               	movlw	low __pidataBANK0
  6853  005E  0084               	movwf	4
  6854  005F  3094               	movlw	(high __pidataBANK0)| (0+128)
  6855  0060  0085               	movwf	5
  6856  0061  3062               	movlw	low __pdataBANK0
  6857  0062  0086               	movwf	6
  6858  0063  3000               	movlw	high __pdataBANK0
  6859  0064  0087               	movwf	7
  6860  0065  3006               	movlw	6
  6861  0066  3194  249D  3180   	fcall	init_ram
  6862                           
  6863                           ; Initialize objects allocated to BANK1
  6864  0069  300C               	movlw	low __pidataBANK1
  6865  006A  0084               	movwf	4
  6866  006B  3096               	movlw	(high __pidataBANK1)| (0+128)
  6867  006C  0085               	movwf	5
  6868  006D  30DA               	movlw	low __pdataBANK1
  6869  006E  0086               	movwf	6
  6870  006F  3000               	movlw	high __pdataBANK1
  6871  0070  0087               	movwf	7
  6872  0071  3010               	movlw	16
  6873  0072  3194  249D  3180   	fcall	init_ram
  6874                           
  6875                           ; Clear objects allocated to COMMON
  6876  0075  01FD               	clrf	__pbssCOMMON& (0+127)
  6877                           
  6878                           ; Clear objects allocated to BANK0
  6879  0076  3045               	movlw	low __pbssBANK0
  6880  0077  0084               	movwf	4
  6881  0078  3000               	movlw	high __pbssBANK0
  6882  0079  0085               	movwf	5
  6883  007A  301D               	movlw	29
  6884  007B  3194  2497  3180   	fcall	clear_ram0
  6885                           
  6886                           ; Clear objects allocated to BANK1
  6887  007E  30A0               	movlw	low __pbssBANK1
  6888  007F  0084               	movwf	4
  6889  0080  3000               	movlw	high __pbssBANK1
  6890  0081  0085               	movwf	5
  6891  0082  3022               	movlw	34
  6892  0083  3194  2497  3180   	fcall	clear_ram0
  6893                           
  6894                           ; Clear objects allocated to BANK2
  6895  0086  3020               	movlw	low __pbssBANK2
  6896  0087  0084               	movwf	4
  6897  0088  3001               	movlw	high __pbssBANK2
  6898  0089  0085               	movwf	5
  6899  008A  3040               	movlw	64
  6900  008B  3194  2497  3180   	fcall	clear_ram0
  6901                           
  6902                           ; Clear objects allocated to BANK3
  6903  008E  30A0               	movlw	low __pbssBANK3
  6904  008F  0084               	movwf	4
  6905  0090  3001               	movlw	high __pbssBANK3
  6906  0091  0085               	movwf	5
  6907  0092  3048               	movlw	72
  6908  0093  3194  2497  3180   	fcall	clear_ram0
  6909                           
  6910                           ; Clear objects allocated to BANK4
  6911  0096  3020               	movlw	low __pbssBANK4
  6912  0097  0084               	movwf	4
  6913  0098  3002               	movlw	high __pbssBANK4
  6914  0099  0085               	movwf	5
  6915  009A  3020               	movlw	32
  6916  009B  3194  2497  3180   	fcall	clear_ram0
  6917  009E                     end_of_initialization:	
  6918                           ;End of C runtime variable initialization code
  6919                           
  6920  009E                     __end_of__initialization:
  6921  009E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6922  009F  0140               	movlb	0
  6923  00A0  318F  2FA3         	ljmp	_main	;jump to C main() function
  6924                           
  6925                           	psect	bssEEDATA
  6926  0000                     __pbssEEDATA:
  6927  0000                     _EEPROM_uiBrakeMode:
  6928  0000  0000               	db	0
  6929  0001                     _EEPROM_uiSpeedMode:
  6930  0001  0000               	db	0
  6931                           
  6932                           	psect	bssCOMMON
  6933  007D                     __pbssCOMMON:
  6934  007D                     _joystickEnabled:
  6935  007D                     	ds	1
  6936                           
  6937                           	psect	bssBANK0
  6938  0045                     __pbssBANK0:
  6939  0045                     _systemTime:
  6940  0045                     	ds	4
  6941  0049                     _limitedYawFP:
  6942  0049                     	ds	2
  6943  004B                     _limitedAxialFP:
  6944  004B                     	ds	2
  6945  004D                     _targetAxialFP:
  6946  004D                     	ds	2
  6947  004F                     _uiState:
  6948  004F                     	ds	1
  6949  0050                     _dutyCycle:
  6950  0050                     	ds	1
  6951  0051                     _B_LED:
  6952  0051                     	ds	1
  6953  0052                     _G_LED:
  6954  0052                     	ds	1
  6955  0053                     _R_LED:
  6956  0053                     	ds	1
  6957  0054                     _timeoutSequence:
  6958  0054                     	ds	1
  6959  0055                     _uiBrakeMode:
  6960  0055                     	ds	1
  6961  0056                     _uiSpeedMode:
  6962  0056                     	ds	1
  6963  0057                     _powerOn:
  6964  0057                     	ds	1
  6965  0058                     _charsRead:
  6966  0058                     	ds	1
  6967  0059                     _oneSecBlink:
  6968  0059                     	ds	1
  6969  005A                     _estopActive:
  6970  005A                     	ds	1
  6971  005B                     _estopPending:
  6972  005B                     	ds	1
  6973  005C                     _eusart1RxLastError:
  6974  005C                     	ds	1
  6975  005D                     _eusart1RxCount:
  6976  005D                     	ds	1
  6977  005E                     _eusart1RxTail:
  6978  005E                     	ds	1
  6979  005F                     _eusart1RxHead:
  6980  005F                     	ds	1
  6981  0060                     _eusart1TxTail:
  6982  0060                     	ds	1
  6983  0061                     _eusart1TxHead:
  6984  0061                     	ds	1
  6985                           
  6986                           	psect	dataBANK0
  6987  0062                     __pdataBANK0:
  6988  0062                     _topYawSpeedFP:
  6989  0062                     	ds	2
  6990  0064                     _topAxialSpeedFP:
  6991  0064                     	ds	2
  6992  0066                     _accelLimitSweepFP:
  6993  0066                     	ds	2
  6994                           
  6995                           	psect	bssBANK1
  6996  00A0                     __pbssBANK1:
  6997  00A0                     _uiStateTime:
  6998  00A0                     	ds	4
  6999  00A4                     _BTTimeout:
  7000  00A4                     	ds	4
  7001  00A8                     _lastBTTime:
  7002  00A8                     	ds	4
  7003  00AC                     _estopTimer:
  7004  00AC                     	ds	4
  7005  00B0                     _accelYawFP:
  7006  00B0                     	ds	2
  7007  00B2                     _accelAxialFP:
  7008  00B2                     	ds	2
  7009  00B4                     _targetYawFP:
  7010  00B4                     	ds	2
  7011  00B6                     _speedBuffer:
  7012  00B6                     	ds	12
  7013                           
  7014                           	psect	dataBANK1
  7015  00DA                     __pdataBANK1:
  7016  00DA                     _topSweepSpeedFP:
  7017  00DA                     	ds	2
  7018  00DC                     _accelLimitYawStopFP:
  7019  00DC                     	ds	2
  7020  00DE                     _accelLimitYawFP:
  7021  00DE                     	ds	2
  7022  00E0                     _accelLimitAxialFP:
  7023  00E0                     	ds	2
  7024  00E2                     _estopBuffer:
  7025  00E2                     	ds	8
  7026                           
  7027                           	psect	bssBANK2
  7028  0120                     __pbssBANK2:
  7029  0120                     _eusart1RxStatusBuffer:
  7030  0120                     	ds	32
  7031  0140                     _replyBuffer:
  7032  0140                     	ds	8
  7033  0148                     _masterMAC:
  7034  0148                     	ds	12
  7035  0154                     _slaveMAC:
  7036  0154                     	ds	12
  7037                           
  7038                           	psect	bssBANK3
  7039  01A0                     __pbssBANK3:
  7040  01A0                     _eusart1TxBuffer:
  7041  01A0                     	ds	32
  7042  01C0                     _RX_Buffer:
  7043  01C0                     	ds	40
  7044                           
  7045                           	psect	bssBANK4
  7046  0220                     __pbssBANK4:
  7047  0220                     _eusart1RxBuffer:
  7048  0220                     	ds	32
  7049                           
  7050                           	psect	inittext
  7051  149D                     init_ram:
  7052  149D  00FE               	movwf	btemp
  7053  149E                     initloop:
  7054  149E  0012               	moviw fsr0++
  7055  149F  001E               	movwi fsr1++
  7056  14A0  0BFE               	decfsz	btemp,f
  7057  14A1  2C9E               	goto	initloop
  7058  14A2  3400               	retlw	0
  7059                           
  7060                           	psect	clrtext
  7061  1497                     clear_ram0:	
  7062                           ;	Called with FSR0 containing the base address, and
  7063                           ;	WREG with the size to clear
  7064                           
  7065  1497  0064               	clrwdt	;clear the watchdog before getting into this loop
  7066  1498                     clrloop0:
  7067  1498  0180               	clrf	0	;clear RAM location pointed to by FSR
  7068  1499  3101               	addfsr 0,1
  7069  149A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7070  149B  2C98               	goto	clrloop0	;have we reached the end yet?
  7071  149C  3400               	retlw	0	;all done for this memory range, return
  7072                           
  7073                           	psect	cstackBANK1
  7074  00EA                     __pcstackBANK1:
  7075  00EA                     ??_runUI:
  7076                           
  7077                           ; 1 bytes @ 0x0
  7078  00EA                     	ds	2
  7079  00EC                     runUI@timeRemaining:
  7080                           
  7081                           ; 4 bytes @ 0x2
  7082  00EC                     	ds	4
  7083                           
  7084                           	psect	cstackCOMMON
  7085  0070                     __pcstackCOMMON:
  7086  0070                     ?_TMR1_DefaultInterruptHandler:
  7087  0070                     ??_TMR1_DefaultInterruptHandler:	
  7088                           ; 1 bytes @ 0x0
  7089                           
  7090  0070                     ?_TMR1_CallBack:	
  7091                           ; 1 bytes @ 0x0
  7092                           
  7093  0070                     ?_TMR2_DefaultInterruptHandler:	
  7094                           ; 1 bytes @ 0x0
  7095                           
  7096  0070                     ??_TMR2_DefaultInterruptHandler:	
  7097                           ; 1 bytes @ 0x0
  7098                           
  7099  0070                     ?_TMR2_CallBack:	
  7100                           ; 1 bytes @ 0x0
  7101                           
  7102  0070                     ?_EUSART1_Receive_ISR:	
  7103                           ; 1 bytes @ 0x0
  7104                           
  7105  0070                     ?_EUSART1_Transmit_ISR:	
  7106                           ; 1 bytes @ 0x0
  7107                           
  7108  0070                     ??_EUSART1_Transmit_ISR:	
  7109                           ; 1 bytes @ 0x0
  7110                           
  7111  0070                     ?_EUSART1_DefaultFramingErrorHandler:	
  7112                           ; 1 bytes @ 0x0
  7113                           
  7114  0070                     ??_EUSART1_DefaultFramingErrorHandler:	
  7115                           ; 1 bytes @ 0x0
  7116                           
  7117  0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
  7118                           ; 1 bytes @ 0x0
  7119                           
  7120  0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
  7121                           ; 1 bytes @ 0x0
  7122                           
  7123  0070                     ?_EUSART1_DefaultErrorHandler:	
  7124                           ; 1 bytes @ 0x0
  7125                           
  7126  0070                     ?_EUSART1_RxDataHandler:	
  7127                           ; 1 bytes @ 0x0
  7128                           
  7129  0070                     ??_EUSART1_RxDataHandler:	
  7130                           ; 1 bytes @ 0x0
  7131                           
  7132  0070                     ?_PMD_Initialize:	
  7133                           ; 1 bytes @ 0x0
  7134                           
  7135  0070                     ?_PIN_MANAGER_Initialize:	
  7136                           ; 1 bytes @ 0x0
  7137                           
  7138  0070                     ?_OSCILLATOR_Initialize:	
  7139                           ; 1 bytes @ 0x0
  7140                           
  7141  0070                     ?_TMR3_Initialize:	
  7142                           ; 1 bytes @ 0x0
  7143                           
  7144  0070                     ?_IOCCF0_DefaultInterruptHandler:	
  7145                           ; 1 bytes @ 0x0
  7146                           
  7147  0070                     ??_IOCCF0_DefaultInterruptHandler:	
  7148                           ; 1 bytes @ 0x0
  7149                           
  7150  0070                     ?_IOCCF2_DefaultInterruptHandler:	
  7151                           ; 1 bytes @ 0x0
  7152                           
  7153  0070                     ??_IOCCF2_DefaultInterruptHandler:	
  7154                           ; 1 bytes @ 0x0
  7155                           
  7156  0070                     ?_IOCCF0_ISR:	
  7157                           ; 1 bytes @ 0x0
  7158                           
  7159  0070                     ??_IOCCF0_ISR:	
  7160                           ; 1 bytes @ 0x0
  7161                           
  7162  0070                     ?_IOCCF2_ISR:	
  7163                           ; 1 bytes @ 0x0
  7164                           
  7165  0070                     ??_IOCCF2_ISR:	
  7166                           ; 1 bytes @ 0x0
  7167                           
  7168  0070                     ?_TMR3_DefaultInterruptHandler:	
  7169                           ; 1 bytes @ 0x0
  7170                           
  7171  0070                     ??_TMR3_DefaultInterruptHandler:	
  7172                           ; 1 bytes @ 0x0
  7173                           
  7174  0070                     ?_TMR3_CallBack:	
  7175                           ; 1 bytes @ 0x0
  7176                           
  7177  0070                     ?_initTimers:	
  7178                           ; 1 bytes @ 0x0
  7179                           
  7180  0070                     ?_initSerial:	
  7181                           ; 1 bytes @ 0x0
  7182                           
  7183  0070                     ?_initJoystick:	
  7184                           ; 1 bytes @ 0x0
  7185                           
  7186  0070                     ?_initUI:	
  7187                           ; 1 bytes @ 0x0
  7188                           
  7189  0070                     ?_initConfiguration:	
  7190                           ; 1 bytes @ 0x0
  7191                           
  7192  0070                     ?_turnPowerOn:	
  7193                           ; 1 bytes @ 0x0
  7194                           
  7195  0070                     ?_showStartup:	
  7196                           ; 1 bytes @ 0x0
  7197                           
  7198  0070                     ?_enableJoystick:	
  7199                           ; 1 bytes @ 0x0
  7200                           
  7201  0070                     ?_runUI:	
  7202                           ; 1 bytes @ 0x0
  7203                           
  7204  0070                     ?_turnPowerOff:	
  7205                           ; 1 bytes @ 0x0
  7206                           
  7207  0070                     ?_showShutdown:	
  7208                           ; 1 bytes @ 0x0
  7209                           
  7210  0070                     ?_powerIsOn:	
  7211                           ; 1 bytes @ 0x0
  7212                           
  7213  0070                     ?_resetBTTimer:	
  7214                           ; 1 bytes @ 0x0
  7215                           
  7216  0070                     ?_readJoystick:	
  7217                           ; 1 bytes @ 0x0
  7218                           
  7219  0070                     ?_sendBTEstopCmd:	
  7220                           ; 1 bytes @ 0x0
  7221                           
  7222  0070                     ?_calculateMotion:	
  7223                           ; 1 bytes @ 0x0
  7224                           
  7225  0070                     ?_int16ToBytes:	
  7226                           ; 1 bytes @ 0x0
  7227                           
  7228  0070                     ??_calcCRC:	
  7229                           ; 1 bytes @ 0x0
  7230                           
  7231  0070                     ?_flushBTRXbuffer:	
  7232                           ; 1 bytes @ 0x0
  7233                           
  7234  0070                     ?_timeKeeper:	
  7235                           ; 1 bytes @ 0x0
  7236                           
  7237  0070                     ??_timeKeeper:	
  7238                           ; 1 bytes @ 0x0
  7239                           
  7240  0070                     ?_SetSlaveTXRX:	
  7241                           ; 1 bytes @ 0x0
  7242                           
  7243  0070                     ?_setBTBaudRatesTo38400:	
  7244                           ; 1 bytes @ 0x0
  7245                           
  7246  0070                     ?_USER1_pressed:	
  7247                           ; 1 bytes @ 0x0
  7248                           
  7249  0070                     ?_USER2_pressed:	
  7250                           ; 1 bytes @ 0x0
  7251                           
  7252  0070                     ?_UI_PWM_handler:	
  7253                           ; 1 bytes @ 0x0
  7254                           
  7255  0070                     ??_UI_PWM_handler:	
  7256                           ; 1 bytes @ 0x0
  7257                           
  7258  0070                     ?_bumpUISpeedMode:	
  7259                           ; 1 bytes @ 0x0
  7260                           
  7261  0070                     ?_bumpUIBrakeMode:	
  7262                           ; 1 bytes @ 0x0
  7263                           
  7264  0070                     ?_TMR1_Initialize:	
  7265                           ; 1 bytes @ 0x0
  7266                           
  7267  0070                     ?_TMR1_StartTimer:	
  7268                           ; 1 bytes @ 0x0
  7269                           
  7270  0070                     ?_TMR1_StopTimer:	
  7271                           ; 1 bytes @ 0x0
  7272                           
  7273  0070                     ?_TMR1_WriteTimer:	
  7274                           ; 1 bytes @ 0x0
  7275                           
  7276  0070                     ?_TMR1_ISR:	
  7277                           ; 1 bytes @ 0x0
  7278                           
  7279  0070                     ?_TMR2_Initialize:	
  7280                           ; 1 bytes @ 0x0
  7281                           
  7282  0070                     ?_TMR2_ISR:	
  7283                           ; 1 bytes @ 0x0
  7284                           
  7285  0070                     ?_EUSART1_Initialize:	
  7286                           ; 1 bytes @ 0x0
  7287                           
  7288  0070                     ?_EUSART1_is_tx_ready:	
  7289                           ; 1 bytes @ 0x0
  7290                           
  7291  0070                     ?_EUSART1_is_rx_ready:	
  7292                           ; 1 bytes @ 0x0
  7293                           
  7294  0070                     ?_EUSART1_Read:	
  7295                           ; 1 bytes @ 0x0
  7296                           
  7297  0070                     ?_EUSART1_Write:	
  7298                           ; 1 bytes @ 0x0
  7299                           
  7300  0070                     ?_SYSTEM_Initialize:	
  7301                           ; 1 bytes @ 0x0
  7302                           
  7303  0070                     ?_PIN_MANAGER_IOC:	
  7304                           ; 1 bytes @ 0x0
  7305                           
  7306  0070                     ??_PIN_MANAGER_IOC:	
  7307                           ; 1 bytes @ 0x0
  7308                           
  7309  0070                     ?_TMR3_WriteTimer:	
  7310                           ; 1 bytes @ 0x0
  7311                           
  7312  0070                     ?_TMR3_ISR:	
  7313                           ; 1 bytes @ 0x0
  7314                           
  7315  0070                     ?_INTERRUPT_InterruptManager:	
  7316                           ; 1 bytes @ 0x0
  7317                           
  7318  0070                     ?_main:	
  7319                           ; 1 bytes @ 0x0
  7320                           
  7321  0070                     ?_disableJoystick:	
  7322                           ; 1 bytes @ 0x0
  7323                           
  7324  0070                     ?_oneSec:	
  7325                           ; 1 bytes @ 0x0
  7326                           
  7327  0070                     ?_SetDualReceive:	
  7328                           ; 1 bytes @ 0x0
  7329                           
  7330  0070                     ?_SetMasterTXRX:	
  7331                           ; 1 bytes @ 0x0
  7332                           
  7333  0070                     ?_SetSlaveTXMasterRX:	
  7334                           ; 1 bytes @ 0x0
  7335                           
  7336  0070                     ?_pairBluetoothDevices:	
  7337                           ; 1 bytes @ 0x0
  7338                           
  7339  0070                     ?_doFactoryReset:	
  7340                           ; 1 bytes @ 0x0
  7341                           
  7342  0070                     ?___eetoc:	
  7343                           ; 1 bytes @ 0x0
  7344                           
  7345  0070                     ?i1_EUSART1_is_tx_ready:	
  7346                           ; 1 bytes @ 0x0
  7347                           
  7348  0070                     ??i1_EUSART1_is_tx_ready:	
  7349                           ; 1 bytes @ 0x0
  7350                           
  7351  0070                     ?i1_EUSART1_is_rx_ready:	
  7352                           ; 1 bytes @ 0x0
  7353                           
  7354  0070                     ??i1_EUSART1_is_rx_ready:	
  7355                           ; 1 bytes @ 0x0
  7356                           
  7357  0070                     ?i1_EUSART1_Read:	
  7358                           ; 1 bytes @ 0x0
  7359                           
  7360  0070                     ??i1_EUSART1_Read:	
  7361                           ; 1 bytes @ 0x0
  7362                           
  7363  0070                     ?i1_EUSART1_Write:	
  7364                           ; 1 bytes @ 0x0
  7365                           
  7366  0070                     ??i1_EUSART1_Write:	
  7367                           ; 1 bytes @ 0x0
  7368                           
  7369  0070                     ?i1_resetBTTimer:	
  7370                           ; 1 bytes @ 0x0
  7371                           
  7372  0070                     ??i1_resetBTTimer:	
  7373                           ; 1 bytes @ 0x0
  7374                           
  7375  0070                     ?i1_setBTTimeout:	
  7376                           ; 1 bytes @ 0x0
  7377                           
  7378  0070                     ?i1_turnPowerOn:	
  7379                           ; 1 bytes @ 0x0
  7380                           
  7381  0070                     ??i1_turnPowerOn:	
  7382                           ; 1 bytes @ 0x0
  7383                           
  7384  0070                     ?_limitSpeed:	
  7385                           ; 1 bytes @ 0x0
  7386                           
  7387  0070                     ?_calcCRC:	
  7388                           ; 2 bytes @ 0x0
  7389                           
  7390  0070                     ?i1_getTicks:	
  7391                           ; 2 bytes @ 0x0
  7392                           
  7393  0070                     ?i1_getTicksSince:	
  7394                           ; 4 bytes @ 0x0
  7395                           
  7396  0070                     TMR1_WriteTimer@timerVal:	
  7397                           ; 4 bytes @ 0x0
  7398                           
  7399  0070                     TMR3_WriteTimer@timerVal:	
  7400                           ; 2 bytes @ 0x0
  7401                           
  7402  0070                     limitSpeed@targetFP:	
  7403                           ; 2 bytes @ 0x0
  7404                           
  7405  0070                     int16ToBytes@num:	
  7406                           ; 2 bytes @ 0x0
  7407                           
  7408  0070                     i1getTicksSince@from:	
  7409                           ; 2 bytes @ 0x0
  7410                           
  7411  0070                     i1setBTTimeout@timeout:	
  7412                           ; 4 bytes @ 0x0
  7413                           
  7414                           
  7415                           ; 4 bytes @ 0x0
  7416  0070                     	ds	1
  7417  0071                     ??_EUSART1_Receive_ISR:
  7418  0071                     ??_EUSART1_DefaultErrorHandler:	
  7419                           ; 1 bytes @ 0x1
  7420                           
  7421  0071                     ??_TMR3_CallBack:	
  7422                           ; 1 bytes @ 0x1
  7423                           
  7424  0071                     i1EUSART1_Read@readValue:	
  7425                           ; 1 bytes @ 0x1
  7426                           
  7427  0071                     i1EUSART1_Write@txData:	
  7428                           ; 1 bytes @ 0x1
  7429                           
  7430                           
  7431                           ; 1 bytes @ 0x1
  7432  0071                     	ds	1
  7433  0072                     ??_TMR1_WriteTimer:
  7434  0072                     ??_TMR3_WriteTimer:	
  7435                           ; 1 bytes @ 0x2
  7436                           
  7437  0072                     ??_TMR3_ISR:	
  7438                           ; 1 bytes @ 0x2
  7439                           
  7440  0072                     ?i1_sendBTBuffer:	
  7441                           ; 1 bytes @ 0x2
  7442                           
  7443  0072                     int16ToBytes@ndata:	
  7444                           ; 1 bytes @ 0x2
  7445                           
  7446  0072                     limitSpeed@limitedFP:	
  7447                           ; 1 bytes @ 0x2
  7448                           
  7449  0072                     i1sendBTBuffer@buffer:	
  7450                           ; 2 bytes @ 0x2
  7451                           
  7452                           
  7453                           ; 2 bytes @ 0x2
  7454  0072                     	ds	1
  7455  0073                     ??_int16ToBytes:
  7456  0073                     calcCRC@i:	
  7457                           ; 1 bytes @ 0x3
  7458                           
  7459                           
  7460                           ; 1 bytes @ 0x3
  7461  0073                     	ds	1
  7462  0074                     ??_TMR2_CallBack:
  7463  0074                     ??_TMR2_ISR:	
  7464                           ; 1 bytes @ 0x4
  7465                           
  7466  0074                     ??i1_getTicks:	
  7467                           ; 1 bytes @ 0x4
  7468                           
  7469  0074                     ??i1_getTicksSince:	
  7470                           ; 1 bytes @ 0x4
  7471                           
  7472  0074                     ??i1_setBTTimeout:	
  7473                           ; 1 bytes @ 0x4
  7474                           
  7475  0074                     calcCRC@count:	
  7476                           ; 1 bytes @ 0x4
  7477                           
  7478  0074                     i1sendBTBuffer@length:	
  7479                           ; 1 bytes @ 0x4
  7480                           
  7481  0074                     limitSpeed@accelFP:	
  7482                           ; 1 bytes @ 0x4
  7483                           
  7484                           
  7485                           ; 2 bytes @ 0x4
  7486  0074                     	ds	1
  7487  0075                     calcCRC@ptr:
  7488  0075                     i1sendBTBuffer@blockIfBusy:	
  7489                           ; 1 bytes @ 0x5
  7490                           
  7491                           
  7492                           ; 1 bytes @ 0x5
  7493  0075                     	ds	1
  7494  0076                     ??_limitSpeed:
  7495  0076                     ??i1_sendBTBuffer:	
  7496                           ; 1 bytes @ 0x6
  7497                           
  7498  0076                     calcCRC@crc:	
  7499                           ; 1 bytes @ 0x6
  7500                           
  7501  0076                     int16ToBytes@i:	
  7502                           ; 2 bytes @ 0x6
  7503                           
  7504                           
  7505                           ; 2 bytes @ 0x6
  7506  0076                     	ds	2
  7507  0078                     ??_sendBTEstopCmd:
  7508  0078                     ?_sendBTSpeedCmd:	
  7509                           ; 1 bytes @ 0x8
  7510                           
  7511  0078                     sendBTSpeedCmd@axial:	
  7512                           ; 1 bytes @ 0x8
  7513                           
  7514                           
  7515                           ; 2 bytes @ 0x8
  7516  0078                     	ds	1
  7517  0079                     limitSpeed@speedFP:
  7518                           
  7519                           ; 2 bytes @ 0x9
  7520  0079                     	ds	1
  7521  007A                     sendBTSpeedCmd@yaw:
  7522                           
  7523                           ; 2 bytes @ 0xA
  7524  007A                     	ds	1
  7525  007B                     limitSpeed@diffFP:
  7526                           
  7527                           ; 2 bytes @ 0xB
  7528  007B                     	ds	1
  7529  007C                     sendBTSpeedCmd@blockIfBusy:
  7530                           
  7531                           ; 1 bytes @ 0xC
  7532  007C                     	ds	1
  7533  007D                     ??_TMR1_CallBack:
  7534  007D                     ??_calculateMotion:	
  7535                           ; 1 bytes @ 0xD
  7536                           
  7537  007D                     ??_TMR1_ISR:	
  7538                           ; 1 bytes @ 0xD
  7539                           
  7540  007D                     ??_INTERRUPT_InterruptManager:	
  7541                           ; 1 bytes @ 0xD
  7542                           
  7543                           
  7544                           	psect	cstackBANK0
  7545  0020                     __pcstackBANK0:	
  7546                           ; 1 bytes @ 0xD
  7547                           
  7548  0020                     ??_sendBTSpeedCmd:
  7549                           
  7550                           ; 1 bytes @ 0x0
  7551  0020                     	ds	2
  7552  0022                     ??_readJoystick:
  7553                           
  7554                           ; 1 bytes @ 0x2
  7555  0022                     	ds	4
  7556  0026                     ?_TMR1_SetInterruptHandler:
  7557  0026                     ?_TMR2_SetInterruptHandler:	
  7558                           ; 1 bytes @ 0x6
  7559                           
  7560  0026                     ?_EUSART1_SetRxInterruptHandler:	
  7561                           ; 1 bytes @ 0x6
  7562                           
  7563  0026                     ?_EUSART1_SetTxInterruptHandler:	
  7564                           ; 1 bytes @ 0x6
  7565                           
  7566  0026                     ?_EUSART1_SetFramingErrorHandler:	
  7567                           ; 1 bytes @ 0x6
  7568                           
  7569  0026                     ?_EUSART1_SetOverrunErrorHandler:	
  7570                           ; 1 bytes @ 0x6
  7571                           
  7572  0026                     ?_EUSART1_SetErrorHandler:	
  7573                           ; 1 bytes @ 0x6
  7574                           
  7575  0026                     ??_PMD_Initialize:	
  7576                           ; 1 bytes @ 0x6
  7577                           
  7578  0026                     ??_OSCILLATOR_Initialize:	
  7579                           ; 1 bytes @ 0x6
  7580                           
  7581  0026                     ?_IOCCF0_SetInterruptHandler:	
  7582                           ; 1 bytes @ 0x6
  7583                           
  7584  0026                     ?_IOCCF2_SetInterruptHandler:	
  7585                           ; 1 bytes @ 0x6
  7586                           
  7587  0026                     ?_TMR3_SetInterruptHandler:	
  7588                           ; 1 bytes @ 0x6
  7589                           
  7590  0026                     ??_turnPowerOn:	
  7591                           ; 1 bytes @ 0x6
  7592                           
  7593  0026                     ??_enableJoystick:	
  7594                           ; 1 bytes @ 0x6
  7595                           
  7596  0026                     ??_turnPowerOff:	
  7597                           ; 1 bytes @ 0x6
  7598                           
  7599  0026                     ??_powerIsOn:	
  7600                           ; 1 bytes @ 0x6
  7601                           
  7602  0026                     ??_resetBTTimer:	
  7603                           ; 1 bytes @ 0x6
  7604                           
  7605  0026                     ?_setBTTimeout:	
  7606                           ; 1 bytes @ 0x6
  7607                           
  7608  0026                     ?_memset:	
  7609                           ; 1 bytes @ 0x6
  7610                           
  7611  0026                     ??_USER1_pressed:	
  7612                           ; 1 bytes @ 0x6
  7613                           
  7614  0026                     ??_USER2_pressed:	
  7615                           ; 1 bytes @ 0x6
  7616                           
  7617  0026                     ?_memcpy:	
  7618                           ; 1 bytes @ 0x6
  7619                           
  7620  0026                     ?_strchr:	
  7621                           ; 1 bytes @ 0x6
  7622                           
  7623  0026                     ??_TMR1_StartTimer:	
  7624                           ; 1 bytes @ 0x6
  7625                           
  7626  0026                     ??_TMR1_StopTimer:	
  7627                           ; 1 bytes @ 0x6
  7628                           
  7629  0026                     ??_EUSART1_is_tx_ready:	
  7630                           ; 1 bytes @ 0x6
  7631                           
  7632  0026                     ??_EUSART1_is_rx_ready:	
  7633                           ; 1 bytes @ 0x6
  7634                           
  7635  0026                     ??_EUSART1_Read:	
  7636                           ; 1 bytes @ 0x6
  7637                           
  7638  0026                     ??_EUSART1_Write:	
  7639                           ; 1 bytes @ 0x6
  7640                           
  7641  0026                     ??_disableJoystick:	
  7642                           ; 1 bytes @ 0x6
  7643                           
  7644  0026                     ??_oneSec:	
  7645                           ; 1 bytes @ 0x6
  7646                           
  7647  0026                     ?_setLEDColor:	
  7648                           ; 1 bytes @ 0x6
  7649                           
  7650  0026                     ?___eecpymem:	
  7651                           ; 1 bytes @ 0x6
  7652                           
  7653  0026                     ?___memcpyee:	
  7654                           ; 1 bytes @ 0x6
  7655                           
  7656  0026                     ?_strlen:	
  7657                           ; 1 bytes @ 0x6
  7658                           
  7659  0026                     ?_strncmp:	
  7660                           ; 2 bytes @ 0x6
  7661                           
  7662  0026                     ?___awmod:	
  7663                           ; 2 bytes @ 0x6
  7664                           
  7665  0026                     ?_BTTimeRemaining:	
  7666                           ; 2 bytes @ 0x6
  7667                           
  7668  0026                     ?_getTicksSince:	
  7669                           ; 4 bytes @ 0x6
  7670                           
  7671  0026                     ?_getTicks:	
  7672                           ; 4 bytes @ 0x6
  7673                           
  7674  0026                     ___eecpymem@from:	
  7675                           ; 4 bytes @ 0x6
  7676                           
  7677  0026                     ___memcpyee@from:	
  7678                           ; 1 bytes @ 0x6
  7679                           
  7680  0026                     memcpy@s1:	
  7681                           ; 1 bytes @ 0x6
  7682                           
  7683  0026                     TMR1_SetInterruptHandler@InterruptHandler:	
  7684                           ; 1 bytes @ 0x6
  7685                           
  7686  0026                     TMR2_SetInterruptHandler@InterruptHandler:	
  7687                           ; 2 bytes @ 0x6
  7688                           
  7689  0026                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  7690                           ; 2 bytes @ 0x6
  7691                           
  7692  0026                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  7693                           ; 2 bytes @ 0x6
  7694                           
  7695  0026                     EUSART1_SetErrorHandler@interruptHandler:	
  7696                           ; 2 bytes @ 0x6
  7697                           
  7698  0026                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  7699                           ; 2 bytes @ 0x6
  7700                           
  7701  0026                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  7702                           ; 2 bytes @ 0x6
  7703                           
  7704  0026                     IOCCF0_SetInterruptHandler@InterruptHandler:	
  7705                           ; 2 bytes @ 0x6
  7706                           
  7707  0026                     IOCCF2_SetInterruptHandler@InterruptHandler:	
  7708                           ; 2 bytes @ 0x6
  7709                           
  7710  0026                     TMR3_SetInterruptHandler@InterruptHandler:	
  7711                           ; 2 bytes @ 0x6
  7712                           
  7713  0026                     setLEDColor@RGB:	
  7714                           ; 2 bytes @ 0x6
  7715                           
  7716  0026                     ___awmod@divisor:	
  7717                           ; 2 bytes @ 0x6
  7718                           
  7719  0026                     memset@c:	
  7720                           ; 2 bytes @ 0x6
  7721                           
  7722  0026                     strlen@s:	
  7723                           ; 2 bytes @ 0x6
  7724                           
  7725  0026                     strchr@c:	
  7726                           ; 2 bytes @ 0x6
  7727                           
  7728  0026                     strncmp@_r:	
  7729                           ; 2 bytes @ 0x6
  7730                           
  7731  0026                     getTicksSince@from:	
  7732                           ; 2 bytes @ 0x6
  7733                           
  7734  0026                     setBTTimeout@timeout:	
  7735                           ; 4 bytes @ 0x6
  7736                           
  7737                           
  7738                           ; 4 bytes @ 0x6
  7739  0026                     	ds	1
  7740  0027                     EUSART1_Read@readValue:
  7741  0027                     EUSART1_Write@txData:	
  7742                           ; 1 bytes @ 0x7
  7743                           
  7744  0027                     ___eecpymem@size:	
  7745                           ; 1 bytes @ 0x7
  7746                           
  7747  0027                     ___memcpyee@size:	
  7748                           ; 1 bytes @ 0x7
  7749                           
  7750  0027                     memcpy@n:	
  7751                           ; 1 bytes @ 0x7
  7752                           
  7753                           
  7754                           ; 2 bytes @ 0x7
  7755  0027                     	ds	1
  7756  0028                     ??_TMR1_SetInterruptHandler:
  7757  0028                     ??_TMR2_SetInterruptHandler:	
  7758                           ; 1 bytes @ 0x8
  7759                           
  7760  0028                     ??_EUSART1_SetRxInterruptHandler:	
  7761                           ; 1 bytes @ 0x8
  7762                           
  7763  0028                     ??_EUSART1_SetTxInterruptHandler:	
  7764                           ; 1 bytes @ 0x8
  7765                           
  7766  0028                     ??_EUSART1_SetFramingErrorHandler:	
  7767                           ; 1 bytes @ 0x8
  7768                           
  7769  0028                     ??_EUSART1_SetOverrunErrorHandler:	
  7770                           ; 1 bytes @ 0x8
  7771                           
  7772  0028                     ??_EUSART1_SetErrorHandler:	
  7773                           ; 1 bytes @ 0x8
  7774                           
  7775  0028                     ??_PIN_MANAGER_Initialize:	
  7776                           ; 1 bytes @ 0x8
  7777                           
  7778  0028                     ??_TMR3_Initialize:	
  7779                           ; 1 bytes @ 0x8
  7780                           
  7781  0028                     ??_IOCCF0_SetInterruptHandler:	
  7782                           ; 1 bytes @ 0x8
  7783                           
  7784  0028                     ??_IOCCF2_SetInterruptHandler:	
  7785                           ; 1 bytes @ 0x8
  7786                           
  7787  0028                     ??_TMR3_SetInterruptHandler:	
  7788                           ; 1 bytes @ 0x8
  7789                           
  7790  0028                     ??_initTimers:	
  7791                           ; 1 bytes @ 0x8
  7792                           
  7793  0028                     ??_initJoystick:	
  7794                           ; 1 bytes @ 0x8
  7795                           
  7796  0028                     ??_strlen:	
  7797                           ; 1 bytes @ 0x8
  7798                           
  7799  0028                     ??_strchr:	
  7800                           ; 1 bytes @ 0x8
  7801                           
  7802  0028                     ??_TMR1_Initialize:	
  7803                           ; 1 bytes @ 0x8
  7804                           
  7805  0028                     ??_TMR2_Initialize:	
  7806                           ; 1 bytes @ 0x8
  7807                           
  7808  0028                     ??_EUSART1_Initialize:	
  7809                           ; 1 bytes @ 0x8
  7810                           
  7811  0028                     ??_setLEDColor:	
  7812                           ; 1 bytes @ 0x8
  7813                           
  7814  0028                     ??___eecpymem:	
  7815                           ; 1 bytes @ 0x8
  7816                           
  7817  0028                     ??___memcpyee:	
  7818                           ; 1 bytes @ 0x8
  7819                           
  7820  0028                     strchr@s:	
  7821                           ; 1 bytes @ 0x8
  7822                           
  7823  0028                     ___awmod@dividend:	
  7824                           ; 1 bytes @ 0x8
  7825                           
  7826  0028                     memset@n:	
  7827                           ; 2 bytes @ 0x8
  7828                           
  7829  0028                     strncmp@n:	
  7830                           ; 2 bytes @ 0x8
  7831                           
  7832                           
  7833                           ; 2 bytes @ 0x8
  7834  0028                     	ds	1
  7835  0029                     ??_memcpy:
  7836  0029                     ??_SYSTEM_Initialize:	
  7837                           ; 1 bytes @ 0x9
  7838                           
  7839  0029                     ___eecpymem@cp:	
  7840                           ; 1 bytes @ 0x9
  7841                           
  7842  0029                     ___memcpyee@ptr:	
  7843                           ; 1 bytes @ 0x9
  7844                           
  7845  0029                     strlen@a:	
  7846                           ; 1 bytes @ 0x9
  7847                           
  7848                           
  7849                           ; 2 bytes @ 0x9
  7850  0029                     	ds	1
  7851  002A                     ??_BTTimeRemaining:
  7852  002A                     ??_getTicksSince:	
  7853                           ; 1 bytes @ 0xA
  7854                           
  7855  002A                     ??_getTicks:	
  7856                           ; 1 bytes @ 0xA
  7857                           
  7858  002A                     ??_setBTTimeout:	
  7859                           ; 1 bytes @ 0xA
  7860                           
  7861  002A                     ??_memset:	
  7862                           ; 1 bytes @ 0xA
  7863                           
  7864  002A                     ??_strncmp:	
  7865                           ; 1 bytes @ 0xA
  7866                           
  7867  002A                     ??___awmod:	
  7868                           ; 1 bytes @ 0xA
  7869                           
  7870  002A                     ___eecpymem@to:	
  7871                           ; 1 bytes @ 0xA
  7872                           
  7873  002A                     ___memcpyee@to:	
  7874                           ; 1 bytes @ 0xA
  7875                           
  7876  002A                     memcpy@tmp:	
  7877                           ; 1 bytes @ 0xA
  7878                           
  7879                           
  7880                           ; 1 bytes @ 0xA
  7881  002A                     	ds	1
  7882  002B                     ?_sendBTBuffer:
  7883  002B                     ??___eetoc:	
  7884                           ; 1 bytes @ 0xB
  7885                           
  7886  002B                     ?___ctoee:	
  7887                           ; 1 bytes @ 0xB
  7888                           
  7889  002B                     ___ctoee@data:	
  7890                           ; 1 bytes @ 0xB
  7891                           
  7892  002B                     ___awmod@counter:	
  7893                           ; 1 bytes @ 0xB
  7894                           
  7895  002B                     memcpy@d1:	
  7896                           ; 1 bytes @ 0xB
  7897                           
  7898  002B                     strncmp@_l:	
  7899                           ; 1 bytes @ 0xB
  7900                           
  7901  002B                     sendBTBuffer@buffer:	
  7902                           ; 1 bytes @ 0xB
  7903                           
  7904                           
  7905                           ; 2 bytes @ 0xB
  7906  002B                     	ds	1
  7907  002C                     ??___ctoee:
  7908  002C                     ___eetoc@addr:	
  7909                           ; 1 bytes @ 0xC
  7910                           
  7911  002C                     ___awmod@sign:	
  7912                           ; 1 bytes @ 0xC
  7913                           
  7914  002C                     memcpy@d:	
  7915                           ; 1 bytes @ 0xC
  7916                           
  7917  002C                     memset@k:	
  7918                           ; 1 bytes @ 0xC
  7919                           
  7920  002C                     strncmp@r:	
  7921                           ; 2 bytes @ 0xC
  7922                           
  7923                           
  7924                           ; 2 bytes @ 0xC
  7925  002C                     	ds	1
  7926  002D                     sendBTBuffer@length:
  7927  002D                     ___eetoc@data:	
  7928                           ; 1 bytes @ 0xD
  7929                           
  7930  002D                     ___ctoee@addr:	
  7931                           ; 1 bytes @ 0xD
  7932                           
  7933  002D                     memcpy@s:	
  7934                           ; 1 bytes @ 0xD
  7935                           
  7936                           
  7937                           ; 1 bytes @ 0xD
  7938  002D                     	ds	1
  7939  002E                     ??_initUI:
  7940  002E                     ?_sleep:	
  7941                           ; 1 bytes @ 0xE
  7942                           
  7943  002E                     ?_receiveBTBuffer:	
  7944                           ; 1 bytes @ 0xE
  7945                           
  7946  002E                     sendBTBuffer@blockIfBusy:	
  7947                           ; 1 bytes @ 0xE
  7948                           
  7949  002E                     receiveBTBuffer@maxChars:	
  7950                           ; 1 bytes @ 0xE
  7951                           
  7952  002E                     memset@dest:	
  7953                           ; 1 bytes @ 0xE
  7954                           
  7955  002E                     strncmp@l:	
  7956                           ; 1 bytes @ 0xE
  7957                           
  7958  002E                     sleep@delay:	
  7959                           ; 1 bytes @ 0xE
  7960                           
  7961  002E                     BTTimeRemaining@elapsed:	
  7962                           ; 4 bytes @ 0xE
  7963                           
  7964                           
  7965                           ; 4 bytes @ 0xE
  7966  002E                     	ds	1
  7967  002F                     ??_sendBTBuffer:
  7968  002F                     ?_strstr:	
  7969                           ; 1 bytes @ 0xF
  7970                           
  7971  002F                     memset@s:	
  7972                           ; 1 bytes @ 0xF
  7973                           
  7974  002F                     receiveBTBuffer@timeoutMS:	
  7975                           ; 1 bytes @ 0xF
  7976                           
  7977  002F                     strstr@n:	
  7978                           ; 2 bytes @ 0xF
  7979                           
  7980                           
  7981                           ; 2 bytes @ 0xF
  7982  002F                     	ds	1
  7983  0030                     ??_initSerial:
  7984                           
  7985                           ; 1 bytes @ 0x10
  7986  0030                     	ds	1
  7987  0031                     ??_strstr:
  7988  0031                     ??_receiveBTBuffer:	
  7989                           ; 1 bytes @ 0x11
  7990                           
  7991                           
  7992                           ; 1 bytes @ 0x11
  7993  0031                     	ds	1
  7994  0032                     ??_sleep:
  7995  0032                     sleep@start:	
  7996                           ; 1 bytes @ 0x12
  7997                           
  7998                           
  7999                           ; 4 bytes @ 0x12
  8000  0032                     	ds	2
  8001  0034                     strstr@nl:
  8002                           
  8003                           ; 2 bytes @ 0x14
  8004  0034                     	ds	2
  8005  0036                     ??_showStartup:
  8006  0036                     ??_showShutdown:	
  8007                           ; 1 bytes @ 0x16
  8008                           
  8009  0036                     ??_flushBTRXbuffer:	
  8010                           ; 1 bytes @ 0x16
  8011                           
  8012  0036                     ?_setSerialBaud:	
  8013                           ; 1 bytes @ 0x16
  8014                           
  8015  0036                     ??_SetSlaveTXRX:	
  8016                           ; 1 bytes @ 0x16
  8017                           
  8018  0036                     ?_pulseLEDColor:	
  8019                           ; 1 bytes @ 0x16
  8020                           
  8021  0036                     ?_sendBTString:	
  8022                           ; 1 bytes @ 0x16
  8023                           
  8024  0036                     ??_SetDualReceive:	
  8025                           ; 1 bytes @ 0x16
  8026                           
  8027  0036                     ??_SetMasterTXRX:	
  8028                           ; 1 bytes @ 0x16
  8029                           
  8030  0036                     ??_SetSlaveTXMasterRX:	
  8031                           ; 1 bytes @ 0x16
  8032                           
  8033  0036                     strstr@h:	
  8034                           ; 1 bytes @ 0x16
  8035                           
  8036  0036                     sendBTString@buffer:	
  8037                           ; 1 bytes @ 0x16
  8038                           
  8039  0036                     setSerialBaud@baud:	
  8040                           ; 2 bytes @ 0x16
  8041                           
  8042  0036                     pulseLEDColor@RGB:	
  8043                           ; 2 bytes @ 0x16
  8044                           
  8045  0036                     receiveBTBuffer@startTime:	
  8046                           ; 2 bytes @ 0x16
  8047                           
  8048                           
  8049                           ; 4 bytes @ 0x16
  8050  0036                     	ds	1
  8051  0037                     showStartup@ramp:
  8052  0037                     showShutdown@ramp:	
  8053                           ; 1 bytes @ 0x17
  8054                           
  8055                           
  8056                           ; 1 bytes @ 0x17
  8057  0037                     	ds	1
  8058  0038                     ??_initConfiguration:
  8059  0038                     ??_setSerialBaud:	
  8060                           ; 1 bytes @ 0x18
  8061                           
  8062  0038                     ??_sendBTString:	
  8063                           ; 1 bytes @ 0x18
  8064                           
  8065  0038                     pulseLEDColor@onTimeMS:	
  8066                           ; 1 bytes @ 0x18
  8067                           
  8068                           
  8069                           ; 2 bytes @ 0x18
  8070  0038                     	ds	2
  8071  003A                     receiveBTBuffer@charsRead:
  8072  003A                     pulseLEDColor@offTimeMS:	
  8073                           ; 1 bytes @ 0x1A
  8074                           
  8075                           
  8076                           ; 2 bytes @ 0x1A
  8077  003A                     	ds	1
  8078  003B                     receiveBTBuffer@buffer:
  8079                           
  8080                           ; 1 bytes @ 0x1B
  8081  003B                     	ds	1
  8082  003C                     ??_setBTBaudRatesTo38400:
  8083  003C                     ?_getBTAddress:	
  8084                           ; 1 bytes @ 0x1C
  8085                           
  8086  003C                     ?_setBTConnection:	
  8087                           ; 1 bytes @ 0x1C
  8088                           
  8089  003C                     ??_pulseLEDColor:	
  8090                           ; 1 bytes @ 0x1C
  8091                           
  8092  003C                     ?_blinkLEDColor:	
  8093                           ; 1 bytes @ 0x1C
  8094                           
  8095  003C                     ??_doFactoryReset:	
  8096                           ; 1 bytes @ 0x1C
  8097                           
  8098  003C                     getBTAddress@isMaster:	
  8099                           ; 1 bytes @ 0x1C
  8100                           
  8101  003C                     setBTConnection@isMaster:	
  8102                           ; 1 bytes @ 0x1C
  8103                           
  8104  003C                     blinkLEDColor@RGB:	
  8105                           ; 1 bytes @ 0x1C
  8106                           
  8107                           
  8108                           ; 2 bytes @ 0x1C
  8109  003C                     	ds	1
  8110  003D                     ??_getBTAddress:
  8111  003D                     ??_setBTConnection:	
  8112                           ; 1 bytes @ 0x1D
  8113                           
  8114                           
  8115                           ; 1 bytes @ 0x1D
  8116  003D                     	ds	1
  8117  003E                     blinkLEDColor@blinks:
  8118  003E                     _doFactoryReset$1680:	
  8119                           ; 1 bytes @ 0x1E
  8120                           
  8121                           
  8122                           ; 2 bytes @ 0x1E
  8123  003E                     	ds	1
  8124  003F                     ??_blinkLEDColor:
  8125  003F                     _getBTAddress$1661:	
  8126                           ; 1 bytes @ 0x1F
  8127                           
  8128  003F                     _setBTConnection$1669:	
  8129                           ; 2 bytes @ 0x1F
  8130                           
  8131                           
  8132                           ; 2 bytes @ 0x1F
  8133  003F                     	ds	1
  8134  0040                     blinkLEDColor@blink:
  8135                           
  8136                           ; 1 bytes @ 0x20
  8137  0040                     	ds	1
  8138  0041                     ??_bumpUISpeedMode:
  8139  0041                     ??_bumpUIBrakeMode:	
  8140                           ; 1 bytes @ 0x21
  8141                           
  8142  0041                     getBTAddress@MAC:	
  8143                           ; 1 bytes @ 0x21
  8144                           
  8145  0041                     _setBTConnection$1672:	
  8146                           ; 1 bytes @ 0x21
  8147                           
  8148                           
  8149                           ; 2 bytes @ 0x21
  8150  0041                     	ds	1
  8151  0042                     getBTAddress@addrPointer:
  8152                           
  8153                           ; 1 bytes @ 0x22
  8154  0042                     	ds	1
  8155  0043                     setBTConnection@MAC:
  8156                           
  8157                           ; 1 bytes @ 0x23
  8158  0043                     	ds	1
  8159  0044                     ??_pairBluetoothDevices:
  8160                           
  8161                           ; 1 bytes @ 0x24
  8162  0044                     	ds	1
  8163  0045                     ??_main:
  8164                           
  8165                           	psect	maintext
  8166  0FA3                     __pmaintext:	
  8167                           ; 1 bytes @ 0x25
  8168 ;;
  8169 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  8170 ;;
  8171 ;; *************** function _main *****************
  8172 ;; Defined at:
  8173 ;;		line 20 in file "main.c"
  8174 ;; Parameters:    Size  Location     Type
  8175 ;;		None
  8176 ;; Auto vars:     Size  Location     Type
  8177 ;;		None
  8178 ;; Return value:  Size  Location     Type
  8179 ;;                  1    wreg      void 
  8180 ;; Registers used:
  8181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8182 ;; Tracked objects:
  8183 ;;		On entry : B3F/0
  8184 ;;		On exit  : 0/0
  8185 ;;		Unchanged: 0/0
  8186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8191 ;;Total ram usage:        0 bytes
  8192 ;; Hardware stack levels required when called:   14
  8193 ;; This function calls:
  8194 ;;		_BTTimeRemaining
  8195 ;;		_SYSTEM_Initialize
  8196 ;;		_enableJoystick
  8197 ;;		_initConfiguration
  8198 ;;		_initJoystick
  8199 ;;		_initSerial
  8200 ;;		_initTimers
  8201 ;;		_initUI
  8202 ;;		_powerIsOn
  8203 ;;		_resetBTTimer
  8204 ;;		_runUI
  8205 ;;		_showShutdown
  8206 ;;		_showStartup
  8207 ;;		_sleep
  8208 ;;		_turnPowerOff
  8209 ;;		_turnPowerOn
  8210 ;; This function is called by:
  8211 ;;		Startup code after reset
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215                           
  8216                           ;psect for function _main
  8217  0FA3                     _main:
  8218  0FA3                     l5410:	
  8219                           ;incstack = 0
  8220                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8221                           
  8222                           
  8223                           ;main.c: 23:     SYSTEM_Initialize();
  8224  0FA3  3197  2701  318F   	fcall	_SYSTEM_Initialize
  8225                           
  8226                           ;main.c: 24:     initTimers();
  8227  0FA6  3197  27C7  318F   	fcall	_initTimers
  8228  0FA9                     l5412:
  8229                           
  8230                           ;main.c: 25:     initSerial();
  8231  0FA9  3189  2139  318F   	fcall	_initSerial
  8232  0FAC                     l5414:
  8233                           
  8234                           ;main.c: 26:     initJoystick();
  8235  0FAC  3196  2697  318F   	fcall	_initJoystick
  8236                           
  8237                           ;main.c: 27:     initUI();
  8238  0FAF  318C  2462  318F   	fcall	_initUI
  8239  0FB2                     l5416:
  8240                           
  8241                           ;main.c: 30:     (INTCONbits.GIE = 1);
  8242  0FB2  178B               	bsf	11,7	;volatile
  8243  0FB3                     l5418:
  8244                           
  8245                           ;main.c: 33:     (INTCONbits.PEIE = 1);
  8246  0FB3  170B               	bsf	11,6	;volatile
  8247  0FB4                     l5420:
  8248                           
  8249                           ;main.c: 35:     initConfiguration();
  8250  0FB4  3195  2583  318F   	fcall	_initConfiguration
  8251  0FB7                     l5422:
  8252                           
  8253                           ;main.c: 37:     turnPowerOn();
  8254  0FB7  3195  2547  318F   	fcall	_turnPowerOn
  8255  0FBA                     l5424:
  8256                           
  8257                           ;main.c: 38:     showStartup();
  8258  0FBA  3189  21E0  318F   	fcall	_showStartup
  8259  0FBD                     l5426:
  8260                           
  8261                           ;main.c: 40:     sleep(1000);
  8262  0FBD  3000               	movlw	0
  8263  0FBE  0140               	movlb	0	; select bank0
  8264  0FBF  00B1               	movwf	sleep@delay+3
  8265  0FC0  3000               	movlw	0
  8266  0FC1  00B0               	movwf	sleep@delay+2
  8267  0FC2  3003               	movlw	3
  8268  0FC3  00AF               	movwf	sleep@delay+1
  8269  0FC4  30E8               	movlw	232
  8270  0FC5  00AE               	movwf	sleep@delay
  8271  0FC6  3189  21B5  318F   	fcall	_sleep
  8272  0FC9                     l5428:
  8273                           
  8274                           ;main.c: 41:     enableJoystick();
  8275  0FC9  3195  253E  318F   	fcall	_enableJoystick
  8276  0FCC                     l5430:
  8277                           
  8278                           ;main.c: 44:         runUI();
  8279  0FCC  3180  20A2  318F   	fcall	_runUI
  8280  0FCF                     l5432:
  8281                           
  8282                           ;main.c: 47:         if (BTTimeRemaining() == 0) {
  8283  0FCF  318E  2632  318F   	fcall	_BTTimeRemaining
  8284  0FD2  0140               	movlb	0	; select bank0
  8285  0FD3  0829               	movf	?_BTTimeRemaining+3,w
  8286  0FD4  0428               	iorwf	?_BTTimeRemaining+2,w
  8287  0FD5  0427               	iorwf	?_BTTimeRemaining+1,w
  8288  0FD6  0426               	iorwf	?_BTTimeRemaining,w
  8289  0FD7  1D03               	skipz
  8290  0FD8  2FDA               	goto	u4181
  8291  0FD9  2FDB               	goto	u4180
  8292  0FDA                     u4181:
  8293  0FDA  2FF1               	goto	l600
  8294  0FDB                     u4180:
  8295  0FDB                     l5434:
  8296                           
  8297                           ;main.c: 48:             turnPowerOff();
  8298  0FDB  3194  2483  318F   	fcall	_turnPowerOff
  8299  0FDE                     l5436:
  8300                           
  8301                           ;main.c: 49:             showShutdown();
  8302  0FDE  3188  2032  318F   	fcall	_showShutdown
  8303  0FE1  0063               	sleep	;# 
  8304  0FE2                     l5438:
  8305                           
  8306                           ;main.c: 52:             __nop();
  8307  0FE2  0000               	nop
  8308  0FE3                     l5440:	
  8309                           ;main.c: 54:             while (!powerIsOn()) ;
  8310                           
  8311  0FE3  3194  2475  318F   	fcall	_powerIsOn
  8312  0FE6  3A00               	xorlw	0
  8313  0FE7  1903               	skipnz
  8314  0FE8  2FEA               	goto	u4191
  8315  0FE9  2FEB               	goto	u4190
  8316  0FEA                     u4191:
  8317  0FEA  2FE3               	goto	l5440
  8318  0FEB                     u4190:
  8319  0FEB                     l5442:
  8320                           
  8321                           ;main.c: 56:             showStartup();
  8322  0FEB  3189  21E0  318F   	fcall	_showStartup
  8323                           
  8324                           ;main.c: 57:             resetBTTimer();
  8325  0FEE  3196  2660  318F   	fcall	_resetBTTimer
  8326  0FF1                     l600:	
  8327                           ;main.c: 58:         }
  8328                           
  8329                           
  8330                           ;main.c: 60:         sleep(50);
  8331  0FF1  3000               	movlw	0
  8332  0FF2  0140               	movlb	0	; select bank0
  8333  0FF3  00B1               	movwf	sleep@delay+3
  8334  0FF4  3000               	movlw	0
  8335  0FF5  00B0               	movwf	sleep@delay+2
  8336  0FF6  3000               	movlw	0
  8337  0FF7  00AF               	movwf	sleep@delay+1
  8338  0FF8  3032               	movlw	50
  8339  0FF9  00AE               	movwf	sleep@delay
  8340  0FFA  3189  21B5  318F   	fcall	_sleep
  8341  0FFD  2FCC               	goto	l5430
  8342  0FFE  3180  285B         	ljmp	start
  8343  1000                     __end_of_main:
  8344                           
  8345                           	psect	text1
  8346  1547                     __ptext1:	
  8347 ;; *************** function _turnPowerOn *****************
  8348 ;; Defined at:
  8349 ;;		line 50 in file "configure.c"
  8350 ;; Parameters:    Size  Location     Type
  8351 ;;		None
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;		None
  8354 ;; Return value:  Size  Location     Type
  8355 ;;                  1    wreg      void 
  8356 ;; Registers used:
  8357 ;;		None
  8358 ;; Tracked objects:
  8359 ;;		On entry : 0/0
  8360 ;;		On exit  : 0/0
  8361 ;;		Unchanged: 0/0
  8362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8367 ;;Total ram usage:        0 bytes
  8368 ;; Hardware stack levels used:    1
  8369 ;; Hardware stack levels required when called:    7
  8370 ;; This function calls:
  8371 ;;		Nothing
  8372 ;; This function is called by:
  8373 ;;		_main
  8374 ;;		_initUI
  8375 ;;		_IOCCF0_ISR
  8376 ;;		_IOCCF2_ISR
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           
  8381                           ;psect for function _turnPowerOn
  8382  1547                     _turnPowerOn:
  8383                           
  8384                           ;Skip over the trampoline to the duplicate function for level 1
  8385  1547  1C7E               	btfss	int$flags,0
  8386  1548  2D4B               	goto	_turnPowerOn$intlevel0
  8387  1549  3194  2C87         	ljmp	i1_turnPowerOn
  8388  154B                     _turnPowerOn$intlevel0:
  8389  154B                     l928:	
  8390                           ;incstack = 0
  8391                           ; Regs used in _turnPowerOn: []
  8392                           ;configure.c: 51:     do { LATAbits.LATA5 = 0; } while(0);
  8393                           
  8394  154B  0140               	movlb	0	; select bank0
  8395  154C  1298               	bcf	24,5	;volatile
  8396  154D                     l929:
  8397                           
  8398                           ;configure.c: 52:     powerOn = 1;
  8399  154D  01D7               	clrf	_powerOn
  8400  154E  0AD7               	incf	_powerOn,f
  8401  154F                     l930:
  8402  154F  0008               	return
  8403  1550                     __end_of_turnPowerOn:
  8404                           
  8405                           	psect	text2
  8406  1483                     __ptext2:	
  8407 ;; *************** function _turnPowerOff *****************
  8408 ;; Defined at:
  8409 ;;		line 55 in file "configure.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;		None
  8412 ;; Auto vars:     Size  Location     Type
  8413 ;;		None
  8414 ;; Return value:  Size  Location     Type
  8415 ;;                  1    wreg      void 
  8416 ;; Registers used:
  8417 ;;		status,2
  8418 ;; Tracked objects:
  8419 ;;		On entry : 0/0
  8420 ;;		On exit  : 0/0
  8421 ;;		Unchanged: 0/0
  8422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8427 ;;Total ram usage:        0 bytes
  8428 ;; Hardware stack levels used:    1
  8429 ;; Hardware stack levels required when called:    7
  8430 ;; This function calls:
  8431 ;;		Nothing
  8432 ;; This function is called by:
  8433 ;;		_main
  8434 ;; This function uses a non-reentrant model
  8435 ;;
  8436                           
  8437                           
  8438                           ;psect for function _turnPowerOff
  8439  1483                     _turnPowerOff:
  8440  1483                     l933:	
  8441                           ;incstack = 0
  8442                           ; Regs used in _turnPowerOff: [status,2]
  8443                           ;configure.c: 56:     do { LATAbits.LATA5 = 1; } while(0);
  8444                           
  8445  1483  0140               	movlb	0	; select bank0
  8446  1484  1698               	bsf	24,5	;volatile
  8447  1485                     l4614:
  8448                           
  8449                           ;configure.c: 57:     powerOn = 0;
  8450  1485  01D7               	clrf	_powerOn
  8451  1486                     l935:
  8452  1486  0008               	return
  8453  1487                     __end_of_turnPowerOff:
  8454                           
  8455                           	psect	text3
  8456  09E0                     __ptext3:	
  8457 ;; *************** function _showStartup *****************
  8458 ;; Defined at:
  8459 ;;		line 189 in file "ui.c"
  8460 ;; Parameters:    Size  Location     Type
  8461 ;;		None
  8462 ;; Auto vars:     Size  Location     Type
  8463 ;;  ramp            1   23[BANK0 ] char 
  8464 ;; Return value:  Size  Location     Type
  8465 ;;                  1    wreg      void 
  8466 ;; Registers used:
  8467 ;;		wreg, status,2, status,0, pclath, cstack
  8468 ;; Tracked objects:
  8469 ;;		On entry : 0/0
  8470 ;;		On exit  : 0/0
  8471 ;;		Unchanged: 0/0
  8472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8474 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8475 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8476 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8477 ;;Total ram usage:        2 bytes
  8478 ;; Hardware stack levels used:    1
  8479 ;; Hardware stack levels required when called:    9
  8480 ;; This function calls:
  8481 ;;		_setBTTimeout
  8482 ;;		_sleep
  8483 ;; This function is called by:
  8484 ;;		_main
  8485 ;; This function uses a non-reentrant model
  8486 ;;
  8487                           
  8488                           
  8489                           ;psect for function _showStartup
  8490  09E0                     _showStartup:
  8491  09E0                     l5264:	
  8492                           ;incstack = 0
  8493                           ; Regs used in _showStartup: [wreg+status,2+status,0+pclath+cstack]
  8494                           
  8495                           
  8496                           ;ui.c: 190:     int8_t ramp = 0;
  8497  09E0  0140               	movlb	0	; select bank0
  8498  09E1  01B7               	clrf	showStartup@ramp
  8499                           
  8500                           ;ui.c: 192:     for (ramp = 0 ; ramp < 7; ramp++) {
  8501  09E2  01B7               	clrf	showStartup@ramp
  8502  09E3                     l5270:
  8503                           
  8504                           ;ui.c: 193:         G_LED = ramp;
  8505  09E3  0837               	movf	showStartup@ramp,w
  8506  09E4  00B6               	movwf	??_showStartup
  8507  09E5  0836               	movf	??_showStartup,w
  8508  09E6  00D2               	movwf	_G_LED
  8509  09E7                     l5272:
  8510                           
  8511                           ;ui.c: 194:         sleep(40);
  8512  09E7  3000               	movlw	0
  8513  09E8  00B1               	movwf	sleep@delay+3
  8514  09E9  3000               	movlw	0
  8515  09EA  00B0               	movwf	sleep@delay+2
  8516  09EB  3000               	movlw	0
  8517  09EC  00AF               	movwf	sleep@delay+1
  8518  09ED  3028               	movlw	40
  8519  09EE  00AE               	movwf	sleep@delay
  8520  09EF  3189  21B5  3189   	fcall	_sleep
  8521  09F2                     l5274:
  8522                           
  8523                           ;ui.c: 195:     }
  8524  09F2  3001               	movlw	1
  8525  09F3  0140               	movlb	0	; select bank0
  8526  09F4  00B6               	movwf	??_showStartup
  8527  09F5  0836               	movf	??_showStartup,w
  8528  09F6  07B7               	addwf	showStartup@ramp,f
  8529  09F7                     l5276:
  8530  09F7  0837               	movf	showStartup@ramp,w
  8531  09F8  3A80               	xorlw	128
  8532  09F9  3E79               	addlw	-135
  8533  09FA  1C03               	skipc
  8534  09FB  29FD               	goto	u3981
  8535  09FC  29FE               	goto	u3980
  8536  09FD                     u3981:
  8537  09FD  29E3               	goto	l5270
  8538  09FE                     u3980:
  8539  09FE                     l5278:
  8540                           
  8541                           ;ui.c: 196:     G_LED = 0;
  8542  09FE  01D2               	clrf	_G_LED
  8543  09FF                     l5280:
  8544                           
  8545                           ;ui.c: 197:     setBTTimeout(10000);
  8546  09FF  3000               	movlw	0
  8547  0A00  00A9               	movwf	setBTTimeout@timeout+3
  8548  0A01  3000               	movlw	0
  8549  0A02  00A8               	movwf	setBTTimeout@timeout+2
  8550  0A03  3027               	movlw	39
  8551  0A04  00A7               	movwf	setBTTimeout@timeout+1
  8552  0A05  3010               	movlw	16
  8553  0A06  00A6               	movwf	setBTTimeout@timeout
  8554  0A07  3196  2671  3189   	fcall	_setBTTimeout
  8555  0A0A                     l1122:
  8556  0A0A  0008               	return
  8557  0A0B                     __end_of_showStartup:
  8558                           
  8559                           	psect	text4
  8560  1671                     __ptext4:	
  8561 ;; *************** function _setBTTimeout *****************
  8562 ;; Defined at:
  8563 ;;		line 53 in file "timers.c"
  8564 ;; Parameters:    Size  Location     Type
  8565 ;;  timeout         4    6[BANK0 ] unsigned long 
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;		None
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  1    wreg      void 
  8570 ;; Registers used:
  8571 ;;		wreg
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8577 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8580 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8581 ;;Total ram usage:        4 bytes
  8582 ;; Hardware stack levels used:    1
  8583 ;; Hardware stack levels required when called:    7
  8584 ;; This function calls:
  8585 ;;		Nothing
  8586 ;; This function is called by:
  8587 ;;		_showStartup
  8588 ;; This function uses a non-reentrant model
  8589 ;;
  8590                           
  8591                           
  8592                           ;psect for function _setBTTimeout
  8593  1671                     _setBTTimeout:
  8594  1671                     l4228:	
  8595                           ;incstack = 0
  8596                           ; Regs used in _setBTTimeout: [wreg]
  8597                           
  8598                           
  8599                           ;timers.c: 54:     BTTimeout = timeout;
  8600  1671  0140               	movlb	0	; select bank0
  8601  1672  0829               	movf	setBTTimeout@timeout+3,w
  8602  1673  0141               	movlb	1	; select bank1
  8603  1674  00A7               	movwf	(_BTTimeout+3)^(0+128)
  8604  1675  0140               	movlb	0	; select bank0
  8605  1676  0828               	movf	setBTTimeout@timeout+2,w
  8606  1677  0141               	movlb	1	; select bank1
  8607  1678  00A6               	movwf	(_BTTimeout+2)^(0+128)
  8608  1679  0140               	movlb	0	; select bank0
  8609  167A  0827               	movf	setBTTimeout@timeout+1,w
  8610  167B  0141               	movlb	1	; select bank1
  8611  167C  00A5               	movwf	(_BTTimeout+1)^(0+128)
  8612  167D  0140               	movlb	0	; select bank0
  8613  167E  0826               	movf	setBTTimeout@timeout,w
  8614  167F  0141               	movlb	1	; select bank1
  8615  1680  00A4               	movwf	_BTTimeout^(0+128)
  8616  1681                     l855:
  8617  1681  0008               	return
  8618  1682                     __end_of_setBTTimeout:
  8619                           
  8620                           	psect	text5
  8621  0832                     __ptext5:	
  8622 ;; *************** function _showShutdown *****************
  8623 ;; Defined at:
  8624 ;;		line 200 in file "ui.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;		None
  8627 ;; Auto vars:     Size  Location     Type
  8628 ;;  ramp            1   23[BANK0 ] char 
  8629 ;; Return value:  Size  Location     Type
  8630 ;;                  1    wreg      void 
  8631 ;; Registers used:
  8632 ;;		wreg, status,2, status,0, pclath, cstack
  8633 ;; Tracked objects:
  8634 ;;		On entry : 0/0
  8635 ;;		On exit  : 0/0
  8636 ;;		Unchanged: 0/0
  8637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8639 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8640 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8641 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8642 ;;Total ram usage:        2 bytes
  8643 ;; Hardware stack levels used:    1
  8644 ;; Hardware stack levels required when called:    9
  8645 ;; This function calls:
  8646 ;;		_sleep
  8647 ;; This function is called by:
  8648 ;;		_main
  8649 ;; This function uses a non-reentrant model
  8650 ;;
  8651                           
  8652                           
  8653                           ;psect for function _showShutdown
  8654  0832                     _showShutdown:
  8655  0832                     l5394:	
  8656                           ;incstack = 0
  8657                           ; Regs used in _showShutdown: [wreg+status,2+status,0+pclath+cstack]
  8658                           
  8659  0832                     l5396:
  8660                           
  8661                           ;ui.c: 203:     for (ramp = 7 ; ramp >= 0; ramp--) {
  8662  0832  3007               	movlw	7
  8663  0833  0140               	movlb	0	; select bank0
  8664  0834  00B6               	movwf	??_showShutdown
  8665  0835  0836               	movf	??_showShutdown,w
  8666  0836  00B7               	movwf	showShutdown@ramp
  8667  0837                     l5402:
  8668                           
  8669                           ;ui.c: 204:         R_LED = ramp;
  8670  0837  0837               	movf	showShutdown@ramp,w
  8671  0838  00B6               	movwf	??_showShutdown
  8672  0839  0836               	movf	??_showShutdown,w
  8673  083A  00D3               	movwf	_R_LED
  8674  083B                     l5404:
  8675                           
  8676                           ;ui.c: 205:         sleep(40);
  8677  083B  3000               	movlw	0
  8678  083C  00B1               	movwf	sleep@delay+3
  8679  083D  3000               	movlw	0
  8680  083E  00B0               	movwf	sleep@delay+2
  8681  083F  3000               	movlw	0
  8682  0840  00AF               	movwf	sleep@delay+1
  8683  0841  3028               	movlw	40
  8684  0842  00AE               	movwf	sleep@delay
  8685  0843  3189  21B5  3188   	fcall	_sleep
  8686  0846                     l5406:
  8687                           
  8688                           ;ui.c: 206:     }
  8689  0846  30FF               	movlw	255
  8690  0847  0140               	movlb	0	; select bank0
  8691  0848  00B6               	movwf	??_showShutdown
  8692  0849  0836               	movf	??_showShutdown,w
  8693  084A  07B7               	addwf	showShutdown@ramp,f
  8694  084B                     l5408:
  8695  084B  1FB7               	btfss	showShutdown@ramp,7
  8696  084C  284E               	goto	u4171
  8697  084D  284F               	goto	u4170
  8698  084E                     u4171:
  8699  084E  2837               	goto	l5402
  8700  084F                     u4170:
  8701  084F                     l1127:
  8702  084F  0008               	return
  8703  0850                     __end_of_showShutdown:
  8704                           
  8705                           	psect	text6
  8706  00A2                     __ptext6:	
  8707 ;; *************** function _runUI *****************
  8708 ;; Defined at:
  8709 ;;		line 66 in file "ui.c"
  8710 ;; Parameters:    Size  Location     Type
  8711 ;;		None
  8712 ;; Auto vars:     Size  Location     Type
  8713 ;;  timeRemainin    4    2[BANK1 ] long 
  8714 ;; Return value:  Size  Location     Type
  8715 ;;                  1    wreg      void 
  8716 ;; Registers used:
  8717 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8718 ;; Tracked objects:
  8719 ;;		On entry : 0/0
  8720 ;;		On exit  : 0/0
  8721 ;;		Unchanged: 0/0
  8722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8724 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8725 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8726 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8727 ;;Total ram usage:        6 bytes
  8728 ;; Hardware stack levels used:    1
  8729 ;; Hardware stack levels required when called:   13
  8730 ;; This function calls:
  8731 ;;		_BTTimeRemaining
  8732 ;;		_USER1_pressed
  8733 ;;		_USER2_pressed
  8734 ;;		_bumpUIBrakeMode
  8735 ;;		_bumpUISpeedMode
  8736 ;;		_disableJoystick
  8737 ;;		_doFactoryReset
  8738 ;;		_enableJoystick
  8739 ;;		_getTicks
  8740 ;;		_getTicksSince
  8741 ;;		_oneSec
  8742 ;;		_pairBluetoothDevices
  8743 ;;		_pulseLEDColor
  8744 ;; This function is called by:
  8745 ;;		_main
  8746 ;; This function uses a non-reentrant model
  8747 ;;
  8748                           
  8749                           
  8750                           ;psect for function _runUI
  8751  00A2                     _runUI:
  8752  00A2                     l5282:	
  8753                           ;incstack = 0
  8754                           ; Regs used in _runUI: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8755                           
  8756                           
  8757                           ;ui.c: 67:     int32_t timeRemaining;;ui.c: 69:     switch (uiState) {
  8758  00A2  2A15               	goto	l5372
  8759  00A3                     l5284:
  8760                           
  8761                           ;ui.c: 71:             if (USER1_pressed()) {
  8762  00A3  3194  24A9  3180   	fcall	_USER1_pressed
  8763  00A6  3A00               	xorlw	0
  8764  00A7  1903               	skipnz
  8765  00A8  28AA               	goto	u3991
  8766  00A9  28AB               	goto	u3990
  8767  00AA                     u3991:
  8768  00AA  28C4               	goto	l5290
  8769  00AB                     u3990:
  8770  00AB                     l5286:
  8771                           
  8772                           ;ui.c: 72:                 uiStateTime = getTicks();
  8773  00AB  3195  256E  3180   	fcall	_getTicks
  8774  00AE  0140               	movlb	0	; select bank0
  8775  00AF  0829               	movf	?_getTicks+3,w
  8776  00B0  0141               	movlb	1	; select bank1
  8777  00B1  00A3               	movwf	(_uiStateTime+3)^(0+128)
  8778  00B2  0140               	movlb	0	; select bank0
  8779  00B3  0828               	movf	?_getTicks+2,w
  8780  00B4  0141               	movlb	1	; select bank1
  8781  00B5  00A2               	movwf	(_uiStateTime+2)^(0+128)
  8782  00B6  0140               	movlb	0	; select bank0
  8783  00B7  0827               	movf	?_getTicks+1,w
  8784  00B8  0141               	movlb	1	; select bank1
  8785  00B9  00A1               	movwf	(_uiStateTime+1)^(0+128)
  8786  00BA  0140               	movlb	0	; select bank0
  8787  00BB  0826               	movf	?_getTicks,w
  8788  00BC  0141               	movlb	1	; select bank1
  8789  00BD  00A0               	movwf	_uiStateTime^(0+128)
  8790  00BE                     l5288:
  8791                           
  8792                           ;ui.c: 73:                 uiState = 2;
  8793  00BE  3002               	movlw	2
  8794  00BF  00EA               	movwf	??_runUI^(0+128)
  8795  00C0  086A               	movf	??_runUI^(0+128),w
  8796  00C1  0140               	movlb	0	; select bank0
  8797  00C2  00CF               	movwf	_uiState
  8798                           
  8799                           ;ui.c: 74:             } else if (USER2_pressed()) {
  8800  00C3  2A36               	goto	l5374
  8801  00C4                     l5290:
  8802  00C4  3194  24B0  3180   	fcall	_USER2_pressed
  8803  00C7  3A00               	xorlw	0
  8804  00C8  1903               	skipnz
  8805  00C9  28CB               	goto	u4001
  8806  00CA  28CC               	goto	u4000
  8807  00CB                     u4001:
  8808  00CB  2A36               	goto	l5374
  8809  00CC                     u4000:
  8810  00CC                     l5292:
  8811                           
  8812                           ;ui.c: 75:                 uiStateTime = getTicks();
  8813  00CC  3195  256E  3180   	fcall	_getTicks
  8814  00CF  0140               	movlb	0	; select bank0
  8815  00D0  0829               	movf	?_getTicks+3,w
  8816  00D1  0141               	movlb	1	; select bank1
  8817  00D2  00A3               	movwf	(_uiStateTime+3)^(0+128)
  8818  00D3  0140               	movlb	0	; select bank0
  8819  00D4  0828               	movf	?_getTicks+2,w
  8820  00D5  0141               	movlb	1	; select bank1
  8821  00D6  00A2               	movwf	(_uiStateTime+2)^(0+128)
  8822  00D7  0140               	movlb	0	; select bank0
  8823  00D8  0827               	movf	?_getTicks+1,w
  8824  00D9  0141               	movlb	1	; select bank1
  8825  00DA  00A1               	movwf	(_uiStateTime+1)^(0+128)
  8826  00DB  0140               	movlb	0	; select bank0
  8827  00DC  0826               	movf	?_getTicks,w
  8828  00DD  0141               	movlb	1	; select bank1
  8829  00DE  00A0               	movwf	_uiStateTime^(0+128)
  8830  00DF                     l5294:
  8831                           
  8832                           ;ui.c: 76:                 uiState = 4;
  8833  00DF  3004               	movlw	4
  8834  00E0  00EA               	movwf	??_runUI^(0+128)
  8835  00E1  086A               	movf	??_runUI^(0+128),w
  8836  00E2  0140               	movlb	0	; select bank0
  8837  00E3  00CF               	movwf	_uiState
  8838  00E4  2A36               	goto	l5374
  8839  00E5                     l5296:
  8840                           
  8841                           ;ui.c: 81:             if (USER1_pressed()){
  8842  00E5  3194  24A9  3180   	fcall	_USER1_pressed
  8843  00E8  3A00               	xorlw	0
  8844  00E9  1903               	skipnz
  8845  00EA  28EC               	goto	u4011
  8846  00EB  28ED               	goto	u4010
  8847  00EC                     u4011:
  8848  00EC  2924               	goto	l5304
  8849  00ED                     u4010:
  8850  00ED                     l5298:
  8851                           
  8852                           ;ui.c: 82:                 if (getTicksSince(uiStateTime) > 200) {
  8853  00ED  0141               	movlb	1	; select bank1
  8854  00EE  0823               	movf	(_uiStateTime+3)^(0+128),w
  8855  00EF  0140               	movlb	0	; select bank0
  8856  00F0  00A9               	movwf	getTicksSince@from+3
  8857  00F1  0141               	movlb	1	; select bank1
  8858  00F2  0822               	movf	(_uiStateTime+2)^(0+128),w
  8859  00F3  0140               	movlb	0	; select bank0
  8860  00F4  00A8               	movwf	getTicksSince@from+2
  8861  00F5  0141               	movlb	1	; select bank1
  8862  00F6  0821               	movf	(_uiStateTime+1)^(0+128),w
  8863  00F7  0140               	movlb	0	; select bank0
  8864  00F8  00A7               	movwf	getTicksSince@from+1
  8865  00F9  0141               	movlb	1	; select bank1
  8866  00FA  0820               	movf	_uiStateTime^(0+128),w
  8867  00FB  0140               	movlb	0	; select bank0
  8868  00FC  00A6               	movwf	getTicksSince@from
  8869  00FD  3197  2717  3180   	fcall	_getTicksSince
  8870  0100  0140               	movlb	0	; select bank0
  8871  0101  1BA9               	btfsc	?_getTicksSince+3,7
  8872  0102  2911               	goto	u4021
  8873  0103  0829               	movf	?_getTicksSince+3,w
  8874  0104  1D03               	btfss	3,2
  8875  0105  2912               	goto	u4020
  8876  0106  0828               	movf	?_getTicksSince+2,w
  8877  0107  1D03               	btfss	3,2
  8878  0108  2912               	goto	u4020
  8879  0109  0827               	movf	?_getTicksSince+1,w
  8880  010A  1D03               	btfss	3,2
  8881  010B  2912               	goto	u4020
  8882  010C  30C9               	movlw	201
  8883  010D  0226               	subwf	?_getTicksSince,w
  8884  010E  1C03               	btfss	3,0
  8885  010F  2911               	goto	u4021
  8886  0110  2912               	goto	u4020
  8887  0111                     u4021:
  8888  0111  2A36               	goto	l5374
  8889  0112                     u4020:
  8890  0112                     l5300:
  8891                           
  8892                           ;ui.c: 83:                     uiState = 1;
  8893  0112  01CF               	clrf	_uiState
  8894  0113  0ACF               	incf	_uiState,f
  8895  0114                     l5302:
  8896                           
  8897                           ;ui.c: 84:                     pulseLEDColor(0x300, 50, 100);
  8898  0114  3000               	movlw	0
  8899  0115  00B6               	movwf	pulseLEDColor@RGB
  8900  0116  3003               	movlw	3
  8901  0117  00B7               	movwf	pulseLEDColor@RGB+1
  8902  0118  3032               	movlw	50
  8903  0119  00B8               	movwf	pulseLEDColor@onTimeMS
  8904  011A  3000               	movlw	0
  8905  011B  00B9               	movwf	pulseLEDColor@onTimeMS+1
  8906  011C  3064               	movlw	100
  8907  011D  00BA               	movwf	pulseLEDColor@offTimeMS
  8908  011E  3000               	movlw	0
  8909  011F  00BB               	movwf	pulseLEDColor@offTimeMS+1
  8910  0120  3189  2115  3180   	fcall	_pulseLEDColor
  8911  0123  2A36               	goto	l5374
  8912  0124                     l5304:
  8913                           
  8914                           ;ui.c: 88:                 uiState = 0;
  8915  0124  0140               	movlb	0	; select bank0
  8916  0125  01CF               	clrf	_uiState
  8917  0126  2A36               	goto	l5374
  8918  0127                     l5306:
  8919                           
  8920                           ;ui.c: 93:             if (USER2_pressed()){
  8921  0127  3194  24B0  3180   	fcall	_USER2_pressed
  8922  012A  3A00               	xorlw	0
  8923  012B  1903               	skipnz
  8924  012C  292E               	goto	u4031
  8925  012D  292F               	goto	u4030
  8926  012E                     u4031:
  8927  012E  2924               	goto	l5304
  8928  012F                     u4030:
  8929  012F                     l5308:
  8930                           
  8931                           ;ui.c: 94:                 if (getTicksSince(uiStateTime) > 200) {
  8932  012F  0141               	movlb	1	; select bank1
  8933  0130  0823               	movf	(_uiStateTime+3)^(0+128),w
  8934  0131  0140               	movlb	0	; select bank0
  8935  0132  00A9               	movwf	getTicksSince@from+3
  8936  0133  0141               	movlb	1	; select bank1
  8937  0134  0822               	movf	(_uiStateTime+2)^(0+128),w
  8938  0135  0140               	movlb	0	; select bank0
  8939  0136  00A8               	movwf	getTicksSince@from+2
  8940  0137  0141               	movlb	1	; select bank1
  8941  0138  0821               	movf	(_uiStateTime+1)^(0+128),w
  8942  0139  0140               	movlb	0	; select bank0
  8943  013A  00A7               	movwf	getTicksSince@from+1
  8944  013B  0141               	movlb	1	; select bank1
  8945  013C  0820               	movf	_uiStateTime^(0+128),w
  8946  013D  0140               	movlb	0	; select bank0
  8947  013E  00A6               	movwf	getTicksSince@from
  8948  013F  3197  2717  3180   	fcall	_getTicksSince
  8949  0142  0140               	movlb	0	; select bank0
  8950  0143  1BA9               	btfsc	?_getTicksSince+3,7
  8951  0144  2953               	goto	u4041
  8952  0145  0829               	movf	?_getTicksSince+3,w
  8953  0146  1D03               	btfss	3,2
  8954  0147  2954               	goto	u4040
  8955  0148  0828               	movf	?_getTicksSince+2,w
  8956  0149  1D03               	btfss	3,2
  8957  014A  2954               	goto	u4040
  8958  014B  0827               	movf	?_getTicksSince+1,w
  8959  014C  1D03               	btfss	3,2
  8960  014D  2954               	goto	u4040
  8961  014E  30C9               	movlw	201
  8962  014F  0226               	subwf	?_getTicksSince,w
  8963  0150  1C03               	btfss	3,0
  8964  0151  2953               	goto	u4041
  8965  0152  2954               	goto	u4040
  8966  0153                     u4041:
  8967  0153  2A36               	goto	l5374
  8968  0154                     u4040:
  8969  0154                     l5310:
  8970                           
  8971                           ;ui.c: 95:                     uiState = 3;
  8972  0154  3003               	movlw	3
  8973  0155  0141               	movlb	1	; select bank1
  8974  0156  00EA               	movwf	??_runUI^(0+128)
  8975  0157  086A               	movf	??_runUI^(0+128),w
  8976  0158  0140               	movlb	0	; select bank0
  8977  0159  00CF               	movwf	_uiState
  8978  015A                     l5312:
  8979                           
  8980                           ;ui.c: 96:                     pulseLEDColor(0x030, 50, 100);
  8981  015A  3030               	movlw	48
  8982  015B  00B6               	movwf	pulseLEDColor@RGB
  8983  015C  3000               	movlw	0
  8984  015D  00B7               	movwf	pulseLEDColor@RGB+1
  8985  015E  3032               	movlw	50
  8986  015F  00B8               	movwf	pulseLEDColor@onTimeMS
  8987  0160  3000               	movlw	0
  8988  0161  00B9               	movwf	pulseLEDColor@onTimeMS+1
  8989  0162  3064               	movlw	100
  8990  0163  00BA               	movwf	pulseLEDColor@offTimeMS
  8991  0164  3000               	movlw	0
  8992  0165  00BB               	movwf	pulseLEDColor@offTimeMS+1
  8993  0166  3189  2115  3180   	fcall	_pulseLEDColor
  8994  0169  2A36               	goto	l5374
  8995  016A                     l5316:
  8996                           
  8997                           ;ui.c: 106:             if (!USER1_pressed()){
  8998  016A  3194  24A9  3180   	fcall	_USER1_pressed
  8999  016D  3A00               	xorlw	0
  9000  016E  1D03               	skipz
  9001  016F  2971               	goto	u4051
  9002  0170  2972               	goto	u4050
  9003  0171                     u4051:
  9004  0171  2977               	goto	l5322
  9005  0172                     u4050:
  9006  0172                     l5318:
  9007                           
  9008                           ;ui.c: 107:                 bumpUISpeedMode();
  9009  0172  3189  2160  3180   	fcall	_bumpUISpeedMode
  9010  0175                     l5320:
  9011                           
  9012                           ;ui.c: 108:                 uiState = 0;
  9013  0175  0140               	movlb	0	; select bank0
  9014  0176  01CF               	clrf	_uiState
  9015  0177                     l5322:
  9016                           
  9017                           ;ui.c: 110:             if (USER2_pressed()){
  9018  0177  3194  24B0  3180   	fcall	_USER2_pressed
  9019  017A  3A00               	xorlw	0
  9020  017B  1903               	skipnz
  9021  017C  297E               	goto	u4061
  9022  017D  297F               	goto	u4060
  9023  017E                     u4061:
  9024  017E  2A36               	goto	l5374
  9025  017F                     u4060:
  9026  017F                     l5324:
  9027                           
  9028                           ;ui.c: 111:                 pulseLEDColor(0x003, 50, 100);
  9029  017F  3003               	movlw	3
  9030  0180  0140               	movlb	0	; select bank0
  9031  0181  00B6               	movwf	pulseLEDColor@RGB
  9032  0182  3000               	movlw	0
  9033  0183  00B7               	movwf	pulseLEDColor@RGB+1
  9034  0184  3032               	movlw	50
  9035  0185  00B8               	movwf	pulseLEDColor@onTimeMS
  9036  0186  3000               	movlw	0
  9037  0187  00B9               	movwf	pulseLEDColor@onTimeMS+1
  9038  0188  3064               	movlw	100
  9039  0189  00BA               	movwf	pulseLEDColor@offTimeMS
  9040  018A  3000               	movlw	0
  9041  018B  00BB               	movwf	pulseLEDColor@offTimeMS+1
  9042  018C  3189  2115  3180   	fcall	_pulseLEDColor
  9043  018F                     l5326:
  9044                           
  9045                           ;ui.c: 112:                 uiState = 5;
  9046  018F  3005               	movlw	5
  9047  0190  0141               	movlb	1	; select bank1
  9048  0191  00EA               	movwf	??_runUI^(0+128)
  9049  0192  086A               	movf	??_runUI^(0+128),w
  9050  0193  0140               	movlb	0	; select bank0
  9051  0194  00CF               	movwf	_uiState
  9052  0195  2A36               	goto	l5374
  9053  0196                     l5328:
  9054                           
  9055                           ;ui.c: 118:             if (!USER2_pressed()){
  9056  0196  3194  24B0  3180   	fcall	_USER2_pressed
  9057  0199  3A00               	xorlw	0
  9058  019A  1D03               	skipz
  9059  019B  299D               	goto	u4071
  9060  019C  299E               	goto	u4070
  9061  019D                     u4071:
  9062  019D  29A3               	goto	l5334
  9063  019E                     u4070:
  9064  019E                     l5330:
  9065                           
  9066                           ;ui.c: 119:                 bumpUIBrakeMode();
  9067  019E  3197  27E3  3180   	fcall	_bumpUIBrakeMode
  9068  01A1                     l5332:
  9069                           
  9070                           ;ui.c: 120:                 uiState = 0;
  9071  01A1  0140               	movlb	0	; select bank0
  9072  01A2  01CF               	clrf	_uiState
  9073  01A3                     l5334:
  9074                           
  9075                           ;ui.c: 122:             if (USER1_pressed()){
  9076  01A3  3194  24A9  3180   	fcall	_USER1_pressed
  9077  01A6  3A00               	xorlw	0
  9078  01A7  1903               	skipnz
  9079  01A8  29AA               	goto	u4081
  9080  01A9  29AB               	goto	u4080
  9081  01AA                     u4081:
  9082  01AA  2A36               	goto	l5374
  9083  01AB                     u4080:
  9084  01AB  297F               	goto	l5324
  9085  01AC                     l5340:
  9086                           
  9087                           ;ui.c: 129:             if (getTicksSince(uiStateTime) > 4000) {
  9088  01AC  0823               	movf	(_uiStateTime+3)^(0+128),w
  9089  01AD  0140               	movlb	0	; select bank0
  9090  01AE  00A9               	movwf	getTicksSince@from+3
  9091  01AF  0141               	movlb	1	; select bank1
  9092  01B0  0822               	movf	(_uiStateTime+2)^(0+128),w
  9093  01B1  0140               	movlb	0	; select bank0
  9094  01B2  00A8               	movwf	getTicksSince@from+2
  9095  01B3  0141               	movlb	1	; select bank1
  9096  01B4  0821               	movf	(_uiStateTime+1)^(0+128),w
  9097  01B5  0140               	movlb	0	; select bank0
  9098  01B6  00A7               	movwf	getTicksSince@from+1
  9099  01B7  0141               	movlb	1	; select bank1
  9100  01B8  0820               	movf	_uiStateTime^(0+128),w
  9101  01B9  0140               	movlb	0	; select bank0
  9102  01BA  00A6               	movwf	getTicksSince@from
  9103  01BB  3197  2717  3180   	fcall	_getTicksSince
  9104  01BE  0140               	movlb	0	; select bank0
  9105  01BF  1BA9               	btfsc	?_getTicksSince+3,7
  9106  01C0  29CE               	goto	u4091
  9107  01C1  0829               	movf	?_getTicksSince+3,w
  9108  01C2  1D03               	btfss	3,2
  9109  01C3  29CF               	goto	u4090
  9110  01C4  0828               	movf	?_getTicksSince+2,w
  9111  01C5  1D03               	btfss	3,2
  9112  01C6  29CF               	goto	u4090
  9113  01C7  30A1               	movlw	161
  9114  01C8  0226               	subwf	?_getTicksSince,w
  9115  01C9  300F               	movlw	15
  9116  01CA  3B27               	subwfb	?_getTicksSince+1,w
  9117  01CB  1C03               	btfss	3,0
  9118  01CC  29CE               	goto	u4091
  9119  01CD  29CF               	goto	u4090
  9120  01CE                     u4091:
  9121  01CE  29E4               	goto	l5346
  9122  01CF                     u4090:
  9123  01CF                     l5342:
  9124                           
  9125                           ;ui.c: 130:                 pulseLEDColor(0x333, 50, 100);
  9126  01CF  3033               	movlw	51
  9127  01D0  00B6               	movwf	pulseLEDColor@RGB
  9128  01D1  3003               	movlw	3
  9129  01D2  00B7               	movwf	pulseLEDColor@RGB+1
  9130  01D3  3032               	movlw	50
  9131  01D4  00B8               	movwf	pulseLEDColor@onTimeMS
  9132  01D5  3000               	movlw	0
  9133  01D6  00B9               	movwf	pulseLEDColor@onTimeMS+1
  9134  01D7  3064               	movlw	100
  9135  01D8  00BA               	movwf	pulseLEDColor@offTimeMS
  9136  01D9  3000               	movlw	0
  9137  01DA  00BB               	movwf	pulseLEDColor@offTimeMS+1
  9138  01DB  3189  2115  3180   	fcall	_pulseLEDColor
  9139  01DE                     l5344:
  9140                           
  9141                           ;ui.c: 131:                 uiState = 6;
  9142  01DE  3006               	movlw	6
  9143  01DF  0141               	movlb	1	; select bank1
  9144  01E0  00EA               	movwf	??_runUI^(0+128)
  9145  01E1  086A               	movf	??_runUI^(0+128),w
  9146  01E2  0140               	movlb	0	; select bank0
  9147  01E3  00CF               	movwf	_uiState
  9148  01E4                     l5346:
  9149                           
  9150                           ;ui.c: 134:             if (!USER1_pressed() && !USER2_pressed()) {
  9151  01E4  3194  24A9  3180   	fcall	_USER1_pressed
  9152  01E7  3A00               	xorlw	0
  9153  01E8  1D03               	skipz
  9154  01E9  29EB               	goto	u4101
  9155  01EA  29EC               	goto	u4100
  9156  01EB                     u4101:
  9157  01EB  2A36               	goto	l5374
  9158  01EC                     u4100:
  9159  01EC                     l5348:
  9160  01EC  3194  24B0  3180   	fcall	_USER2_pressed
  9161  01EF  3A00               	xorlw	0
  9162  01F0  1D03               	skipz
  9163  01F1  29F3               	goto	u4111
  9164  01F2  29F4               	goto	u4110
  9165  01F3                     u4111:
  9166  01F3  2A36               	goto	l5374
  9167  01F4                     u4110:
  9168  01F4                     l5350:
  9169                           
  9170                           ;ui.c: 135:                 disableJoystick();
  9171  01F4  3194  248C  3180   	fcall	_disableJoystick
  9172  01F7                     l5352:
  9173                           
  9174                           ;ui.c: 136:                 pairBluetoothDevices();
  9175  01F7  3186  260D  3180   	fcall	_pairBluetoothDevices
  9176  01FA                     l5354:
  9177                           
  9178                           ;ui.c: 137:                 enableJoystick();
  9179  01FA  3195  253E  3180   	fcall	_enableJoystick
  9180  01FD  2924               	goto	l5304
  9181  01FE                     l5358:
  9182                           
  9183                           ;ui.c: 144:             if (!USER1_pressed() && !USER2_pressed()) {
  9184  01FE  3194  24A9  3180   	fcall	_USER1_pressed
  9185  0201  3A00               	xorlw	0
  9186  0202  1D03               	skipz
  9187  0203  2A05               	goto	u4121
  9188  0204  2A06               	goto	u4120
  9189  0205                     u4121:
  9190  0205  2A36               	goto	l5374
  9191  0206                     u4120:
  9192  0206                     l5360:
  9193  0206  3194  24B0  3180   	fcall	_USER2_pressed
  9194  0209  3A00               	xorlw	0
  9195  020A  1D03               	skipz
  9196  020B  2A0D               	goto	u4131
  9197  020C  2A0E               	goto	u4130
  9198  020D                     u4131:
  9199  020D  2A36               	goto	l5374
  9200  020E                     u4130:
  9201  020E                     l5362:
  9202                           
  9203                           ;ui.c: 145:                 disableJoystick();
  9204  020E  3194  248C  3180   	fcall	_disableJoystick
  9205  0211                     l5364:
  9206                           
  9207                           ;ui.c: 147:                 doFactoryReset();
  9208  0211  3184  2490  3180   	fcall	_doFactoryReset
  9209  0214  29FA               	goto	l5354
  9210  0215                     l5372:
  9211  0215  0140               	movlb	0	; select bank0
  9212  0216  084F               	movf	_uiState,w
  9213  0217  0141               	movlb	1	; select bank1
  9214  0218  00EA               	movwf	??_runUI^(0+128)
  9215  0219  01EB               	clrf	(??_runUI^(0+128)+1)
  9216                           
  9217                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9218                           ; Switch size 1, requested type "simple"
  9219                           ; Number of cases is 1, Range of values is 0 to 0
  9220                           ; switch strategies available:
  9221                           ; Name         Instructions Cycles
  9222                           ; simple_byte            4     3 (average)
  9223                           ; direct_byte            8     6 (fixed)
  9224                           ; jumptable            260     6 (fixed)
  9225                           ;	Chosen strategy is simple_byte
  9226  021A  086B               	movf	(??_runUI+1)^(0+128),w
  9227  021B  3A00               	xorlw	0	; case 0
  9228  021C  1903               	skipnz
  9229  021D  2A1F               	goto	l5474
  9230  021E  2A36               	goto	l5374
  9231  021F                     l5474:
  9232                           
  9233                           ; Switch size 1, requested type "simple"
  9234                           ; Number of cases is 7, Range of values is 0 to 6
  9235                           ; switch strategies available:
  9236                           ; Name         Instructions Cycles
  9237                           ; direct_byte           20     6 (fixed)
  9238                           ; simple_byte           22    12 (average)
  9239                           ; jumptable            260     6 (fixed)
  9240                           ;	Chosen strategy is simple_byte
  9241  021F  086A               	movf	??_runUI^(0+128),w
  9242  0220  3A00               	xorlw	0	; case 0
  9243  0221  1903               	skipnz
  9244  0222  28A3               	goto	l5284
  9245  0223  3A01               	xorlw	1	; case 1
  9246  0224  1903               	skipnz
  9247  0225  296A               	goto	l5316
  9248  0226  3A03               	xorlw	3	; case 2
  9249  0227  1903               	skipnz
  9250  0228  28E5               	goto	l5296
  9251  0229  3A01               	xorlw	1	; case 3
  9252  022A  1903               	skipnz
  9253  022B  2996               	goto	l5328
  9254  022C  3A07               	xorlw	7	; case 4
  9255  022D  1903               	skipnz
  9256  022E  2927               	goto	l5306
  9257  022F  3A01               	xorlw	1	; case 5
  9258  0230  1903               	skipnz
  9259  0231  29AC               	goto	l5340
  9260  0232  3A03               	xorlw	3	; case 6
  9261  0233  1903               	skipnz
  9262  0234  29FE               	goto	l5358
  9263  0235  2A36               	goto	l5374
  9264  0236                     l5374:
  9265                           
  9266                           ;ui.c: 158:     if (oneSec()) {
  9267  0236  3195  2578  3180   	fcall	_oneSec
  9268  0239  3A00               	xorlw	0
  9269  023A  1903               	skipnz
  9270  023B  2A3D               	goto	u4141
  9271  023C  2A3E               	goto	u4140
  9272  023D                     u4141:
  9273  023D  2AA3               	goto	l1105
  9274  023E                     u4140:
  9275  023E                     l5376:
  9276                           
  9277                           ;ui.c: 159:         timeRemaining = BTTimeRemaining();
  9278  023E  318E  2632  3180   	fcall	_BTTimeRemaining
  9279  0241  0140               	movlb	0	; select bank0
  9280  0242  0829               	movf	?_BTTimeRemaining+3,w
  9281  0243  0141               	movlb	1	; select bank1
  9282  0244  00EF               	movwf	(runUI@timeRemaining+3)^(0+128)
  9283  0245  0140               	movlb	0	; select bank0
  9284  0246  0828               	movf	?_BTTimeRemaining+2,w
  9285  0247  0141               	movlb	1	; select bank1
  9286  0248  00EE               	movwf	(runUI@timeRemaining+2)^(0+128)
  9287  0249  0140               	movlb	0	; select bank0
  9288  024A  0827               	movf	?_BTTimeRemaining+1,w
  9289  024B  0141               	movlb	1	; select bank1
  9290  024C  00ED               	movwf	(runUI@timeRemaining+1)^(0+128)
  9291  024D  0140               	movlb	0	; select bank0
  9292  024E  0826               	movf	?_BTTimeRemaining,w
  9293  024F  0141               	movlb	1	; select bank1
  9294  0250  00EC               	movwf	runUI@timeRemaining^(0+128)
  9295  0251                     l5378:
  9296                           
  9297                           ;ui.c: 160:         if (timeRemaining < 5000)
  9298  0251  1BEF               	btfsc	(runUI@timeRemaining+3)^(0+128),7
  9299  0252  2A61               	goto	u4150
  9300  0253  086F               	movf	(runUI@timeRemaining+3)^(0+128),w
  9301  0254  1D03               	btfss	3,2
  9302  0255  2A60               	goto	u4151
  9303  0256  086E               	movf	(runUI@timeRemaining+2)^(0+128),w
  9304  0257  1D03               	btfss	3,2
  9305  0258  2A60               	goto	u4151
  9306  0259  3088               	movlw	136
  9307  025A  026C               	subwf	runUI@timeRemaining^(0+128),w
  9308  025B  3013               	movlw	19
  9309  025C  3B6D               	subwfb	(runUI@timeRemaining+1)^(0+128),w
  9310  025D  1803               	btfsc	3,0
  9311  025E  2A60               	goto	u4151
  9312  025F  2A61               	goto	u4150
  9313  0260                     u4151:
  9314  0260  2A72               	goto	l5382
  9315  0261                     u4150:
  9316  0261                     l5380:
  9317                           
  9318                           ;ui.c: 161:             pulseLEDColor(0x100, 2, 1);
  9319  0261  3000               	movlw	0
  9320  0262  0140               	movlb	0	; select bank0
  9321  0263  00B6               	movwf	pulseLEDColor@RGB
  9322  0264  3001               	movlw	1
  9323  0265  00B7               	movwf	pulseLEDColor@RGB+1
  9324  0266  3002               	movlw	2
  9325  0267  00B8               	movwf	pulseLEDColor@onTimeMS
  9326  0268  3000               	movlw	0
  9327  0269  00B9               	movwf	pulseLEDColor@onTimeMS+1
  9328  026A  3001               	movlw	1
  9329  026B  00BA               	movwf	pulseLEDColor@offTimeMS
  9330  026C  3000               	movlw	0
  9331  026D  00BB               	movwf	pulseLEDColor@offTimeMS+1
  9332  026E  3189  2115  3180   	fcall	_pulseLEDColor
  9333  0271  2AA3               	goto	l1105
  9334  0272                     l5382:
  9335  0272  1BEF               	btfsc	(runUI@timeRemaining+3)^(0+128),7
  9336  0273  2A82               	goto	u4160
  9337  0274  086F               	movf	(runUI@timeRemaining+3)^(0+128),w
  9338  0275  1D03               	btfss	3,2
  9339  0276  2A81               	goto	u4161
  9340  0277  086E               	movf	(runUI@timeRemaining+2)^(0+128),w
  9341  0278  1D03               	btfss	3,2
  9342  0279  2A81               	goto	u4161
  9343  027A  3098               	movlw	152
  9344  027B  026C               	subwf	runUI@timeRemaining^(0+128),w
  9345  027C  303A               	movlw	58
  9346  027D  3B6D               	subwfb	(runUI@timeRemaining+1)^(0+128),w
  9347  027E  1803               	btfsc	3,0
  9348  027F  2A81               	goto	u4161
  9349  0280  2A82               	goto	u4160
  9350  0281                     u4161:
  9351  0281  2A93               	goto	l5386
  9352  0282                     u4160:
  9353  0282                     l5384:
  9354                           
  9355                           ;ui.c: 163:             pulseLEDColor(0x110, 2, 1);
  9356  0282  3010               	movlw	16
  9357  0283  0140               	movlb	0	; select bank0
  9358  0284  00B6               	movwf	pulseLEDColor@RGB
  9359  0285  3001               	movlw	1
  9360  0286  00B7               	movwf	pulseLEDColor@RGB+1
  9361  0287  3002               	movlw	2
  9362  0288  00B8               	movwf	pulseLEDColor@onTimeMS
  9363  0289  3000               	movlw	0
  9364  028A  00B9               	movwf	pulseLEDColor@onTimeMS+1
  9365  028B  3001               	movlw	1
  9366  028C  00BA               	movwf	pulseLEDColor@offTimeMS
  9367  028D  3000               	movlw	0
  9368  028E  00BB               	movwf	pulseLEDColor@offTimeMS+1
  9369  028F  3189  2115  3180   	fcall	_pulseLEDColor
  9370  0292  2AA3               	goto	l1105
  9371  0293                     l5386:
  9372                           
  9373                           ;ui.c: 165:             pulseLEDColor(0x010, 2, 1);
  9374  0293  3010               	movlw	16
  9375  0294  0140               	movlb	0	; select bank0
  9376  0295  00B6               	movwf	pulseLEDColor@RGB
  9377  0296  3000               	movlw	0
  9378  0297  00B7               	movwf	pulseLEDColor@RGB+1
  9379  0298  3002               	movlw	2
  9380  0299  00B8               	movwf	pulseLEDColor@onTimeMS
  9381  029A  3000               	movlw	0
  9382  029B  00B9               	movwf	pulseLEDColor@onTimeMS+1
  9383  029C  3001               	movlw	1
  9384  029D  00BA               	movwf	pulseLEDColor@offTimeMS
  9385  029E  3000               	movlw	0
  9386  029F  00BB               	movwf	pulseLEDColor@offTimeMS+1
  9387  02A0  3189  2115  3180   	fcall	_pulseLEDColor
  9388  02A3                     l1105:
  9389  02A3  0008               	return
  9390  02A4                     __end_of_runUI:
  9391                           
  9392                           	psect	text7
  9393  060D                     __ptext7:	
  9394 ;; *************** function _pairBluetoothDevices *****************
  9395 ;; Defined at:
  9396 ;;		line 78 in file "configure.c"
  9397 ;; Parameters:    Size  Location     Type
  9398 ;;		None
  9399 ;; Auto vars:     Size  Location     Type
  9400 ;;		None
  9401 ;; Return value:  Size  Location     Type
  9402 ;;                  1    wreg      void 
  9403 ;; Registers used:
  9404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9405 ;; Tracked objects:
  9406 ;;		On entry : 0/0
  9407 ;;		On exit  : 0/0
  9408 ;;		Unchanged: 0/0
  9409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9412 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9413 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9414 ;;Total ram usage:        1 bytes
  9415 ;; Hardware stack levels used:    1
  9416 ;; Hardware stack levels required when called:   12
  9417 ;; This function calls:
  9418 ;;		_SetSlaveTXMasterRX
  9419 ;;		_SetSlaveTXRX
  9420 ;;		_USER1_pressed
  9421 ;;		_USER2_pressed
  9422 ;;		_getBTAddress
  9423 ;;		_pulseLEDColor
  9424 ;;		_receiveBTBuffer
  9425 ;;		_sendBTString
  9426 ;;		_setBTBaudRatesTo38400
  9427 ;;		_setBTConnection
  9428 ;;		_sleep
  9429 ;;		_strstr
  9430 ;; This function is called by:
  9431 ;;		_runUI
  9432 ;; This function uses a non-reentrant model
  9433 ;;
  9434                           
  9435                           
  9436                           ;psect for function _pairBluetoothDevices
  9437  060D                     _pairBluetoothDevices:
  9438  060D                     l5174:	
  9439                           ;incstack = 0
  9440                           ; Regs used in _pairBluetoothDevices: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9441                           
  9442                           
  9443                           ;configure.c: 79:     setBTBaudRatesTo38400();
  9444  060D  3187  2759  3186   	fcall	_setBTBaudRatesTo38400
  9445                           
  9446                           ;configure.c: 82:     getBTAddress(slaveMAC, 0);
  9447  0610  0140               	movlb	0	; select bank0
  9448  0611  01BC               	clrf	getBTAddress@isMaster
  9449  0612  3054               	movlw	(low (_slaveMAC| (0+256)))& (0+255)
  9450  0613  3183  23BD  3186   	fcall	_getBTAddress
  9451                           
  9452                           ;configure.c: 83:     getBTAddress(masterMAC, 1);
  9453  0616  0140               	movlb	0	; select bank0
  9454  0617  01BC               	clrf	getBTAddress@isMaster
  9455  0618  0ABC               	incf	getBTAddress@isMaster,f
  9456  0619  3048               	movlw	(low (_masterMAC| (0+256)))& (0+255)
  9457  061A  3183  23BD  3186   	fcall	_getBTAddress
  9458                           
  9459                           ;configure.c: 86:     setBTConnection(slaveMAC, 1);
  9460  061D  0140               	movlb	0	; select bank0
  9461  061E  01BC               	clrf	setBTConnection@isMaster
  9462  061F  0ABC               	incf	setBTConnection@isMaster,f
  9463  0620  3054               	movlw	(low (_slaveMAC| (0+256)))& (0+255)
  9464  0621  3185  254F  3186   	fcall	_setBTConnection
  9465                           
  9466                           ;configure.c: 87:     setBTConnection(masterMAC, 0);
  9467  0624  0140               	movlb	0	; select bank0
  9468  0625  01BC               	clrf	setBTConnection@isMaster
  9469  0626  3048               	movlw	(low (_masterMAC| (0+256)))& (0+255)
  9470  0627  3185  254F  3186   	fcall	_setBTConnection
  9471  062A                     l5176:
  9472                           
  9473                           ;configure.c: 90:     SetSlaveTXMasterRX();
  9474  062A  3196  26C1  3186   	fcall	_SetSlaveTXMasterRX
  9475                           
  9476                           ;configure.c: 92:     while (!USER1_pressed() && !USER2_pressed()) {
  9477  062D  2E94               	goto	l5190
  9478  062E                     l5178:
  9479                           
  9480                           ;configure.c: 93:         sendBTString("HUGS\n");
  9481  062E  3046               	movlw	low (STR_1| (0+32768))
  9482  062F  0140               	movlb	0	; select bank0
  9483  0630  00B6               	movwf	sendBTString@buffer
  9484  0631  3098               	movlw	high (STR_1| (0+32768))
  9485  0632  00B7               	movwf	sendBTString@buffer+1
  9486  0633  3197  2778  3186   	fcall	_sendBTString
  9487  0636                     l5180:
  9488                           
  9489                           ;configure.c: 94:         if (receiveBTBuffer(RX_Buffer, 5, 1000) == 5){
  9490  0636  3005               	movlw	5
  9491  0637  0140               	movlb	0	; select bank0
  9492  0638  00C4               	movwf	??_pairBluetoothDevices
  9493  0639  0844               	movf	??_pairBluetoothDevices,w
  9494  063A  00AE               	movwf	receiveBTBuffer@maxChars
  9495  063B  30E8               	movlw	232
  9496  063C  00AF               	movwf	receiveBTBuffer@timeoutMS
  9497  063D  3003               	movlw	3
  9498  063E  00B0               	movwf	receiveBTBuffer@timeoutMS+1
  9499  063F  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
  9500  0640  318E  268E  3186   	fcall	_receiveBTBuffer
  9501  0643  3A05               	xorlw	5
  9502  0644  1D03               	skipz
  9503  0645  2E47               	goto	u3931
  9504  0646  2E48               	goto	u3930
  9505  0647                     u3931:
  9506  0647  2E78               	goto	l5188
  9507  0648                     u3930:
  9508  0648                     l5182:
  9509                           
  9510                           ;configure.c: 95:             if (strstr((char *)RX_Buffer, "HUGS\n"))
  9511  0648  3046               	movlw	low (STR_1| (0+32768))
  9512  0649  0140               	movlb	0	; select bank0
  9513  064A  00AF               	movwf	strstr@n
  9514  064B  3098               	movlw	high (STR_1| (0+32768))
  9515  064C  00B0               	movwf	strstr@n+1
  9516  064D  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
  9517  064E  318D  253C  3186   	fcall	_strstr
  9518  0651  3A00               	xorlw	0
  9519  0652  1903               	skipnz
  9520  0653  2E55               	goto	u3941
  9521  0654  2E56               	goto	u3940
  9522  0655                     u3941:
  9523  0655  2E67               	goto	l5186
  9524  0656                     u3940:
  9525  0656                     l5184:
  9526                           
  9527                           ;configure.c: 96:                 pulseLEDColor( 0x033, 4, 1);
  9528  0656  3033               	movlw	51
  9529  0657  0140               	movlb	0	; select bank0
  9530  0658  00B6               	movwf	pulseLEDColor@RGB
  9531  0659  3000               	movlw	0
  9532  065A  00B7               	movwf	pulseLEDColor@RGB+1
  9533  065B  3004               	movlw	4
  9534  065C  00B8               	movwf	pulseLEDColor@onTimeMS
  9535  065D  3000               	movlw	0
  9536  065E  00B9               	movwf	pulseLEDColor@onTimeMS+1
  9537  065F  3001               	movlw	1
  9538  0660  00BA               	movwf	pulseLEDColor@offTimeMS
  9539  0661  3000               	movlw	0
  9540  0662  00BB               	movwf	pulseLEDColor@offTimeMS+1
  9541  0663  3189  2115  3186   	fcall	_pulseLEDColor
  9542  0666  2E88               	goto	l951
  9543  0667                     l5186:
  9544                           
  9545                           ;configure.c: 98:                 pulseLEDColor( 0x300, 4, 1);
  9546  0667  3000               	movlw	0
  9547  0668  0140               	movlb	0	; select bank0
  9548  0669  00B6               	movwf	pulseLEDColor@RGB
  9549  066A  3003               	movlw	3
  9550  066B  00B7               	movwf	pulseLEDColor@RGB+1
  9551  066C  3004               	movlw	4
  9552  066D  00B8               	movwf	pulseLEDColor@onTimeMS
  9553  066E  3000               	movlw	0
  9554  066F  00B9               	movwf	pulseLEDColor@onTimeMS+1
  9555  0670  3001               	movlw	1
  9556  0671  00BA               	movwf	pulseLEDColor@offTimeMS
  9557  0672  3000               	movlw	0
  9558  0673  00BB               	movwf	pulseLEDColor@offTimeMS+1
  9559  0674  3189  2115  3186   	fcall	_pulseLEDColor
  9560  0677  2E88               	goto	l951
  9561  0678                     l5188:
  9562                           
  9563                           ;configure.c: 100:             pulseLEDColor( 0x330, 4, 1);
  9564  0678  3030               	movlw	48
  9565  0679  0140               	movlb	0	; select bank0
  9566  067A  00B6               	movwf	pulseLEDColor@RGB
  9567  067B  3003               	movlw	3
  9568  067C  00B7               	movwf	pulseLEDColor@RGB+1
  9569  067D  3004               	movlw	4
  9570  067E  00B8               	movwf	pulseLEDColor@onTimeMS
  9571  067F  3000               	movlw	0
  9572  0680  00B9               	movwf	pulseLEDColor@onTimeMS+1
  9573  0681  3001               	movlw	1
  9574  0682  00BA               	movwf	pulseLEDColor@offTimeMS
  9575  0683  3000               	movlw	0
  9576  0684  00BB               	movwf	pulseLEDColor@offTimeMS+1
  9577  0685  3189  2115  3186   	fcall	_pulseLEDColor
  9578  0688                     l951:	
  9579                           ;configure.c: 101:         }
  9580                           
  9581                           
  9582                           ;configure.c: 102:         sleep(50);
  9583  0688  3000               	movlw	0
  9584  0689  0140               	movlb	0	; select bank0
  9585  068A  00B1               	movwf	sleep@delay+3
  9586  068B  3000               	movlw	0
  9587  068C  00B0               	movwf	sleep@delay+2
  9588  068D  3000               	movlw	0
  9589  068E  00AF               	movwf	sleep@delay+1
  9590  068F  3032               	movlw	50
  9591  0690  00AE               	movwf	sleep@delay
  9592  0691  3189  21B5  3186   	fcall	_sleep
  9593  0694                     l5190:
  9594                           
  9595                           ;configure.c: 92:     while (!USER1_pressed() && !USER2_pressed()) {
  9596  0694  3194  24A9  3186   	fcall	_USER1_pressed
  9597  0697  3A00               	xorlw	0
  9598  0698  1D03               	skipz
  9599  0699  2E9B               	goto	u3951
  9600  069A  2E9C               	goto	u3950
  9601  069B                     u3951:
  9602  069B  2EA4               	goto	l5194
  9603  069C                     u3950:
  9604  069C                     l5192:
  9605  069C  3194  24B0  3186   	fcall	_USER2_pressed
  9606  069F  3A00               	xorlw	0
  9607  06A0  1903               	skipnz
  9608  06A1  2EA3               	goto	u3961
  9609  06A2  2EA4               	goto	u3960
  9610  06A3                     u3961:
  9611  06A3  2E2E               	goto	l5178
  9612  06A4                     u3960:
  9613  06A4                     l5194:
  9614                           
  9615                           ;configure.c: 106:     SetSlaveTXRX();
  9616  06A4  3196  2682  3186   	fcall	_SetSlaveTXRX
  9617                           
  9618                           ;configure.c: 107:     sleep(1000);
  9619  06A7  3000               	movlw	0
  9620  06A8  0140               	movlb	0	; select bank0
  9621  06A9  00B1               	movwf	sleep@delay+3
  9622  06AA  3000               	movlw	0
  9623  06AB  00B0               	movwf	sleep@delay+2
  9624  06AC  3003               	movlw	3
  9625  06AD  00AF               	movwf	sleep@delay+1
  9626  06AE  30E8               	movlw	232
  9627  06AF  00AE               	movwf	sleep@delay
  9628  06B0  3189  21B5  3186   	fcall	_sleep
  9629  06B3                     l955:
  9630  06B3  0008               	return
  9631  06B4                     __end_of_pairBluetoothDevices:
  9632                           
  9633                           	psect	text8
  9634  054F                     __ptext8:	
  9635 ;; *************** function _setBTConnection *****************
  9636 ;; Defined at:
  9637 ;;		line 164 in file "configure.c"
  9638 ;; Parameters:    Size  Location     Type
  9639 ;;  MAC             1    wreg     PTR unsigned char 
  9640 ;;		 -> masterMAC(12), slaveMAC(12), 
  9641 ;;  isMaster        1   28[BANK0 ] _Bool 
  9642 ;; Auto vars:     Size  Location     Type
  9643 ;;  MAC             1   35[BANK0 ] PTR unsigned char 
  9644 ;;		 -> masterMAC(12), slaveMAC(12), 
  9645 ;; Return value:  Size  Location     Type
  9646 ;;                  1    wreg      void 
  9647 ;; Registers used:
  9648 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9649 ;; Tracked objects:
  9650 ;;		On entry : 0/0
  9651 ;;		On exit  : 0/0
  9652 ;;		Unchanged: 0/0
  9653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9654 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9655 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9656 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9657 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9658 ;;Total ram usage:        8 bytes
  9659 ;; Hardware stack levels used:    1
  9660 ;; Hardware stack levels required when called:   11
  9661 ;; This function calls:
  9662 ;;		_SetMasterTXRX
  9663 ;;		_SetSlaveTXRX
  9664 ;;		_pulseLEDColor
  9665 ;;		_receiveBTBuffer
  9666 ;;		_sendBTBuffer
  9667 ;;		_sendBTString
  9668 ;;		_sleep
  9669 ;;		_strstr
  9670 ;; This function is called by:
  9671 ;;		_pairBluetoothDevices
  9672 ;; This function uses a non-reentrant model
  9673 ;;
  9674                           
  9675                           
  9676                           ;psect for function _setBTConnection
  9677  054F                     _setBTConnection:
  9678                           
  9679                           ;incstack = 0
  9680                           ; Regs used in _setBTConnection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9681                           ;setBTConnection@MAC stored from wreg
  9682  054F  0140               	movlb	0	; select bank0
  9683  0550  00C3               	movwf	setBTConnection@MAC
  9684  0551                     l5046:
  9685                           
  9686                           ;configure.c: 166:     if (isMaster)
  9687  0551  083C               	movf	setBTConnection@isMaster,w
  9688  0552  1903               	btfsc	3,2
  9689  0553  2D55               	goto	u3771
  9690  0554  2D56               	goto	u3770
  9691  0555                     u3771:
  9692  0555  2D5A               	goto	l5050
  9693  0556                     u3770:
  9694  0556                     l5048:
  9695                           
  9696                           ;configure.c: 167:         SetMasterTXRX();
  9697  0556  3196  26D6  3185   	fcall	_SetMasterTXRX
  9698  0559  2D5D               	goto	l975
  9699  055A                     l5050:
  9700                           
  9701                           ;configure.c: 169:         SetSlaveTXRX();
  9702  055A  3196  2682  3185   	fcall	_SetSlaveTXRX
  9703  055D                     l975:
  9704                           
  9705                           ;configure.c: 171:     sleep(1000);
  9706  055D  3000               	movlw	0
  9707  055E  0140               	movlb	0	; select bank0
  9708  055F  00B1               	movwf	sleep@delay+3
  9709  0560  3000               	movlw	0
  9710  0561  00B0               	movwf	sleep@delay+2
  9711  0562  3003               	movlw	3
  9712  0563  00AF               	movwf	sleep@delay+1
  9713  0564  30E8               	movlw	232
  9714  0565  00AE               	movwf	sleep@delay
  9715  0566  3189  21B5  3185   	fcall	_sleep
  9716  0569                     l5052:
  9717                           
  9718                           ;configure.c: 172:     sendBTString("AT");
  9719  0569  3055               	movlw	low (STR_4| (0+32768))
  9720  056A  0140               	movlb	0	; select bank0
  9721  056B  00B6               	movwf	sendBTString@buffer
  9722  056C  3098               	movlw	high (STR_4| (0+32768))
  9723  056D  00B7               	movwf	sendBTString@buffer+1
  9724  056E  3197  2778  3185   	fcall	_sendBTString
  9725  0571                     l5054:
  9726                           
  9727                           ;configure.c: 173:     charsRead = receiveBTBuffer(RX_Buffer, 9, 100);
  9728  0571  3009               	movlw	9
  9729  0572  0140               	movlb	0	; select bank0
  9730  0573  00BD               	movwf	??_setBTConnection
  9731  0574  083D               	movf	??_setBTConnection,w
  9732  0575  00AE               	movwf	receiveBTBuffer@maxChars
  9733  0576  3064               	movlw	100
  9734  0577  00AF               	movwf	receiveBTBuffer@timeoutMS
  9735  0578  3000               	movlw	0
  9736  0579  00B0               	movwf	receiveBTBuffer@timeoutMS+1
  9737  057A  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
  9738  057B  318E  268E  3185   	fcall	_receiveBTBuffer
  9739  057E  0140               	movlb	0	; select bank0
  9740  057F  00BE               	movwf	??_setBTConnection+1
  9741  0580  083E               	movf	??_setBTConnection+1,w
  9742  0581  00D8               	movwf	_charsRead
  9743  0582                     l5056:
  9744                           
  9745                           ;configure.c: 174:     pulseLEDColor((strstr((void *)RX_Buffer, "OK") != ((void*)0)) ? 0
      +                          x030 : 0x330, 100, 200);
  9746  0582  3052               	movlw	low (STR_11| (0+32768))
  9747  0583  00AF               	movwf	strstr@n
  9748  0584  3098               	movlw	high (STR_11| (0+32768))
  9749  0585  00B0               	movwf	strstr@n+1
  9750  0586  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
  9751  0587  318D  253C  3185   	fcall	_strstr
  9752  058A  3A00               	xorlw	0
  9753  058B  1D03               	skipz
  9754  058C  2D8E               	goto	u3781
  9755  058D  2D8F               	goto	u3780
  9756  058E                     u3781:
  9757  058E  2D95               	goto	l5060
  9758  058F                     u3780:
  9759  058F                     l5058:
  9760  058F  3030               	movlw	48
  9761  0590  0140               	movlb	0	; select bank0
  9762  0591  00BF               	movwf	_setBTConnection$1669
  9763  0592  3003               	movlw	3
  9764  0593  00C0               	movwf	_setBTConnection$1669+1
  9765  0594  2D9A               	goto	l5062
  9766  0595                     l5060:
  9767  0595  3030               	movlw	48
  9768  0596  0140               	movlb	0	; select bank0
  9769  0597  00BF               	movwf	_setBTConnection$1669
  9770  0598  3000               	movlw	0
  9771  0599  00C0               	movwf	_setBTConnection$1669+1
  9772  059A                     l5062:
  9773  059A  0840               	movf	_setBTConnection$1669+1,w
  9774  059B  00B7               	movwf	pulseLEDColor@RGB+1
  9775  059C  083F               	movf	_setBTConnection$1669,w
  9776  059D  00B6               	movwf	pulseLEDColor@RGB
  9777  059E  3064               	movlw	100
  9778  059F  00B8               	movwf	pulseLEDColor@onTimeMS
  9779  05A0  3000               	movlw	0
  9780  05A1  00B9               	movwf	pulseLEDColor@onTimeMS+1
  9781  05A2  30C8               	movlw	200
  9782  05A3  00BA               	movwf	pulseLEDColor@offTimeMS
  9783  05A4  3000               	movlw	0
  9784  05A5  00BB               	movwf	pulseLEDColor@offTimeMS+1
  9785  05A6  3189  2115  3185   	fcall	_pulseLEDColor
  9786  05A9                     l5064:
  9787                           
  9788                           ;configure.c: 176:     sleep(10);
  9789  05A9  3000               	movlw	0
  9790  05AA  0140               	movlb	0	; select bank0
  9791  05AB  00B1               	movwf	sleep@delay+3
  9792  05AC  3000               	movlw	0
  9793  05AD  00B0               	movwf	sleep@delay+2
  9794  05AE  3000               	movlw	0
  9795  05AF  00AF               	movwf	sleep@delay+1
  9796  05B0  300A               	movlw	10
  9797  05B1  00AE               	movwf	sleep@delay
  9798  05B2  3189  21B5  3185   	fcall	_sleep
  9799  05B5                     l5066:
  9800                           
  9801                           ;configure.c: 177:     if (*MAC != 0) {
  9802  05B5  0140               	movlb	0	; select bank0
  9803  05B6  0843               	movf	setBTConnection@MAC,w
  9804  05B7  0086               	movwf	6
  9805  05B8  3001               	movlw	1	; select bank2/3
  9806  05B9  0087               	movwf	7
  9807  05BA  0801               	movf	1,w
  9808  05BB  1903               	btfsc	3,2
  9809  05BC  2DBE               	goto	u3791
  9810  05BD  2DBF               	goto	u3790
  9811  05BE                     u3791:
  9812  05BE  2E0C               	goto	l985
  9813  05BF                     u3790:
  9814  05BF                     l5068:
  9815                           
  9816                           ;configure.c: 178:         sendBTString("AT+CON");
  9817  05BF  303F               	movlw	low (STR_16| (0+32768))
  9818  05C0  00B6               	movwf	sendBTString@buffer
  9819  05C1  3098               	movlw	high (STR_16| (0+32768))
  9820  05C2  00B7               	movwf	sendBTString@buffer+1
  9821  05C3  3197  2778  3185   	fcall	_sendBTString
  9822                           
  9823                           ;configure.c: 179:         sendBTBuffer(MAC, 12, 1);
  9824  05C6  0140               	movlb	0	; select bank0
  9825  05C7  0843               	movf	setBTConnection@MAC,w
  9826  05C8  00AB               	movwf	sendBTBuffer@buffer
  9827  05C9  3001               	movlw	1
  9828  05CA  00AC               	movwf	sendBTBuffer@buffer+1
  9829  05CB  300C               	movlw	12
  9830  05CC  00BD               	movwf	??_setBTConnection
  9831  05CD  083D               	movf	??_setBTConnection,w
  9832  05CE  00AD               	movwf	sendBTBuffer@length
  9833  05CF  01AE               	clrf	sendBTBuffer@blockIfBusy
  9834  05D0  0AAE               	incf	sendBTBuffer@blockIfBusy,f
  9835  05D1  318B  2345  3185   	fcall	_sendBTBuffer
  9836  05D4                     l5070:
  9837                           
  9838                           ;configure.c: 180:         charsRead = receiveBTBuffer(RX_Buffer, 28, 1000);
  9839  05D4  301C               	movlw	28
  9840  05D5  0140               	movlb	0	; select bank0
  9841  05D6  00BD               	movwf	??_setBTConnection
  9842  05D7  083D               	movf	??_setBTConnection,w
  9843  05D8  00AE               	movwf	receiveBTBuffer@maxChars
  9844  05D9  30E8               	movlw	232
  9845  05DA  00AF               	movwf	receiveBTBuffer@timeoutMS
  9846  05DB  3003               	movlw	3
  9847  05DC  00B0               	movwf	receiveBTBuffer@timeoutMS+1
  9848  05DD  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
  9849  05DE  318E  268E  3185   	fcall	_receiveBTBuffer
  9850  05E1  0140               	movlb	0	; select bank0
  9851  05E2  00BE               	movwf	??_setBTConnection+1
  9852  05E3  083E               	movf	??_setBTConnection+1,w
  9853  05E4  00D8               	movwf	_charsRead
  9854  05E5                     l5072:
  9855                           
  9856                           ;configure.c: 181:         pulseLEDColor((strstr((void *)RX_Buffer, "OK") != ((void*)0))
      +                           ? 0x030 : 0x300, 100, 200);
  9857  05E5  3052               	movlw	low (STR_11| (0+32768))
  9858  05E6  00AF               	movwf	strstr@n
  9859  05E7  3098               	movlw	high (STR_11| (0+32768))
  9860  05E8  00B0               	movwf	strstr@n+1
  9861  05E9  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
  9862  05EA  318D  253C  3185   	fcall	_strstr
  9863  05ED  3A00               	xorlw	0
  9864  05EE  1D03               	skipz
  9865  05EF  2DF1               	goto	u3801
  9866  05F0  2DF2               	goto	u3800
  9867  05F1                     u3801:
  9868  05F1  2DF8               	goto	l5076
  9869  05F2                     u3800:
  9870  05F2                     l5074:
  9871  05F2  3000               	movlw	0
  9872  05F3  0140               	movlb	0	; select bank0
  9873  05F4  00C1               	movwf	_setBTConnection$1672
  9874  05F5  3003               	movlw	3
  9875  05F6  00C2               	movwf	_setBTConnection$1672+1
  9876  05F7  2DFD               	goto	l5078
  9877  05F8                     l5076:
  9878  05F8  3030               	movlw	48
  9879  05F9  0140               	movlb	0	; select bank0
  9880  05FA  00C1               	movwf	_setBTConnection$1672
  9881  05FB  3000               	movlw	0
  9882  05FC  00C2               	movwf	_setBTConnection$1672+1
  9883  05FD                     l5078:
  9884  05FD  0842               	movf	_setBTConnection$1672+1,w
  9885  05FE  00B7               	movwf	pulseLEDColor@RGB+1
  9886  05FF  0841               	movf	_setBTConnection$1672,w
  9887  0600  00B6               	movwf	pulseLEDColor@RGB
  9888  0601  3064               	movlw	100
  9889  0602  00B8               	movwf	pulseLEDColor@onTimeMS
  9890  0603  3000               	movlw	0
  9891  0604  00B9               	movwf	pulseLEDColor@onTimeMS+1
  9892  0605  30C8               	movlw	200
  9893  0606  00BA               	movwf	pulseLEDColor@offTimeMS
  9894  0607  3000               	movlw	0
  9895  0608  00BB               	movwf	pulseLEDColor@offTimeMS+1
  9896  0609  3189  2115  3185   	fcall	_pulseLEDColor
  9897  060C                     l985:
  9898  060C  0008               	return
  9899  060D                     __end_of_setBTConnection:
  9900                           
  9901                           	psect	text9
  9902  0759                     __ptext9:	
  9903 ;; *************** function _setBTBaudRatesTo38400 *****************
  9904 ;; Defined at:
  9905 ;;		line 110 in file "configure.c"
  9906 ;; Parameters:    Size  Location     Type
  9907 ;;		None
  9908 ;; Auto vars:     Size  Location     Type
  9909 ;;		None
  9910 ;; Return value:  Size  Location     Type
  9911 ;;                  1    wreg      void 
  9912 ;; Registers used:
  9913 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9914 ;; Tracked objects:
  9915 ;;		On entry : 0/0
  9916 ;;		On exit  : 0/0
  9917 ;;		Unchanged: 0/0
  9918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9923 ;;Total ram usage:        0 bytes
  9924 ;; Hardware stack levels used:    1
  9925 ;; Hardware stack levels required when called:   11
  9926 ;; This function calls:
  9927 ;;		_SetDualReceive
  9928 ;;		_pulseLEDColor
  9929 ;;		_sendBTString
  9930 ;;		_setSerialBaud
  9931 ;;		_sleep
  9932 ;; This function is called by:
  9933 ;;		_pairBluetoothDevices
  9934 ;; This function uses a non-reentrant model
  9935 ;;
  9936                           
  9937                           
  9938                           ;psect for function _setBTBaudRatesTo38400
  9939  0759                     _setBTBaudRatesTo38400:
  9940  0759                     l4982:	
  9941                           ;incstack = 0
  9942                           ; Regs used in _setBTBaudRatesTo38400: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9943                           
  9944                           
  9945                           ;configure.c: 113:     SetDualReceive();
  9946  0759  3196  26AC  3187   	fcall	_SetDualReceive
  9947                           
  9948                           ;configure.c: 114:     setSerialBaud(9600);
  9949  075C  3080               	movlw	128
  9950  075D  0140               	movlb	0	; select bank0
  9951  075E  00B6               	movwf	setSerialBaud@baud
  9952  075F  3025               	movlw	37
  9953  0760  00B7               	movwf	setSerialBaud@baud+1
  9954  0761  3188  2050  3187   	fcall	_setSerialBaud
  9955                           
  9956                           ;configure.c: 115:     pulseLEDColor(0x033, 100, 900);
  9957  0764  3033               	movlw	51
  9958  0765  0140               	movlb	0	; select bank0
  9959  0766  00B6               	movwf	pulseLEDColor@RGB
  9960  0767  3000               	movlw	0
  9961  0768  00B7               	movwf	pulseLEDColor@RGB+1
  9962  0769  3064               	movlw	100
  9963  076A  00B8               	movwf	pulseLEDColor@onTimeMS
  9964  076B  3000               	movlw	0
  9965  076C  00B9               	movwf	pulseLEDColor@onTimeMS+1
  9966  076D  3084               	movlw	132
  9967  076E  00BA               	movwf	pulseLEDColor@offTimeMS
  9968  076F  3003               	movlw	3
  9969  0770  00BB               	movwf	pulseLEDColor@offTimeMS+1
  9970  0771  3189  2115  3187   	fcall	_pulseLEDColor
  9971  0774                     l4984:
  9972                           
  9973                           ;configure.c: 117:     sendBTString("AT");
  9974  0774  3055               	movlw	low (STR_4| (0+32768))
  9975  0775  0140               	movlb	0	; select bank0
  9976  0776  00B6               	movwf	sendBTString@buffer
  9977  0777  3098               	movlw	high (STR_4| (0+32768))
  9978  0778  00B7               	movwf	sendBTString@buffer+1
  9979  0779  3197  2778  3187   	fcall	_sendBTString
  9980  077C                     l4986:
  9981                           
  9982                           ;configure.c: 118:     sleep(100);
  9983  077C  3000               	movlw	0
  9984  077D  0140               	movlb	0	; select bank0
  9985  077E  00B1               	movwf	sleep@delay+3
  9986  077F  3000               	movlw	0
  9987  0780  00B0               	movwf	sleep@delay+2
  9988  0781  3000               	movlw	0
  9989  0782  00AF               	movwf	sleep@delay+1
  9990  0783  3064               	movlw	100
  9991  0784  00AE               	movwf	sleep@delay
  9992  0785  3189  21B5  3187   	fcall	_sleep
  9993                           
  9994                           ;configure.c: 119:     sendBTString("AT+BAUD2");
  9995  0788  301B               	movlw	low (STR_5| (0+32768))
  9996  0789  0140               	movlb	0	; select bank0
  9997  078A  00B6               	movwf	sendBTString@buffer
  9998  078B  3098               	movlw	high (STR_5| (0+32768))
  9999  078C  00B7               	movwf	sendBTString@buffer+1
 10000  078D  3197  2778  3187   	fcall	_sendBTString
 10001  0790                     l4988:
 10002                           
 10003                           ;configure.c: 120:     sleep(250);
 10004  0790  3000               	movlw	0
 10005  0791  0140               	movlb	0	; select bank0
 10006  0792  00B1               	movwf	sleep@delay+3
 10007  0793  3000               	movlw	0
 10008  0794  00B0               	movwf	sleep@delay+2
 10009  0795  3000               	movlw	0
 10010  0796  00AF               	movwf	sleep@delay+1
 10011  0797  30FA               	movlw	250
 10012  0798  00AE               	movwf	sleep@delay
 10013  0799  3189  21B5  3187   	fcall	_sleep
 10014  079C                     l4990:
 10015                           
 10016                           ;configure.c: 121:     sendBTString("AT");
 10017  079C  3055               	movlw	low (STR_4| (0+32768))
 10018  079D  0140               	movlb	0	; select bank0
 10019  079E  00B6               	movwf	sendBTString@buffer
 10020  079F  3098               	movlw	high (STR_4| (0+32768))
 10021  07A0  00B7               	movwf	sendBTString@buffer+1
 10022  07A1  3197  2778  3187   	fcall	_sendBTString
 10023                           
 10024                           ;configure.c: 122:     sleep(500);
 10025  07A4  3000               	movlw	0
 10026  07A5  0140               	movlb	0	; select bank0
 10027  07A6  00B1               	movwf	sleep@delay+3
 10028  07A7  3000               	movlw	0
 10029  07A8  00B0               	movwf	sleep@delay+2
 10030  07A9  3001               	movlw	1
 10031  07AA  00AF               	movwf	sleep@delay+1
 10032  07AB  30F4               	movlw	244
 10033  07AC  00AE               	movwf	sleep@delay
 10034  07AD  3189  21B5  3187   	fcall	_sleep
 10035  07B0                     l4992:
 10036                           
 10037                           ;configure.c: 123:     sendBTString("AT+RESET");
 10038  07B0  302D               	movlw	low (STR_7| (0+32768))
 10039  07B1  0140               	movlb	0	; select bank0
 10040  07B2  00B6               	movwf	sendBTString@buffer
 10041  07B3  3098               	movlw	high (STR_7| (0+32768))
 10042  07B4  00B7               	movwf	sendBTString@buffer+1
 10043  07B5  3197  2778  3187   	fcall	_sendBTString
 10044  07B8                     l4994:
 10045                           
 10046                           ;configure.c: 124:     sleep(500);
 10047  07B8  3000               	movlw	0
 10048  07B9  0140               	movlb	0	; select bank0
 10049  07BA  00B1               	movwf	sleep@delay+3
 10050  07BB  3000               	movlw	0
 10051  07BC  00B0               	movwf	sleep@delay+2
 10052  07BD  3001               	movlw	1
 10053  07BE  00AF               	movwf	sleep@delay+1
 10054  07BF  30F4               	movlw	244
 10055  07C0  00AE               	movwf	sleep@delay
 10056  07C1  3189  21B5  3187   	fcall	_sleep
 10057  07C4                     l4996:
 10058                           
 10059                           ;configure.c: 125:     setSerialBaud(38400);
 10060  07C4  3000               	movlw	0
 10061  07C5  0140               	movlb	0	; select bank0
 10062  07C6  00B6               	movwf	setSerialBaud@baud
 10063  07C7  3096               	movlw	150
 10064  07C8  00B7               	movwf	setSerialBaud@baud+1
 10065  07C9  3188  2050  3187   	fcall	_setSerialBaud
 10066  07CC                     l958:
 10067  07CC  0008               	return
 10068  07CD                     __end_of_setBTBaudRatesTo38400:
 10069                           
 10070                           	psect	text10
 10071  03BD                     __ptext10:	
 10072 ;; *************** function _getBTAddress *****************
 10073 ;; Defined at:
 10074 ;;		line 128 in file "configure.c"
 10075 ;; Parameters:    Size  Location     Type
 10076 ;;  MAC             1    wreg     PTR unsigned char 
 10077 ;;		 -> masterMAC(12), slaveMAC(12), 
 10078 ;;  isMaster        1   28[BANK0 ] _Bool 
 10079 ;; Auto vars:     Size  Location     Type
 10080 ;;  MAC             1   33[BANK0 ] PTR unsigned char 
 10081 ;;		 -> masterMAC(12), slaveMAC(12), 
 10082 ;;  addrPointer     1   34[BANK0 ] PTR unsigned char 
 10083 ;;		 -> NULL(0), RX_Buffer(40), 
 10084 ;; Return value:  Size  Location     Type
 10085 ;;                  1    wreg      _Bool 
 10086 ;; Registers used:
 10087 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10088 ;; Tracked objects:
 10089 ;;		On entry : 0/0
 10090 ;;		On exit  : 0/0
 10091 ;;		Unchanged: 0/0
 10092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10093 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10094 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10095 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10096 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10097 ;;Total ram usage:        7 bytes
 10098 ;; Hardware stack levels used:    1
 10099 ;; Hardware stack levels required when called:   11
 10100 ;; This function calls:
 10101 ;;		_SetMasterTXRX
 10102 ;;		_SetSlaveTXRX
 10103 ;;		_memcpy
 10104 ;;		_pulseLEDColor
 10105 ;;		_receiveBTBuffer
 10106 ;;		_sendBTString
 10107 ;;		_sleep
 10108 ;;		_strstr
 10109 ;; This function is called by:
 10110 ;;		_pairBluetoothDevices
 10111 ;; This function uses a non-reentrant model
 10112 ;;
 10113                           
 10114                           
 10115                           ;psect for function _getBTAddress
 10116  03BD                     _getBTAddress:
 10117                           
 10118                           ;incstack = 0
 10119                           ; Regs used in _getBTAddress: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10120                           ;getBTAddress@MAC stored from wreg
 10121  03BD  0140               	movlb	0	; select bank0
 10122  03BE  00C1               	movwf	getBTAddress@MAC
 10123  03BF                     l4998:
 10124                           
 10125                           ;configure.c: 130:     uint8_t * addrPointer ;;configure.c: 132:     if (isMaster)
 10126  03BF  083C               	movf	getBTAddress@isMaster,w
 10127  03C0  1903               	btfsc	3,2
 10128  03C1  2BC3               	goto	u3731
 10129  03C2  2BC4               	goto	u3730
 10130  03C3                     u3731:
 10131  03C3  2BC8               	goto	l5002
 10132  03C4                     u3730:
 10133  03C4                     l5000:
 10134                           
 10135                           ;configure.c: 133:         SetMasterTXRX();
 10136  03C4  3196  26D6  3183   	fcall	_SetMasterTXRX
 10137  03C7  2BCB               	goto	l5004
 10138  03C8                     l5002:
 10139                           
 10140                           ;configure.c: 135:         SetSlaveTXRX();
 10141  03C8  3196  2682  3183   	fcall	_SetSlaveTXRX
 10142  03CB                     l5004:
 10143                           
 10144                           ;configure.c: 137:     sendBTString("AT");
 10145  03CB  3055               	movlw	low (STR_4| (0+32768))
 10146  03CC  0140               	movlb	0	; select bank0
 10147  03CD  00B6               	movwf	sendBTString@buffer
 10148  03CE  3098               	movlw	high (STR_4| (0+32768))
 10149  03CF  00B7               	movwf	sendBTString@buffer+1
 10150  03D0  3197  2778  3183   	fcall	_sendBTString
 10151  03D3                     l5006:
 10152                           
 10153                           ;configure.c: 138:     sleep(300);
 10154  03D3  3000               	movlw	0
 10155  03D4  0140               	movlb	0	; select bank0
 10156  03D5  00B1               	movwf	sleep@delay+3
 10157  03D6  3000               	movlw	0
 10158  03D7  00B0               	movwf	sleep@delay+2
 10159  03D8  3001               	movlw	1
 10160  03D9  00AF               	movwf	sleep@delay+1
 10161  03DA  302C               	movlw	44
 10162  03DB  00AE               	movwf	sleep@delay
 10163  03DC  3189  21B5  3183   	fcall	_sleep
 10164  03DF                     l5008:
 10165                           
 10166                           ;configure.c: 139:     sleep(10);
 10167  03DF  3000               	movlw	0
 10168  03E0  0140               	movlb	0	; select bank0
 10169  03E1  00B1               	movwf	sleep@delay+3
 10170  03E2  3000               	movlw	0
 10171  03E3  00B0               	movwf	sleep@delay+2
 10172  03E4  3000               	movlw	0
 10173  03E5  00AF               	movwf	sleep@delay+1
 10174  03E6  300A               	movlw	10
 10175  03E7  00AE               	movwf	sleep@delay
 10176  03E8  3189  21B5  3183   	fcall	_sleep
 10177  03EB                     l5010:
 10178                           
 10179                           ;configure.c: 140:     if (isMaster)
 10180  03EB  0140               	movlb	0	; select bank0
 10181  03EC  083C               	movf	getBTAddress@isMaster,w
 10182  03ED  1903               	btfsc	3,2
 10183  03EE  2BF0               	goto	u3741
 10184  03EF  2BF1               	goto	u3740
 10185  03F0                     u3741:
 10186  03F0  2BF9               	goto	l5014
 10187  03F1                     u3740:
 10188  03F1                     l5012:
 10189                           
 10190                           ;configure.c: 141:         sendBTString("AT+ROLE1");
 10191  03F1  3012               	movlw	low (STR_9| (0+32768))
 10192  03F2  00B6               	movwf	sendBTString@buffer
 10193  03F3  3098               	movlw	high (STR_9| (0+32768))
 10194  03F4  00B7               	movwf	sendBTString@buffer+1
 10195  03F5  3197  2778  3183   	fcall	_sendBTString
 10196  03F8  2C00               	goto	l5016
 10197  03F9                     l5014:
 10198                           
 10199                           ;configure.c: 143:         sendBTString("AT+ROLE0");
 10200  03F9  3009               	movlw	low (STR_10| (0+32768))
 10201  03FA  00B6               	movwf	sendBTString@buffer
 10202  03FB  3098               	movlw	high (STR_10| (0+32768))
 10203  03FC  00B7               	movwf	sendBTString@buffer+1
 10204  03FD  3197  2778  3183   	fcall	_sendBTString
 10205  0400                     l5016:
 10206                           
 10207                           ;configure.c: 145:     charsRead = receiveBTBuffer(RX_Buffer, 20, 400);
 10208  0400  3014               	movlw	20
 10209  0401  0140               	movlb	0	; select bank0
 10210  0402  00BD               	movwf	??_getBTAddress
 10211  0403  083D               	movf	??_getBTAddress,w
 10212  0404  00AE               	movwf	receiveBTBuffer@maxChars
 10213  0405  3090               	movlw	144
 10214  0406  00AF               	movwf	receiveBTBuffer@timeoutMS
 10215  0407  3001               	movlw	1
 10216  0408  00B0               	movwf	receiveBTBuffer@timeoutMS+1
 10217  0409  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
 10218  040A  318E  268E  3183   	fcall	_receiveBTBuffer
 10219  040D  0140               	movlb	0	; select bank0
 10220  040E  00BE               	movwf	??_getBTAddress+1
 10221  040F  083E               	movf	??_getBTAddress+1,w
 10222  0410  00D8               	movwf	_charsRead
 10223  0411                     l5018:
 10224                           
 10225                           ;configure.c: 146:     pulseLEDColor((strstr((void *)RX_Buffer, "OK") != ((void*)0)) ? 0
      +                          x030 : 0x330, 100, 200);
 10226  0411  3052               	movlw	low (STR_11| (0+32768))
 10227  0412  00AF               	movwf	strstr@n
 10228  0413  3098               	movlw	high (STR_11| (0+32768))
 10229  0414  00B0               	movwf	strstr@n+1
 10230  0415  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
 10231  0416  318D  253C  3183   	fcall	_strstr
 10232  0419  3A00               	xorlw	0
 10233  041A  1D03               	skipz
 10234  041B  2C1D               	goto	u3751
 10235  041C  2C1E               	goto	u3750
 10236  041D                     u3751:
 10237  041D  2C24               	goto	l5022
 10238  041E                     u3750:
 10239  041E                     l5020:
 10240  041E  3030               	movlw	48
 10241  041F  0140               	movlb	0	; select bank0
 10242  0420  00BF               	movwf	_getBTAddress$1661
 10243  0421  3003               	movlw	3
 10244  0422  00C0               	movwf	_getBTAddress$1661+1
 10245  0423  2C29               	goto	l5024
 10246  0424                     l5022:
 10247  0424  3030               	movlw	48
 10248  0425  0140               	movlb	0	; select bank0
 10249  0426  00BF               	movwf	_getBTAddress$1661
 10250  0427  3000               	movlw	0
 10251  0428  00C0               	movwf	_getBTAddress$1661+1
 10252  0429                     l5024:
 10253  0429  0840               	movf	_getBTAddress$1661+1,w
 10254  042A  00B7               	movwf	pulseLEDColor@RGB+1
 10255  042B  083F               	movf	_getBTAddress$1661,w
 10256  042C  00B6               	movwf	pulseLEDColor@RGB
 10257  042D  3064               	movlw	100
 10258  042E  00B8               	movwf	pulseLEDColor@onTimeMS
 10259  042F  3000               	movlw	0
 10260  0430  00B9               	movwf	pulseLEDColor@onTimeMS+1
 10261  0431  30C8               	movlw	200
 10262  0432  00BA               	movwf	pulseLEDColor@offTimeMS
 10263  0433  3000               	movlw	0
 10264  0434  00BB               	movwf	pulseLEDColor@offTimeMS+1
 10265  0435  3189  2115  3183   	fcall	_pulseLEDColor
 10266  0438                     l5026:
 10267                           
 10268                           ;configure.c: 150:     sendBTString("AT+ADDR?");
 10269  0438  3024               	movlw	low (STR_12| (0+32768))
 10270  0439  0140               	movlb	0	; select bank0
 10271  043A  00B6               	movwf	sendBTString@buffer
 10272  043B  3098               	movlw	high (STR_12| (0+32768))
 10273  043C  00B7               	movwf	sendBTString@buffer+1
 10274  043D  3197  2778  3183   	fcall	_sendBTString
 10275  0440                     l5028:
 10276                           
 10277                           ;configure.c: 151:     charsRead = receiveBTBuffer(RX_Buffer, 30, 400);
 10278  0440  301E               	movlw	30
 10279  0441  0140               	movlb	0	; select bank0
 10280  0442  00BD               	movwf	??_getBTAddress
 10281  0443  083D               	movf	??_getBTAddress,w
 10282  0444  00AE               	movwf	receiveBTBuffer@maxChars
 10283  0445  3090               	movlw	144
 10284  0446  00AF               	movwf	receiveBTBuffer@timeoutMS
 10285  0447  3001               	movlw	1
 10286  0448  00B0               	movwf	receiveBTBuffer@timeoutMS+1
 10287  0449  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
 10288  044A  318E  268E  3183   	fcall	_receiveBTBuffer
 10289  044D  0140               	movlb	0	; select bank0
 10290  044E  00BE               	movwf	??_getBTAddress+1
 10291  044F  083E               	movf	??_getBTAddress+1,w
 10292  0450  00D8               	movwf	_charsRead
 10293  0451                     l5030:
 10294                           
 10295                           ;configure.c: 152:     addrPointer = (void *)strstr((void *)RX_Buffer, "ADDR:");
 10296  0451  304C               	movlw	low (STR_13| (0+32768))
 10297  0452  00AF               	movwf	strstr@n
 10298  0453  3098               	movlw	high (STR_13| (0+32768))
 10299  0454  00B0               	movwf	strstr@n+1
 10300  0455  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
 10301  0456  318D  253C  3183   	fcall	_strstr
 10302  0459  0140               	movlb	0	; select bank0
 10303  045A  00BD               	movwf	??_getBTAddress
 10304  045B  083D               	movf	??_getBTAddress,w
 10305  045C  00C2               	movwf	getBTAddress@addrPointer
 10306  045D                     l5032:
 10307                           
 10308                           ;configure.c: 154:     if (addrPointer != 0) {
 10309  045D  0842               	movf	getBTAddress@addrPointer,w
 10310  045E  1903               	btfsc	3,2
 10311  045F  2C61               	goto	u3761
 10312  0460  2C62               	goto	u3760
 10313  0461                     u3761:
 10314  0461  2C80               	goto	l5042
 10315  0462                     u3760:
 10316  0462                     l5034:
 10317                           
 10318                           ;configure.c: 155:         memcpy(MAC, addrPointer + 5, 12);
 10319  0462  0842               	movf	getBTAddress@addrPointer,w
 10320  0463  3E05               	addlw	5
 10321  0464  00BD               	movwf	??_getBTAddress
 10322  0465  083D               	movf	??_getBTAddress,w
 10323  0466  00A6               	movwf	memcpy@s1
 10324  0467  300C               	movlw	12
 10325  0468  00A7               	movwf	memcpy@n
 10326  0469  3000               	movlw	0
 10327  046A  00A8               	movwf	memcpy@n+1
 10328  046B  0841               	movf	getBTAddress@MAC,w
 10329  046C  3187  27CD  3183   	fcall	_memcpy
 10330  046F                     l5036:
 10331                           
 10332                           ;configure.c: 156:         pulseLEDColor( 0x030, 100, 200);
 10333  046F  3030               	movlw	48
 10334  0470  0140               	movlb	0	; select bank0
 10335  0471  00B6               	movwf	pulseLEDColor@RGB
 10336  0472  3000               	movlw	0
 10337  0473  00B7               	movwf	pulseLEDColor@RGB+1
 10338  0474  3064               	movlw	100
 10339  0475  00B8               	movwf	pulseLEDColor@onTimeMS
 10340  0476  3000               	movlw	0
 10341  0477  00B9               	movwf	pulseLEDColor@onTimeMS+1
 10342  0478  30C8               	movlw	200
 10343  0479  00BA               	movwf	pulseLEDColor@offTimeMS
 10344  047A  3000               	movlw	0
 10345  047B  00BB               	movwf	pulseLEDColor@offTimeMS+1
 10346  047C  3189  2115  3183   	fcall	_pulseLEDColor
 10347  047F  2C8F               	goto	l970
 10348  0480                     l5042:
 10349                           
 10350                           ;configure.c: 159:         pulseLEDColor( 0x300, 100, 200);
 10351  0480  3000               	movlw	0
 10352  0481  00B6               	movwf	pulseLEDColor@RGB
 10353  0482  3003               	movlw	3
 10354  0483  00B7               	movwf	pulseLEDColor@RGB+1
 10355  0484  3064               	movlw	100
 10356  0485  00B8               	movwf	pulseLEDColor@onTimeMS
 10357  0486  3000               	movlw	0
 10358  0487  00B9               	movwf	pulseLEDColor@onTimeMS+1
 10359  0488  30C8               	movlw	200
 10360  0489  00BA               	movwf	pulseLEDColor@offTimeMS
 10361  048A  3000               	movlw	0
 10362  048B  00BB               	movwf	pulseLEDColor@offTimeMS+1
 10363  048C  3189  2115  3183   	fcall	_pulseLEDColor
 10364  048F                     l970:
 10365  048F  0008               	return
 10366  0490                     __end_of_getBTAddress:
 10367                           
 10368                           	psect	text11
 10369  07CD                     __ptext11:	
 10370 ;; *************** function _memcpy *****************
 10371 ;; Defined at:
 10372 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\memcpy.c"
 10373 ;; Parameters:    Size  Location     Type
 10374 ;;  d1              1    wreg     PTR void 
 10375 ;;		 -> masterMAC(12), slaveMAC(12), 
 10376 ;;  s1              1    6[BANK0 ] PTR const void 
 10377 ;;		 -> NULL(0), RX_Buffer(40), 
 10378 ;;  n               2    7[BANK0 ] unsigned int 
 10379 ;; Auto vars:     Size  Location     Type
 10380 ;;  d1              1   11[BANK0 ] PTR void 
 10381 ;;		 -> masterMAC(12), slaveMAC(12), 
 10382 ;;  s               1   13[BANK0 ] PTR const unsigned char 
 10383 ;;		 -> NULL(0), RX_Buffer(40), 
 10384 ;;  d               1   12[BANK0 ] PTR unsigned char 
 10385 ;;		 -> masterMAC(12), slaveMAC(12), 
 10386 ;;  tmp             1   10[BANK0 ] unsigned char 
 10387 ;; Return value:  Size  Location     Type
 10388 ;;                  1    wreg      PTR void 
 10389 ;; Registers used:
 10390 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10391 ;; Tracked objects:
 10392 ;;		On entry : 0/0
 10393 ;;		On exit  : 0/0
 10394 ;;		Unchanged: 0/0
 10395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10396 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10397 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10398 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10399 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10400 ;;Total ram usage:        8 bytes
 10401 ;; Hardware stack levels used:    1
 10402 ;; Hardware stack levels required when called:    7
 10403 ;; This function calls:
 10404 ;;		Nothing
 10405 ;; This function is called by:
 10406 ;;		_getBTAddress
 10407 ;; This function uses a non-reentrant model
 10408 ;;
 10409                           
 10410                           
 10411                           ;psect for function _memcpy
 10412  07CD                     _memcpy:
 10413                           
 10414                           ;incstack = 0
 10415                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
 10416                           ;memcpy@d1 stored from wreg
 10417  07CD  0140               	movlb	0	; select bank0
 10418  07CE  00AB               	movwf	memcpy@d1
 10419  07CF                     l4936:
 10420  07CF  0826               	movf	memcpy@s1,w
 10421  07D0  00A9               	movwf	??_memcpy
 10422  07D1  0829               	movf	??_memcpy,w
 10423  07D2  00AD               	movwf	memcpy@s
 10424  07D3  082B               	movf	memcpy@d1,w
 10425  07D4  00A9               	movwf	??_memcpy
 10426  07D5  0829               	movf	??_memcpy,w
 10427  07D6  00AC               	movwf	memcpy@d
 10428  07D7  2FF0               	goto	l1788
 10429  07D8                     l4938:
 10430  07D8  082D               	movf	memcpy@s,w
 10431  07D9  0086               	movwf	6
 10432  07DA  3001               	movlw	1	; select bank2/3
 10433  07DB  0087               	movwf	7
 10434  07DC  0801               	movf	1,w
 10435  07DD  00A9               	movwf	??_memcpy
 10436  07DE  0829               	movf	??_memcpy,w
 10437  07DF  00AA               	movwf	memcpy@tmp
 10438  07E0                     l4940:
 10439  07E0  3001               	movlw	1
 10440  07E1  00A9               	movwf	??_memcpy
 10441  07E2  0829               	movf	??_memcpy,w
 10442  07E3  07AD               	addwf	memcpy@s,f
 10443  07E4                     l4942:
 10444  07E4  082A               	movf	memcpy@tmp,w
 10445  07E5  00A9               	movwf	??_memcpy
 10446  07E6  082C               	movf	memcpy@d,w
 10447  07E7  0086               	movwf	6
 10448  07E8  3001               	movlw	1	; select bank2/3
 10449  07E9  0087               	movwf	7
 10450  07EA  0829               	movf	??_memcpy,w
 10451  07EB  0081               	movwf	1
 10452  07EC  3001               	movlw	1
 10453  07ED  00A9               	movwf	??_memcpy
 10454  07EE  0829               	movf	??_memcpy,w
 10455  07EF  07AC               	addwf	memcpy@d,f
 10456  07F0                     l1788:
 10457  07F0  3001               	movlw	1
 10458  07F1  02A7               	subwf	memcpy@n,f
 10459  07F2  3000               	movlw	0
 10460  07F3  3BA8               	subwfb	memcpy@n+1,f
 10461  07F4  0A27               	incf	memcpy@n,w
 10462  07F5  1D03               	skipz
 10463  07F6  2FFB               	goto	u3661
 10464  07F7  0A28               	incf	memcpy@n+1,w
 10465  07F8  1D03               	btfss	3,2
 10466  07F9  2FFB               	goto	u3661
 10467  07FA  2FFC               	goto	u3660
 10468  07FB                     u3661:
 10469  07FB  2FD8               	goto	l4938
 10470  07FC                     u3660:
 10471  07FC                     l1791:
 10472  07FC  0008               	return
 10473  07FD                     __end_of_memcpy:
 10474                           
 10475                           	psect	text12
 10476  16D6                     __ptext12:	
 10477 ;; *************** function _SetMasterTXRX *****************
 10478 ;; Defined at:
 10479 ;;		line 35 in file "configure.c"
 10480 ;; Parameters:    Size  Location     Type
 10481 ;;		None
 10482 ;; Auto vars:     Size  Location     Type
 10483 ;;		None
 10484 ;; Return value:  Size  Location     Type
 10485 ;;                  1    wreg      void 
 10486 ;; Registers used:
 10487 ;;		wreg, status,2, status,0, pclath, cstack
 10488 ;; Tracked objects:
 10489 ;;		On entry : 0/0
 10490 ;;		On exit  : 0/0
 10491 ;;		Unchanged: 0/0
 10492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10497 ;;Total ram usage:        0 bytes
 10498 ;; Hardware stack levels used:    1
 10499 ;; Hardware stack levels required when called:    9
 10500 ;; This function calls:
 10501 ;;		_sleep
 10502 ;; This function is called by:
 10503 ;;		_getBTAddress
 10504 ;;		_setBTConnection
 10505 ;; This function uses a non-reentrant model
 10506 ;;
 10507                           
 10508                           
 10509                           ;psect for function _SetMasterTXRX
 10510  16D6                     _SetMasterTXRX:
 10511  16D6                     l4910:	
 10512                           ;incstack = 0
 10513                           ; Regs used in _SetMasterTXRX: [wreg+status,2+status,0+pclath+cstack]
 10514                           
 10515                           
 10516                           ;configure.c: 36:     RX1DTPPS = 0x13;
 10517  16D6  3013               	movlw	19
 10518  16D7  017D               	movlb	61	; select bank61
 10519  16D8  00CB               	movwf	75	;volatile
 10520                           
 10521                           ;configure.c: 37:     RC6PPS = 0x0F;
 10522  16D9  300F               	movlw	15
 10523  16DA  017E               	movlb	62	; select bank62
 10524  16DB  00A6               	movwf	38	;volatile
 10525                           
 10526                           ;configure.c: 38:     RC4PPS = 0x14;
 10527  16DC  3014               	movlw	20
 10528  16DD  00A4               	movwf	36	;volatile
 10529  16DE                     l4912:
 10530                           
 10531                           ;configure.c: 39:     sleep(5);
 10532  16DE  3000               	movlw	0
 10533  16DF  0140               	movlb	0	; select bank0
 10534  16E0  00B1               	movwf	sleep@delay+3
 10535  16E1  3000               	movlw	0
 10536  16E2  00B0               	movwf	sleep@delay+2
 10537  16E3  3000               	movlw	0
 10538  16E4  00AF               	movwf	sleep@delay+1
 10539  16E5  3005               	movlw	5
 10540  16E6  00AE               	movwf	sleep@delay
 10541  16E7  3189  21B5  3196   	fcall	_sleep
 10542  16EA                     l922:
 10543  16EA  0008               	return
 10544  16EB                     __end_of_SetMasterTXRX:
 10545                           
 10546                           	psect	text13
 10547  14B0                     __ptext13:	
 10548 ;; *************** function _USER2_pressed *****************
 10549 ;; Defined at:
 10550 ;;		line 272 in file "ui.c"
 10551 ;; Parameters:    Size  Location     Type
 10552 ;;		None
 10553 ;; Auto vars:     Size  Location     Type
 10554 ;;		None
 10555 ;; Return value:  Size  Location     Type
 10556 ;;                  1    wreg      _Bool 
 10557 ;; Registers used:
 10558 ;;		wreg, status,0
 10559 ;; Tracked objects:
 10560 ;;		On entry : 0/0
 10561 ;;		On exit  : 0/0
 10562 ;;		Unchanged: 0/0
 10563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10568 ;;Total ram usage:        0 bytes
 10569 ;; Hardware stack levels used:    1
 10570 ;; Hardware stack levels required when called:    7
 10571 ;; This function calls:
 10572 ;;		Nothing
 10573 ;; This function is called by:
 10574 ;;		_pairBluetoothDevices
 10575 ;;		_runUI
 10576 ;; This function uses a non-reentrant model
 10577 ;;
 10578                           
 10579                           
 10580                           ;psect for function _USER2_pressed
 10581  14B0                     _USER2_pressed:
 10582  14B0                     l5084:	
 10583                           ;incstack = 0
 10584                           ; Regs used in _USER2_pressed: [wreg+status,0]
 10585                           
 10586                           
 10587                           ;ui.c: 273:     return PORTAbits.RA4 == 0;
 10588  14B0  1003               	clrc
 10589  14B1  0140               	movlb	0	; select bank0
 10590  14B2  1E0C               	btfss	12,4	;volatile
 10591  14B3  1403               	setc
 10592  14B4  3000               	movlw	0
 10593  14B5  3D09               	addwfc	9,w
 10594  14B6                     l1177:
 10595  14B6  0008               	return
 10596  14B7                     __end_of_USER2_pressed:
 10597                           
 10598                           	psect	text14
 10599  14A9                     __ptext14:	
 10600 ;; *************** function _USER1_pressed *****************
 10601 ;; Defined at:
 10602 ;;		line 268 in file "ui.c"
 10603 ;; Parameters:    Size  Location     Type
 10604 ;;		None
 10605 ;; Auto vars:     Size  Location     Type
 10606 ;;		None
 10607 ;; Return value:  Size  Location     Type
 10608 ;;                  1    wreg      _Bool 
 10609 ;; Registers used:
 10610 ;;		wreg, status,0
 10611 ;; Tracked objects:
 10612 ;;		On entry : 0/0
 10613 ;;		On exit  : 0/0
 10614 ;;		Unchanged: 0/0
 10615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10620 ;;Total ram usage:        0 bytes
 10621 ;; Hardware stack levels used:    1
 10622 ;; Hardware stack levels required when called:    7
 10623 ;; This function calls:
 10624 ;;		Nothing
 10625 ;; This function is called by:
 10626 ;;		_pairBluetoothDevices
 10627 ;;		_runUI
 10628 ;; This function uses a non-reentrant model
 10629 ;;
 10630                           
 10631                           
 10632                           ;psect for function _USER1_pressed
 10633  14A9                     _USER1_pressed:
 10634  14A9                     l5080:	
 10635                           ;incstack = 0
 10636                           ; Regs used in _USER1_pressed: [wreg+status,0]
 10637                           
 10638                           
 10639                           ;ui.c: 269:     return PORTBbits.RB7 == 0;
 10640  14A9  1003               	clrc
 10641  14AA  0140               	movlb	0	; select bank0
 10642  14AB  1F8D               	btfss	13,7	;volatile
 10643  14AC  1403               	setc
 10644  14AD  3000               	movlw	0
 10645  14AE  3D09               	addwfc	9,w
 10646  14AF                     l1174:
 10647  14AF  0008               	return
 10648  14B0                     __end_of_USER1_pressed:
 10649                           
 10650                           	psect	text15
 10651  16C1                     __ptext15:	
 10652 ;; *************** function _SetSlaveTXMasterRX *****************
 10653 ;; Defined at:
 10654 ;;		line 42 in file "configure.c"
 10655 ;; Parameters:    Size  Location     Type
 10656 ;;		None
 10657 ;; Auto vars:     Size  Location     Type
 10658 ;;		None
 10659 ;; Return value:  Size  Location     Type
 10660 ;;                  1    wreg      void 
 10661 ;; Registers used:
 10662 ;;		wreg, status,2, status,0, pclath, cstack
 10663 ;; Tracked objects:
 10664 ;;		On entry : 0/0
 10665 ;;		On exit  : 0/0
 10666 ;;		Unchanged: 0/0
 10667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10672 ;;Total ram usage:        0 bytes
 10673 ;; Hardware stack levels used:    1
 10674 ;; Hardware stack levels required when called:    9
 10675 ;; This function calls:
 10676 ;;		_sleep
 10677 ;; This function is called by:
 10678 ;;		_pairBluetoothDevices
 10679 ;; This function uses a non-reentrant model
 10680 ;;
 10681                           
 10682                           
 10683                           ;psect for function _SetSlaveTXMasterRX
 10684  16C1                     _SetSlaveTXMasterRX:
 10685  16C1                     l4978:	
 10686                           ;incstack = 0
 10687                           ; Regs used in _SetSlaveTXMasterRX: [wreg+status,2+status,0+pclath+cstack]
 10688                           
 10689                           
 10690                           ;configure.c: 43:     RX1DTPPS = 0x13;
 10691  16C1  3013               	movlw	19
 10692  16C2  017D               	movlb	61	; select bank61
 10693  16C3  00CB               	movwf	75	;volatile
 10694                           
 10695                           ;configure.c: 45:     RC4PPS = 0x0F;
 10696  16C4  300F               	movlw	15
 10697  16C5  017E               	movlb	62	; select bank62
 10698  16C6  00A4               	movwf	36	;volatile
 10699                           
 10700                           ;configure.c: 46:     RC6PPS = 0x16;
 10701  16C7  3016               	movlw	22
 10702  16C8  00A6               	movwf	38	;volatile
 10703  16C9                     l4980:
 10704                           
 10705                           ;configure.c: 47:     sleep(5);
 10706  16C9  3000               	movlw	0
 10707  16CA  0140               	movlb	0	; select bank0
 10708  16CB  00B1               	movwf	sleep@delay+3
 10709  16CC  3000               	movlw	0
 10710  16CD  00B0               	movwf	sleep@delay+2
 10711  16CE  3000               	movlw	0
 10712  16CF  00AF               	movwf	sleep@delay+1
 10713  16D0  3005               	movlw	5
 10714  16D1  00AE               	movwf	sleep@delay
 10715  16D2  3189  21B5  3196   	fcall	_sleep
 10716  16D5                     l925:
 10717  16D5  0008               	return
 10718  16D6                     __end_of_SetSlaveTXMasterRX:
 10719                           
 10720                           	psect	text16
 10721  1578                     __ptext16:	
 10722 ;; *************** function _oneSec *****************
 10723 ;; Defined at:
 10724 ;;		line 26 in file "timers.c"
 10725 ;; Parameters:    Size  Location     Type
 10726 ;;		None
 10727 ;; Auto vars:     Size  Location     Type
 10728 ;;		None
 10729 ;; Return value:  Size  Location     Type
 10730 ;;                  1    wreg      _Bool 
 10731 ;; Registers used:
 10732 ;;		wreg, status,2, status,0
 10733 ;; Tracked objects:
 10734 ;;		On entry : 0/0
 10735 ;;		On exit  : 0/0
 10736 ;;		Unchanged: 0/0
 10737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10742 ;;Total ram usage:        0 bytes
 10743 ;; Hardware stack levels used:    1
 10744 ;; Hardware stack levels required when called:    7
 10745 ;; This function calls:
 10746 ;;		Nothing
 10747 ;; This function is called by:
 10748 ;;		_runUI
 10749 ;; This function uses a non-reentrant model
 10750 ;;
 10751                           
 10752                           
 10753                           ;psect for function _oneSec
 10754  1578                     _oneSec:
 10755  1578                     l5160:	
 10756                           ;incstack = 0
 10757                           ; Regs used in _oneSec: [wreg+status,2+status,0]
 10758                           
 10759                           
 10760                           ;timers.c: 27:     if (oneSecBlink) {
 10761  1578  0140               	movlb	0	; select bank0
 10762  1579  0859               	movf	_oneSecBlink,w
 10763  157A  1903               	btfsc	3,2
 10764  157B  2D7D               	goto	u3921
 10765  157C  2D7E               	goto	u3920
 10766  157D                     u3921:
 10767  157D  2D81               	goto	l5170
 10768  157E                     u3920:
 10769  157E                     l5162:
 10770                           
 10771                           ;timers.c: 28:         oneSecBlink = 0;
 10772  157E  01D9               	clrf	_oneSecBlink
 10773  157F                     l5164:
 10774                           
 10775                           ;timers.c: 29:         return 1;
 10776  157F  3001               	movlw	1
 10777  1580  2D82               	goto	l836
 10778  1581                     l5170:
 10779                           
 10780                           ;timers.c: 31:         return 0;
 10781  1581  3000               	movlw	0
 10782  1582                     l836:
 10783  1582  0008               	return
 10784  1583                     __end_of_oneSec:
 10785                           
 10786                           	psect	text17
 10787  153E                     __ptext17:	
 10788 ;; *************** function _enableJoystick *****************
 10789 ;; Defined at:
 10790 ;;		line 56 in file "joystick.c"
 10791 ;; Parameters:    Size  Location     Type
 10792 ;;		None
 10793 ;; Auto vars:     Size  Location     Type
 10794 ;;		None
 10795 ;; Return value:  Size  Location     Type
 10796 ;;                  1    wreg      void 
 10797 ;; Registers used:
 10798 ;;		wreg, status,2, status,0, pclath, cstack
 10799 ;; Tracked objects:
 10800 ;;		On entry : 0/0
 10801 ;;		On exit  : 0/0
 10802 ;;		Unchanged: 0/0
 10803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10808 ;;Total ram usage:        0 bytes
 10809 ;; Hardware stack levels used:    1
 10810 ;; Hardware stack levels required when called:    8
 10811 ;; This function calls:
 10812 ;;		_TMR1_StartTimer
 10813 ;;		_resetBTTimer
 10814 ;; This function is called by:
 10815 ;;		_main
 10816 ;;		_runUI
 10817 ;; This function uses a non-reentrant model
 10818 ;;
 10819                           
 10820                           
 10821                           ;psect for function _enableJoystick
 10822  153E                     _enableJoystick:
 10823  153E                     l5138:	
 10824                           ;incstack = 0
 10825                           ; Regs used in _enableJoystick: [wreg+status,2+status,0+pclath+cstack]
 10826                           
 10827                           
 10828                           ;joystick.c: 57:     joystickEnabled = 1;
 10829  153E  01FD               	clrf	_joystickEnabled
 10830  153F  0AFD               	incf	_joystickEnabled,f
 10831  1540                     l5140:
 10832                           
 10833                           ;joystick.c: 58:     resetBTTimer();
 10834  1540  3196  2660  3195   	fcall	_resetBTTimer
 10835  1543                     l5142:
 10836                           
 10837                           ;joystick.c: 59:     TMR1_StartTimer();
 10838  1543  3187  27FD  3195   	fcall	_TMR1_StartTimer
 10839  1546                     l677:
 10840  1546  0008               	return
 10841  1547                     __end_of_enableJoystick:
 10842                           
 10843                           	psect	text18
 10844  1660                     __ptext18:	
 10845 ;; *************** function _resetBTTimer *****************
 10846 ;; Defined at:
 10847 ;;		line 49 in file "timers.c"
 10848 ;; Parameters:    Size  Location     Type
 10849 ;;		None
 10850 ;; Auto vars:     Size  Location     Type
 10851 ;;		None
 10852 ;; Return value:  Size  Location     Type
 10853 ;;                  1    wreg      void 
 10854 ;; Registers used:
 10855 ;;		wreg
 10856 ;; Tracked objects:
 10857 ;;		On entry : 0/0
 10858 ;;		On exit  : 0/0
 10859 ;;		Unchanged: 0/0
 10860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10865 ;;Total ram usage:        0 bytes
 10866 ;; Hardware stack levels used:    1
 10867 ;; Hardware stack levels required when called:    7
 10868 ;; This function calls:
 10869 ;;		Nothing
 10870 ;; This function is called by:
 10871 ;;		_main
 10872 ;;		_enableJoystick
 10873 ;; This function uses a non-reentrant model
 10874 ;;
 10875                           
 10876                           
 10877                           ;psect for function _resetBTTimer
 10878  1660                     _resetBTTimer:
 10879  1660                     l4976:	
 10880                           ;incstack = 0
 10881                           ; Regs used in _resetBTTimer: [wreg]
 10882                           
 10883                           
 10884                           ;timers.c: 50:     lastBTTime = systemTime;
 10885  1660  0140               	movlb	0	; select bank0
 10886  1661  0848               	movf	_systemTime+3,w
 10887  1662  0141               	movlb	1	; select bank1
 10888  1663  00AB               	movwf	(_lastBTTime+3)^(0+128)
 10889  1664  0140               	movlb	0	; select bank0
 10890  1665  0847               	movf	_systemTime+2,w
 10891  1666  0141               	movlb	1	; select bank1
 10892  1667  00AA               	movwf	(_lastBTTime+2)^(0+128)
 10893  1668  0140               	movlb	0	; select bank0
 10894  1669  0846               	movf	_systemTime+1,w
 10895  166A  0141               	movlb	1	; select bank1
 10896  166B  00A9               	movwf	(_lastBTTime+1)^(0+128)
 10897  166C  0140               	movlb	0	; select bank0
 10898  166D  0845               	movf	_systemTime,w
 10899  166E  0141               	movlb	1	; select bank1
 10900  166F  00A8               	movwf	_lastBTTime^(0+128)
 10901  1670                     l852:
 10902  1670  0008               	return
 10903  1671                     __end_of_resetBTTimer:
 10904                           
 10905                           	psect	text19
 10906  07FD                     __ptext19:	
 10907 ;; *************** function _TMR1_StartTimer *****************
 10908 ;; Defined at:
 10909 ;;		line 99 in file "mcc_generated_files/tmr1.c"
 10910 ;; Parameters:    Size  Location     Type
 10911 ;;		None
 10912 ;; Auto vars:     Size  Location     Type
 10913 ;;		None
 10914 ;; Return value:  Size  Location     Type
 10915 ;;                  1    wreg      void 
 10916 ;; Registers used:
 10917 ;;		None
 10918 ;; Tracked objects:
 10919 ;;		On entry : 0/0
 10920 ;;		On exit  : 0/0
 10921 ;;		Unchanged: 0/0
 10922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10927 ;;Total ram usage:        0 bytes
 10928 ;; Hardware stack levels used:    1
 10929 ;; Hardware stack levels required when called:    7
 10930 ;; This function calls:
 10931 ;;		Nothing
 10932 ;; This function is called by:
 10933 ;;		_enableJoystick
 10934 ;; This function uses a non-reentrant model
 10935 ;;
 10936                           
 10937                           
 10938                           ;psect for function _TMR1_StartTimer
 10939  07FD                     _TMR1_StartTimer:
 10940  07FD                     l4972:	
 10941                           ;incstack = 0
 10942                           ; Regs used in _TMR1_StartTimer: []
 10943                           
 10944                           
 10945                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 1;
 10946  07FD  0144               	movlb	4	; select bank4
 10947  07FE  140E               	bsf	14,0	;volatile
 10948  07FF                     l36:
 10949  07FF  0008               	return
 10950  0800                     __end_of_TMR1_StartTimer:
 10951                           
 10952                           	psect	text20
 10953  0490                     __ptext20:	
 10954 ;; *************** function _doFactoryReset *****************
 10955 ;; Defined at:
 10956 ;;		line 185 in file "configure.c"
 10957 ;; Parameters:    Size  Location     Type
 10958 ;;		None
 10959 ;; Auto vars:     Size  Location     Type
 10960 ;;		None
 10961 ;; Return value:  Size  Location     Type
 10962 ;;                  1    wreg      void 
 10963 ;; Registers used:
 10964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10965 ;; Tracked objects:
 10966 ;;		On entry : 0/0
 10967 ;;		On exit  : 0/0
 10968 ;;		Unchanged: 0/0
 10969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10971 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10972 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10973 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10974 ;;Total ram usage:        4 bytes
 10975 ;; Hardware stack levels used:    1
 10976 ;; Hardware stack levels required when called:   11
 10977 ;; This function calls:
 10978 ;;		_SetDualReceive
 10979 ;;		_SetSlaveTXRX
 10980 ;;		_pulseLEDColor
 10981 ;;		_receiveBTBuffer
 10982 ;;		_sendBTString
 10983 ;;		_setSerialBaud
 10984 ;;		_sleep
 10985 ;;		_strstr
 10986 ;; This function is called by:
 10987 ;;		_runUI
 10988 ;; This function uses a non-reentrant model
 10989 ;;
 10990                           
 10991                           
 10992                           ;psect for function _doFactoryReset
 10993  0490                     _doFactoryReset:
 10994  0490                     l5196:	
 10995                           ;incstack = 0
 10996                           ; Regs used in _doFactoryReset: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10997                           
 10998                           
 10999                           ;configure.c: 188:     SetDualReceive();
 11000  0490  3196  26AC  3184   	fcall	_SetDualReceive
 11001                           
 11002                           ;configure.c: 189:     setSerialBaud(38400);
 11003  0493  3000               	movlw	0
 11004  0494  0140               	movlb	0	; select bank0
 11005  0495  00B6               	movwf	setSerialBaud@baud
 11006  0496  3096               	movlw	150
 11007  0497  00B7               	movwf	setSerialBaud@baud+1
 11008  0498  3188  2050  3184   	fcall	_setSerialBaud
 11009                           
 11010                           ;configure.c: 190:     sleep(500);
 11011  049B  3000               	movlw	0
 11012  049C  0140               	movlb	0	; select bank0
 11013  049D  00B1               	movwf	sleep@delay+3
 11014  049E  3000               	movlw	0
 11015  049F  00B0               	movwf	sleep@delay+2
 11016  04A0  3001               	movlw	1
 11017  04A1  00AF               	movwf	sleep@delay+1
 11018  04A2  30F4               	movlw	244
 11019  04A3  00AE               	movwf	sleep@delay
 11020  04A4  3189  21B5  3184   	fcall	_sleep
 11021  04A7                     l5198:
 11022                           
 11023                           ;configure.c: 192:     sendBTString("AT");
 11024  04A7  3055               	movlw	low (STR_4| (0+32768))
 11025  04A8  0140               	movlb	0	; select bank0
 11026  04A9  00B6               	movwf	sendBTString@buffer
 11027  04AA  3098               	movlw	high (STR_4| (0+32768))
 11028  04AB  00B7               	movwf	sendBTString@buffer+1
 11029  04AC  3197  2778  3184   	fcall	_sendBTString
 11030  04AF                     l5200:
 11031                           
 11032                           ;configure.c: 193:     sleep(100);
 11033  04AF  3000               	movlw	0
 11034  04B0  0140               	movlb	0	; select bank0
 11035  04B1  00B1               	movwf	sleep@delay+3
 11036  04B2  3000               	movlw	0
 11037  04B3  00B0               	movwf	sleep@delay+2
 11038  04B4  3000               	movlw	0
 11039  04B5  00AF               	movwf	sleep@delay+1
 11040  04B6  3064               	movlw	100
 11041  04B7  00AE               	movwf	sleep@delay
 11042  04B8  3189  21B5  3184   	fcall	_sleep
 11043                           
 11044                           ;configure.c: 194:     sendBTString("AT");
 11045  04BB  3055               	movlw	low (STR_4| (0+32768))
 11046  04BC  0140               	movlb	0	; select bank0
 11047  04BD  00B6               	movwf	sendBTString@buffer
 11048  04BE  3098               	movlw	high (STR_4| (0+32768))
 11049  04BF  00B7               	movwf	sendBTString@buffer+1
 11050  04C0  3197  2778  3184   	fcall	_sendBTString
 11051  04C3                     l5202:
 11052                           
 11053                           ;configure.c: 195:     sleep(100);
 11054  04C3  3000               	movlw	0
 11055  04C4  0140               	movlb	0	; select bank0
 11056  04C5  00B1               	movwf	sleep@delay+3
 11057  04C6  3000               	movlw	0
 11058  04C7  00B0               	movwf	sleep@delay+2
 11059  04C8  3000               	movlw	0
 11060  04C9  00AF               	movwf	sleep@delay+1
 11061  04CA  3064               	movlw	100
 11062  04CB  00AE               	movwf	sleep@delay
 11063  04CC  3189  21B5  3184   	fcall	_sleep
 11064  04CF                     l5204:
 11065                           
 11066                           ;configure.c: 196:     sendBTString("AT+BAUD0");
 11067  04CF  3000               	movlw	low (STR_20| (0+32768))
 11068  04D0  0140               	movlb	0	; select bank0
 11069  04D1  00B6               	movwf	sendBTString@buffer
 11070  04D2  3098               	movlw	high (STR_20| (0+32768))
 11071  04D3  00B7               	movwf	sendBTString@buffer+1
 11072  04D4  3197  2778  3184   	fcall	_sendBTString
 11073                           
 11074                           ;configure.c: 197:     sleep(500);
 11075  04D7  3000               	movlw	0
 11076  04D8  0140               	movlb	0	; select bank0
 11077  04D9  00B1               	movwf	sleep@delay+3
 11078  04DA  3000               	movlw	0
 11079  04DB  00B0               	movwf	sleep@delay+2
 11080  04DC  3001               	movlw	1
 11081  04DD  00AF               	movwf	sleep@delay+1
 11082  04DE  30F4               	movlw	244
 11083  04DF  00AE               	movwf	sleep@delay
 11084  04E0  3189  21B5  3184   	fcall	_sleep
 11085  04E3                     l5206:
 11086                           
 11087                           ;configure.c: 198:     sendBTString("AT+RESET");
 11088  04E3  302D               	movlw	low (STR_7| (0+32768))
 11089  04E4  0140               	movlb	0	; select bank0
 11090  04E5  00B6               	movwf	sendBTString@buffer
 11091  04E6  3098               	movlw	high (STR_7| (0+32768))
 11092  04E7  00B7               	movwf	sendBTString@buffer+1
 11093  04E8  3197  2778  3184   	fcall	_sendBTString
 11094  04EB                     l5208:
 11095                           
 11096                           ;configure.c: 199:     sleep(1000);
 11097  04EB  3000               	movlw	0
 11098  04EC  0140               	movlb	0	; select bank0
 11099  04ED  00B1               	movwf	sleep@delay+3
 11100  04EE  3000               	movlw	0
 11101  04EF  00B0               	movwf	sleep@delay+2
 11102  04F0  3003               	movlw	3
 11103  04F1  00AF               	movwf	sleep@delay+1
 11104  04F2  30E8               	movlw	232
 11105  04F3  00AE               	movwf	sleep@delay
 11106  04F4  3189  21B5  3184   	fcall	_sleep
 11107  04F7                     l5210:
 11108                           
 11109                           ;configure.c: 200:     setSerialBaud(9600);
 11110  04F7  3080               	movlw	128
 11111  04F8  0140               	movlb	0	; select bank0
 11112  04F9  00B6               	movwf	setSerialBaud@baud
 11113  04FA  3025               	movlw	37
 11114  04FB  00B7               	movwf	setSerialBaud@baud+1
 11115  04FC  3188  2050  3184   	fcall	_setSerialBaud
 11116  04FF                     l5212:
 11117                           
 11118                           ;configure.c: 202:     sendBTString("AT+RENEW");
 11119  04FF  3036               	movlw	low (STR_22| (0+32768))
 11120  0500  0140               	movlb	0	; select bank0
 11121  0501  00B6               	movwf	sendBTString@buffer
 11122  0502  3098               	movlw	high (STR_22| (0+32768))
 11123  0503  00B7               	movwf	sendBTString@buffer+1
 11124  0504  3197  2778  3184   	fcall	_sendBTString
 11125  0507                     l5214:
 11126                           
 11127                           ;configure.c: 203:     charsRead = receiveBTBuffer(RX_Buffer, 16, 100);
 11128  0507  3010               	movlw	16
 11129  0508  0140               	movlb	0	; select bank0
 11130  0509  00BC               	movwf	??_doFactoryReset
 11131  050A  083C               	movf	??_doFactoryReset,w
 11132  050B  00AE               	movwf	receiveBTBuffer@maxChars
 11133  050C  3064               	movlw	100
 11134  050D  00AF               	movwf	receiveBTBuffer@timeoutMS
 11135  050E  3000               	movlw	0
 11136  050F  00B0               	movwf	receiveBTBuffer@timeoutMS+1
 11137  0510  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
 11138  0511  318E  268E  3184   	fcall	_receiveBTBuffer
 11139  0514  0140               	movlb	0	; select bank0
 11140  0515  00BD               	movwf	??_doFactoryReset+1
 11141  0516  083D               	movf	??_doFactoryReset+1,w
 11142  0517  00D8               	movwf	_charsRead
 11143  0518                     l5216:
 11144                           
 11145                           ;configure.c: 204:     pulseLEDColor((strstr((void *)RX_Buffer, "OK") != ((void*)0)) ? 0
      +                          x030 : 0x330, 100, 200);
 11146  0518  3052               	movlw	low (STR_11| (0+32768))
 11147  0519  00AF               	movwf	strstr@n
 11148  051A  3098               	movlw	high (STR_11| (0+32768))
 11149  051B  00B0               	movwf	strstr@n+1
 11150  051C  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
 11151  051D  318D  253C  3184   	fcall	_strstr
 11152  0520  3A00               	xorlw	0
 11153  0521  1D03               	skipz
 11154  0522  2D24               	goto	u3971
 11155  0523  2D25               	goto	u3970
 11156  0524                     u3971:
 11157  0524  2D2B               	goto	l5220
 11158  0525                     u3970:
 11159  0525                     l5218:
 11160  0525  3030               	movlw	48
 11161  0526  0140               	movlb	0	; select bank0
 11162  0527  00BE               	movwf	_doFactoryReset$1680
 11163  0528  3003               	movlw	3
 11164  0529  00BF               	movwf	_doFactoryReset$1680+1
 11165  052A  2D30               	goto	l5222
 11166  052B                     l5220:
 11167  052B  3030               	movlw	48
 11168  052C  0140               	movlb	0	; select bank0
 11169  052D  00BE               	movwf	_doFactoryReset$1680
 11170  052E  3000               	movlw	0
 11171  052F  00BF               	movwf	_doFactoryReset$1680+1
 11172  0530                     l5222:
 11173  0530  083F               	movf	_doFactoryReset$1680+1,w
 11174  0531  00B7               	movwf	pulseLEDColor@RGB+1
 11175  0532  083E               	movf	_doFactoryReset$1680,w
 11176  0533  00B6               	movwf	pulseLEDColor@RGB
 11177  0534  3064               	movlw	100
 11178  0535  00B8               	movwf	pulseLEDColor@onTimeMS
 11179  0536  3000               	movlw	0
 11180  0537  00B9               	movwf	pulseLEDColor@onTimeMS+1
 11181  0538  30C8               	movlw	200
 11182  0539  00BA               	movwf	pulseLEDColor@offTimeMS
 11183  053A  3000               	movlw	0
 11184  053B  00BB               	movwf	pulseLEDColor@offTimeMS+1
 11185  053C  3189  2115  3184   	fcall	_pulseLEDColor
 11186  053F                     l5224:
 11187                           
 11188                           ;configure.c: 205:     sleep(1000);
 11189  053F  3000               	movlw	0
 11190  0540  0140               	movlb	0	; select bank0
 11191  0541  00B1               	movwf	sleep@delay+3
 11192  0542  3000               	movlw	0
 11193  0543  00B0               	movwf	sleep@delay+2
 11194  0544  3003               	movlw	3
 11195  0545  00AF               	movwf	sleep@delay+1
 11196  0546  30E8               	movlw	232
 11197  0547  00AE               	movwf	sleep@delay
 11198  0548  3189  21B5  3184   	fcall	_sleep
 11199  054B                     l5226:
 11200                           
 11201                           ;configure.c: 207:     SetSlaveTXRX();
 11202  054B  3196  2682  3184   	fcall	_SetSlaveTXRX
 11203  054E                     l992:
 11204  054E  0008               	return
 11205  054F                     __end_of_doFactoryReset:
 11206                           
 11207                           	psect	text21
 11208  0D3C                     __ptext21:	
 11209 ;; *************** function _strstr *****************
 11210 ;; Defined at:
 11211 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strstr.c"
 11212 ;; Parameters:    Size  Location     Type
 11213 ;;  h               1    wreg     PTR const unsigned char 
 11214 ;;		 -> NULL(0), RX_Buffer(40), 
 11215 ;;  n               2   15[BANK0 ] PTR const unsigned char 
 11216 ;;		 -> STR_23(3), STR_17(3), STR_15(3), STR_13(6), 
 11217 ;;		 -> STR_11(3), STR_3(6), 
 11218 ;; Auto vars:     Size  Location     Type
 11219 ;;  h               1   22[BANK0 ] PTR const unsigned char 
 11220 ;;		 -> NULL(0), RX_Buffer(40), 
 11221 ;;  nl              2   20[BANK0 ] unsigned int 
 11222 ;; Return value:  Size  Location     Type
 11223 ;;                  1    wreg      PTR unsigned char 
 11224 ;; Registers used:
 11225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11226 ;; Tracked objects:
 11227 ;;		On entry : 0/0
 11228 ;;		On exit  : 0/0
 11229 ;;		Unchanged: 0/0
 11230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11231 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11232 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11233 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11234 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11235 ;;Total ram usage:        8 bytes
 11236 ;; Hardware stack levels used:    1
 11237 ;; Hardware stack levels required when called:    8
 11238 ;; This function calls:
 11239 ;;		_strchr
 11240 ;;		_strlen
 11241 ;;		_strncmp
 11242 ;; This function is called by:
 11243 ;;		_pairBluetoothDevices
 11244 ;;		_getBTAddress
 11245 ;;		_setBTConnection
 11246 ;;		_doFactoryReset
 11247 ;; This function uses a non-reentrant model
 11248 ;;
 11249                           
 11250                           
 11251                           ;psect for function _strstr
 11252  0D3C                     _strstr:
 11253                           
 11254                           ;incstack = 0
 11255                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11256                           ;strstr@h stored from wreg
 11257  0D3C  0140               	movlb	0	; select bank0
 11258  0D3D  00B6               	movwf	strstr@h
 11259  0D3E                     l4914:
 11260  0D3E  082F               	movf	strstr@n,w
 11261  0D3F  0430               	iorwf	strstr@n+1,w
 11262  0D40  1903               	btfsc	3,2
 11263  0D41  2D43               	goto	u3621
 11264  0D42  2D44               	goto	u3620
 11265  0D43                     u3621:
 11266  0D43  2D88               	goto	l4930
 11267  0D44                     u3620:
 11268  0D44                     l4916:
 11269  0D44  0830               	movf	strstr@n+1,w
 11270  0D45  00A7               	movwf	strlen@s+1
 11271  0D46  082F               	movf	strstr@n,w
 11272  0D47  00A6               	movwf	strlen@s
 11273  0D48  3197  275E  318D   	fcall	_strlen
 11274  0D4B  0140               	movlb	0	; select bank0
 11275  0D4C  0827               	movf	?_strlen+1,w
 11276  0D4D  00B5               	movwf	strstr@nl+1
 11277  0D4E  0826               	movf	?_strlen,w
 11278  0D4F  00B4               	movwf	strstr@nl
 11279  0D50  2D7A               	goto	l4926
 11280  0D51                     l4918:
 11281  0D51  0830               	movf	strstr@n+1,w
 11282  0D52  00A7               	movwf	strncmp@_r+1
 11283  0D53  082F               	movf	strstr@n,w
 11284  0D54  00A6               	movwf	strncmp@_r
 11285  0D55  0835               	movf	strstr@nl+1,w
 11286  0D56  00A9               	movwf	strncmp@n+1
 11287  0D57  0834               	movf	strstr@nl,w
 11288  0D58  00A8               	movwf	strncmp@n
 11289  0D59  0836               	movf	strstr@h,w
 11290  0D5A  318E  26EA  318D   	fcall	_strncmp
 11291  0D5D  0140               	movlb	0	; select bank0
 11292  0D5E  0826               	movf	?_strncmp,w
 11293  0D5F  0427               	iorwf	?_strncmp+1,w
 11294  0D60  1D03               	btfss	3,2
 11295  0D61  2D63               	goto	u3631
 11296  0D62  2D64               	goto	u3630
 11297  0D63                     u3631:
 11298  0D63  2D66               	goto	l4924
 11299  0D64                     u3630:
 11300  0D64                     l4920:
 11301  0D64  0836               	movf	strstr@h,w
 11302  0D65  2D89               	goto	l1820
 11303  0D66                     l4924:
 11304  0D66  082F               	movf	strstr@n,w
 11305  0D67  0084               	movwf	4
 11306  0D68  0830               	movf	strstr@n+1,w
 11307  0D69  0085               	movwf	5
 11308  0D6A  0800               	movf	0,w	;code access
 11309  0D6B  00B1               	movwf	??_strstr
 11310  0D6C  01B2               	clrf	??_strstr+1
 11311  0D6D  0831               	movf	??_strstr,w
 11312  0D6E  00A6               	movwf	strchr@c
 11313  0D6F  0832               	movf	??_strstr+1,w
 11314  0D70  00A7               	movwf	strchr@c+1
 11315  0D71  0836               	movf	strstr@h,w
 11316  0D72  3E01               	addlw	1
 11317  0D73  3197  2792  318D   	fcall	_strchr
 11318  0D76  0140               	movlb	0	; select bank0
 11319  0D77  00B3               	movwf	??_strstr+2
 11320  0D78  0833               	movf	??_strstr+2,w
 11321  0D79  00B6               	movwf	strstr@h
 11322  0D7A                     l4926:
 11323  0D7A  0836               	movf	strstr@h,w
 11324  0D7B  1903               	btfsc	3,2
 11325  0D7C  2D7E               	goto	u3641
 11326  0D7D  2D7F               	goto	u3640
 11327  0D7E                     u3641:
 11328  0D7E  2D88               	goto	l4930
 11329  0D7F                     u3640:
 11330  0D7F                     l4928:
 11331  0D7F  0836               	movf	strstr@h,w
 11332  0D80  0086               	movwf	6
 11333  0D81  3001               	movlw	1	; select bank2/3
 11334  0D82  0087               	movwf	7
 11335  0D83  0801               	movf	1,w
 11336  0D84  1D03               	btfss	3,2
 11337  0D85  2D87               	goto	u3651
 11338  0D86  2D88               	goto	u3650
 11339  0D87                     u3651:
 11340  0D87  2D51               	goto	l4918
 11341  0D88                     u3650:
 11342  0D88                     l4930:
 11343  0D88  3000               	movlw	0
 11344  0D89                     l1820:
 11345  0D89  0008               	return
 11346  0D8A                     __end_of_strstr:
 11347                           
 11348                           	psect	text22
 11349  0EEA                     __ptext22:	
 11350 ;; *************** function _strncmp *****************
 11351 ;; Defined at:
 11352 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
 11353 ;; Parameters:    Size  Location     Type
 11354 ;;  _l              1    wreg     PTR const unsigned char 
 11355 ;;		 -> NULL(0), RX_Buffer(40), 
 11356 ;;  _r              2    6[BANK0 ] PTR const unsigned char 
 11357 ;;		 -> STR_23(3), STR_17(3), STR_15(3), STR_13(6), 
 11358 ;;		 -> STR_11(3), STR_3(6), 
 11359 ;;  n               2    8[BANK0 ] unsigned int 
 11360 ;; Auto vars:     Size  Location     Type
 11361 ;;  _l              1   11[BANK0 ] PTR const unsigned char 
 11362 ;;		 -> NULL(0), RX_Buffer(40), 
 11363 ;;  r               2   12[BANK0 ] PTR const unsigned char 
 11364 ;;		 -> STR_23(3), STR_17(3), STR_15(3), STR_13(6), 
 11365 ;;		 -> STR_11(3), STR_3(6), 
 11366 ;;  l               1   14[BANK0 ] PTR const unsigned char 
 11367 ;;		 -> NULL(0), RX_Buffer(40), 
 11368 ;; Return value:  Size  Location     Type
 11369 ;;                  2    6[BANK0 ] int 
 11370 ;; Registers used:
 11371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 11372 ;; Tracked objects:
 11373 ;;		On entry : 0/0
 11374 ;;		On exit  : 0/0
 11375 ;;		Unchanged: 0/0
 11376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11377 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11378 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11379 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11380 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11381 ;;Total ram usage:        9 bytes
 11382 ;; Hardware stack levels used:    1
 11383 ;; Hardware stack levels required when called:    7
 11384 ;; This function calls:
 11385 ;;		Nothing
 11386 ;; This function is called by:
 11387 ;;		_strstr
 11388 ;; This function uses a non-reentrant model
 11389 ;;
 11390                           
 11391                           
 11392                           ;psect for function _strncmp
 11393  0EEA                     _strncmp:
 11394                           
 11395                           ;incstack = 0
 11396                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
 11397                           ;strncmp@_l stored from wreg
 11398  0EEA  0140               	movlb	0	; select bank0
 11399  0EEB  00AB               	movwf	strncmp@_l
 11400  0EEC                     l4830:
 11401  0EEC  082B               	movf	strncmp@_l,w
 11402  0EED  00AA               	movwf	??_strncmp
 11403  0EEE  082A               	movf	??_strncmp,w
 11404  0EEF  00AE               	movwf	strncmp@l
 11405  0EF0  0827               	movf	strncmp@_r+1,w
 11406  0EF1  00AD               	movwf	strncmp@r+1
 11407  0EF2  0826               	movf	strncmp@_r,w
 11408  0EF3  00AC               	movwf	strncmp@r
 11409  0EF4                     l4832:
 11410  0EF4  3001               	movlw	1
 11411  0EF5  02A8               	subwf	strncmp@n,f
 11412  0EF6  3000               	movlw	0
 11413  0EF7  3BA9               	subwfb	strncmp@n+1,f
 11414  0EF8  0A28               	incf	strncmp@n,w
 11415  0EF9  1D03               	skipz
 11416  0EFA  2EFF               	goto	u3511
 11417  0EFB  0A29               	incf	strncmp@n+1,w
 11418  0EFC  1D03               	btfss	3,2
 11419  0EFD  2EFF               	goto	u3511
 11420  0EFE  2F00               	goto	u3510
 11421  0EFF                     u3511:
 11422  0EFF  2F0F               	goto	l4844
 11423  0F00                     u3510:
 11424  0F00                     l4834:
 11425  0F00  01A6               	clrf	?_strncmp
 11426  0F01  01A7               	clrf	?_strncmp+1
 11427  0F02  2F45               	goto	l1833
 11428  0F03                     l4838:
 11429  0F03  3001               	movlw	1
 11430  0F04  00AA               	movwf	??_strncmp
 11431  0F05  082A               	movf	??_strncmp,w
 11432  0F06  07AE               	addwf	strncmp@l,f
 11433  0F07                     l4840:
 11434  0F07  3001               	movlw	1
 11435  0F08  07AC               	addwf	strncmp@r,f
 11436  0F09  3000               	movlw	0
 11437  0F0A  3DAD               	addwfc	strncmp@r+1,f
 11438  0F0B                     l4842:
 11439  0F0B  3001               	movlw	1
 11440  0F0C  02A8               	subwf	strncmp@n,f
 11441  0F0D  3000               	movlw	0
 11442  0F0E  3BA9               	subwfb	strncmp@n+1,f
 11443  0F0F                     l4844:
 11444  0F0F  082E               	movf	strncmp@l,w
 11445  0F10  0086               	movwf	6
 11446  0F11  3001               	movlw	1	; select bank2/3
 11447  0F12  0087               	movwf	7
 11448  0F13  0801               	movf	1,w
 11449  0F14  1903               	btfsc	3,2
 11450  0F15  2F17               	goto	u3521
 11451  0F16  2F18               	goto	u3520
 11452  0F17                     u3521:
 11453  0F17  2F37               	goto	l4852
 11454  0F18                     u3520:
 11455  0F18                     l4846:
 11456  0F18  082C               	movf	strncmp@r,w
 11457  0F19  0084               	movwf	4
 11458  0F1A  082D               	movf	strncmp@r+1,w
 11459  0F1B  0085               	movwf	5
 11460  0F1C  0012               	moviw fsr0++
 11461  0F1D  1903               	btfsc	3,2
 11462  0F1E  2F20               	goto	u3531
 11463  0F1F  2F21               	goto	u3530
 11464  0F20                     u3531:
 11465  0F20  2F37               	goto	l4852
 11466  0F21                     u3530:
 11467  0F21                     l4848:
 11468  0F21  0828               	movf	strncmp@n,w
 11469  0F22  0429               	iorwf	strncmp@n+1,w
 11470  0F23  1903               	btfsc	3,2
 11471  0F24  2F26               	goto	u3541
 11472  0F25  2F27               	goto	u3540
 11473  0F26                     u3541:
 11474  0F26  2F37               	goto	l4852
 11475  0F27                     u3540:
 11476  0F27                     l4850:
 11477  0F27  082C               	movf	strncmp@r,w
 11478  0F28  0084               	movwf	4
 11479  0F29  082D               	movf	strncmp@r+1,w
 11480  0F2A  0085               	movwf	5
 11481  0F2B  0800               	movf	0,w	;code access
 11482  0F2C  00AA               	movwf	??_strncmp
 11483  0F2D  082E               	movf	strncmp@l,w
 11484  0F2E  0086               	movwf	6
 11485  0F2F  3001               	movlw	1	; select bank2/3
 11486  0F30  0087               	movwf	7
 11487  0F31  0801               	movf	1,w
 11488  0F32  062A               	xorwf	??_strncmp,w
 11489  0F33  1903               	skipnz
 11490  0F34  2F36               	goto	u3551
 11491  0F35  2F37               	goto	u3550
 11492  0F36                     u3551:
 11493  0F36  2F03               	goto	l4838
 11494  0F37                     u3550:
 11495  0F37                     l4852:
 11496  0F37  082E               	movf	strncmp@l,w
 11497  0F38  0086               	movwf	6
 11498  0F39  3001               	movlw	1	; select bank2/3
 11499  0F3A  0087               	movwf	7
 11500  0F3B  082C               	movf	strncmp@r,w
 11501  0F3C  0084               	movwf	4
 11502  0F3D  082D               	movf	strncmp@r+1,w
 11503  0F3E  0085               	movwf	5
 11504  0F3F  0800               	movf	0,w	;code access
 11505  0F40  0201               	subwf	1,w
 11506  0F41  00A6               	movwf	?_strncmp
 11507  0F42  01A7               	clrf	?_strncmp+1
 11508  0F43  1C03               	skipc
 11509  0F44  03A7               	decf	?_strncmp+1,f
 11510  0F45                     l1833:
 11511  0F45  0008               	return
 11512  0F46                     __end_of_strncmp:
 11513                           
 11514                           	psect	text23
 11515  1792                     __ptext23:	
 11516 ;; *************** function _strchr *****************
 11517 ;; Defined at:
 11518 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strchr.c"
 11519 ;; Parameters:    Size  Location     Type
 11520 ;;  s               1    wreg     PTR const unsigned char 
 11521 ;;		 -> NULL(0), RX_Buffer(40), 
 11522 ;;  c               2    6[BANK0 ] int 
 11523 ;; Auto vars:     Size  Location     Type
 11524 ;;  s               1    8[BANK0 ] PTR const unsigned char 
 11525 ;;		 -> NULL(0), RX_Buffer(40), 
 11526 ;; Return value:  Size  Location     Type
 11527 ;;                  1    wreg      PTR unsigned char 
 11528 ;; Registers used:
 11529 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11530 ;; Tracked objects:
 11531 ;;		On entry : 0/0
 11532 ;;		On exit  : 0/0
 11533 ;;		Unchanged: 0/0
 11534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11535 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11536 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11538 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11539 ;;Total ram usage:        3 bytes
 11540 ;; Hardware stack levels used:    1
 11541 ;; Hardware stack levels required when called:    7
 11542 ;; This function calls:
 11543 ;;		Nothing
 11544 ;; This function is called by:
 11545 ;;		_strstr
 11546 ;; This function uses a non-reentrant model
 11547 ;;
 11548                           
 11549                           
 11550                           ;psect for function _strchr
 11551  1792                     _strchr:
 11552                           
 11553                           ;incstack = 0
 11554                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
 11555                           ;strchr@s stored from wreg
 11556  1792  0140               	movlb	0	; select bank0
 11557  1793  00A8               	movwf	strchr@s
 11558  1794                     l1826:
 11559  1794                     l4856:
 11560  1794  0828               	movf	strchr@s,w
 11561  1795  0086               	movwf	6
 11562  1796  3001               	movlw	1	; select bank2/3
 11563  1797  0087               	movwf	7
 11564  1798  0801               	movf	1,w
 11565  1799  0626               	xorwf	strchr@c,w
 11566  179A  1D03               	skipz
 11567  179B  2F9D               	goto	u3561
 11568  179C  2F9E               	goto	u3560
 11569  179D                     u3561:
 11570  179D  2FA0               	goto	l4862
 11571  179E                     u3560:
 11572  179E                     l4858:
 11573  179E  0828               	movf	strchr@s,w
 11574  179F  2FAB               	goto	l1828
 11575  17A0                     l4862:
 11576  17A0  0828               	movf	strchr@s,w
 11577  17A1  0086               	movwf	6
 11578  17A2  3001               	movlw	1	; select bank2/3
 11579  17A3  0087               	movwf	7
 11580  17A4  0AA8               	incf	strchr@s,f
 11581  17A5  0801               	movf	1,w
 11582  17A6  1D03               	btfss	3,2
 11583  17A7  2FA9               	goto	u3571
 11584  17A8  2FAA               	goto	u3570
 11585  17A9                     u3571:
 11586  17A9  2F94               	goto	l1826
 11587  17AA                     u3570:
 11588  17AA                     l4864:
 11589  17AA  3000               	movlw	0
 11590  17AB                     l1828:
 11591  17AB  0008               	return
 11592  17AC                     __end_of_strchr:
 11593                           
 11594                           	psect	text24
 11595  1778                     __ptext24:	
 11596 ;; *************** function _sendBTString *****************
 11597 ;; Defined at:
 11598 ;;		line 37 in file "serial.c"
 11599 ;; Parameters:    Size  Location     Type
 11600 ;;  buffer          2   22[BANK0 ] PTR unsigned char 
 11601 ;;		 -> STR_22(9), STR_21(9), STR_20(9), STR_19(3), 
 11602 ;;		 -> STR_18(3), STR_16(7), STR_14(3), STR_12(9), 
 11603 ;;		 -> STR_10(9), STR_9(9), STR_8(3), STR_7(9), 
 11604 ;;		 -> STR_6(3), STR_5(9), STR_4(3), STR_1(6), 
 11605 ;; Auto vars:     Size  Location     Type
 11606 ;;		None
 11607 ;; Return value:  Size  Location     Type
 11608 ;;                  1    wreg      void 
 11609 ;; Registers used:
 11610 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11611 ;; Tracked objects:
 11612 ;;		On entry : 0/0
 11613 ;;		On exit  : 0/0
 11614 ;;		Unchanged: 0/0
 11615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11616 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11618 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11619 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11620 ;;Total ram usage:        3 bytes
 11621 ;; Hardware stack levels used:    1
 11622 ;; Hardware stack levels required when called:   10
 11623 ;; This function calls:
 11624 ;;		_flushBTRXbuffer
 11625 ;;		_sendBTBuffer
 11626 ;;		_strlen
 11627 ;; This function is called by:
 11628 ;;		_pairBluetoothDevices
 11629 ;;		_setBTBaudRatesTo38400
 11630 ;;		_getBTAddress
 11631 ;;		_setBTConnection
 11632 ;;		_doFactoryReset
 11633 ;; This function uses a non-reentrant model
 11634 ;;
 11635                           
 11636                           
 11637                           ;psect for function _sendBTString
 11638  1778                     _sendBTString:
 11639  1778                     l4868:	
 11640                           ;incstack = 0
 11641                           ; Regs used in _sendBTString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11642                           
 11643                           
 11644                           ;serial.c: 38:     flushBTRXbuffer();
 11645  1778  3188  20D1  3197   	fcall	_flushBTRXbuffer
 11646  177B                     l4870:
 11647                           
 11648                           ;serial.c: 39:     sendBTBuffer((void *)buffer, strlen(buffer), 1);
 11649  177B  0140               	movlb	0	; select bank0
 11650  177C  0837               	movf	sendBTString@buffer+1,w
 11651  177D  00AC               	movwf	sendBTBuffer@buffer+1
 11652  177E  0836               	movf	sendBTString@buffer,w
 11653  177F  00AB               	movwf	sendBTBuffer@buffer
 11654  1780  0837               	movf	sendBTString@buffer+1,w
 11655  1781  00A7               	movwf	strlen@s+1
 11656  1782  0836               	movf	sendBTString@buffer,w
 11657  1783  00A6               	movwf	strlen@s
 11658  1784  3197  275E  3197   	fcall	_strlen
 11659  1787  0140               	movlb	0	; select bank0
 11660  1788  0826               	movf	?_strlen,w
 11661  1789  00B8               	movwf	??_sendBTString
 11662  178A  0838               	movf	??_sendBTString,w
 11663  178B  00AD               	movwf	sendBTBuffer@length
 11664  178C  01AE               	clrf	sendBTBuffer@blockIfBusy
 11665  178D  0AAE               	incf	sendBTBuffer@blockIfBusy,f
 11666  178E  318B  2345  3197   	fcall	_sendBTBuffer
 11667  1791                     l765:
 11668  1791  0008               	return
 11669  1792                     __end_of_sendBTString:
 11670                           
 11671                           	psect	text25
 11672  175E                     __ptext25:	
 11673 ;; *************** function _strlen *****************
 11674 ;; Defined at:
 11675 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
 11676 ;; Parameters:    Size  Location     Type
 11677 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 11678 ;;		 -> STR_23(3), STR_22(9), STR_21(9), STR_20(9), 
 11679 ;;		 -> STR_19(3), STR_18(3), STR_17(3), STR_16(7), 
 11680 ;;		 -> STR_15(3), STR_14(3), STR_13(6), STR_12(9), 
 11681 ;;		 -> STR_11(3), STR_10(9), STR_9(9), STR_8(3), 
 11682 ;;		 -> STR_7(9), STR_6(3), STR_5(9), STR_4(3), 
 11683 ;;		 -> STR_3(6), STR_1(6), 
 11684 ;; Auto vars:     Size  Location     Type
 11685 ;;  a               2    9[BANK0 ] PTR const unsigned char 
 11686 ;;		 -> STR_23(3), STR_22(9), STR_21(9), STR_20(9), 
 11687 ;;		 -> STR_19(3), STR_18(3), STR_17(3), STR_16(7), 
 11688 ;;		 -> STR_15(3), STR_14(3), STR_13(6), STR_12(9), 
 11689 ;;		 -> STR_11(3), STR_10(9), STR_9(9), STR_8(3), 
 11690 ;;		 -> STR_7(9), STR_6(3), STR_5(9), STR_4(3), 
 11691 ;;		 -> STR_3(6), STR_1(6), 
 11692 ;; Return value:  Size  Location     Type
 11693 ;;                  2    6[BANK0 ] unsigned int 
 11694 ;; Registers used:
 11695 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11696 ;; Tracked objects:
 11697 ;;		On entry : 0/0
 11698 ;;		On exit  : 0/0
 11699 ;;		Unchanged: 0/0
 11700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11701 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11702 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11703 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11704 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11705 ;;Total ram usage:        5 bytes
 11706 ;; Hardware stack levels used:    1
 11707 ;; Hardware stack levels required when called:    7
 11708 ;; This function calls:
 11709 ;;		Nothing
 11710 ;; This function is called by:
 11711 ;;		_sendBTString
 11712 ;;		_strstr
 11713 ;; This function uses a non-reentrant model
 11714 ;;
 11715                           
 11716                           
 11717                           ;psect for function _strlen
 11718  175E                     _strlen:
 11719  175E                     l4814:	
 11720                           ;incstack = 0
 11721                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 11722                           
 11723  175E  0140               	movlb	0	; select bank0
 11724  175F  0827               	movf	strlen@s+1,w
 11725  1760  00AA               	movwf	strlen@a+1
 11726  1761  0826               	movf	strlen@s,w
 11727  1762  00A9               	movwf	strlen@a
 11728  1763  2F68               	goto	l4818
 11729  1764                     l4816:
 11730  1764  3001               	movlw	1
 11731  1765  07A6               	addwf	strlen@s,f
 11732  1766  3000               	movlw	0
 11733  1767  3DA7               	addwfc	strlen@s+1,f
 11734  1768                     l4818:
 11735  1768  0826               	movf	strlen@s,w
 11736  1769  0084               	movwf	4
 11737  176A  0827               	movf	strlen@s+1,w
 11738  176B  0085               	movwf	5
 11739  176C  0012               	moviw fsr0++
 11740  176D  1D03               	btfss	3,2
 11741  176E  2F70               	goto	u3491
 11742  176F  2F71               	goto	u3490
 11743  1770                     u3491:
 11744  1770  2F64               	goto	l4816
 11745  1771                     u3490:
 11746  1771                     l4820:
 11747  1771  0829               	movf	strlen@a,w
 11748  1772  0226               	subwf	strlen@s,w
 11749  1773  00A6               	movwf	?_strlen
 11750  1774  082A               	movf	strlen@a+1,w
 11751  1775  3B27               	subwfb	strlen@s+1,w
 11752  1776  00A7               	movwf	?_strlen+1
 11753  1777                     l1807:
 11754  1777  0008               	return
 11755  1778                     __end_of_strlen:
 11756                           
 11757                           	psect	text26
 11758  0B45                     __ptext26:	
 11759 ;; *************** function _sendBTBuffer *****************
 11760 ;; Defined at:
 11761 ;;		line 42 in file "serial.c"
 11762 ;; Parameters:    Size  Location     Type
 11763 ;;  buffer          2   11[BANK0 ] PTR unsigned char 
 11764 ;;		 -> STR_22(9), STR_21(9), STR_20(9), STR_19(3), 
 11765 ;;		 -> STR_18(3), STR_16(7), STR_14(3), STR_12(9), 
 11766 ;;		 -> STR_10(9), STR_9(9), STR_8(3), STR_7(9), 
 11767 ;;		 -> STR_6(3), STR_5(9), STR_4(3), STR_1(6), 
 11768 ;;		 -> masterMAC(12), slaveMAC(12), estopBuffer(8), speedBuffer(12), 
 11769 ;;  length          1   13[BANK0 ] unsigned char 
 11770 ;;  blockIfBusy     1   14[BANK0 ] _Bool 
 11771 ;; Auto vars:     Size  Location     Type
 11772 ;;		None
 11773 ;; Return value:  Size  Location     Type
 11774 ;;                  1    wreg      _Bool 
 11775 ;; Registers used:
 11776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11777 ;; Tracked objects:
 11778 ;;		On entry : 0/0
 11779 ;;		On exit  : 0/0
 11780 ;;		Unchanged: 0/0
 11781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11782 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11785 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11786 ;;Total ram usage:        4 bytes
 11787 ;; Hardware stack levels used:    1
 11788 ;; Hardware stack levels required when called:    8
 11789 ;; This function calls:
 11790 ;;		_EUSART1_Write
 11791 ;;		_EUSART1_is_tx_ready
 11792 ;; This function is called by:
 11793 ;;		_sendBTString
 11794 ;;		_setBTConnection
 11795 ;; This function uses a non-reentrant model
 11796 ;;
 11797                           
 11798                           
 11799                           ;psect for function _sendBTBuffer
 11800  0B45                     _sendBTBuffer:
 11801  0B45                     l4782:	
 11802                           ;incstack = 0
 11803                           ; Regs used in _sendBTBuffer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11804                           
 11805                           
 11806                           ;serial.c: 43:     if (blockIfBusy || (eusart1TxBufferRemaining > length)){
 11807  0B45  0140               	movlb	0	; select bank0
 11808  0B46  082E               	movf	sendBTBuffer@blockIfBusy,w
 11809  0B47  1D03               	btfss	3,2
 11810  0B48  2B4A               	goto	u3431
 11811  0B49  2B4B               	goto	u3430
 11812  0B4A                     u3431:
 11813  0B4A  2B6A               	goto	l4794
 11814  0B4B                     u3430:
 11815  0B4B                     l4784:
 11816  0B4B  0868               	movf	_eusart1TxBufferRemaining,w	;volatile
 11817  0B4C  022D               	subwf	sendBTBuffer@length,w
 11818  0B4D  1803               	skipnc
 11819  0B4E  2B50               	goto	u3441
 11820  0B4F  2B51               	goto	u3440
 11821  0B50                     u3441:
 11822  0B50  2B71               	goto	l4802
 11823  0B51                     u3440:
 11824  0B51  2B6A               	goto	l4794
 11825  0B52                     l4786:
 11826  0B52  3195  2535  318B   	fcall	_EUSART1_is_tx_ready
 11827  0B55  3A00               	xorlw	0
 11828  0B56  1903               	skipnz
 11829  0B57  2B59               	goto	u3451
 11830  0B58  2B5A               	goto	u3450
 11831  0B59                     u3451:
 11832  0B59  2B52               	goto	l4786
 11833  0B5A                     u3450:
 11834  0B5A                     l4788:
 11835                           
 11836                           ;serial.c: 49:             EUSART1_Write(*buffer++);
 11837  0B5A  0140               	movlb	0	; select bank0
 11838  0B5B  082B               	movf	sendBTBuffer@buffer,w
 11839  0B5C  0084               	movwf	4
 11840  0B5D  082C               	movf	sendBTBuffer@buffer+1,w
 11841  0B5E  0085               	movwf	5
 11842  0B5F  0800               	movf	0,w	;code access
 11843  0B60  318A  2263  318B   	fcall	_EUSART1_Write
 11844  0B63                     l4790:
 11845  0B63  3001               	movlw	1
 11846  0B64  0140               	movlb	0	; select bank0
 11847  0B65  07AB               	addwf	sendBTBuffer@buffer,f
 11848  0B66  3000               	movlw	0
 11849  0B67  3DAC               	addwfc	sendBTBuffer@buffer+1,f
 11850  0B68                     l4792:
 11851                           
 11852                           ;serial.c: 50:             length--;
 11853  0B68  3001               	movlw	1
 11854  0B69  02AD               	subwf	sendBTBuffer@length,f
 11855  0B6A                     l4794:
 11856                           
 11857                           ;serial.c: 44:         while (length > 0) {
 11858  0B6A  082D               	movf	sendBTBuffer@length,w
 11859  0B6B  1D03               	btfss	3,2
 11860  0B6C  2B6E               	goto	u3461
 11861  0B6D  2B6F               	goto	u3460
 11862  0B6E                     u3461:
 11863  0B6E  2B52               	goto	l4786
 11864  0B6F                     u3460:
 11865  0B6F                     l4796:
 11866                           
 11867                           ;serial.c: 52:         return 1;
 11868  0B6F  3001               	movlw	1
 11869  0B70  2B72               	goto	l777
 11870  0B71                     l4802:
 11871                           
 11872                           ;serial.c: 55:         return 0;
 11873  0B71  3000               	movlw	0
 11874  0B72                     l777:
 11875  0B72  0008               	return
 11876  0B73                     __end_of_sendBTBuffer:
 11877                           
 11878                           	psect	text27
 11879  1535                     __ptext27:	
 11880 ;; *************** function _EUSART1_is_tx_ready *****************
 11881 ;; Defined at:
 11882 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 11883 ;; Parameters:    Size  Location     Type
 11884 ;;		None
 11885 ;; Auto vars:     Size  Location     Type
 11886 ;;		None
 11887 ;; Return value:  Size  Location     Type
 11888 ;;                  1    wreg      _Bool 
 11889 ;; Registers used:
 11890 ;;		wreg, status,2, status,0
 11891 ;; Tracked objects:
 11892 ;;		On entry : 0/0
 11893 ;;		On exit  : 0/0
 11894 ;;		Unchanged: 0/0
 11895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11900 ;;Total ram usage:        0 bytes
 11901 ;; Hardware stack levels used:    1
 11902 ;; Hardware stack levels required when called:    7
 11903 ;; This function calls:
 11904 ;;		Nothing
 11905 ;; This function is called by:
 11906 ;;		_sendBTBuffer
 11907 ;; This function uses a non-reentrant model
 11908 ;;
 11909                           
 11910                           
 11911                           ;psect for function _EUSART1_is_tx_ready
 11912  1535                     _EUSART1_is_tx_ready:
 11913  1535                     l4730:	
 11914                           ;incstack = 0
 11915                           ; Regs used in _EUSART1_is_tx_ready: [wreg+status,2+status,0]
 11916                           
 11917                           
 11918                           ;mcc_generated_files/eusart1.c: 134:     return (eusart1TxBufferRemaining ? 1 : 0);
 11919  1535  0140               	movlb	0	; select bank0
 11920  1536  0868               	movf	_eusart1TxBufferRemaining,w	;volatile
 11921  1537  1D03               	btfss	3,2
 11922  1538  2D3A               	goto	u3331
 11923  1539  2D3C               	goto	u3330
 11924  153A                     u3331:
 11925  153A  3001               	movlw	1
 11926  153B  2D3D               	goto	u3340
 11927  153C                     u3330:
 11928  153C  3000               	movlw	0
 11929  153D                     u3340:
 11930  153D                     l233:
 11931  153D  0008               	return
 11932  153E                     __end_of_EUSART1_is_tx_ready:
 11933                           
 11934                           	psect	text28
 11935  0A63                     __ptext28:	
 11936 ;; *************** function _EUSART1_Write *****************
 11937 ;; Defined at:
 11938 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 11939 ;; Parameters:    Size  Location     Type
 11940 ;;  txData          1    wreg     unsigned char 
 11941 ;; Auto vars:     Size  Location     Type
 11942 ;;  txData          1    7[BANK0 ] unsigned char 
 11943 ;; Return value:  Size  Location     Type
 11944 ;;                  1    wreg      void 
 11945 ;; Registers used:
 11946 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11947 ;; Tracked objects:
 11948 ;;		On entry : 0/0
 11949 ;;		On exit  : 0/0
 11950 ;;		Unchanged: 0/0
 11951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11953 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11954 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11955 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11956 ;;Total ram usage:        2 bytes
 11957 ;; Hardware stack levels used:    1
 11958 ;; Hardware stack levels required when called:    7
 11959 ;; This function calls:
 11960 ;;		Nothing
 11961 ;; This function is called by:
 11962 ;;		_sendBTBuffer
 11963 ;; This function uses a non-reentrant model
 11964 ;;
 11965                           
 11966                           
 11967                           ;psect for function _EUSART1_Write
 11968  0A63                     _EUSART1_Write:
 11969                           
 11970                           ;incstack = 0
 11971                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 11972                           ;EUSART1_Write@txData stored from wreg
 11973  0A63  0140               	movlb	0	; select bank0
 11974  0A64  00A7               	movwf	EUSART1_Write@txData
 11975  0A65                     l4760:
 11976  0A65                     l4762:	
 11977                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 11978                           
 11979                           
 11980                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 11981  0A65  0868               	movf	_eusart1TxBufferRemaining,w	;volatile
 11982  0A66  1903               	btfsc	3,2
 11983  0A67  2A69               	goto	u3391
 11984  0A68  2A6A               	goto	u3390
 11985  0A69                     u3391:
 11986  0A69  2A65               	goto	l4762
 11987  0A6A                     u3390:
 11988  0A6A                     l254:
 11989                           
 11990                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 11991  0A6A  014E               	movlb	14	; select bank14
 11992  0A6B  1A19               	btfsc	25,4	;volatile
 11993  0A6C  2A6E               	goto	u3401
 11994  0A6D  2A6F               	goto	u3400
 11995  0A6E                     u3401:
 11996  0A6E  2A74               	goto	l255
 11997  0A6F                     u3400:
 11998  0A6F                     l4764:
 11999                           
 12000                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 12001  0A6F  0140               	movlb	0	; select bank0
 12002  0A70  0827               	movf	EUSART1_Write@txData,w
 12003  0A71  0142               	movlb	2	; select bank2
 12004  0A72  009A               	movwf	26	;volatile
 12005                           
 12006                           ;mcc_generated_files/eusart1.c: 182:     }
 12007  0A73  2A8C               	goto	l4776
 12008  0A74                     l255:	
 12009                           ;mcc_generated_files/eusart1.c: 183:     else
 12010                           
 12011                           
 12012                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 12013  0A74  1219               	bcf	25,4	;volatile
 12014  0A75                     l4766:
 12015                           
 12016                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 12017  0A75  0140               	movlb	0	; select bank0
 12018  0A76  0827               	movf	EUSART1_Write@txData,w
 12019  0A77  00A6               	movwf	??_EUSART1_Write
 12020  0A78  0861               	movf	_eusart1TxHead,w
 12021  0A79  3EA0               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 12022  0A7A  0086               	movwf	6
 12023  0A7B  3001               	movlw	1	; select bank3/4
 12024  0A7C  0087               	movwf	7
 12025  0A7D  0826               	movf	??_EUSART1_Write,w
 12026  0A7E  0081               	movwf	1
 12027  0A7F                     l4768:
 12028  0A7F  3001               	movlw	1
 12029  0A80  00A6               	movwf	??_EUSART1_Write
 12030  0A81  0826               	movf	??_EUSART1_Write,w
 12031  0A82  07E1               	addwf	_eusart1TxHead,f	;volatile
 12032  0A83                     l4770:
 12033                           
 12034                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 12035  0A83  3020               	movlw	32
 12036  0A84  0261               	subwf	_eusart1TxHead,w	;volatile
 12037  0A85  1C03               	skipc
 12038  0A86  2A88               	goto	u3411
 12039  0A87  2A89               	goto	u3410
 12040  0A88                     u3411:
 12041  0A88  2A8A               	goto	l4774
 12042  0A89                     u3410:
 12043  0A89                     l4772:
 12044                           
 12045                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 12046  0A89  01E1               	clrf	_eusart1TxHead	;volatile
 12047  0A8A                     l4774:
 12048                           
 12049                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 12050  0A8A  3001               	movlw	1
 12051  0A8B  02E8               	subwf	_eusart1TxBufferRemaining,f	;volatile
 12052  0A8C                     l4776:
 12053                           
 12054                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 12055  0A8C  014E               	movlb	14	; select bank14
 12056  0A8D  1619               	bsf	25,4	;volatile
 12057  0A8E                     l258:
 12058  0A8E  0008               	return
 12059  0A8F                     __end_of_EUSART1_Write:
 12060                           
 12061                           	psect	text29
 12062  08D1                     __ptext29:	
 12063 ;; *************** function _flushBTRXbuffer *****************
 12064 ;; Defined at:
 12065 ;;		line 59 in file "serial.c"
 12066 ;; Parameters:    Size  Location     Type
 12067 ;;		None
 12068 ;; Auto vars:     Size  Location     Type
 12069 ;;		None
 12070 ;; Return value:  Size  Location     Type
 12071 ;;                  1    wreg      void 
 12072 ;; Registers used:
 12073 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12074 ;; Tracked objects:
 12075 ;;		On entry : 0/0
 12076 ;;		On exit  : 0/0
 12077 ;;		Unchanged: 0/0
 12078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12083 ;;Total ram usage:        0 bytes
 12084 ;; Hardware stack levels used:    1
 12085 ;; Hardware stack levels required when called:    9
 12086 ;; This function calls:
 12087 ;;		_EUSART1_Read
 12088 ;;		_EUSART1_is_rx_ready
 12089 ;;		_sleep
 12090 ;; This function is called by:
 12091 ;;		_sendBTString
 12092 ;; This function uses a non-reentrant model
 12093 ;;
 12094                           
 12095                           
 12096                           ;psect for function _flushBTRXbuffer
 12097  08D1                     _flushBTRXbuffer:
 12098  08D1                     l4806:	
 12099                           ;incstack = 0
 12100                           ; Regs used in _flushBTRXbuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12101                           
 12102                           
 12103                           ;serial.c: 60:     while (EUSART1_is_rx_ready()){
 12104  08D1  28E9               	goto	l781
 12105  08D2                     l4808:
 12106                           
 12107                           ;serial.c: 61:         EUSART1_Read();
 12108  08D2  318A  22BC  3188   	fcall	_EUSART1_Read
 12109  08D5                     l4810:
 12110                           
 12111                           ;serial.c: 62:         if (!EUSART1_is_rx_ready())
 12112  08D5  3195  252C  3188   	fcall	_EUSART1_is_rx_ready
 12113  08D8  3A00               	xorlw	0
 12114  08D9  1D03               	skipz
 12115  08DA  28DC               	goto	u3471
 12116  08DB  28DD               	goto	u3470
 12117  08DC                     u3471:
 12118  08DC  28E9               	goto	l781
 12119  08DD                     u3470:
 12120  08DD                     l4812:
 12121                           
 12122                           ;serial.c: 63:             sleep(5);
 12123  08DD  3000               	movlw	0
 12124  08DE  0140               	movlb	0	; select bank0
 12125  08DF  00B1               	movwf	sleep@delay+3
 12126  08E0  3000               	movlw	0
 12127  08E1  00B0               	movwf	sleep@delay+2
 12128  08E2  3000               	movlw	0
 12129  08E3  00AF               	movwf	sleep@delay+1
 12130  08E4  3005               	movlw	5
 12131  08E5  00AE               	movwf	sleep@delay
 12132  08E6  3189  21B5  3188   	fcall	_sleep
 12133  08E9                     l781:	
 12134                           ;serial.c: 64:     }
 12135                           
 12136                           
 12137                           ;serial.c: 60:     while (EUSART1_is_rx_ready()){
 12138  08E9  3195  252C  3188   	fcall	_EUSART1_is_rx_ready
 12139  08EC  3A00               	xorlw	0
 12140  08ED  1D03               	skipz
 12141  08EE  28F0               	goto	u3481
 12142  08EF  28F1               	goto	u3480
 12143  08F0                     u3481:
 12144  08F0  28D2               	goto	l4808
 12145  08F1                     u3480:
 12146  08F1                     l785:
 12147  08F1  0008               	return
 12148  08F2                     __end_of_flushBTRXbuffer:
 12149                           
 12150                           	psect	text30
 12151  0E8E                     __ptext30:	
 12152 ;; *************** function _receiveBTBuffer *****************
 12153 ;; Defined at:
 12154 ;;		line 74 in file "serial.c"
 12155 ;; Parameters:    Size  Location     Type
 12156 ;;  buffer          1    wreg     PTR unsigned char 
 12157 ;;		 -> RX_Buffer(40), 
 12158 ;;  maxChars        1   14[BANK0 ] unsigned char 
 12159 ;;  timeoutMS       2   15[BANK0 ] unsigned short 
 12160 ;; Auto vars:     Size  Location     Type
 12161 ;;  buffer          1   27[BANK0 ] PTR unsigned char 
 12162 ;;		 -> RX_Buffer(40), 
 12163 ;;  startTime       4   22[BANK0 ] unsigned long 
 12164 ;;  charsRead       1   26[BANK0 ] unsigned char 
 12165 ;; Return value:  Size  Location     Type
 12166 ;;                  1    wreg      unsigned char 
 12167 ;; Registers used:
 12168 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12169 ;; Tracked objects:
 12170 ;;		On entry : 0/0
 12171 ;;		On exit  : 0/0
 12172 ;;		Unchanged: 0/0
 12173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12174 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12175 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12176 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12177 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12178 ;;Total ram usage:       14 bytes
 12179 ;; Hardware stack levels used:    1
 12180 ;; Hardware stack levels required when called:    8
 12181 ;; This function calls:
 12182 ;;		_EUSART1_Read
 12183 ;;		_EUSART1_is_rx_ready
 12184 ;;		_getTicks
 12185 ;;		_getTicksSince
 12186 ;; This function is called by:
 12187 ;;		_pairBluetoothDevices
 12188 ;;		_getBTAddress
 12189 ;;		_setBTConnection
 12190 ;;		_doFactoryReset
 12191 ;; This function uses a non-reentrant model
 12192 ;;
 12193                           
 12194                           
 12195                           ;psect for function _receiveBTBuffer
 12196  0E8E                     _receiveBTBuffer:
 12197                           
 12198                           ;incstack = 0
 12199                           ; Regs used in _receiveBTBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12200                           ;receiveBTBuffer@buffer stored from wreg
 12201  0E8E  0140               	movlb	0	; select bank0
 12202  0E8F  00BB               	movwf	receiveBTBuffer@buffer
 12203  0E90                     l4872:
 12204                           
 12205                           ;serial.c: 75:     uint32_t startTime = getTicks();
 12206  0E90  3195  256E  318E   	fcall	_getTicks
 12207  0E93  0140               	movlb	0	; select bank0
 12208  0E94  0829               	movf	?_getTicks+3,w
 12209  0E95  00B9               	movwf	receiveBTBuffer@startTime+3
 12210  0E96  0828               	movf	?_getTicks+2,w
 12211  0E97  00B8               	movwf	receiveBTBuffer@startTime+2
 12212  0E98  0827               	movf	?_getTicks+1,w
 12213  0E99  00B7               	movwf	receiveBTBuffer@startTime+1
 12214  0E9A  0826               	movf	?_getTicks,w
 12215  0E9B  00B6               	movwf	receiveBTBuffer@startTime
 12216  0E9C                     l4874:
 12217                           
 12218                           ;serial.c: 76:     uint8_t charsRead = 0;
 12219  0E9C  01BA               	clrf	receiveBTBuffer@charsRead
 12220                           
 12221                           ;serial.c: 79:     while ((charsRead < maxChars) && (getTicksSince(startTime) <= timeout
      +                          MS)) {
 12222  0E9D  2EB9               	goto	l4884
 12223  0E9E                     l4876:
 12224                           
 12225                           ;serial.c: 80:         if (EUSART1_is_rx_ready()) {
 12226  0E9E  3195  252C  318E   	fcall	_EUSART1_is_rx_ready
 12227  0EA1  3A00               	xorlw	0
 12228  0EA2  1903               	skipnz
 12229  0EA3  2EA5               	goto	u3581
 12230  0EA4  2EA6               	goto	u3580
 12231  0EA5                     u3581:
 12232  0EA5  2EB9               	goto	l4884
 12233  0EA6                     u3580:
 12234  0EA6                     l4878:
 12235                           
 12236                           ;serial.c: 81:             (*buffer++ = EUSART1_Read());
 12237  0EA6  318A  22BC  318E   	fcall	_EUSART1_Read
 12238  0EA9  0140               	movlb	0	; select bank0
 12239  0EAA  00B1               	movwf	??_receiveBTBuffer
 12240  0EAB  083B               	movf	receiveBTBuffer@buffer,w
 12241  0EAC  0086               	movwf	6
 12242  0EAD  3001               	movlw	1	; select bank2/3
 12243  0EAE  0087               	movwf	7
 12244  0EAF  0831               	movf	??_receiveBTBuffer,w
 12245  0EB0  0081               	movwf	1
 12246  0EB1                     l4880:
 12247  0EB1  3001               	movlw	1
 12248  0EB2  00B1               	movwf	??_receiveBTBuffer
 12249  0EB3  0831               	movf	??_receiveBTBuffer,w
 12250  0EB4  07BB               	addwf	receiveBTBuffer@buffer,f
 12251  0EB5                     l4882:
 12252                           
 12253                           ;serial.c: 82:             charsRead++;
 12254  0EB5  3001               	movlw	1
 12255  0EB6  00B1               	movwf	??_receiveBTBuffer
 12256  0EB7  0831               	movf	??_receiveBTBuffer,w
 12257  0EB8  07BA               	addwf	receiveBTBuffer@charsRead,f
 12258  0EB9                     l4884:
 12259                           
 12260                           ;serial.c: 79:     while ((charsRead < maxChars) && (getTicksSince(startTime) <= timeout
      +                          MS)) {
 12261  0EB9  0140               	movlb	0	; select bank0
 12262  0EBA  082E               	movf	receiveBTBuffer@maxChars,w
 12263  0EBB  023A               	subwf	receiveBTBuffer@charsRead,w
 12264  0EBC  1803               	skipnc
 12265  0EBD  2EBF               	goto	u3591
 12266  0EBE  2EC0               	goto	u3590
 12267  0EBF                     u3591:
 12268  0EBF  2EE8               	goto	l4888
 12269  0EC0                     u3590:
 12270  0EC0                     l4886:
 12271  0EC0  0839               	movf	receiveBTBuffer@startTime+3,w
 12272  0EC1  00A9               	movwf	getTicksSince@from+3
 12273  0EC2  0838               	movf	receiveBTBuffer@startTime+2,w
 12274  0EC3  00A8               	movwf	getTicksSince@from+2
 12275  0EC4  0837               	movf	receiveBTBuffer@startTime+1,w
 12276  0EC5  00A7               	movwf	getTicksSince@from+1
 12277  0EC6  0836               	movf	receiveBTBuffer@startTime,w
 12278  0EC7  00A6               	movwf	getTicksSince@from
 12279  0EC8  3197  2717  318E   	fcall	_getTicksSince
 12280  0ECB  0140               	movlb	0	; select bank0
 12281  0ECC  082F               	movf	receiveBTBuffer@timeoutMS,w
 12282  0ECD  00B1               	movwf	??_receiveBTBuffer
 12283  0ECE  0830               	movf	receiveBTBuffer@timeoutMS+1,w
 12284  0ECF  00B2               	movwf	??_receiveBTBuffer+1
 12285  0ED0  01B3               	clrf	??_receiveBTBuffer+2
 12286  0ED1  01B4               	clrf	??_receiveBTBuffer+3
 12287  0ED2  0834               	movf	??_receiveBTBuffer+3,w
 12288  0ED3  3A80               	xorlw	128
 12289  0ED4  00B5               	movwf	??_receiveBTBuffer+4
 12290  0ED5  0829               	movf	?_getTicksSince+3,w
 12291  0ED6  3A80               	xorlw	128
 12292  0ED7  0235               	subwf	??_receiveBTBuffer+4,w
 12293  0ED8  1D03               	skipz
 12294  0ED9  2EE4               	goto	u3603
 12295  0EDA  0828               	movf	?_getTicksSince+2,w
 12296  0EDB  0233               	subwf	??_receiveBTBuffer+2,w
 12297  0EDC  1D03               	skipz
 12298  0EDD  2EE4               	goto	u3603
 12299  0EDE  0827               	movf	?_getTicksSince+1,w
 12300  0EDF  0232               	subwf	??_receiveBTBuffer+1,w
 12301  0EE0  1D03               	skipz
 12302  0EE1  2EE4               	goto	u3603
 12303  0EE2  0826               	movf	?_getTicksSince,w
 12304  0EE3  0231               	subwf	??_receiveBTBuffer,w
 12305  0EE4                     u3603:
 12306  0EE4  1803               	skipnc
 12307  0EE5  2EE7               	goto	u3601
 12308  0EE6  2EE8               	goto	u3600
 12309  0EE7                     u3601:
 12310  0EE7  2E9E               	goto	l4876
 12311  0EE8                     u3600:
 12312  0EE8                     l4888:
 12313                           
 12314                           ;serial.c: 85:     return charsRead;
 12315  0EE8  083A               	movf	receiveBTBuffer@charsRead,w
 12316  0EE9                     l794:
 12317  0EE9  0008               	return
 12318  0EEA                     __end_of_receiveBTBuffer:
 12319                           
 12320                           	psect	text31
 12321  152C                     __ptext31:	
 12322 ;; *************** function _EUSART1_is_rx_ready *****************
 12323 ;; Defined at:
 12324 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 12325 ;; Parameters:    Size  Location     Type
 12326 ;;		None
 12327 ;; Auto vars:     Size  Location     Type
 12328 ;;		None
 12329 ;; Return value:  Size  Location     Type
 12330 ;;                  1    wreg      _Bool 
 12331 ;; Registers used:
 12332 ;;		wreg, status,2, status,0
 12333 ;; Tracked objects:
 12334 ;;		On entry : 0/0
 12335 ;;		On exit  : 0/0
 12336 ;;		Unchanged: 0/0
 12337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12342 ;;Total ram usage:        0 bytes
 12343 ;; Hardware stack levels used:    1
 12344 ;; Hardware stack levels required when called:    7
 12345 ;; This function calls:
 12346 ;;		Nothing
 12347 ;; This function is called by:
 12348 ;;		_flushBTRXbuffer
 12349 ;;		_receiveBTBuffer
 12350 ;; This function uses a non-reentrant model
 12351 ;;
 12352                           
 12353                           
 12354                           ;psect for function _EUSART1_is_rx_ready
 12355  152C                     _EUSART1_is_rx_ready:
 12356  152C                     l4734:	
 12357                           ;incstack = 0
 12358                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 12359                           
 12360                           
 12361                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 12362  152C  0140               	movlb	0	; select bank0
 12363  152D  085D               	movf	_eusart1RxCount,w	;volatile
 12364  152E  1D03               	btfss	3,2
 12365  152F  2D31               	goto	u3351
 12366  1530  2D33               	goto	u3350
 12367  1531                     u3351:
 12368  1531  3001               	movlw	1
 12369  1532  2D34               	goto	u3360
 12370  1533                     u3350:
 12371  1533  3000               	movlw	0
 12372  1534                     u3360:
 12373  1534                     l236:
 12374  1534  0008               	return
 12375  1535                     __end_of_EUSART1_is_rx_ready:
 12376                           
 12377                           	psect	text32
 12378  0ABC                     __ptext32:	
 12379 ;; *************** function _EUSART1_Read *****************
 12380 ;; Defined at:
 12381 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 12382 ;; Parameters:    Size  Location     Type
 12383 ;;		None
 12384 ;; Auto vars:     Size  Location     Type
 12385 ;;  readValue       1    7[BANK0 ] unsigned char 
 12386 ;; Return value:  Size  Location     Type
 12387 ;;                  1    wreg      unsigned char 
 12388 ;; Registers used:
 12389 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12390 ;; Tracked objects:
 12391 ;;		On entry : 0/0
 12392 ;;		On exit  : 0/0
 12393 ;;		Unchanged: 0/0
 12394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12396 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12397 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12398 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12399 ;;Total ram usage:        2 bytes
 12400 ;; Hardware stack levels used:    1
 12401 ;; Hardware stack levels required when called:    7
 12402 ;; This function calls:
 12403 ;;		Nothing
 12404 ;; This function is called by:
 12405 ;;		_flushBTRXbuffer
 12406 ;;		_receiveBTBuffer
 12407 ;; This function uses a non-reentrant model
 12408 ;;
 12409                           
 12410                           
 12411                           ;psect for function _EUSART1_Read
 12412  0ABC                     _EUSART1_Read:
 12413  0ABC                     l4738:	
 12414                           ;incstack = 0
 12415                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 12416                           
 12417  0ABC                     l4740:	
 12418                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 12419                           
 12420                           
 12421                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 12422  0ABC  0140               	movlb	0	; select bank0
 12423  0ABD  085D               	movf	_eusart1RxCount,w	;volatile
 12424  0ABE  1903               	btfsc	3,2
 12425  0ABF  2AC1               	goto	u3371
 12426  0AC0  2AC2               	goto	u3370
 12427  0AC1                     u3371:
 12428  0AC1  2ABC               	goto	l4740
 12429  0AC2                     u3370:
 12430  0AC2                     l4742:
 12431                           
 12432                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 12433  0AC2  085E               	movf	_eusart1RxTail,w	;volatile
 12434  0AC3  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 12435  0AC4  0086               	movwf	6
 12436  0AC5  3001               	movlw	1	; select bank2/3
 12437  0AC6  0087               	movwf	7
 12438  0AC7  0801               	movf	1,w
 12439  0AC8  00A6               	movwf	??_EUSART1_Read
 12440  0AC9  0826               	movf	??_EUSART1_Read,w
 12441  0ACA  00DC               	movwf	_eusart1RxLastError	;volatile
 12442                           
 12443                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 12444  0ACB  085E               	movf	_eusart1RxTail,w
 12445  0ACC  3E20               	addlw	(low (_eusart1RxBuffer| (0+512)))& (0+255)
 12446  0ACD  0086               	movwf	6
 12447  0ACE  3002               	movlw	2	; select bank4/5
 12448  0ACF  0087               	movwf	7
 12449  0AD0  0801               	movf	1,w
 12450  0AD1  00A6               	movwf	??_EUSART1_Read
 12451  0AD2  0826               	movf	??_EUSART1_Read,w
 12452  0AD3  00A7               	movwf	EUSART1_Read@readValue
 12453  0AD4                     l4744:
 12454  0AD4  3001               	movlw	1
 12455  0AD5  00A6               	movwf	??_EUSART1_Read
 12456  0AD6  0826               	movf	??_EUSART1_Read,w
 12457  0AD7  07DE               	addwf	_eusart1RxTail,f	;volatile
 12458  0AD8                     l4746:
 12459                           
 12460                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 12461  0AD8  3020               	movlw	32
 12462  0AD9  025E               	subwf	_eusart1RxTail,w	;volatile
 12463  0ADA  1C03               	skipc
 12464  0ADB  2ADD               	goto	u3381
 12465  0ADC  2ADE               	goto	u3380
 12466  0ADD                     u3381:
 12467  0ADD  2ADF               	goto	l4750
 12468  0ADE                     u3380:
 12469  0ADE                     l4748:
 12470                           
 12471                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 12472  0ADE  01DE               	clrf	_eusart1RxTail	;volatile
 12473  0ADF                     l4750:
 12474                           
 12475                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 12476  0ADF  014E               	movlb	14	; select bank14
 12477  0AE0  1299               	bcf	25,5	;volatile
 12478  0AE1                     l4752:
 12479                           
 12480                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 12481  0AE1  3001               	movlw	1
 12482  0AE2  0140               	movlb	0	; select bank0
 12483  0AE3  02DD               	subwf	_eusart1RxCount,f	;volatile
 12484  0AE4                     l4754:
 12485                           
 12486                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 12487  0AE4  014E               	movlb	14	; select bank14
 12488  0AE5  1699               	bsf	25,5	;volatile
 12489  0AE6                     l4756:
 12490                           
 12491                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 12492  0AE6  0140               	movlb	0	; select bank0
 12493  0AE7  0827               	movf	EUSART1_Read@readValue,w
 12494  0AE8                     l249:
 12495  0AE8  0008               	return
 12496  0AE9                     __end_of_EUSART1_Read:
 12497                           
 12498                           	psect	text33
 12499  16AC                     __ptext33:	
 12500 ;; *************** function _SetDualReceive *****************
 12501 ;; Defined at:
 12502 ;;		line 28 in file "configure.c"
 12503 ;; Parameters:    Size  Location     Type
 12504 ;;		None
 12505 ;; Auto vars:     Size  Location     Type
 12506 ;;		None
 12507 ;; Return value:  Size  Location     Type
 12508 ;;                  1    wreg      void 
 12509 ;; Registers used:
 12510 ;;		wreg, status,2, status,0, pclath, cstack
 12511 ;; Tracked objects:
 12512 ;;		On entry : 0/0
 12513 ;;		On exit  : 0/0
 12514 ;;		Unchanged: 0/0
 12515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12520 ;;Total ram usage:        0 bytes
 12521 ;; Hardware stack levels used:    1
 12522 ;; Hardware stack levels required when called:    9
 12523 ;; This function calls:
 12524 ;;		_sleep
 12525 ;; This function is called by:
 12526 ;;		_setBTBaudRatesTo38400
 12527 ;;		_doFactoryReset
 12528 ;; This function uses a non-reentrant model
 12529 ;;
 12530                           
 12531                           
 12532                           ;psect for function _SetDualReceive
 12533  16AC                     _SetDualReceive:
 12534  16AC                     l4906:	
 12535                           ;incstack = 0
 12536                           ; Regs used in _SetDualReceive: [wreg+status,2+status,0+pclath+cstack]
 12537                           
 12538                           
 12539                           ;configure.c: 29:     RX1DTPPS = 0x15;
 12540  16AC  3015               	movlw	21
 12541  16AD  017D               	movlb	61	; select bank61
 12542  16AE  00CB               	movwf	75	;volatile
 12543                           
 12544                           ;configure.c: 30:     RC4PPS = 0x0F;
 12545  16AF  300F               	movlw	15
 12546  16B0  017E               	movlb	62	; select bank62
 12547  16B1  00A4               	movwf	36	;volatile
 12548                           
 12549                           ;configure.c: 31:     RC6PPS = 0x0F;
 12550  16B2  300F               	movlw	15
 12551  16B3  00A6               	movwf	38	;volatile
 12552  16B4                     l4908:
 12553                           
 12554                           ;configure.c: 32:     sleep(5);
 12555  16B4  3000               	movlw	0
 12556  16B5  0140               	movlb	0	; select bank0
 12557  16B6  00B1               	movwf	sleep@delay+3
 12558  16B7  3000               	movlw	0
 12559  16B8  00B0               	movwf	sleep@delay+2
 12560  16B9  3000               	movlw	0
 12561  16BA  00AF               	movwf	sleep@delay+1
 12562  16BB  3005               	movlw	5
 12563  16BC  00AE               	movwf	sleep@delay
 12564  16BD  3189  21B5  3196   	fcall	_sleep
 12565  16C0                     l919:
 12566  16C0  0008               	return
 12567  16C1                     __end_of_SetDualReceive:
 12568                           
 12569                           	psect	text34
 12570  148C                     __ptext34:	
 12571 ;; *************** function _disableJoystick *****************
 12572 ;; Defined at:
 12573 ;;		line 62 in file "joystick.c"
 12574 ;; Parameters:    Size  Location     Type
 12575 ;;		None
 12576 ;; Auto vars:     Size  Location     Type
 12577 ;;		None
 12578 ;; Return value:  Size  Location     Type
 12579 ;;                  1    wreg      void 
 12580 ;; Registers used:
 12581 ;;		status,2, status,0, pclath, cstack
 12582 ;; Tracked objects:
 12583 ;;		On entry : 0/0
 12584 ;;		On exit  : 0/0
 12585 ;;		Unchanged: 0/0
 12586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12591 ;;Total ram usage:        0 bytes
 12592 ;; Hardware stack levels used:    1
 12593 ;; Hardware stack levels required when called:    8
 12594 ;; This function calls:
 12595 ;;		_TMR1_StopTimer
 12596 ;; This function is called by:
 12597 ;;		_runUI
 12598 ;; This function uses a non-reentrant model
 12599 ;;
 12600                           
 12601                           
 12602                           ;psect for function _disableJoystick
 12603  148C                     _disableJoystick:
 12604  148C                     l5156:	
 12605                           ;incstack = 0
 12606                           ; Regs used in _disableJoystick: [status,2+status,0+pclath+cstack]
 12607                           
 12608                           
 12609                           ;joystick.c: 63:     TMR1_StopTimer();
 12610  148C  3194  2478  3194   	fcall	_TMR1_StopTimer
 12611  148F                     l5158:
 12612                           
 12613                           ;joystick.c: 64:     joystickEnabled = 0;
 12614  148F  01FD               	clrf	_joystickEnabled
 12615  1490                     l680:
 12616  1490  0008               	return
 12617  1491                     __end_of_disableJoystick:
 12618                           
 12619                           	psect	text35
 12620  1478                     __ptext35:	
 12621 ;; *************** function _TMR1_StopTimer *****************
 12622 ;; Defined at:
 12623 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 12624 ;; Parameters:    Size  Location     Type
 12625 ;;		None
 12626 ;; Auto vars:     Size  Location     Type
 12627 ;;		None
 12628 ;; Return value:  Size  Location     Type
 12629 ;;                  1    wreg      void 
 12630 ;; Registers used:
 12631 ;;		None
 12632 ;; Tracked objects:
 12633 ;;		On entry : 0/0
 12634 ;;		On exit  : 0/0
 12635 ;;		Unchanged: 0/0
 12636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12641 ;;Total ram usage:        0 bytes
 12642 ;; Hardware stack levels used:    1
 12643 ;; Hardware stack levels required when called:    7
 12644 ;; This function calls:
 12645 ;;		Nothing
 12646 ;; This function is called by:
 12647 ;;		_disableJoystick
 12648 ;; This function uses a non-reentrant model
 12649 ;;
 12650                           
 12651                           
 12652                           ;psect for function _TMR1_StopTimer
 12653  1478                     _TMR1_StopTimer:
 12654  1478                     l4974:	
 12655                           ;incstack = 0
 12656                           ; Regs used in _TMR1_StopTimer: []
 12657                           
 12658                           
 12659                           ;mcc_generated_files/tmr1.c: 108:     T1CONbits.TMR1ON = 0;
 12660  1478  0144               	movlb	4	; select bank4
 12661  1479  100E               	bcf	14,0	;volatile
 12662  147A                     l39:
 12663  147A  0008               	return
 12664  147B                     __end_of_TMR1_StopTimer:
 12665                           
 12666                           	psect	text36
 12667  0960                     __ptext36:	
 12668 ;; *************** function _bumpUISpeedMode *****************
 12669 ;; Defined at:
 12670 ;;		line 169 in file "ui.c"
 12671 ;; Parameters:    Size  Location     Type
 12672 ;;		None
 12673 ;; Auto vars:     Size  Location     Type
 12674 ;;		None
 12675 ;; Return value:  Size  Location     Type
 12676 ;;                  1    wreg      void 
 12677 ;; Registers used:
 12678 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12679 ;; Tracked objects:
 12680 ;;		On entry : 0/0
 12681 ;;		On exit  : 0/0
 12682 ;;		Unchanged: 0/0
 12683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12686 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12687 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12688 ;;Total ram usage:        1 bytes
 12689 ;; Hardware stack levels used:    1
 12690 ;; Hardware stack levels required when called:   11
 12691 ;; This function calls:
 12692 ;;		___awmod
 12693 ;;		___ctoee
 12694 ;;		_blinkLEDColor
 12695 ;; This function is called by:
 12696 ;;		_runUI
 12697 ;; This function uses a non-reentrant model
 12698 ;;
 12699                           
 12700                           
 12701                           ;psect for function _bumpUISpeedMode
 12702  0960                     _bumpUISpeedMode:
 12703  0960                     l5228:	
 12704                           ;incstack = 0
 12705                           ; Regs used in _bumpUISpeedMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12706                           
 12707                           
 12708                           ;ui.c: 170:     uiSpeedMode = ((uiSpeedMode +1) % 3);
 12709  0960  3003               	movlw	3
 12710  0961  0140               	movlb	0	; select bank0
 12711  0962  00A6               	movwf	___awmod@divisor
 12712  0963  3000               	movlw	0
 12713  0964  00A7               	movwf	___awmod@divisor+1
 12714  0965  0856               	movf	_uiSpeedMode,w
 12715  0966  3E01               	addlw	1
 12716  0967  00A8               	movwf	___awmod@dividend
 12717  0968  3000               	movlw	0
 12718  0969  1803               	skipnc
 12719  096A  3001               	movlw	1
 12720  096B  00A9               	movwf	___awmod@dividend+1
 12721  096C  318D  25DE  3189   	fcall	___awmod
 12722  096F  0140               	movlb	0	; select bank0
 12723  0970  0826               	movf	?___awmod,w
 12724  0971  00C1               	movwf	??_bumpUISpeedMode
 12725  0972  0841               	movf	??_bumpUISpeedMode,w
 12726  0973  00D6               	movwf	_uiSpeedMode
 12727  0974                     l5230:
 12728                           
 12729                           ;ui.c: 171:     EEPROM_uiSpeedMode = uiSpeedMode;
 12730  0974  0856               	movf	_uiSpeedMode,w
 12731  0975  00C1               	movwf	??_bumpUISpeedMode
 12732  0976  0841               	movf	??_bumpUISpeedMode,w
 12733  0977  00AB               	movwf	___ctoee@data
 12734  0978  3001               	movlw	(low _EEPROM_uiSpeedMode)& (0+255)
 12735  0979  3195  25B6  3189   	fcall	___ctoee
 12736  097C                     l5232:
 12737                           
 12738                           ;ui.c: 172:     blinkLEDColor(0x330, uiSpeedMode + 1);
 12739  097C  3030               	movlw	48
 12740  097D  0140               	movlb	0	; select bank0
 12741  097E  00BC               	movwf	blinkLEDColor@RGB
 12742  097F  3003               	movlw	3
 12743  0980  00BD               	movwf	blinkLEDColor@RGB+1
 12744  0981  0856               	movf	_uiSpeedMode,w
 12745  0982  3E01               	addlw	1
 12746  0983  00C1               	movwf	??_bumpUISpeedMode
 12747  0984  0841               	movf	??_bumpUISpeedMode,w
 12748  0985  00BE               	movwf	blinkLEDColor@blinks
 12749  0986  3188  2014  3189   	fcall	_blinkLEDColor
 12750  0989                     l1108:
 12751  0989  0008               	return
 12752  098A                     __end_of_bumpUISpeedMode:
 12753                           
 12754                           	psect	text37
 12755  0DDE                     __ptext37:	
 12756 ;; *************** function ___awmod *****************
 12757 ;; Defined at:
 12758 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
 12759 ;; Parameters:    Size  Location     Type
 12760 ;;  divisor         2    6[BANK0 ] int 
 12761 ;;  dividend        2    8[BANK0 ] int 
 12762 ;; Auto vars:     Size  Location     Type
 12763 ;;  sign            1   12[BANK0 ] unsigned char 
 12764 ;;  counter         1   11[BANK0 ] unsigned char 
 12765 ;; Return value:  Size  Location     Type
 12766 ;;                  2    6[BANK0 ] int 
 12767 ;; Registers used:
 12768 ;;		wreg, status,2, status,0
 12769 ;; Tracked objects:
 12770 ;;		On entry : 0/0
 12771 ;;		On exit  : 0/0
 12772 ;;		Unchanged: 0/0
 12773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12774 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12775 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12776 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12777 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12778 ;;Total ram usage:        7 bytes
 12779 ;; Hardware stack levels used:    1
 12780 ;; Hardware stack levels required when called:    7
 12781 ;; This function calls:
 12782 ;;		Nothing
 12783 ;; This function is called by:
 12784 ;;		_bumpUISpeedMode
 12785 ;; This function uses a non-reentrant model
 12786 ;;
 12787                           
 12788                           
 12789                           ;psect for function ___awmod
 12790  0DDE                     ___awmod:
 12791  0DDE                     l5100:	
 12792                           ;incstack = 0
 12793                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12794                           
 12795  0DDE  0140               	movlb	0	; select bank0
 12796  0DDF  01AC               	clrf	___awmod@sign
 12797  0DE0                     l5102:
 12798  0DE0  1FA9               	btfss	___awmod@dividend+1,7
 12799  0DE1  2DE3               	goto	u3821
 12800  0DE2  2DE4               	goto	u3820
 12801  0DE3                     u3821:
 12802  0DE3  2DEB               	goto	l5108
 12803  0DE4                     u3820:
 12804  0DE4                     l5104:
 12805  0DE4  09A8               	comf	___awmod@dividend,f
 12806  0DE5  09A9               	comf	___awmod@dividend+1,f
 12807  0DE6  0AA8               	incf	___awmod@dividend,f
 12808  0DE7  1903               	skipnz
 12809  0DE8  0AA9               	incf	___awmod@dividend+1,f
 12810  0DE9                     l5106:
 12811  0DE9  01AC               	clrf	___awmod@sign
 12812  0DEA  0AAC               	incf	___awmod@sign,f
 12813  0DEB                     l5108:
 12814  0DEB  1FA7               	btfss	___awmod@divisor+1,7
 12815  0DEC  2DEE               	goto	u3831
 12816  0DED  2DEF               	goto	u3830
 12817  0DEE                     u3831:
 12818  0DEE  2DF4               	goto	l5112
 12819  0DEF                     u3830:
 12820  0DEF                     l5110:
 12821  0DEF  09A6               	comf	___awmod@divisor,f
 12822  0DF0  09A7               	comf	___awmod@divisor+1,f
 12823  0DF1  0AA6               	incf	___awmod@divisor,f
 12824  0DF2  1903               	skipnz
 12825  0DF3  0AA7               	incf	___awmod@divisor+1,f
 12826  0DF4                     l5112:
 12827  0DF4  0826               	movf	___awmod@divisor,w
 12828  0DF5  0427               	iorwf	___awmod@divisor+1,w
 12829  0DF6  1903               	btfsc	3,2
 12830  0DF7  2DF9               	goto	u3841
 12831  0DF8  2DFA               	goto	u3840
 12832  0DF9                     u3841:
 12833  0DF9  2E23               	goto	l5130
 12834  0DFA                     u3840:
 12835  0DFA                     l5114:
 12836  0DFA  01AB               	clrf	___awmod@counter
 12837  0DFB  0AAB               	incf	___awmod@counter,f
 12838  0DFC  2E06               	goto	l5120
 12839  0DFD                     l5116:
 12840  0DFD  3001               	movlw	1
 12841  0DFE                     u3855:
 12842  0DFE  35A6               	lslf	___awmod@divisor,f
 12843  0DFF  0DA7               	rlf	___awmod@divisor+1,f
 12844  0E00  0B89               	decfsz	9,f
 12845  0E01  2DFE               	goto	u3855
 12846  0E02                     l5118:
 12847  0E02  3001               	movlw	1
 12848  0E03  00AA               	movwf	??___awmod
 12849  0E04  082A               	movf	??___awmod,w
 12850  0E05  07AB               	addwf	___awmod@counter,f
 12851  0E06                     l5120:
 12852  0E06  1FA7               	btfss	___awmod@divisor+1,7
 12853  0E07  2E09               	goto	u3861
 12854  0E08  2E0A               	goto	u3860
 12855  0E09                     u3861:
 12856  0E09  2DFD               	goto	l5116
 12857  0E0A                     u3860:
 12858  0E0A                     l5122:
 12859  0E0A  0827               	movf	___awmod@divisor+1,w
 12860  0E0B  0229               	subwf	___awmod@dividend+1,w
 12861  0E0C  1D03               	skipz
 12862  0E0D  2E10               	goto	u3875
 12863  0E0E  0826               	movf	___awmod@divisor,w
 12864  0E0F  0228               	subwf	___awmod@dividend,w
 12865  0E10                     u3875:
 12866  0E10  1C03               	skipc
 12867  0E11  2E13               	goto	u3871
 12868  0E12  2E14               	goto	u3870
 12869  0E13                     u3871:
 12870  0E13  2E18               	goto	l5126
 12871  0E14                     u3870:
 12872  0E14                     l5124:
 12873  0E14  0826               	movf	___awmod@divisor,w
 12874  0E15  02A8               	subwf	___awmod@dividend,f
 12875  0E16  0827               	movf	___awmod@divisor+1,w
 12876  0E17  3BA9               	subwfb	___awmod@dividend+1,f
 12877  0E18                     l5126:
 12878  0E18  3001               	movlw	1
 12879  0E19                     u3885:
 12880  0E19  36A7               	lsrf	___awmod@divisor+1,f
 12881  0E1A  0CA6               	rrf	___awmod@divisor,f
 12882  0E1B  0B89               	decfsz	9,f
 12883  0E1C  2E19               	goto	u3885
 12884  0E1D                     l5128:
 12885  0E1D  3001               	movlw	1
 12886  0E1E  02AB               	subwf	___awmod@counter,f
 12887  0E1F  1D03               	btfss	3,2
 12888  0E20  2E22               	goto	u3891
 12889  0E21  2E23               	goto	u3890
 12890  0E22                     u3891:
 12891  0E22  2E0A               	goto	l5122
 12892  0E23                     u3890:
 12893  0E23                     l5130:
 12894  0E23  082C               	movf	___awmod@sign,w
 12895  0E24  1903               	btfsc	3,2
 12896  0E25  2E27               	goto	u3901
 12897  0E26  2E28               	goto	u3900
 12898  0E27                     u3901:
 12899  0E27  2E2D               	goto	l5134
 12900  0E28                     u3900:
 12901  0E28                     l5132:
 12902  0E28  09A8               	comf	___awmod@dividend,f
 12903  0E29  09A9               	comf	___awmod@dividend+1,f
 12904  0E2A  0AA8               	incf	___awmod@dividend,f
 12905  0E2B  1903               	skipnz
 12906  0E2C  0AA9               	incf	___awmod@dividend+1,f
 12907  0E2D                     l5134:
 12908  0E2D  0829               	movf	___awmod@dividend+1,w
 12909  0E2E  00A7               	movwf	?___awmod+1
 12910  0E2F  0828               	movf	___awmod@dividend,w
 12911  0E30  00A6               	movwf	?___awmod
 12912  0E31                     l1495:
 12913  0E31  0008               	return
 12914  0E32                     __end_of___awmod:
 12915                           
 12916                           	psect	text38
 12917  17E3                     __ptext38:	
 12918 ;; *************** function _bumpUIBrakeMode *****************
 12919 ;; Defined at:
 12920 ;;		line 179 in file "ui.c"
 12921 ;; Parameters:    Size  Location     Type
 12922 ;;		None
 12923 ;; Auto vars:     Size  Location     Type
 12924 ;;		None
 12925 ;; Return value:  Size  Location     Type
 12926 ;;                  1    wreg      void 
 12927 ;; Registers used:
 12928 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12929 ;; Tracked objects:
 12930 ;;		On entry : 0/0
 12931 ;;		On exit  : 0/0
 12932 ;;		Unchanged: 0/0
 12933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12936 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12937 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12938 ;;Total ram usage:        1 bytes
 12939 ;; Hardware stack levels used:    1
 12940 ;; Hardware stack levels required when called:   11
 12941 ;; This function calls:
 12942 ;;		___ctoee
 12943 ;;		_blinkLEDColor
 12944 ;; This function is called by:
 12945 ;;		_runUI
 12946 ;; This function uses a non-reentrant model
 12947 ;;
 12948                           
 12949                           
 12950                           ;psect for function _bumpUIBrakeMode
 12951  17E3                     _bumpUIBrakeMode:
 12952  17E3                     l5234:	
 12953                           ;incstack = 0
 12954                           ; Regs used in _bumpUIBrakeMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12955                           
 12956                           
 12957                           ;ui.c: 180:     uiBrakeMode = ((uiBrakeMode +1) % 2);
 12958  17E3  0140               	movlb	0	; select bank0
 12959  17E4  0855               	movf	_uiBrakeMode,w
 12960  17E5  3E01               	addlw	1
 12961  17E6  3901               	andlw	1
 12962  17E7  00C1               	movwf	??_bumpUIBrakeMode
 12963  17E8  0841               	movf	??_bumpUIBrakeMode,w
 12964  17E9  00D5               	movwf	_uiBrakeMode
 12965  17EA                     l5236:
 12966                           
 12967                           ;ui.c: 181:     EEPROM_uiBrakeMode = uiBrakeMode;
 12968  17EA  0855               	movf	_uiBrakeMode,w
 12969  17EB  00C1               	movwf	??_bumpUIBrakeMode
 12970  17EC  0841               	movf	??_bumpUIBrakeMode,w
 12971  17ED  00AB               	movwf	___ctoee@data
 12972  17EE  3000               	movlw	(low _EEPROM_uiBrakeMode)& (0+255)
 12973  17EF  3195  25B6  3197   	fcall	___ctoee
 12974  17F2                     l5238:
 12975                           
 12976                           ;ui.c: 182:     blinkLEDColor(0x033, uiBrakeMode + 1);
 12977  17F2  3033               	movlw	51
 12978  17F3  0140               	movlb	0	; select bank0
 12979  17F4  00BC               	movwf	blinkLEDColor@RGB
 12980  17F5  3000               	movlw	0
 12981  17F6  00BD               	movwf	blinkLEDColor@RGB+1
 12982  17F7  0855               	movf	_uiBrakeMode,w
 12983  17F8  3E01               	addlw	1
 12984  17F9  00C1               	movwf	??_bumpUIBrakeMode
 12985  17FA  0841               	movf	??_bumpUIBrakeMode,w
 12986  17FB  00BE               	movwf	blinkLEDColor@blinks
 12987  17FC  3188  2014  3197   	fcall	_blinkLEDColor
 12988  17FF                     l1114:
 12989  17FF  0008               	return
 12990  1800                     __end_of_bumpUIBrakeMode:
 12991                           
 12992                           	psect	text39
 12993  0814                     __ptext39:	
 12994 ;; *************** function _blinkLEDColor *****************
 12995 ;; Defined at:
 12996 ;;		line 227 in file "ui.c"
 12997 ;; Parameters:    Size  Location     Type
 12998 ;;  RGB             2   28[BANK0 ] unsigned short 
 12999 ;;  blinks          1   30[BANK0 ] unsigned char 
 13000 ;; Auto vars:     Size  Location     Type
 13001 ;;  blink           1   32[BANK0 ] unsigned char 
 13002 ;; Return value:  Size  Location     Type
 13003 ;;                  1    wreg      void 
 13004 ;; Registers used:
 13005 ;;		wreg, status,2, status,0, pclath, cstack
 13006 ;; Tracked objects:
 13007 ;;		On entry : 0/0
 13008 ;;		On exit  : 0/0
 13009 ;;		Unchanged: 0/0
 13010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13011 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13012 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13013 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13014 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13015 ;;Total ram usage:        5 bytes
 13016 ;; Hardware stack levels used:    1
 13017 ;; Hardware stack levels required when called:   10
 13018 ;; This function calls:
 13019 ;;		_pulseLEDColor
 13020 ;; This function is called by:
 13021 ;;		_bumpUISpeedMode
 13022 ;;		_bumpUIBrakeMode
 13023 ;; This function uses a non-reentrant model
 13024 ;;
 13025                           
 13026                           
 13027                           ;psect for function _blinkLEDColor
 13028  0814                     _blinkLEDColor:
 13029  0814                     l5088:	
 13030                           ;incstack = 0
 13031                           ; Regs used in _blinkLEDColor: [wreg+status,2+status,0+pclath+cstack]
 13032                           
 13033                           
 13034                           ;ui.c: 228:     uint8_t blink;;ui.c: 230:     for(blink=0; blink < blinks; blink++){
 13035  0814  0140               	movlb	0	; select bank0
 13036  0815  01C0               	clrf	blinkLEDColor@blink
 13037  0816  282B               	goto	l5094
 13038  0817                     l5090:
 13039                           
 13040                           ;ui.c: 231:         pulseLEDColor(RGB, 100, 400);
 13041  0817  083D               	movf	blinkLEDColor@RGB+1,w
 13042  0818  00B7               	movwf	pulseLEDColor@RGB+1
 13043  0819  083C               	movf	blinkLEDColor@RGB,w
 13044  081A  00B6               	movwf	pulseLEDColor@RGB
 13045  081B  3064               	movlw	100
 13046  081C  00B8               	movwf	pulseLEDColor@onTimeMS
 13047  081D  3000               	movlw	0
 13048  081E  00B9               	movwf	pulseLEDColor@onTimeMS+1
 13049  081F  3090               	movlw	144
 13050  0820  00BA               	movwf	pulseLEDColor@offTimeMS
 13051  0821  3001               	movlw	1
 13052  0822  00BB               	movwf	pulseLEDColor@offTimeMS+1
 13053  0823  3189  2115  3188   	fcall	_pulseLEDColor
 13054  0826                     l5092:
 13055                           
 13056                           ;ui.c: 232:     }
 13057  0826  3001               	movlw	1
 13058  0827  0140               	movlb	0	; select bank0
 13059  0828  00BF               	movwf	??_blinkLEDColor
 13060  0829  083F               	movf	??_blinkLEDColor,w
 13061  082A  07C0               	addwf	blinkLEDColor@blink,f
 13062  082B                     l5094:
 13063  082B  083E               	movf	blinkLEDColor@blinks,w
 13064  082C  0240               	subwf	blinkLEDColor@blink,w
 13065  082D  1C03               	skipc
 13066  082E  2830               	goto	u3811
 13067  082F  2831               	goto	u3810
 13068  0830                     u3811:
 13069  0830  2817               	goto	l5090
 13070  0831                     u3810:
 13071  0831                     l1139:
 13072  0831  0008               	return
 13073  0832                     __end_of_blinkLEDColor:
 13074                           
 13075                           	psect	text40
 13076  0915                     __ptext40:	
 13077 ;; *************** function _pulseLEDColor *****************
 13078 ;; Defined at:
 13079 ;;		line 220 in file "ui.c"
 13080 ;; Parameters:    Size  Location     Type
 13081 ;;  RGB             2   22[BANK0 ] unsigned short 
 13082 ;;  onTimeMS        2   24[BANK0 ] unsigned short 
 13083 ;;  offTimeMS       2   26[BANK0 ] unsigned short 
 13084 ;; Auto vars:     Size  Location     Type
 13085 ;;		None
 13086 ;; Return value:  Size  Location     Type
 13087 ;;                  1    wreg      void 
 13088 ;; Registers used:
 13089 ;;		wreg, status,2, status,0, pclath, cstack
 13090 ;; Tracked objects:
 13091 ;;		On entry : 0/0
 13092 ;;		On exit  : 0/0
 13093 ;;		Unchanged: 0/0
 13094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13095 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13098 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13099 ;;Total ram usage:        6 bytes
 13100 ;; Hardware stack levels used:    1
 13101 ;; Hardware stack levels required when called:    9
 13102 ;; This function calls:
 13103 ;;		_setLEDColor
 13104 ;;		_sleep
 13105 ;; This function is called by:
 13106 ;;		_pairBluetoothDevices
 13107 ;;		_setBTBaudRatesTo38400
 13108 ;;		_getBTAddress
 13109 ;;		_setBTConnection
 13110 ;;		_doFactoryReset
 13111 ;;		_runUI
 13112 ;;		_blinkLEDColor
 13113 ;; This function uses a non-reentrant model
 13114 ;;
 13115                           
 13116                           
 13117                           ;psect for function _pulseLEDColor
 13118  0915                     _pulseLEDColor:
 13119  0915                     l4934:	
 13120                           ;incstack = 0
 13121                           ; Regs used in _pulseLEDColor: [wreg+status,2+status,0+pclath+cstack]
 13122                           
 13123                           
 13124                           ;ui.c: 221:     setLEDColor(RGB);
 13125  0915  0140               	movlb	0	; select bank0
 13126  0916  0837               	movf	pulseLEDColor@RGB+1,w
 13127  0917  00A7               	movwf	setLEDColor@RGB+1
 13128  0918  0836               	movf	pulseLEDColor@RGB,w
 13129  0919  00A6               	movwf	setLEDColor@RGB
 13130  091A  3197  2744  3189   	fcall	_setLEDColor
 13131                           
 13132                           ;ui.c: 222:     sleep(onTimeMS);
 13133  091D  0140               	movlb	0	; select bank0
 13134  091E  0838               	movf	pulseLEDColor@onTimeMS,w
 13135  091F  00AE               	movwf	sleep@delay
 13136  0920  0839               	movf	pulseLEDColor@onTimeMS+1,w
 13137  0921  00AF               	movwf	sleep@delay+1
 13138  0922  01B0               	clrf	sleep@delay+2
 13139  0923  01B1               	clrf	sleep@delay+3
 13140  0924  3189  21B5  3189   	fcall	_sleep
 13141                           
 13142                           ;ui.c: 223:     setLEDColor(0x000);
 13143  0927  3000               	movlw	0
 13144  0928  0140               	movlb	0	; select bank0
 13145  0929  00A6               	movwf	setLEDColor@RGB
 13146  092A  00A7               	movwf	setLEDColor@RGB+1
 13147  092B  3197  2744  3189   	fcall	_setLEDColor
 13148                           
 13149                           ;ui.c: 224:     sleep(offTimeMS);
 13150  092E  0140               	movlb	0	; select bank0
 13151  092F  083A               	movf	pulseLEDColor@offTimeMS,w
 13152  0930  00AE               	movwf	sleep@delay
 13153  0931  083B               	movf	pulseLEDColor@offTimeMS+1,w
 13154  0932  00AF               	movwf	sleep@delay+1
 13155  0933  01B0               	clrf	sleep@delay+2
 13156  0934  01B1               	clrf	sleep@delay+3
 13157  0935  3189  21B5  3189   	fcall	_sleep
 13158  0938                     l1133:
 13159  0938  0008               	return
 13160  0939                     __end_of_pulseLEDColor:
 13161                           
 13162                           	psect	text41
 13163  1744                     __ptext41:	
 13164 ;; *************** function _setLEDColor *****************
 13165 ;; Defined at:
 13166 ;;		line 214 in file "ui.c"
 13167 ;; Parameters:    Size  Location     Type
 13168 ;;  RGB             2    6[BANK0 ] unsigned short 
 13169 ;; Auto vars:     Size  Location     Type
 13170 ;;		None
 13171 ;; Return value:  Size  Location     Type
 13172 ;;                  1    wreg      void 
 13173 ;; Registers used:
 13174 ;;		wreg, status,2, status,0
 13175 ;; Tracked objects:
 13176 ;;		On entry : 0/0
 13177 ;;		On exit  : 0/0
 13178 ;;		Unchanged: 0/0
 13179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13180 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13182 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13183 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13184 ;;Total ram usage:        5 bytes
 13185 ;; Hardware stack levels used:    1
 13186 ;; Hardware stack levels required when called:    7
 13187 ;; This function calls:
 13188 ;;		Nothing
 13189 ;; This function is called by:
 13190 ;;		_pulseLEDColor
 13191 ;; This function uses a non-reentrant model
 13192 ;;
 13193                           
 13194                           
 13195                           ;psect for function _setLEDColor
 13196  1744                     _setLEDColor:
 13197  1744                     l4824:	
 13198                           ;incstack = 0
 13199                           ; Regs used in _setLEDColor: [wreg+status,2+status,0]
 13200                           
 13201                           
 13202                           ;ui.c: 215:     B_LED = RGB & 0x0F;
 13203  1744  0140               	movlb	0	; select bank0
 13204  1745  0826               	movf	setLEDColor@RGB,w
 13205  1746  390F               	andlw	15
 13206  1747  00A8               	movwf	??_setLEDColor
 13207  1748  0828               	movf	??_setLEDColor,w
 13208  1749  00D1               	movwf	_B_LED
 13209  174A                     l4826:
 13210                           
 13211                           ;ui.c: 216:     G_LED = (RGB >> 4) & 0x0F;
 13212  174A  0827               	movf	setLEDColor@RGB+1,w
 13213  174B  00A9               	movwf	??_setLEDColor+1
 13214  174C  0826               	movf	setLEDColor@RGB,w
 13215  174D  00A8               	movwf	??_setLEDColor
 13216  174E  3004               	movlw	4
 13217  174F                     u3505:
 13218  174F  36A9               	lsrf	??_setLEDColor+1,f
 13219  1750  0CA8               	rrf	??_setLEDColor,f
 13220  1751  0B89               	decfsz	9,f
 13221  1752  2F4F               	goto	u3505
 13222  1753  0828               	movf	??_setLEDColor,w
 13223  1754  390F               	andlw	15
 13224  1755  00AA               	movwf	??_setLEDColor+2
 13225  1756  082A               	movf	??_setLEDColor+2,w
 13226  1757  00D2               	movwf	_G_LED
 13227  1758                     l4828:
 13228                           
 13229                           ;ui.c: 217:     R_LED = (RGB >> 8) & 0x0F;
 13230  1758  0827               	movf	setLEDColor@RGB+1,w
 13231  1759  390F               	andlw	15
 13232  175A  00A8               	movwf	??_setLEDColor
 13233  175B  0828               	movf	??_setLEDColor,w
 13234  175C  00D3               	movwf	_R_LED
 13235  175D                     l1130:
 13236  175D  0008               	return
 13237  175E                     __end_of_setLEDColor:
 13238                           
 13239                           	psect	text42
 13240  15B6                     __ptext42:	
 13241 ;; *************** function ___ctoee *****************
 13242 ;; Defined at:
 13243 ;;		line 150 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c"
 13244 ;; Parameters:    Size  Location     Type
 13245 ;;  addr            1    wreg     PTR eeprom void 
 13246 ;;		 -> EEPROM_uiBrakeMode(1), EEPROM_uiSpeedMode(1), 
 13247 ;;  data            1   11[BANK0 ] unsigned char 
 13248 ;; Auto vars:     Size  Location     Type
 13249 ;;  addr            1   13[BANK0 ] PTR eeprom void 
 13250 ;;		 -> EEPROM_uiBrakeMode(1), EEPROM_uiSpeedMode(1), 
 13251 ;; Return value:  Size  Location     Type
 13252 ;;                  1    wreg      unsigned char 
 13253 ;; Registers used:
 13254 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13255 ;; Tracked objects:
 13256 ;;		On entry : 0/0
 13257 ;;		On exit  : 0/0
 13258 ;;		Unchanged: 0/0
 13259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13260 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13261 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13262 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13263 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13264 ;;Total ram usage:        3 bytes
 13265 ;; Hardware stack levels used:    1
 13266 ;; Hardware stack levels required when called:    8
 13267 ;; This function calls:
 13268 ;;		___memcpyee
 13269 ;; This function is called by:
 13270 ;;		_bumpUISpeedMode
 13271 ;;		_bumpUIBrakeMode
 13272 ;; This function uses a non-reentrant model
 13273 ;;
 13274                           
 13275                           
 13276                           ;psect for function ___ctoee
 13277  15B6                     ___ctoee:
 13278                           
 13279                           ;incstack = 0
 13280                           ; Regs used in ___ctoee: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13281                           ;___ctoee@addr stored from wreg
 13282  15B6  0140               	movlb	0	; select bank0
 13283  15B7  00AD               	movwf	___ctoee@addr
 13284  15B8                     l5096:
 13285  15B8  302B               	movlw	(low (___ctoee@data| 0))& (0+255)
 13286  15B9  00AC               	movwf	??___ctoee
 13287  15BA  082C               	movf	??___ctoee,w
 13288  15BB  00A6               	movwf	___memcpyee@from
 13289  15BC  01A7               	clrf	___memcpyee@size
 13290  15BD  0AA7               	incf	___memcpyee@size,f
 13291  15BE  082D               	movf	___ctoee@addr,w
 13292  15BF  318C  24EF  3195   	fcall	___memcpyee
 13293  15C2                     l1237:
 13294  15C2  0008               	return
 13295  15C3                     __end_of___ctoee:
 13296                           
 13297                           	psect	text43
 13298  0CEF                     __ptext43:	
 13299 ;; *************** function ___memcpyee *****************
 13300 ;; Defined at:
 13301 ;;		line 39 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c"
 13302 ;; Parameters:    Size  Location     Type
 13303 ;;  to              1    wreg     PTR eeprom unsigned char
 13304 ;;		 -> EEPROM_uiBrakeMode(1), EEPROM_uiSpeedMode(1), 
 13305 ;;  from            1    6[BANK0 ] PTR const unsigned char 
 13306 ;;		 -> __fltoee@data(4), __fttoee@data(4), __otoee@data(8), __ltoee@data(4), 
 13307 ;;		 -> __mtoee@data(3), __itoee@data(2), __ctoee@data(1), 
 13308 ;;  size            1    7[BANK0 ] unsigned char 
 13309 ;; Auto vars:     Size  Location     Type
 13310 ;;  to              1   10[BANK0 ] PTR eeprom unsigned char
 13311 ;;		 -> EEPROM_uiBrakeMode(1), EEPROM_uiSpeedMode(1), 
 13312 ;;  ptr             1    9[BANK0 ] PTR const unsigned char 
 13313 ;;		 -> __fltoee@data(4), __fttoee@data(4), __otoee@data(8), __ltoee@data(4), 
 13314 ;;		 -> __mtoee@data(3), __itoee@data(2), __ctoee@data(1), 
 13315 ;; Return value:  Size  Location     Type
 13316 ;;                  1    wreg      void 
 13317 ;; Registers used:
 13318 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13319 ;; Tracked objects:
 13320 ;;		On entry : 0/0
 13321 ;;		On exit  : 0/0
 13322 ;;		Unchanged: 0/0
 13323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13324 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13325 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13326 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13327 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13328 ;;Total ram usage:        5 bytes
 13329 ;; Hardware stack levels used:    1
 13330 ;; Hardware stack levels required when called:    7
 13331 ;; This function calls:
 13332 ;;		Nothing
 13333 ;; This function is called by:
 13334 ;;		___ctoee
 13335 ;; This function uses a non-reentrant model
 13336 ;;
 13337                           
 13338                           
 13339                           ;psect for function ___memcpyee
 13340  0CEF                     ___memcpyee:
 13341                           
 13342                           ;incstack = 0
 13343                           ; Regs used in ___memcpyee: [wreg+fsr1l+fsr1h+status,2+status,0]
 13344                           ;___memcpyee@to stored from wreg
 13345  0CEF  0140               	movlb	0	; select bank0
 13346  0CF0  00AA               	movwf	___memcpyee@to
 13347  0CF1                     l4944:
 13348                           
 13349                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 39: __memcpyee(__e
      +                          eprom unsigned char * to, const unsigned char *from, unsigned char size);D:\Program File
      +                          s\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 40: {;D:\Program Files\Microchip\x
      +                          c8\v2.20\pic\sources\c99\pic\__eeprom.c: 41:  const unsigned char *ptr =from;
 13350  0CF1  0826               	movf	___memcpyee@from,w
 13351  0CF2  00A8               	movwf	??___memcpyee
 13352  0CF3  0828               	movf	??___memcpyee,w
 13353  0CF4  00A9               	movwf	___memcpyee@ptr
 13354  0CF5                     l1205:	
 13355                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 71:  }
 13356                           
 13357                           
 13358                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 69:  while (NVMCON
      +                          1bits.WR) {
 13359  0CF5  0150               	movlb	16	; select bank16
 13360  0CF6  189E               	btfsc	30,1	;volsfr
 13361  0CF7  2CF9               	goto	u3671
 13362  0CF8  2CFA               	goto	u3670
 13363  0CF9                     u3671:
 13364  0CF9  2CF5               	goto	l1205
 13365  0CFA                     u3670:
 13366  0CFA                     l1207:
 13367                           
 13368                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 72:  NVMCON1bits.N
      +                          VMREGS = 1;
 13369  0CFA  171E               	bsf	30,6	;volsfr
 13370  0CFB                     l4946:
 13371                           
 13372                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 73:  NVMADRL = (un
      +                          signed char) to - 1U;
 13373  0CFB  0140               	movlb	0	; select bank0
 13374  0CFC  082A               	movf	___memcpyee@to,w
 13375  0CFD  3EFF               	addlw	255
 13376  0CFE  0150               	movlb	16	; select bank16
 13377  0CFF  009A               	movwf	26	;volatile
 13378  0D00                     l4948:
 13379                           
 13380                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 74:  NVMADRH = 0x7
      +                          0;
 13381  0D00  3070               	movlw	112
 13382  0D01  009B               	movwf	27	;volatile
 13383  0D02                     l4950:
 13384                           
 13385                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 75:  NVMDATH = 0;
 13386  0D02  019D               	clrf	29	;volatile
 13387                           
 13388                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 76:  while (size--
      +                          ) {
 13389  0D03  2D33               	goto	l4970
 13390  0D04                     l1210:	
 13391                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 79:   }
 13392                           
 13393                           
 13394                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 77:   while (NVMCO
      +                          N1bits.WR) {
 13395  0D04  0150               	movlb	16	; select bank16
 13396  0D05  189E               	btfsc	30,1	;volsfr
 13397  0D06  2D08               	goto	u3681
 13398  0D07  2D09               	goto	u3680
 13399  0D08                     u3681:
 13400  0D08  2D04               	goto	l1210
 13401  0D09                     u3680:
 13402  0D09                     l4952:
 13403                           
 13404                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 80:   NVMDATL = *p
      +                          tr++;
 13405  0D09  0140               	movlb	0	; select bank0
 13406  0D0A  0829               	movf	___memcpyee@ptr,w
 13407  0D0B  0086               	movwf	6
 13408  0D0C  0187               	clrf	7
 13409  0D0D  0801               	movf	1,w
 13410  0D0E  0150               	movlb	16	; select bank16
 13411  0D0F  009C               	movwf	28	;volatile
 13412  0D10                     l4954:
 13413  0D10  3001               	movlw	1
 13414  0D11  0140               	movlb	0	; select bank0
 13415  0D12  00A8               	movwf	??___memcpyee
 13416  0D13  0828               	movf	??___memcpyee,w
 13417  0D14  07A9               	addwf	___memcpyee@ptr,f
 13418  0D15                     l4956:
 13419                           
 13420                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 81:   NVMADRL++;
 13421  0D15  3001               	movlw	1
 13422  0D16  00A8               	movwf	??___memcpyee
 13423  0D17  0828               	movf	??___memcpyee,w
 13424  0D18  0150               	movlb	16	; select bank16
 13425  0D19  079A               	addwf	26,f	;volatile
 13426  0D1A                     l4958:
 13427                           
 13428                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 82:   STATUSbits.C
      +                          ARRY = 0;
 13429  0D1A  0140               	movlb	0	; select bank0
 13430  0D1B  1003               	bcf	3,0	;volatile
 13431  0D1C                     l4960:
 13432                           
 13433                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 83:   if (INTCONbi
      +                          ts.GIE) {
 13434  0D1C  1F8B               	btfss	11,7	;volatile
 13435  0D1D  2D1F               	goto	u3691
 13436  0D1E  2D20               	goto	u3690
 13437  0D1F                     u3691:
 13438  0D1F  2D21               	goto	l1213
 13439  0D20                     u3690:
 13440  0D20                     l4962:
 13441                           
 13442                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 84:    STATUSbits.
      +                          CARRY = 1;
 13443  0D20  1403               	bsf	3,0	;volatile
 13444  0D21                     l1213:	
 13445                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 85:   }
 13446                           
 13447                           
 13448                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 86:   NVMCON1bits.
      +                          WREN = 1;
 13449  0D21  0150               	movlb	16	; select bank16
 13450  0D22  151E               	bsf	30,2	;volsfr
 13451  0D23                     l4964:
 13452                           
 13453                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 87:   NVMCON2 = 0x
      +                          55;
 13454  0D23  3055               	movlw	85
 13455  0D24  009F               	movwf	31	;volsfr
 13456                           
 13457                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 88:   NVMCON2 = 0x
      +                          AA;
 13458  0D25  30AA               	movlw	170
 13459  0D26  009F               	movwf	31	;volsfr
 13460  0D27                     l4966:
 13461                           
 13462                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 89:   NVMCON1bits.
      +                          WR = 1;
 13463  0D27  149E               	bsf	30,1	;volsfr
 13464  0D28                     l1214:	
 13465                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 92:   }
 13466                           
 13467                           
 13468                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 90:   while (NVMCO
      +                          N1bits.WR) {
 13469  0D28  189E               	btfsc	30,1	;volsfr
 13470  0D29  2D2B               	goto	u3701
 13471  0D2A  2D2C               	goto	u3700
 13472  0D2B                     u3701:
 13473  0D2B  2D28               	goto	l1214
 13474  0D2C                     u3700:
 13475  0D2C                     l1216:
 13476                           
 13477                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 93:   NVMCON1bits.
      +                          WREN = 0;
 13478  0D2C  111E               	bcf	30,2	;volsfr
 13479                           
 13480                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 94:   if (STATUSbi
      +                          ts.CARRY) {
 13481  0D2D  0140               	movlb	0	; select bank0
 13482  0D2E  1C03               	btfss	3,0	;volatile
 13483  0D2F  2D31               	goto	u3711
 13484  0D30  2D32               	goto	u3710
 13485  0D31                     u3711:
 13486  0D31  2D33               	goto	l4970
 13487  0D32                     u3710:
 13488  0D32                     l4968:
 13489                           
 13490                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 95:    INTCONbits.
      +                          GIE = 1;
 13491  0D32  178B               	bsf	11,7	;volatile
 13492  0D33                     l4970:
 13493                           
 13494                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 76:  while (size--
      +                          ) {
 13495  0D33  3001               	movlw	1
 13496  0D34  0140               	movlb	0	; select bank0
 13497  0D35  02A7               	subwf	___memcpyee@size,f
 13498  0D36  0A27               	incf	___memcpyee@size,w
 13499  0D37  1D03               	btfss	3,2
 13500  0D38  2D3A               	goto	u3721
 13501  0D39  2D3B               	goto	u3720
 13502  0D3A                     u3721:
 13503  0D3A  2D04               	goto	l1210
 13504  0D3B                     u3720:
 13505  0D3B                     l1219:
 13506  0D3B  0008               	return
 13507  0D3C                     __end_of___memcpyee:
 13508                           
 13509                           	psect	text44
 13510  0E32                     __ptext44:	
 13511 ;; *************** function _BTTimeRemaining *****************
 13512 ;; Defined at:
 13513 ;;		line 57 in file "timers.c"
 13514 ;; Parameters:    Size  Location     Type
 13515 ;;		None
 13516 ;; Auto vars:     Size  Location     Type
 13517 ;;  elapsed         4   14[BANK0 ] long 
 13518 ;; Return value:  Size  Location     Type
 13519 ;;                  4    6[BANK0 ] long 
 13520 ;; Registers used:
 13521 ;;		wreg
 13522 ;; Tracked objects:
 13523 ;;		On entry : 0/0
 13524 ;;		On exit  : 0/0
 13525 ;;		Unchanged: 0/0
 13526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13527 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13528 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13529 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13530 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13531 ;;Total ram usage:       12 bytes
 13532 ;; Hardware stack levels used:    1
 13533 ;; Hardware stack levels required when called:    7
 13534 ;; This function calls:
 13535 ;;		Nothing
 13536 ;; This function is called by:
 13537 ;;		_main
 13538 ;;		_runUI
 13539 ;; This function uses a non-reentrant model
 13540 ;;
 13541                           
 13542                           
 13543                           ;psect for function _BTTimeRemaining
 13544  0E32                     _BTTimeRemaining:
 13545  0E32                     l5144:	
 13546                           ;incstack = 0
 13547                           ; Regs used in _BTTimeRemaining: [wreg]
 13548                           
 13549                           
 13550                           ;timers.c: 58:     int32_t elapsed = (systemTime - lastBTTime);
 13551  0E32  0141               	movlb	1	; select bank1
 13552  0E33  0828               	movf	_lastBTTime^(0+128),w
 13553  0E34  0140               	movlb	0	; select bank0
 13554  0E35  0245               	subwf	_systemTime,w
 13555  0E36  00AA               	movwf	??_BTTimeRemaining
 13556  0E37  0141               	movlb	1	; select bank1
 13557  0E38  0829               	movf	(_lastBTTime+1)^(0+128),w
 13558  0E39  0140               	movlb	0	; select bank0
 13559  0E3A  3B46               	subwfb	_systemTime+1,w
 13560  0E3B  00AB               	movwf	??_BTTimeRemaining+1
 13561  0E3C  0141               	movlb	1	; select bank1
 13562  0E3D  082A               	movf	(_lastBTTime+2)^(0+128),w
 13563  0E3E  0140               	movlb	0	; select bank0
 13564  0E3F  3B47               	subwfb	_systemTime+2,w
 13565  0E40  00AC               	movwf	??_BTTimeRemaining+2
 13566  0E41  0141               	movlb	1	; select bank1
 13567  0E42  082B               	movf	(_lastBTTime+3)^(0+128),w
 13568  0E43  0140               	movlb	0	; select bank0
 13569  0E44  3B48               	subwfb	_systemTime+3,w
 13570  0E45  00AD               	movwf	??_BTTimeRemaining+3
 13571  0E46  082D               	movf	??_BTTimeRemaining+3,w
 13572  0E47  00B1               	movwf	BTTimeRemaining@elapsed+3
 13573  0E48  082C               	movf	??_BTTimeRemaining+2,w
 13574  0E49  00B0               	movwf	BTTimeRemaining@elapsed+2
 13575  0E4A  082B               	movf	??_BTTimeRemaining+1,w
 13576  0E4B  00AF               	movwf	BTTimeRemaining@elapsed+1
 13577  0E4C  082A               	movf	??_BTTimeRemaining,w
 13578  0E4D  00AE               	movwf	BTTimeRemaining@elapsed
 13579                           
 13580                           ;timers.c: 60:     if (elapsed >= BTTimeout){
 13581  0E4E  0141               	movlb	1	; select bank1
 13582  0E4F  0827               	movf	(_BTTimeout+3)^(0+128),w
 13583  0E50  0140               	movlb	0	; select bank0
 13584  0E51  0231               	subwf	BTTimeRemaining@elapsed+3,w
 13585  0E52  1D03               	skipz
 13586  0E53  2E64               	goto	u3915
 13587  0E54  0141               	movlb	1	; select bank1
 13588  0E55  0826               	movf	(_BTTimeout+2)^(0+128),w
 13589  0E56  0140               	movlb	0	; select bank0
 13590  0E57  0230               	subwf	BTTimeRemaining@elapsed+2,w
 13591  0E58  1D03               	skipz
 13592  0E59  2E64               	goto	u3915
 13593  0E5A  0141               	movlb	1	; select bank1
 13594  0E5B  0825               	movf	(_BTTimeout+1)^(0+128),w
 13595  0E5C  0140               	movlb	0	; select bank0
 13596  0E5D  022F               	subwf	BTTimeRemaining@elapsed+1,w
 13597  0E5E  1D03               	skipz
 13598  0E5F  2E64               	goto	u3915
 13599  0E60  0141               	movlb	1	; select bank1
 13600  0E61  0824               	movf	_BTTimeout^(0+128),w
 13601  0E62  0140               	movlb	0	; select bank0
 13602  0E63  022E               	subwf	BTTimeRemaining@elapsed,w
 13603  0E64                     u3915:
 13604  0E64  1C03               	skipc
 13605  0E65  2E67               	goto	u3911
 13606  0E66  2E68               	goto	u3910
 13607  0E67                     u3911:
 13608  0E67  2E71               	goto	l5152
 13609  0E68                     u3910:
 13610  0E68                     l5146:
 13611                           
 13612                           ;timers.c: 61:         return 0;
 13613  0E68  3000               	movlw	0
 13614  0E69  00A9               	movwf	?_BTTimeRemaining+3
 13615  0E6A  3000               	movlw	0
 13616  0E6B  00A8               	movwf	?_BTTimeRemaining+2
 13617  0E6C  3000               	movlw	0
 13618  0E6D  00A7               	movwf	?_BTTimeRemaining+1
 13619  0E6E  3000               	movlw	0
 13620  0E6F  00A6               	movwf	?_BTTimeRemaining
 13621  0E70  2E8D               	goto	l859
 13622  0E71                     l5152:
 13623                           
 13624                           ;timers.c: 63:         return (BTTimeout - elapsed);
 13625  0E71  082E               	movf	BTTimeRemaining@elapsed,w
 13626  0E72  0141               	movlb	1	; select bank1
 13627  0E73  0224               	subwf	_BTTimeout^(0+128),w
 13628  0E74  0140               	movlb	0	; select bank0
 13629  0E75  00AA               	movwf	??_BTTimeRemaining
 13630  0E76  082F               	movf	BTTimeRemaining@elapsed+1,w
 13631  0E77  0141               	movlb	1	; select bank1
 13632  0E78  3B25               	subwfb	(_BTTimeout+1)^(0+128),w
 13633  0E79  0140               	movlb	0	; select bank0
 13634  0E7A  00AB               	movwf	??_BTTimeRemaining+1
 13635  0E7B  0830               	movf	BTTimeRemaining@elapsed+2,w
 13636  0E7C  0141               	movlb	1	; select bank1
 13637  0E7D  3B26               	subwfb	(_BTTimeout+2)^(0+128),w
 13638  0E7E  0140               	movlb	0	; select bank0
 13639  0E7F  00AC               	movwf	??_BTTimeRemaining+2
 13640  0E80  0831               	movf	BTTimeRemaining@elapsed+3,w
 13641  0E81  0141               	movlb	1	; select bank1
 13642  0E82  3B27               	subwfb	(_BTTimeout+3)^(0+128),w
 13643  0E83  0140               	movlb	0	; select bank0
 13644  0E84  00AD               	movwf	??_BTTimeRemaining+3
 13645  0E85  082D               	movf	??_BTTimeRemaining+3,w
 13646  0E86  00A9               	movwf	?_BTTimeRemaining+3
 13647  0E87  082C               	movf	??_BTTimeRemaining+2,w
 13648  0E88  00A8               	movwf	?_BTTimeRemaining+2
 13649  0E89  082B               	movf	??_BTTimeRemaining+1,w
 13650  0E8A  00A7               	movwf	?_BTTimeRemaining+1
 13651  0E8B  082A               	movf	??_BTTimeRemaining,w
 13652  0E8C  00A6               	movwf	?_BTTimeRemaining
 13653  0E8D                     l859:
 13654  0E8D  0008               	return
 13655  0E8E                     __end_of_BTTimeRemaining:
 13656                           
 13657                           	psect	text45
 13658  1475                     __ptext45:	
 13659 ;; *************** function _powerIsOn *****************
 13660 ;; Defined at:
 13661 ;;		line 60 in file "configure.c"
 13662 ;; Parameters:    Size  Location     Type
 13663 ;;		None
 13664 ;; Auto vars:     Size  Location     Type
 13665 ;;		None
 13666 ;; Return value:  Size  Location     Type
 13667 ;;                  1    wreg      _Bool 
 13668 ;; Registers used:
 13669 ;;		wreg
 13670 ;; Tracked objects:
 13671 ;;		On entry : 0/0
 13672 ;;		On exit  : 0/0
 13673 ;;		Unchanged: 0/0
 13674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13679 ;;Total ram usage:        0 bytes
 13680 ;; Hardware stack levels used:    1
 13681 ;; Hardware stack levels required when called:    7
 13682 ;; This function calls:
 13683 ;;		Nothing
 13684 ;; This function is called by:
 13685 ;;		_main
 13686 ;; This function uses a non-reentrant model
 13687 ;;
 13688                           
 13689                           
 13690                           ;psect for function _powerIsOn
 13691  1475                     _powerIsOn:
 13692  1475                     l4632:	
 13693                           ;incstack = 0
 13694                           ; Regs used in _powerIsOn: [wreg]
 13695                           
 13696                           
 13697                           ;configure.c: 61:     return powerOn;
 13698  1475  0140               	movlb	0	; select bank0
 13699  1476  0857               	movf	_powerOn,w
 13700  1477                     l938:
 13701  1477  0008               	return
 13702  1478                     __end_of_powerIsOn:
 13703                           
 13704                           	psect	text46
 13705  0C62                     __ptext46:	
 13706 ;; *************** function _initUI *****************
 13707 ;; Defined at:
 13708 ;;		line 45 in file "ui.c"
 13709 ;; Parameters:    Size  Location     Type
 13710 ;;		None
 13711 ;; Auto vars:     Size  Location     Type
 13712 ;;		None
 13713 ;; Return value:  Size  Location     Type
 13714 ;;                  1    wreg      void 
 13715 ;; Registers used:
 13716 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13717 ;; Tracked objects:
 13718 ;;		On entry : 0/0
 13719 ;;		On exit  : 0/0
 13720 ;;		Unchanged: 0/0
 13721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13724 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13725 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13726 ;;Total ram usage:        1 bytes
 13727 ;; Hardware stack levels used:    1
 13728 ;; Hardware stack levels required when called:    9
 13729 ;; This function calls:
 13730 ;;		_IOCCF0_SetInterruptHandler
 13731 ;;		_IOCCF2_SetInterruptHandler
 13732 ;;		_TMR3_SetInterruptHandler
 13733 ;;		___eetoc
 13734 ;;		_getTicks
 13735 ;; This function is called by:
 13736 ;;		_main
 13737 ;; This function uses a non-reentrant model
 13738 ;;
 13739                           
 13740                           
 13741                           ;psect for function _initUI
 13742  0C62                     _initUI:
 13743  0C62                     l5240:	
 13744                           ;incstack = 0
 13745                           ; Regs used in _initUI: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13746                           
 13747                           
 13748                           ;ui.c: 46:     R_LED = 0 ;
 13749  0C62  0140               	movlb	0	; select bank0
 13750  0C63  01D3               	clrf	_R_LED
 13751                           
 13752                           ;ui.c: 47:     G_LED = 0 ;
 13753  0C64  01D2               	clrf	_G_LED
 13754                           
 13755                           ;ui.c: 48:     B_LED = 0 ;
 13756  0C65  01D1               	clrf	_B_LED
 13757                           
 13758                           ;ui.c: 49:     dutyCycle = 0;
 13759  0C66  01D0               	clrf	_dutyCycle
 13760                           
 13761                           ;ui.c: 50:     uiState = 0;
 13762  0C67  01CF               	clrf	_uiState
 13763  0C68                     l5242:
 13764                           
 13765                           ;ui.c: 51:     uiStateTime = getTicks();
 13766  0C68  3195  256E  318C   	fcall	_getTicks
 13767  0C6B  0140               	movlb	0	; select bank0
 13768  0C6C  0829               	movf	?_getTicks+3,w
 13769  0C6D  0141               	movlb	1	; select bank1
 13770  0C6E  00A3               	movwf	(_uiStateTime+3)^(0+128)
 13771  0C6F  0140               	movlb	0	; select bank0
 13772  0C70  0828               	movf	?_getTicks+2,w
 13773  0C71  0141               	movlb	1	; select bank1
 13774  0C72  00A2               	movwf	(_uiStateTime+2)^(0+128)
 13775  0C73  0140               	movlb	0	; select bank0
 13776  0C74  0827               	movf	?_getTicks+1,w
 13777  0C75  0141               	movlb	1	; select bank1
 13778  0C76  00A1               	movwf	(_uiStateTime+1)^(0+128)
 13779  0C77  0140               	movlb	0	; select bank0
 13780  0C78  0826               	movf	?_getTicks,w
 13781  0C79  0141               	movlb	1	; select bank1
 13782  0C7A  00A0               	movwf	_uiStateTime^(0+128)
 13783  0C7B                     l5244:
 13784                           
 13785                           ;ui.c: 52:     timeoutSequence = 0;
 13786  0C7B  0140               	movlb	0	; select bank0
 13787  0C7C  01D4               	clrf	_timeoutSequence
 13788  0C7D                     l5246:
 13789  0C7D  1719               	bsf	25,6	;volatile
 13790  0C7E                     l5248:
 13791  0C7E  1699               	bsf	25,5	;volatile
 13792  0C7F                     l5250:
 13793  0C7F  1619               	bsf	25,4	;volatile
 13794  0C80                     l5252:
 13795                           
 13796                           ;ui.c: 58:     uiSpeedMode = EEPROM_uiSpeedMode;
 13797  0C80  3001               	movlw	(low _EEPROM_uiSpeedMode)& (0+255)
 13798  0C81  3195  25FD  318C   	fcall	___eetoc
 13799  0C84  0140               	movlb	0	; select bank0
 13800  0C85  00AE               	movwf	??_initUI
 13801  0C86  082E               	movf	??_initUI,w
 13802  0C87  00D6               	movwf	_uiSpeedMode
 13803  0C88                     l5254:
 13804                           
 13805                           ;ui.c: 59:     uiBrakeMode = EEPROM_uiBrakeMode;
 13806  0C88  3000               	movlw	(low _EEPROM_uiBrakeMode)& (0+255)
 13807  0C89  3195  25FD  318C   	fcall	___eetoc
 13808  0C8C  0140               	movlb	0	; select bank0
 13809  0C8D  00AE               	movwf	??_initUI
 13810  0C8E  082E               	movf	??_initUI,w
 13811  0C8F  00D5               	movwf	_uiBrakeMode
 13812  0C90                     l5256:
 13813                           
 13814                           ;ui.c: 61:     TMR3_SetInterruptHandler(UI_PWM_handler);
 13815  0C90  30A2               	movlw	low _UI_PWM_handler
 13816  0C91  00A6               	movwf	TMR3_SetInterruptHandler@InterruptHandler
 13817  0C92  300B               	movlw	high _UI_PWM_handler
 13818  0C93  00A7               	movwf	TMR3_SetInterruptHandler@InterruptHandler+1
 13819  0C94  3195  2523  318C   	fcall	_TMR3_SetInterruptHandler
 13820  0C97                     l5258:
 13821                           
 13822                           ;ui.c: 62:     IOCCF0_SetInterruptHandler(turnPowerOn);
 13823  0C97  3047               	movlw	low _turnPowerOn
 13824  0C98  0140               	movlb	0	; select bank0
 13825  0C99  00A6               	movwf	IOCCF0_SetInterruptHandler@InterruptHandler
 13826  0C9A  3015               	movlw	high _turnPowerOn
 13827  0C9B  00A7               	movwf	IOCCF0_SetInterruptHandler@InterruptHandler+1
 13828  0C9C  3194  24FF  318C   	fcall	_IOCCF0_SetInterruptHandler
 13829  0C9F                     l5260:
 13830                           
 13831                           ;ui.c: 63:     IOCCF2_SetInterruptHandler(turnPowerOn);
 13832  0C9F  3047               	movlw	low _turnPowerOn
 13833  0CA0  0140               	movlb	0	; select bank0
 13834  0CA1  00A6               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler
 13835  0CA2  3015               	movlw	high _turnPowerOn
 13836  0CA3  00A7               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler+1
 13837  0CA4  3195  2508  318C   	fcall	_IOCCF2_SetInterruptHandler
 13838  0CA7                     l1071:
 13839  0CA7  0008               	return
 13840  0CA8                     __end_of_initUI:
 13841                           
 13842                           	psect	text47
 13843  15FD                     __ptext47:	
 13844 ;; *************** function ___eetoc *****************
 13845 ;; Defined at:
 13846 ;;		line 104 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c"
 13847 ;; Parameters:    Size  Location     Type
 13848 ;;  addr            1    wreg     PTR eeprom void 
 13849 ;;		 -> EEPROM_uiBrakeMode(1), EEPROM_uiSpeedMode(1), 
 13850 ;; Auto vars:     Size  Location     Type
 13851 ;;  addr            1   12[BANK0 ] PTR eeprom void 
 13852 ;;		 -> EEPROM_uiBrakeMode(1), EEPROM_uiSpeedMode(1), 
 13853 ;;  data            1   13[BANK0 ] unsigned char 
 13854 ;; Return value:  Size  Location     Type
 13855 ;;                  1    wreg      unsigned char 
 13856 ;; Registers used:
 13857 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13858 ;; Tracked objects:
 13859 ;;		On entry : 0/0
 13860 ;;		On exit  : 0/0
 13861 ;;		Unchanged: 0/0
 13862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13864 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13865 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13866 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13867 ;;Total ram usage:        3 bytes
 13868 ;; Hardware stack levels used:    1
 13869 ;; Hardware stack levels required when called:    8
 13870 ;; This function calls:
 13871 ;;		___eecpymem
 13872 ;; This function is called by:
 13873 ;;		_initUI
 13874 ;; This function uses a non-reentrant model
 13875 ;;
 13876                           
 13877                           
 13878                           ;psect for function ___eetoc
 13879  15FD                     ___eetoc:
 13880                           
 13881                           ;incstack = 0
 13882                           ; Regs used in ___eetoc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13883                           ;___eetoc@addr stored from wreg
 13884  15FD  0140               	movlb	0	; select bank0
 13885  15FE  00AC               	movwf	___eetoc@addr
 13886  15FF                     l4356:
 13887                           
 13888                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 104: __eetoc(__eep
      +                          rom void *addr);D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 105
      +                          : {;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 106:  unsigned 
      +                          char data;;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 107:  __
      +                          eecpymem((unsigned char *) &data,addr,1);
 13889  15FF  082C               	movf	___eetoc@addr,w
 13890  1600  00AB               	movwf	??___eetoc
 13891  1601  082B               	movf	??___eetoc,w
 13892  1602  00A6               	movwf	___eecpymem@from
 13893  1603  01A7               	clrf	___eecpymem@size
 13894  1604  0AA7               	incf	___eecpymem@size,f
 13895  1605  302D               	movlw	(low (___eetoc@data| 0))& (0+255)
 13896  1606  318B  2373  3195   	fcall	___eecpymem
 13897  1609                     l4358:
 13898                           
 13899                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 108:  return data;
 13900  1609  0140               	movlb	0	; select bank0
 13901  160A  082D               	movf	___eetoc@data,w
 13902  160B                     l1222:
 13903  160B  0008               	return
 13904  160C                     __end_of___eetoc:
 13905                           
 13906                           	psect	text48
 13907  0B73                     __ptext48:	
 13908 ;; *************** function ___eecpymem *****************
 13909 ;; Defined at:
 13910 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c"
 13911 ;; Parameters:    Size  Location     Type
 13912 ;;  to              1    wreg     PTR volatile unsigned ch
 13913 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
 13914 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
 13915 ;;  from            1    6[BANK0 ] PTR eeprom unsigned char
 13916 ;;		 -> EEPROM_uiBrakeMode(1), EEPROM_uiSpeedMode(1), 
 13917 ;;  size            1    7[BANK0 ] unsigned char 
 13918 ;; Auto vars:     Size  Location     Type
 13919 ;;  to              1   10[BANK0 ] PTR volatile unsigned ch
 13920 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
 13921 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
 13922 ;;  cp              1    9[BANK0 ] PTR volatile unsigned ch
 13923 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
 13924 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
 13925 ;; Return value:  Size  Location     Type
 13926 ;;                  1    wreg      void 
 13927 ;; Registers used:
 13928 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13929 ;; Tracked objects:
 13930 ;;		On entry : 0/0
 13931 ;;		On exit  : 0/0
 13932 ;;		Unchanged: 0/0
 13933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13934 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13935 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13936 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13937 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13938 ;;Total ram usage:        5 bytes
 13939 ;; Hardware stack levels used:    1
 13940 ;; Hardware stack levels required when called:    7
 13941 ;; This function calls:
 13942 ;;		Nothing
 13943 ;; This function is called by:
 13944 ;;		___eetoc
 13945 ;; This function uses a non-reentrant model
 13946 ;;
 13947                           
 13948                           
 13949                           ;psect for function ___eecpymem
 13950  0B73                     ___eecpymem:
 13951                           
 13952                           ;incstack = 0
 13953                           ; Regs used in ___eecpymem: [wreg+fsr1l+fsr1h+status,2+status,0]
 13954                           ;___eecpymem@to stored from wreg
 13955  0B73  0140               	movlb	0	; select bank0
 13956  0B74  00AA               	movwf	___eecpymem@to
 13957  0B75                     l3966:
 13958                           
 13959                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 6: __eecpymem(vola
      +                          tile unsigned char *to, __eeprom unsigned char * from, unsigned char size);D:\Program Fi
      +                          les\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 6: };D:\Program Files\Microchip\
      +                          xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 6: ;D:\Program Files\Microchip\xc8\v2.20\pic\s
      +                          ources\c99\pic\__eeprom.c: 6: ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\
      +                          __eeprom.c: 6: };D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 7:
      +                           {
 13960  0B75  082A               	movf	___eecpymem@to,w
 13961  0B76  00A8               	movwf	??___eecpymem
 13962  0B77  0828               	movf	??___eecpymem,w
 13963  0B78  00A9               	movwf	___eecpymem@cp
 13964  0B79                     l1196:	
 13965                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 24:  };D:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 24: __fltoee(__eeprom void *ad
      +                          dr, double data)
 13966                           
 13967                           
 13968                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 22:  while (NVMCON
      +                          1bits.WR) {;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 22: 
 13969  0B79  0150               	movlb	16	; select bank16
 13970  0B7A  189E               	btfsc	30,1	;volsfr
 13971  0B7B  2B7D               	goto	u2611
 13972  0B7C  2B7E               	goto	u2610
 13973  0B7D                     u2611:
 13974  0B7D  2B79               	goto	l1196
 13975  0B7E                     u2610:
 13976  0B7E                     l1198:
 13977                           
 13978                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 25:  NVMCON1bits.N
      +                          VMREGS = 1;;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 25: {
 13979  0B7E  171E               	bsf	30,6	;volsfr
 13980  0B7F                     l3968:
 13981                           
 13982                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 26:  NVMADRL = (un
      +                          signed char) from;;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 
      +                          26:  __memcpyee(addr,(unsigned char *) &data,4);
 13983  0B7F  0140               	movlb	0	; select bank0
 13984  0B80  0826               	movf	___eecpymem@from,w
 13985  0B81  0150               	movlb	16	; select bank16
 13986  0B82  009A               	movwf	26	;volatile
 13987                           
 13988                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 27:  NVMADRH = 0x7
      +                          0;;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 27:  return data
      +                          ;
 13989  0B83  3070               	movlw	112
 13990  0B84  009B               	movwf	27	;volatile
 13991                           
 13992                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 28:  while (size--
      +                          ) {;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 28: }
 13993  0B85  2B99               	goto	l3976
 13994  0B86                     l1200:
 13995                           
 13996                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 29:   NVMCON1bits.
      +                          RD = 1;
 13997  0B86  0150               	movlb	16	; select bank16
 13998  0B87  141E               	bsf	30,0	;volsfr
 13999  0B88                     l3970:
 14000                           
 14001                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 30:   *cp++ = NVMD
      +                          ATL;
 14002  0B88  081C               	movf	28,w	;volatile
 14003  0B89  0140               	movlb	0	; select bank0
 14004  0B8A  00A8               	movwf	??___eecpymem
 14005  0B8B  0829               	movf	___eecpymem@cp,w
 14006  0B8C  0086               	movwf	6
 14007  0B8D  0187               	clrf	7
 14008  0B8E  0828               	movf	??___eecpymem,w
 14009  0B8F  0081               	movwf	1
 14010  0B90                     l3972:
 14011  0B90  3001               	movlw	1
 14012  0B91  00A8               	movwf	??___eecpymem
 14013  0B92  0828               	movf	??___eecpymem,w
 14014  0B93  07A9               	addwf	___eecpymem@cp,f
 14015  0B94                     l3974:
 14016                           
 14017                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 31:   NVMADRL++;
 14018  0B94  3001               	movlw	1
 14019  0B95  00A8               	movwf	??___eecpymem
 14020  0B96  0828               	movf	??___eecpymem,w
 14021  0B97  0150               	movlb	16	; select bank16
 14022  0B98  079A               	addwf	26,f	;volatile
 14023  0B99                     l3976:
 14024                           
 14025                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 28:  while (size--
      +                          ) {;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 28: }
 14026  0B99  3001               	movlw	1
 14027  0B9A  0140               	movlb	0	; select bank0
 14028  0B9B  02A7               	subwf	___eecpymem@size,f
 14029  0B9C  0A27               	incf	___eecpymem@size,w
 14030  0B9D  1D03               	btfss	3,2
 14031  0B9E  2BA0               	goto	u2621
 14032  0B9F  2BA1               	goto	u2620
 14033  0BA0                     u2621:
 14034  0BA0  2B86               	goto	l1200
 14035  0BA1                     u2620:
 14036  0BA1                     l1202:
 14037  0BA1  0008               	return
 14038  0BA2                     __end_of___eecpymem:
 14039                           
 14040                           	psect	text49
 14041  17C7                     __ptext49:	
 14042 ;; *************** function _initTimers *****************
 14043 ;; Defined at:
 14044 ;;		line 11 in file "timers.c"
 14045 ;; Parameters:    Size  Location     Type
 14046 ;;		None
 14047 ;; Auto vars:     Size  Location     Type
 14048 ;;		None
 14049 ;; Return value:  Size  Location     Type
 14050 ;;                  1    wreg      void 
 14051 ;; Registers used:
 14052 ;;		wreg, status,2, status,0, pclath, cstack
 14053 ;; Tracked objects:
 14054 ;;		On entry : 0/0
 14055 ;;		On exit  : 0/0
 14056 ;;		Unchanged: 0/0
 14057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14062 ;;Total ram usage:        0 bytes
 14063 ;; Hardware stack levels used:    1
 14064 ;; Hardware stack levels required when called:    8
 14065 ;; This function calls:
 14066 ;;		_TMR2_SetInterruptHandler
 14067 ;; This function is called by:
 14068 ;;		_main
 14069 ;; This function uses a non-reentrant model
 14070 ;;
 14071                           
 14072                           
 14073                           ;psect for function _initTimers
 14074  17C7                     _initTimers:
 14075  17C7                     l4430:	
 14076                           ;incstack = 0
 14077                           ; Regs used in _initTimers: [wreg+status,2+status,0+pclath+cstack]
 14078                           
 14079                           
 14080                           ;timers.c: 12:     systemTime = 0;
 14081  17C7  3000               	movlw	0
 14082  17C8  0140               	movlb	0	; select bank0
 14083  17C9  00C8               	movwf	_systemTime+3
 14084  17CA  3000               	movlw	0
 14085  17CB  00C7               	movwf	_systemTime+2
 14086  17CC  3000               	movlw	0
 14087  17CD  00C6               	movwf	_systemTime+1
 14088  17CE  3000               	movlw	0
 14089  17CF  00C5               	movwf	_systemTime
 14090                           
 14091                           ;timers.c: 13:     lastBTTime = 0;
 14092  17D0  3000               	movlw	0
 14093  17D1  0141               	movlb	1	; select bank1
 14094  17D2  00AB               	movwf	(_lastBTTime+3)^(0+128)
 14095  17D3  3000               	movlw	0
 14096  17D4  00AA               	movwf	(_lastBTTime+2)^(0+128)
 14097  17D5  3000               	movlw	0
 14098  17D6  00A9               	movwf	(_lastBTTime+1)^(0+128)
 14099  17D7  3000               	movlw	0
 14100  17D8  00A8               	movwf	_lastBTTime^(0+128)
 14101  17D9                     l4432:
 14102                           
 14103                           ;timers.c: 14:     oneSecBlink = 0;
 14104  17D9  0140               	movlb	0	; select bank0
 14105  17DA  01D9               	clrf	_oneSecBlink
 14106  17DB                     l4434:
 14107                           
 14108                           ;timers.c: 15:     TMR2_SetInterruptHandler(timeKeeper);
 14109  17DB  306F               	movlw	low _timeKeeper
 14110  17DC  00A6               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 14111  17DD  3008               	movlw	high _timeKeeper
 14112  17DE  00A7               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 14113  17DF  3195  251A  3197   	fcall	_TMR2_SetInterruptHandler
 14114  17E2                     l828:
 14115  17E2  0008               	return
 14116  17E3                     __end_of_initTimers:
 14117                           
 14118                           	psect	text50
 14119  0939                     __ptext50:	
 14120 ;; *************** function _initSerial *****************
 14121 ;; Defined at:
 14122 ;;		line 14 in file "serial.c"
 14123 ;; Parameters:    Size  Location     Type
 14124 ;;		None
 14125 ;; Auto vars:     Size  Location     Type
 14126 ;;		None
 14127 ;; Return value:  Size  Location     Type
 14128 ;;                  1    wreg      void 
 14129 ;; Registers used:
 14130 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14131 ;; Tracked objects:
 14132 ;;		On entry : 0/0
 14133 ;;		On exit  : 0/0
 14134 ;;		Unchanged: 0/0
 14135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14138 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14139 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14140 ;;Total ram usage:        1 bytes
 14141 ;; Hardware stack levels used:    1
 14142 ;; Hardware stack levels required when called:    8
 14143 ;; This function calls:
 14144 ;;		_memset
 14145 ;; This function is called by:
 14146 ;;		_main
 14147 ;; This function uses a non-reentrant model
 14148 ;;
 14149                           
 14150                           
 14151                           ;psect for function _initSerial
 14152  0939                     _initSerial:
 14153  0939                     l4436:	
 14154                           ;incstack = 0
 14155                           ; Regs used in _initSerial: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14156                           
 14157                           
 14158                           ;serial.c: 16:     memset(speedBuffer, 0, sizeof(speedBuffer));
 14159  0939  3000               	movlw	0
 14160  093A  0140               	movlb	0	; select bank0
 14161  093B  00A6               	movwf	memset@c
 14162  093C  00A7               	movwf	memset@c+1
 14163  093D  300C               	movlw	12
 14164  093E  00A8               	movwf	memset@n
 14165  093F  3000               	movlw	0
 14166  0940  00A9               	movwf	memset@n+1
 14167  0941  30B6               	movlw	(low (_speedBuffer| 0))& (0+255)
 14168  0942  3186  26B4  3189   	fcall	_memset
 14169  0945                     l4438:
 14170                           
 14171                           ;serial.c: 17:     speedBuffer[0] = '/';
 14172  0945  302F               	movlw	47
 14173  0946  0140               	movlb	0	; select bank0
 14174  0947  00B0               	movwf	??_initSerial
 14175  0948  0830               	movf	??_initSerial,w
 14176  0949  0141               	movlb	1	; select bank1
 14177  094A  00B6               	movwf	_speedBuffer^(0+128)
 14178  094B                     l4440:
 14179                           
 14180                           ;serial.c: 18:     speedBuffer[1] = 4;
 14181  094B  3004               	movlw	4
 14182  094C  0140               	movlb	0	; select bank0
 14183  094D  00B0               	movwf	??_initSerial
 14184  094E  0830               	movf	??_initSerial,w
 14185  094F  0141               	movlb	1	; select bank1
 14186  0950  00B7               	movwf	(_speedBuffer^(0+128)+1)
 14187  0951                     l4442:
 14188                           
 14189                           ;serial.c: 19:     speedBuffer[2] = 0;
 14190  0951  01B8               	clrf	(_speedBuffer^(0+128)+2)
 14191  0952                     l4444:
 14192                           
 14193                           ;serial.c: 20:     speedBuffer[3] = 0x86;
 14194  0952  3086               	movlw	134
 14195  0953  0140               	movlb	0	; select bank0
 14196  0954  00B0               	movwf	??_initSerial
 14197  0955  0830               	movf	??_initSerial,w
 14198  0956  0141               	movlb	1	; select bank1
 14199  0957  00B9               	movwf	(_speedBuffer^(0+128)+3)
 14200  0958                     l4446:
 14201                           
 14202                           ;serial.c: 21:     speedBuffer[4] = 0;
 14203  0958  01BA               	clrf	(_speedBuffer^(0+128)+4)
 14204  0959                     l4448:
 14205                           
 14206                           ;serial.c: 22:     speedBuffer[11] = '\n';
 14207  0959  300A               	movlw	10
 14208  095A  0140               	movlb	0	; select bank0
 14209  095B  00B0               	movwf	??_initSerial
 14210  095C  0830               	movf	??_initSerial,w
 14211  095D  0141               	movlb	1	; select bank1
 14212  095E  00C1               	movwf	(_speedBuffer^(0+128)+11)
 14213  095F                     l756:
 14214  095F  0008               	return
 14215  0960                     __end_of_initSerial:
 14216                           
 14217                           	psect	text51
 14218  06B4                     __ptext51:	
 14219 ;; *************** function _memset *****************
 14220 ;; Defined at:
 14221 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\memset.c"
 14222 ;; Parameters:    Size  Location     Type
 14223 ;;  dest            1    wreg     PTR void 
 14224 ;;		 -> speedBuffer(12), 
 14225 ;;  c               2    6[BANK0 ] int 
 14226 ;;  n               2    8[BANK0 ] unsigned int 
 14227 ;; Auto vars:     Size  Location     Type
 14228 ;;  dest            1   14[BANK0 ] PTR void 
 14229 ;;		 -> speedBuffer(12), 
 14230 ;;  k               2   12[BANK0 ] unsigned int 
 14231 ;;  s               1   15[BANK0 ] PTR unsigned char 
 14232 ;;		 -> speedBuffer(12), 
 14233 ;; Return value:  Size  Location     Type
 14234 ;;                  1    wreg      PTR void 
 14235 ;; Registers used:
 14236 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14237 ;; Tracked objects:
 14238 ;;		On entry : 0/0
 14239 ;;		On exit  : 0/0
 14240 ;;		Unchanged: 0/0
 14241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14242 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14243 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14244 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14245 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14246 ;;Total ram usage:       10 bytes
 14247 ;; Hardware stack levels used:    1
 14248 ;; Hardware stack levels required when called:    7
 14249 ;; This function calls:
 14250 ;;		Nothing
 14251 ;; This function is called by:
 14252 ;;		_initSerial
 14253 ;; This function uses a non-reentrant model
 14254 ;;
 14255                           
 14256                           
 14257                           ;psect for function _memset
 14258  06B4                     _memset:
 14259                           
 14260                           ;incstack = 0
 14261                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 14262                           ;memset@dest stored from wreg
 14263  06B4  0140               	movlb	0	; select bank0
 14264  06B5  00AE               	movwf	memset@dest
 14265  06B6                     l4230:
 14266  06B6  082E               	movf	memset@dest,w
 14267  06B7  00AA               	movwf	??_memset
 14268  06B8  082A               	movf	??_memset,w
 14269  06B9  00AF               	movwf	memset@s
 14270  06BA                     l4232:
 14271  06BA  0828               	movf	memset@n,w
 14272  06BB  0429               	iorwf	memset@n+1,w
 14273  06BC  1D03               	btfss	3,2
 14274  06BD  2EBF               	goto	u2801
 14275  06BE  2EC0               	goto	u2800
 14276  06BF                     u2801:
 14277  06BF  2EC1               	goto	l4236
 14278  06C0                     u2800:
 14279  06C0  2F58               	goto	l1795
 14280  06C1                     l4236:
 14281  06C1  0826               	movf	memset@c,w
 14282  06C2  00AA               	movwf	??_memset
 14283  06C3  082F               	movf	memset@s,w
 14284  06C4  0086               	movwf	6
 14285  06C5  0187               	clrf	7
 14286  06C6  082A               	movf	??_memset,w
 14287  06C7  0081               	movwf	1
 14288  06C8                     l4238:
 14289  06C8  0826               	movf	memset@c,w
 14290  06C9  00AA               	movwf	??_memset
 14291  06CA  0828               	movf	memset@n,w
 14292  06CB  072F               	addwf	memset@s,w
 14293  06CC  00AB               	movwf	??_memset+1
 14294  06CD  082B               	movf	??_memset+1,w
 14295  06CE  3EFF               	addlw	255
 14296  06CF  0086               	movwf	6
 14297  06D0  0187               	clrf	7
 14298  06D1  082A               	movf	??_memset,w
 14299  06D2  0081               	movwf	1
 14300  06D3                     l4240:
 14301  06D3  3000               	movlw	0
 14302  06D4  0229               	subwf	memset@n+1,w
 14303  06D5  3003               	movlw	3
 14304  06D6  1903               	skipnz
 14305  06D7  0228               	subwf	memset@n,w
 14306  06D8  1803               	skipnc
 14307  06D9  2EDB               	goto	u2811
 14308  06DA  2EDC               	goto	u2810
 14309  06DB                     u2811:
 14310  06DB  2EDD               	goto	l4244
 14311  06DC                     u2810:
 14312  06DC  2F58               	goto	l1795
 14313  06DD                     l4244:
 14314  06DD  0826               	movf	memset@c,w
 14315  06DE  00AA               	movwf	??_memset
 14316  06DF  0A2F               	incf	memset@s,w
 14317  06E0  0086               	movwf	6
 14318  06E1  0187               	clrf	7
 14319  06E2  082A               	movf	??_memset,w
 14320  06E3  0081               	movwf	1
 14321  06E4                     l4246:
 14322  06E4  0826               	movf	memset@c,w
 14323  06E5  00AA               	movwf	??_memset
 14324  06E6  082F               	movf	memset@s,w
 14325  06E7  3E02               	addlw	2
 14326  06E8  0086               	movwf	6
 14327  06E9  0187               	clrf	7
 14328  06EA  082A               	movf	??_memset,w
 14329  06EB  0081               	movwf	1
 14330  06EC                     l4248:
 14331  06EC  0826               	movf	memset@c,w
 14332  06ED  00AA               	movwf	??_memset
 14333  06EE  0828               	movf	memset@n,w
 14334  06EF  072F               	addwf	memset@s,w
 14335  06F0  00AB               	movwf	??_memset+1
 14336  06F1  082B               	movf	??_memset+1,w
 14337  06F2  3EFE               	addlw	254
 14338  06F3  0086               	movwf	6
 14339  06F4  0187               	clrf	7
 14340  06F5  082A               	movf	??_memset,w
 14341  06F6  0081               	movwf	1
 14342  06F7                     l4250:
 14343  06F7  0826               	movf	memset@c,w
 14344  06F8  00AA               	movwf	??_memset
 14345  06F9  0828               	movf	memset@n,w
 14346  06FA  072F               	addwf	memset@s,w
 14347  06FB  00AB               	movwf	??_memset+1
 14348  06FC  082B               	movf	??_memset+1,w
 14349  06FD  3EFD               	addlw	253
 14350  06FE  0086               	movwf	6
 14351  06FF  0187               	clrf	7
 14352  0700  082A               	movf	??_memset,w
 14353  0701  0081               	movwf	1
 14354  0702                     l4252:
 14355  0702  3000               	movlw	0
 14356  0703  0229               	subwf	memset@n+1,w
 14357  0704  3007               	movlw	7
 14358  0705  1903               	skipnz
 14359  0706  0228               	subwf	memset@n,w
 14360  0707  1803               	skipnc
 14361  0708  2F0A               	goto	u2821
 14362  0709  2F0B               	goto	u2820
 14363  070A                     u2821:
 14364  070A  2F0C               	goto	l4256
 14365  070B                     u2820:
 14366  070B  2F58               	goto	l1795
 14367  070C                     l4256:
 14368  070C  0826               	movf	memset@c,w
 14369  070D  00AA               	movwf	??_memset
 14370  070E  082F               	movf	memset@s,w
 14371  070F  3E03               	addlw	3
 14372  0710  0086               	movwf	6
 14373  0711  0187               	clrf	7
 14374  0712  082A               	movf	??_memset,w
 14375  0713  0081               	movwf	1
 14376  0714  0826               	movf	memset@c,w
 14377  0715  00AA               	movwf	??_memset
 14378  0716  0828               	movf	memset@n,w
 14379  0717  072F               	addwf	memset@s,w
 14380  0718  00AB               	movwf	??_memset+1
 14381  0719  082B               	movf	??_memset+1,w
 14382  071A  3EFC               	addlw	252
 14383  071B  0086               	movwf	6
 14384  071C  0187               	clrf	7
 14385  071D  082A               	movf	??_memset,w
 14386  071E  0081               	movwf	1
 14387  071F                     l4258:
 14388  071F  3000               	movlw	0
 14389  0720  0229               	subwf	memset@n+1,w
 14390  0721  3009               	movlw	9
 14391  0722  1903               	skipnz
 14392  0723  0228               	subwf	memset@n,w
 14393  0724  1803               	skipnc
 14394  0725  2F27               	goto	u2831
 14395  0726  2F28               	goto	u2830
 14396  0727                     u2831:
 14397  0727  2F29               	goto	l4262
 14398  0728                     u2830:
 14399  0728  2F58               	goto	l1795
 14400  0729                     l4262:
 14401  0729  092F               	comf	memset@s,w
 14402  072A  00AA               	movwf	??_memset
 14403  072B  0930               	comf	memset@s+1,w
 14404  072C  00AB               	movwf	??_memset+1
 14405  072D  0AAA               	incf	??_memset,f
 14406  072E  1903               	skipnz
 14407  072F  0AAB               	incf	??_memset+1,f
 14408  0730  3003               	movlw	3
 14409  0731  052A               	andwf	??_memset,w
 14410  0732  00AC               	movwf	memset@k
 14411  0733  3000               	movlw	0
 14412  0734  052B               	andwf	??_memset+1,w
 14413  0735  00AD               	movwf	memset@k+1
 14414  0736  082C               	movf	memset@k,w
 14415  0737  00AA               	movwf	??_memset
 14416  0738  082A               	movf	??_memset,w
 14417  0739  07AF               	addwf	memset@s,f
 14418  073A                     l4264:
 14419  073A  082C               	movf	memset@k,w
 14420  073B  02A8               	subwf	memset@n,f
 14421  073C  082D               	movf	memset@k+1,w
 14422  073D  3BA9               	subwfb	memset@n+1,f
 14423  073E                     l4266:
 14424  073E  30FC               	movlw	252
 14425  073F  05A8               	andwf	memset@n,f
 14426  0740  30FF               	movlw	255
 14427  0741  05A9               	andwf	memset@n+1,f
 14428  0742  2F52               	goto	l4274
 14429  0743                     l4268:
 14430  0743  0826               	movf	memset@c,w
 14431  0744  00AA               	movwf	??_memset
 14432  0745  082F               	movf	memset@s,w
 14433  0746  0086               	movwf	6
 14434  0747  0187               	clrf	7
 14435  0748  082A               	movf	??_memset,w
 14436  0749  0081               	movwf	1
 14437  074A                     l4270:
 14438  074A  3001               	movlw	1
 14439  074B  02A8               	subwf	memset@n,f
 14440  074C  3000               	movlw	0
 14441  074D  3BA9               	subwfb	memset@n+1,f
 14442  074E                     l4272:
 14443  074E  3001               	movlw	1
 14444  074F  00AA               	movwf	??_memset
 14445  0750  082A               	movf	??_memset,w
 14446  0751  07AF               	addwf	memset@s,f
 14447  0752                     l4274:
 14448  0752  0828               	movf	memset@n,w
 14449  0753  0429               	iorwf	memset@n+1,w
 14450  0754  1D03               	btfss	3,2
 14451  0755  2F57               	goto	u2841
 14452  0756  2F58               	goto	u2840
 14453  0757                     u2841:
 14454  0757  2F43               	goto	l4268
 14455  0758                     u2840:
 14456  0758                     l1795:
 14457  0758  0008               	return
 14458  0759                     __end_of_memset:
 14459                           
 14460                           	psect	text52
 14461  1697                     __ptext52:	
 14462 ;; *************** function _initJoystick *****************
 14463 ;; Defined at:
 14464 ;;		line 67 in file "joystick.c"
 14465 ;; Parameters:    Size  Location     Type
 14466 ;;		None
 14467 ;; Auto vars:     Size  Location     Type
 14468 ;;		None
 14469 ;; Return value:  Size  Location     Type
 14470 ;;                  1    wreg      void 
 14471 ;; Registers used:
 14472 ;;		wreg, status,2, status,0, pclath, cstack
 14473 ;; Tracked objects:
 14474 ;;		On entry : 0/0
 14475 ;;		On exit  : 0/0
 14476 ;;		Unchanged: 0/0
 14477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14482 ;;Total ram usage:        0 bytes
 14483 ;; Hardware stack levels used:    1
 14484 ;; Hardware stack levels required when called:    8
 14485 ;; This function calls:
 14486 ;;		_TMR1_SetInterruptHandler
 14487 ;; This function is called by:
 14488 ;;		_main
 14489 ;; This function uses a non-reentrant model
 14490 ;;
 14491                           
 14492                           
 14493                           ;psect for function _initJoystick
 14494  1697                     _initJoystick:
 14495  1697                     l4450:	
 14496                           ;incstack = 0
 14497                           ; Regs used in _initJoystick: [wreg+status,2+status,0+pclath+cstack]
 14498                           
 14499                           
 14500                           ;joystick.c: 68:     TMR1_SetInterruptHandler(readJoystick);
 14501  1697  30A4               	movlw	low _readJoystick
 14502  1698  0140               	movlb	0	; select bank0
 14503  1699  00A6               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 14504  169A  3002               	movlw	high _readJoystick
 14505  169B  00A7               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 14506  169C  3195  2511  3196   	fcall	_TMR1_SetInterruptHandler
 14507  169F                     l4452:
 14508                           
 14509                           ;joystick.c: 69:     targetAxialFP = 0;
 14510  169F  0140               	movlb	0	; select bank0
 14511  16A0  01CD               	clrf	_targetAxialFP
 14512  16A1  01CE               	clrf	_targetAxialFP+1
 14513  16A2                     l4454:
 14514                           
 14515                           ;joystick.c: 70:     targetYawFP = 0;
 14516  16A2  0141               	movlb	1	; select bank1
 14517  16A3  01B4               	clrf	_targetYawFP^(0+128)
 14518  16A4  01B5               	clrf	(_targetYawFP+1)^(0+128)
 14519  16A5                     l4456:
 14520                           
 14521                           ;joystick.c: 71:     limitedAxialFP = 0;
 14522  16A5  0140               	movlb	0	; select bank0
 14523  16A6  01CB               	clrf	_limitedAxialFP
 14524  16A7  01CC               	clrf	_limitedAxialFP+1
 14525  16A8                     l4458:
 14526                           
 14527                           ;joystick.c: 72:     limitedYawFP = 0;
 14528  16A8  01C9               	clrf	_limitedYawFP
 14529  16A9  01CA               	clrf	_limitedYawFP+1
 14530  16AA                     l4460:
 14531                           
 14532                           ;joystick.c: 73:     joystickEnabled = 0;
 14533  16AA  01FD               	clrf	_joystickEnabled
 14534  16AB                     l683:
 14535  16AB  0008               	return
 14536  16AC                     __end_of_initJoystick:
 14537                           
 14538                           	psect	text53
 14539  1583                     __ptext53:	
 14540 ;; *************** function _initConfiguration *****************
 14541 ;; Defined at:
 14542 ;;		line 15 in file "configure.c"
 14543 ;; Parameters:    Size  Location     Type
 14544 ;;		None
 14545 ;; Auto vars:     Size  Location     Type
 14546 ;;		None
 14547 ;; Return value:  Size  Location     Type
 14548 ;;                  1    wreg      void 
 14549 ;; Registers used:
 14550 ;;		wreg, status,2, status,0, pclath, cstack
 14551 ;; Tracked objects:
 14552 ;;		On entry : 0/0
 14553 ;;		On exit  : 0/0
 14554 ;;		Unchanged: 0/0
 14555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14560 ;;Total ram usage:        0 bytes
 14561 ;; Hardware stack levels used:    1
 14562 ;; Hardware stack levels required when called:   10
 14563 ;; This function calls:
 14564 ;;		_SetSlaveTXRX
 14565 ;;		_setSerialBaud
 14566 ;; This function is called by:
 14567 ;;		_main
 14568 ;; This function uses a non-reentrant model
 14569 ;;
 14570                           
 14571                           
 14572                           ;psect for function _initConfiguration
 14573  1583                     _initConfiguration:
 14574  1583                     l5262:	
 14575                           ;incstack = 0
 14576                           ; Regs used in _initConfiguration: [wreg+status,2+status,0+pclath+cstack]
 14577                           
 14578                           
 14579                           ;configure.c: 17:     setSerialBaud(38400);
 14580  1583  3000               	movlw	0
 14581  1584  0140               	movlb	0	; select bank0
 14582  1585  00B6               	movwf	setSerialBaud@baud
 14583  1586  3096               	movlw	150
 14584  1587  00B7               	movwf	setSerialBaud@baud+1
 14585  1588  3188  2050  3195   	fcall	_setSerialBaud
 14586                           
 14587                           ;configure.c: 18:     SetSlaveTXRX();
 14588  158B  3196  2682  3195   	fcall	_SetSlaveTXRX
 14589  158E                     l913:
 14590  158E  0008               	return
 14591  158F                     __end_of_initConfiguration:
 14592                           
 14593                           	psect	text54
 14594  0850                     __ptext54:	
 14595 ;; *************** function _setSerialBaud *****************
 14596 ;; Defined at:
 14597 ;;		line 64 in file "configure.c"
 14598 ;; Parameters:    Size  Location     Type
 14599 ;;  baud            2   22[BANK0 ] unsigned short 
 14600 ;; Auto vars:     Size  Location     Type
 14601 ;;		None
 14602 ;; Return value:  Size  Location     Type
 14603 ;;                  1    wreg      void 
 14604 ;; Registers used:
 14605 ;;		wreg, status,2, status,0, pclath, cstack
 14606 ;; Tracked objects:
 14607 ;;		On entry : 0/0
 14608 ;;		On exit  : 0/0
 14609 ;;		Unchanged: 0/0
 14610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14611 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14614 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14615 ;;Total ram usage:        2 bytes
 14616 ;; Hardware stack levels used:    1
 14617 ;; Hardware stack levels required when called:    9
 14618 ;; This function calls:
 14619 ;;		_sleep
 14620 ;; This function is called by:
 14621 ;;		_initConfiguration
 14622 ;;		_setBTBaudRatesTo38400
 14623 ;;		_doFactoryReset
 14624 ;; This function uses a non-reentrant model
 14625 ;;
 14626                           
 14627                           
 14628                           ;psect for function _setSerialBaud
 14629  0850                     _setSerialBaud:
 14630  0850                     l4892:	
 14631                           ;incstack = 0
 14632                           ; Regs used in _setSerialBaud: [wreg+status,2+status,0+pclath+cstack]
 14633                           
 14634                           
 14635                           ;configure.c: 65:     if (baud == 38400) {
 14636  0850  3096               	movlw	150
 14637  0851  0140               	movlb	0	; select bank0
 14638  0852  0637               	xorwf	setSerialBaud@baud+1,w
 14639  0853  0436               	iorwf	setSerialBaud@baud,w
 14640  0854  1D03               	btfss	3,2
 14641  0855  2857               	goto	u3611
 14642  0856  2858               	goto	u3610
 14643  0857                     u3611:
 14644  0857  285D               	goto	l4898
 14645  0858                     u3610:
 14646  0858                     l4894:
 14647                           
 14648                           ;configure.c: 67:         SP1BRGL = 0x67;
 14649  0858  3067               	movlw	103
 14650  0859  0142               	movlb	2	; select bank2
 14651  085A  009B               	movwf	27	;volatile
 14652  085B                     l4896:
 14653                           
 14654                           ;configure.c: 68:         SP1BRGH = 0x00;
 14655  085B  019C               	clrf	28	;volatile
 14656                           
 14657                           ;configure.c: 69:     } else {
 14658  085C  2862               	goto	l4900
 14659  085D                     l4898:
 14660                           
 14661                           ;configure.c: 71:         SP1BRGL = 0xA0;
 14662  085D  30A0               	movlw	160
 14663  085E  0142               	movlb	2	; select bank2
 14664  085F  009B               	movwf	27	;volatile
 14665                           
 14666                           ;configure.c: 72:         SP1BRGH = 0x01;
 14667  0860  3001               	movlw	1
 14668  0861  009C               	movwf	28	;volatile
 14669  0862                     l4900:
 14670                           
 14671                           ;configure.c: 74:     sleep(200);
 14672  0862  3000               	movlw	0
 14673  0863  0140               	movlb	0	; select bank0
 14674  0864  00B1               	movwf	sleep@delay+3
 14675  0865  3000               	movlw	0
 14676  0866  00B0               	movwf	sleep@delay+2
 14677  0867  3000               	movlw	0
 14678  0868  00AF               	movwf	sleep@delay+1
 14679  0869  30C8               	movlw	200
 14680  086A  00AE               	movwf	sleep@delay
 14681  086B  3189  21B5  3188   	fcall	_sleep
 14682  086E                     l943:
 14683  086E  0008               	return
 14684  086F                     __end_of_setSerialBaud:
 14685                           
 14686                           	psect	text55
 14687  1682                     __ptext55:	
 14688 ;; *************** function _SetSlaveTXRX *****************
 14689 ;; Defined at:
 14690 ;;		line 21 in file "configure.c"
 14691 ;; Parameters:    Size  Location     Type
 14692 ;;		None
 14693 ;; Auto vars:     Size  Location     Type
 14694 ;;		None
 14695 ;; Return value:  Size  Location     Type
 14696 ;;                  1    wreg      void 
 14697 ;; Registers used:
 14698 ;;		wreg, status,2, status,0, pclath, cstack
 14699 ;; Tracked objects:
 14700 ;;		On entry : 0/0
 14701 ;;		On exit  : 0/0
 14702 ;;		Unchanged: 0/0
 14703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14708 ;;Total ram usage:        0 bytes
 14709 ;; Hardware stack levels used:    1
 14710 ;; Hardware stack levels required when called:    9
 14711 ;; This function calls:
 14712 ;;		_sleep
 14713 ;; This function is called by:
 14714 ;;		_initConfiguration
 14715 ;;		_pairBluetoothDevices
 14716 ;;		_getBTAddress
 14717 ;;		_setBTConnection
 14718 ;;		_doFactoryReset
 14719 ;; This function uses a non-reentrant model
 14720 ;;
 14721                           
 14722                           
 14723                           ;psect for function _SetSlaveTXRX
 14724  1682                     _SetSlaveTXRX:
 14725  1682                     l4902:	
 14726                           ;incstack = 0
 14727                           ; Regs used in _SetSlaveTXRX: [wreg+status,2+status,0+pclath+cstack]
 14728                           
 14729                           
 14730                           ;configure.c: 22:     RX1DTPPS = 0x15;
 14731  1682  3015               	movlw	21
 14732  1683  017D               	movlb	61	; select bank61
 14733  1684  00CB               	movwf	75	;volatile
 14734                           
 14735                           ;configure.c: 23:     RC4PPS = 0x0F;
 14736  1685  300F               	movlw	15
 14737  1686  017E               	movlb	62	; select bank62
 14738  1687  00A4               	movwf	36	;volatile
 14739                           
 14740                           ;configure.c: 24:     RC6PPS = 0x16;
 14741  1688  3016               	movlw	22
 14742  1689  00A6               	movwf	38	;volatile
 14743  168A                     l4904:
 14744                           
 14745                           ;configure.c: 25:     sleep(5);
 14746  168A  3000               	movlw	0
 14747  168B  0140               	movlb	0	; select bank0
 14748  168C  00B1               	movwf	sleep@delay+3
 14749  168D  3000               	movlw	0
 14750  168E  00B0               	movwf	sleep@delay+2
 14751  168F  3000               	movlw	0
 14752  1690  00AF               	movwf	sleep@delay+1
 14753  1691  3005               	movlw	5
 14754  1692  00AE               	movwf	sleep@delay
 14755  1693  3189  21B5  3196   	fcall	_sleep
 14756  1696                     l916:
 14757  1696  0008               	return
 14758  1697                     __end_of_SetSlaveTXRX:
 14759                           
 14760                           	psect	text56
 14761  09B5                     __ptext56:	
 14762 ;; *************** function _sleep *****************
 14763 ;; Defined at:
 14764 ;;		line 35 in file "timers.c"
 14765 ;; Parameters:    Size  Location     Type
 14766 ;;  delay           4   14[BANK0 ] unsigned long 
 14767 ;; Auto vars:     Size  Location     Type
 14768 ;;  start           4   18[BANK0 ] unsigned long 
 14769 ;; Return value:  Size  Location     Type
 14770 ;;                  1    wreg      void 
 14771 ;; Registers used:
 14772 ;;		wreg, pclath, cstack
 14773 ;; Tracked objects:
 14774 ;;		On entry : 0/0
 14775 ;;		On exit  : 0/0
 14776 ;;		Unchanged: 0/0
 14777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14778 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14779 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14781 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14782 ;;Total ram usage:        8 bytes
 14783 ;; Hardware stack levels used:    1
 14784 ;; Hardware stack levels required when called:    8
 14785 ;; This function calls:
 14786 ;;		_getTicks
 14787 ;;		_getTicksSince
 14788 ;; This function is called by:
 14789 ;;		_main
 14790 ;;		_flushBTRXbuffer
 14791 ;;		_SetSlaveTXRX
 14792 ;;		_SetDualReceive
 14793 ;;		_SetMasterTXRX
 14794 ;;		_SetSlaveTXMasterRX
 14795 ;;		_setSerialBaud
 14796 ;;		_pairBluetoothDevices
 14797 ;;		_setBTBaudRatesTo38400
 14798 ;;		_getBTAddress
 14799 ;;		_setBTConnection
 14800 ;;		_doFactoryReset
 14801 ;;		_showStartup
 14802 ;;		_showShutdown
 14803 ;;		_pulseLEDColor
 14804 ;; This function uses a non-reentrant model
 14805 ;;
 14806                           
 14807                           
 14808                           ;psect for function _sleep
 14809  09B5                     _sleep:
 14810  09B5                     l4778:	
 14811                           ;incstack = 0
 14812                           ; Regs used in _sleep: [wreg+pclath+cstack]
 14813                           
 14814                           
 14815                           ;timers.c: 36:     uint32_t start = getTicks();
 14816  09B5  3195  256E  3189   	fcall	_getTicks
 14817  09B8  0140               	movlb	0	; select bank0
 14818  09B9  0829               	movf	?_getTicks+3,w
 14819  09BA  00B5               	movwf	sleep@start+3
 14820  09BB  0828               	movf	?_getTicks+2,w
 14821  09BC  00B4               	movwf	sleep@start+2
 14822  09BD  0827               	movf	?_getTicks+1,w
 14823  09BE  00B3               	movwf	sleep@start+1
 14824  09BF  0826               	movf	?_getTicks,w
 14825  09C0  00B2               	movwf	sleep@start
 14826  09C1                     l4780:	
 14827                           ;timers.c: 37:     while (getTicksSince(start) < delay);
 14828                           
 14829  09C1  0835               	movf	sleep@start+3,w
 14830  09C2  00A9               	movwf	getTicksSince@from+3
 14831  09C3  0834               	movf	sleep@start+2,w
 14832  09C4  00A8               	movwf	getTicksSince@from+2
 14833  09C5  0833               	movf	sleep@start+1,w
 14834  09C6  00A7               	movwf	getTicksSince@from+1
 14835  09C7  0832               	movf	sleep@start,w
 14836  09C8  00A6               	movwf	getTicksSince@from
 14837  09C9  3197  2717  3189   	fcall	_getTicksSince
 14838  09CC  0140               	movlb	0	; select bank0
 14839  09CD  0831               	movf	sleep@delay+3,w
 14840  09CE  0229               	subwf	?_getTicksSince+3,w
 14841  09CF  1D03               	skipz
 14842  09D0  29DB               	goto	u3425
 14843  09D1  0830               	movf	sleep@delay+2,w
 14844  09D2  0228               	subwf	?_getTicksSince+2,w
 14845  09D3  1D03               	skipz
 14846  09D4  29DB               	goto	u3425
 14847  09D5  082F               	movf	sleep@delay+1,w
 14848  09D6  0227               	subwf	?_getTicksSince+1,w
 14849  09D7  1D03               	skipz
 14850  09D8  29DB               	goto	u3425
 14851  09D9  082E               	movf	sleep@delay,w
 14852  09DA  0226               	subwf	?_getTicksSince,w
 14853  09DB                     u3425:
 14854  09DB  1C03               	skipc
 14855  09DC  29DE               	goto	u3421
 14856  09DD  29DF               	goto	u3420
 14857  09DE                     u3421:
 14858  09DE  29C1               	goto	l4780
 14859  09DF                     u3420:
 14860  09DF                     l843:
 14861  09DF  0008               	return
 14862  09E0                     __end_of_sleep:
 14863                           
 14864                           	psect	text57
 14865  1717                     __ptext57:	
 14866 ;; *************** function _getTicksSince *****************
 14867 ;; Defined at:
 14868 ;;		line 44 in file "timers.c"
 14869 ;; Parameters:    Size  Location     Type
 14870 ;;  from            4    6[BANK0 ] unsigned long 
 14871 ;; Auto vars:     Size  Location     Type
 14872 ;;		None
 14873 ;; Return value:  Size  Location     Type
 14874 ;;                  4    6[BANK0 ] long 
 14875 ;; Registers used:
 14876 ;;		wreg
 14877 ;; Tracked objects:
 14878 ;;		On entry : 0/0
 14879 ;;		On exit  : 0/0
 14880 ;;		Unchanged: 0/0
 14881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14882 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14884 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14885 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14886 ;;Total ram usage:        8 bytes
 14887 ;; Hardware stack levels used:    1
 14888 ;; Hardware stack levels required when called:    7
 14889 ;; This function calls:
 14890 ;;		Nothing
 14891 ;; This function is called by:
 14892 ;;		_receiveBTBuffer
 14893 ;;		_sleep
 14894 ;;		_runUI
 14895 ;; This function uses a non-reentrant model
 14896 ;;
 14897                           
 14898                           
 14899                           ;psect for function _getTicksSince
 14900  1717                     _getTicksSince:
 14901  1717                     l4722:	
 14902                           ;incstack = 0
 14903                           ; Regs used in _getTicksSince: [wreg]
 14904                           
 14905                           
 14906                           ;timers.c: 45:     return (systemTime - from);
 14907  1717  0140               	movlb	0	; select bank0
 14908  1718  0826               	movf	getTicksSince@from,w
 14909  1719  0245               	subwf	_systemTime,w
 14910  171A  00AA               	movwf	??_getTicksSince
 14911  171B  0827               	movf	getTicksSince@from+1,w
 14912  171C  3B46               	subwfb	_systemTime+1,w
 14913  171D  00AB               	movwf	??_getTicksSince+1
 14914  171E  0828               	movf	getTicksSince@from+2,w
 14915  171F  3B47               	subwfb	_systemTime+2,w
 14916  1720  00AC               	movwf	??_getTicksSince+2
 14917  1721  0829               	movf	getTicksSince@from+3,w
 14918  1722  3B48               	subwfb	_systemTime+3,w
 14919  1723  00AD               	movwf	??_getTicksSince+3
 14920  1724  082D               	movf	??_getTicksSince+3,w
 14921  1725  00A9               	movwf	?_getTicksSince+3
 14922  1726  082C               	movf	??_getTicksSince+2,w
 14923  1727  00A8               	movwf	?_getTicksSince+2
 14924  1728  082B               	movf	??_getTicksSince+1,w
 14925  1729  00A7               	movwf	?_getTicksSince+1
 14926  172A  082A               	movf	??_getTicksSince,w
 14927  172B  00A6               	movwf	?_getTicksSince
 14928  172C                     l849:
 14929  172C  0008               	return
 14930  172D                     __end_of_getTicksSince:
 14931                           
 14932                           	psect	text58
 14933  156E                     __ptext58:	
 14934 ;; *************** function _getTicks *****************
 14935 ;; Defined at:
 14936 ;;		line 40 in file "timers.c"
 14937 ;; Parameters:    Size  Location     Type
 14938 ;;		None
 14939 ;; Auto vars:     Size  Location     Type
 14940 ;;		None
 14941 ;; Return value:  Size  Location     Type
 14942 ;;                  4    6[BANK0 ] unsigned long 
 14943 ;; Registers used:
 14944 ;;		wreg
 14945 ;; Tracked objects:
 14946 ;;		On entry : 0/0
 14947 ;;		On exit  : 0/0
 14948 ;;		Unchanged: 0/0
 14949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14950 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14953 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14954 ;;Total ram usage:        4 bytes
 14955 ;; Hardware stack levels used:    1
 14956 ;; Hardware stack levels required when called:    7
 14957 ;; This function calls:
 14958 ;;		Nothing
 14959 ;; This function is called by:
 14960 ;;		_receiveBTBuffer
 14961 ;;		_sleep
 14962 ;;		_initUI
 14963 ;;		_runUI
 14964 ;; This function uses a non-reentrant model
 14965 ;;
 14966                           
 14967                           
 14968                           ;psect for function _getTicks
 14969  156E                     _getTicks:
 14970  156E                     l4726:	
 14971                           ;incstack = 0
 14972                           ; Regs used in _getTicks: [wreg]
 14973                           
 14974                           
 14975                           ;timers.c: 41:     return systemTime;
 14976  156E  0140               	movlb	0	; select bank0
 14977  156F  0848               	movf	_systemTime+3,w
 14978  1570  00A9               	movwf	?_getTicks+3
 14979  1571  0847               	movf	_systemTime+2,w
 14980  1572  00A8               	movwf	?_getTicks+2
 14981  1573  0846               	movf	_systemTime+1,w
 14982  1574  00A7               	movwf	?_getTicks+1
 14983  1575  0845               	movf	_systemTime,w
 14984  1576  00A6               	movwf	?_getTicks
 14985  1577                     l846:
 14986  1577  0008               	return
 14987  1578                     __end_of_getTicks:
 14988                           
 14989                           	psect	text59
 14990  1701                     __ptext59:	
 14991 ;; *************** function _SYSTEM_Initialize *****************
 14992 ;; Defined at:
 14993 ;;		line 50 in file "mcc_generated_files/mcc.c"
 14994 ;; Parameters:    Size  Location     Type
 14995 ;;		None
 14996 ;; Auto vars:     Size  Location     Type
 14997 ;;		None
 14998 ;; Return value:  Size  Location     Type
 14999 ;;                  1    wreg      void 
 15000 ;; Registers used:
 15001 ;;		wreg, status,2, status,0, pclath, cstack
 15002 ;; Tracked objects:
 15003 ;;		On entry : 0/0
 15004 ;;		On exit  : 0/0
 15005 ;;		Unchanged: 0/0
 15006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15011 ;;Total ram usage:        0 bytes
 15012 ;; Hardware stack levels used:    1
 15013 ;; Hardware stack levels required when called:    9
 15014 ;; This function calls:
 15015 ;;		_EUSART1_Initialize
 15016 ;;		_OSCILLATOR_Initialize
 15017 ;;		_PIN_MANAGER_Initialize
 15018 ;;		_PMD_Initialize
 15019 ;;		_TMR1_Initialize
 15020 ;;		_TMR2_Initialize
 15021 ;;		_TMR3_Initialize
 15022 ;; This function is called by:
 15023 ;;		_main
 15024 ;; This function uses a non-reentrant model
 15025 ;;
 15026                           
 15027                           
 15028                           ;psect for function _SYSTEM_Initialize
 15029  1701                     _SYSTEM_Initialize:
 15030  1701                     l4404:	
 15031                           ;incstack = 0
 15032                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15033                           
 15034                           
 15035                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 15036  1701  3195  2564  3197   	fcall	_PMD_Initialize
 15037  1704                     l4406:
 15038                           
 15039                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 15040  1704  318C  24A8  3197   	fcall	_PIN_MANAGER_Initialize
 15041  1707                     l4408:
 15042                           
 15043                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 15044  1707  3194  24F6  3197   	fcall	_OSCILLATOR_Initialize
 15045  170A                     l4410:
 15046                           
 15047                           ;mcc_generated_files/mcc.c: 55:     TMR3_Initialize();
 15048  170A  3188  20B0  3197   	fcall	_TMR3_Initialize
 15049  170D                     l4412:
 15050                           
 15051                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
 15052  170D  3197  272D  3197   	fcall	_TMR2_Initialize
 15053  1710                     l4414:
 15054                           
 15055                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
 15056  1710  3188  208F  3197   	fcall	_TMR1_Initialize
 15057  1713                     l4416:
 15058                           
 15059                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
 15060  1713  318C  241E  3197   	fcall	_EUSART1_Initialize
 15061  1716                     l342:
 15062  1716  0008               	return
 15063  1717                     __end_of_SYSTEM_Initialize:
 15064                           
 15065                           	psect	text60
 15066  08B0                     __ptext60:	
 15067 ;; *************** function _TMR3_Initialize *****************
 15068 ;; Defined at:
 15069 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 15070 ;; Parameters:    Size  Location     Type
 15071 ;;		None
 15072 ;; Auto vars:     Size  Location     Type
 15073 ;;		None
 15074 ;; Return value:  Size  Location     Type
 15075 ;;                  1    wreg      void 
 15076 ;; Registers used:
 15077 ;;		wreg, status,2, status,0, pclath, cstack
 15078 ;; Tracked objects:
 15079 ;;		On entry : 0/0
 15080 ;;		On exit  : 0/0
 15081 ;;		Unchanged: 0/0
 15082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15087 ;;Total ram usage:        0 bytes
 15088 ;; Hardware stack levels used:    1
 15089 ;; Hardware stack levels required when called:    8
 15090 ;; This function calls:
 15091 ;;		_TMR3_SetInterruptHandler
 15092 ;; This function is called by:
 15093 ;;		_SYSTEM_Initialize
 15094 ;; This function uses a non-reentrant model
 15095 ;;
 15096                           
 15097                           
 15098                           ;psect for function _TMR3_Initialize
 15099  08B0                     _TMR3_Initialize:
 15100  08B0                     l4158:	
 15101                           ;incstack = 0
 15102                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15103                           
 15104                           
 15105                           ;mcc_generated_files/tmr3.c: 69:     T3GCON = 0x00;
 15106  08B0  0144               	movlb	4	; select bank4
 15107  08B1  0195               	clrf	21	;volatile
 15108                           
 15109                           ;mcc_generated_files/tmr3.c: 72:     T3GATE = 0x00;
 15110  08B2  0196               	clrf	22	;volatile
 15111  08B3                     l4160:
 15112                           
 15113                           ;mcc_generated_files/tmr3.c: 75:     T3CLK = 0x01;
 15114  08B3  3001               	movlw	1
 15115  08B4  0097               	movwf	23	;volatile
 15116  08B5                     l4162:
 15117                           
 15118                           ;mcc_generated_files/tmr3.c: 78:     TMR3H = 0xFF;
 15119  08B5  30FF               	movlw	255
 15120  08B6  0093               	movwf	19	;volatile
 15121  08B7                     l4164:
 15122                           
 15123                           ;mcc_generated_files/tmr3.c: 81:     TMR3L = 0x06;
 15124  08B7  3006               	movlw	6
 15125  08B8  0092               	movwf	18	;volatile
 15126  08B9                     l4166:
 15127                           
 15128                           ;mcc_generated_files/tmr3.c: 84:     PIR4bits.TMR3IF = 0;
 15129  08B9  014E               	movlb	14	; select bank14
 15130  08BA  1110               	bcf	16,2	;volatile
 15131  08BB                     l4168:
 15132                           
 15133                           ;mcc_generated_files/tmr3.c: 87:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 15134  08BB  0144               	movlb	4	; select bank4
 15135  08BC  0813               	movf	19,w	;volatile
 15136  08BD  0141               	movlb	1	; select bank1
 15137  08BE  00C5               	movwf	(_timer3ReloadVal+1)^(0+128)	;volatile
 15138  08BF  0144               	movlb	4	; select bank4
 15139  08C0  0812               	movf	18,w	;volatile
 15140  08C1  0141               	movlb	1	; select bank1
 15141  08C2  00C4               	movwf	_timer3ReloadVal^(0+128)	;volatile
 15142  08C3                     l4170:
 15143                           
 15144                           ;mcc_generated_files/tmr3.c: 90:     PIE4bits.TMR3IE = 1;
 15145  08C3  014E               	movlb	14	; select bank14
 15146  08C4  151A               	bsf	26,2	;volatile
 15147  08C5                     l4172:
 15148                           
 15149                           ;mcc_generated_files/tmr3.c: 93:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 15150  08C5  3003               	movlw	low _TMR3_DefaultInterruptHandler
 15151  08C6  0140               	movlb	0	; select bank0
 15152  08C7  00A6               	movwf	TMR3_SetInterruptHandler@InterruptHandler
 15153  08C8  3000               	movlw	high _TMR3_DefaultInterruptHandler
 15154  08C9  00A7               	movwf	TMR3_SetInterruptHandler@InterruptHandler+1
 15155  08CA  3195  2523  3188   	fcall	_TMR3_SetInterruptHandler
 15156  08CD                     l4174:
 15157                           
 15158                           ;mcc_generated_files/tmr3.c: 96:     T3CON = 0x05;
 15159  08CD  3005               	movlw	5
 15160  08CE  0144               	movlb	4	; select bank4
 15161  08CF  0094               	movwf	20	;volatile
 15162  08D0                     l479:
 15163  08D0  0008               	return
 15164  08D1                     __end_of_TMR3_Initialize:
 15165                           
 15166                           	psect	text61
 15167  1523                     __ptext61:	
 15168 ;; *************** function _TMR3_SetInterruptHandler *****************
 15169 ;; Defined at:
 15170 ;;		line 185 in file "mcc_generated_files/tmr3.c"
 15171 ;; Parameters:    Size  Location     Type
 15172 ;;  InterruptHan    2    6[BANK0 ] PTR FTN()void 
 15173 ;;		 -> UI_PWM_handler(1), TMR3_DefaultInterruptHandler(1), 
 15174 ;; Auto vars:     Size  Location     Type
 15175 ;;		None
 15176 ;; Return value:  Size  Location     Type
 15177 ;;                  1    wreg      void 
 15178 ;; Registers used:
 15179 ;;		wreg
 15180 ;; Tracked objects:
 15181 ;;		On entry : 0/0
 15182 ;;		On exit  : 0/0
 15183 ;;		Unchanged: 0/0
 15184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15185 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15188 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15189 ;;Total ram usage:        2 bytes
 15190 ;; Hardware stack levels used:    1
 15191 ;; Hardware stack levels required when called:    7
 15192 ;; This function calls:
 15193 ;;		Nothing
 15194 ;; This function is called by:
 15195 ;;		_TMR3_Initialize
 15196 ;;		_initUI
 15197 ;; This function uses a non-reentrant model
 15198 ;;
 15199                           
 15200                           
 15201                           ;psect for function _TMR3_SetInterruptHandler
 15202  1523                     _TMR3_SetInterruptHandler:
 15203  1523                     l3762:	
 15204                           ;incstack = 0
 15205                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
 15206                           
 15207                           
 15208                           ;mcc_generated_files/tmr3.c: 186:     TMR3_InterruptHandler = InterruptHandler;
 15209  1523  0140               	movlb	0	; select bank0
 15210  1524  0827               	movf	TMR3_SetInterruptHandler@InterruptHandler+1,w
 15211  1525  0141               	movlb	1	; select bank1
 15212  1526  00C3               	movwf	(_TMR3_InterruptHandler+1)^(0+128)
 15213  1527  0140               	movlb	0	; select bank0
 15214  1528  0826               	movf	TMR3_SetInterruptHandler@InterruptHandler,w
 15215  1529  0141               	movlb	1	; select bank1
 15216  152A  00C2               	movwf	_TMR3_InterruptHandler^(0+128)
 15217  152B                     l512:
 15218  152B  0008               	return
 15219  152C                     __end_of_TMR3_SetInterruptHandler:
 15220                           
 15221                           	psect	text62
 15222  172D                     __ptext62:	
 15223 ;; *************** function _TMR2_Initialize *****************
 15224 ;; Defined at:
 15225 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 15226 ;; Parameters:    Size  Location     Type
 15227 ;;		None
 15228 ;; Auto vars:     Size  Location     Type
 15229 ;;		None
 15230 ;; Return value:  Size  Location     Type
 15231 ;;                  1    wreg      void 
 15232 ;; Registers used:
 15233 ;;		wreg, status,2, status,0, pclath, cstack
 15234 ;; Tracked objects:
 15235 ;;		On entry : 0/0
 15236 ;;		On exit  : 0/0
 15237 ;;		Unchanged: 0/0
 15238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15243 ;;Total ram usage:        0 bytes
 15244 ;; Hardware stack levels used:    1
 15245 ;; Hardware stack levels required when called:    8
 15246 ;; This function calls:
 15247 ;;		_TMR2_SetInterruptHandler
 15248 ;; This function is called by:
 15249 ;;		_SYSTEM_Initialize
 15250 ;; This function uses a non-reentrant model
 15251 ;;
 15252                           
 15253                           
 15254                           ;psect for function _TMR2_Initialize
 15255  172D                     _TMR2_Initialize:
 15256  172D                     l4056:	
 15257                           ;incstack = 0
 15258                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15259                           
 15260                           
 15261                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
 15262  172D  3001               	movlw	1
 15263  172E  0145               	movlb	5	; select bank5
 15264  172F  0090               	movwf	16	;volatile
 15265  1730                     l4058:
 15266                           
 15267                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x00;
 15268  1730  018F               	clrf	15	;volatile
 15269  1731                     l4060:
 15270                           
 15271                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 15272  1731  0191               	clrf	17	;volatile
 15273                           
 15274                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0xF9;
 15275  1732  30F9               	movlw	249
 15276  1733  008D               	movwf	13	;volatile
 15277  1734                     l4062:
 15278                           
 15279                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 15280  1734  018C               	clrf	12	;volatile
 15281  1735                     l4064:
 15282                           
 15283                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
 15284  1735  014E               	movlb	14	; select bank14
 15285  1736  1090               	bcf	16,1	;volatile
 15286  1737                     l4066:
 15287                           
 15288                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
 15289  1737  149A               	bsf	26,1	;volatile
 15290  1738                     l4068:
 15291                           
 15292                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 15293  1738  3002               	movlw	low _TMR2_DefaultInterruptHandler
 15294  1739  0140               	movlb	0	; select bank0
 15295  173A  00A6               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 15296  173B  3000               	movlw	high _TMR2_DefaultInterruptHandler
 15297  173C  00A7               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 15298  173D  3195  251A  3197   	fcall	_TMR2_SetInterruptHandler
 15299  1740                     l4070:
 15300                           
 15301                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xC0;
 15302  1740  30C0               	movlw	192
 15303  1741  0145               	movlb	5	; select bank5
 15304  1742  008E               	movwf	14	;volatile
 15305  1743                     l106:
 15306  1743  0008               	return
 15307  1744                     __end_of_TMR2_Initialize:
 15308                           
 15309                           	psect	text63
 15310  151A                     __ptext63:	
 15311 ;; *************** function _TMR2_SetInterruptHandler *****************
 15312 ;; Defined at:
 15313 ;;		line 186 in file "mcc_generated_files/tmr2.c"
 15314 ;; Parameters:    Size  Location     Type
 15315 ;;  InterruptHan    2    6[BANK0 ] PTR FTN()void 
 15316 ;;		 -> timeKeeper(1), TMR2_DefaultInterruptHandler(1), 
 15317 ;; Auto vars:     Size  Location     Type
 15318 ;;		None
 15319 ;; Return value:  Size  Location     Type
 15320 ;;                  1    wreg      void 
 15321 ;; Registers used:
 15322 ;;		wreg
 15323 ;; Tracked objects:
 15324 ;;		On entry : 0/0
 15325 ;;		On exit  : 0/0
 15326 ;;		Unchanged: 0/0
 15327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15328 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15331 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15332 ;;Total ram usage:        2 bytes
 15333 ;; Hardware stack levels used:    1
 15334 ;; Hardware stack levels required when called:    7
 15335 ;; This function calls:
 15336 ;;		Nothing
 15337 ;; This function is called by:
 15338 ;;		_TMR2_Initialize
 15339 ;;		_initTimers
 15340 ;; This function uses a non-reentrant model
 15341 ;;
 15342                           
 15343                           
 15344                           ;psect for function _TMR2_SetInterruptHandler
 15345  151A                     _TMR2_SetInterruptHandler:
 15346  151A                     l3736:	
 15347                           ;incstack = 0
 15348                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 15349                           
 15350                           
 15351                           ;mcc_generated_files/tmr2.c: 187:     TMR2_InterruptHandler = InterruptHandler;
 15352  151A  0140               	movlb	0	; select bank0
 15353  151B  0827               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 15354  151C  0141               	movlb	1	; select bank1
 15355  151D  00D5               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
 15356  151E  0140               	movlb	0	; select bank0
 15357  151F  0826               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 15358  1520  0141               	movlb	1	; select bank1
 15359  1521  00D4               	movwf	_TMR2_InterruptHandler^(0+128)
 15360  1522                     l152:
 15361  1522  0008               	return
 15362  1523                     __end_of_TMR2_SetInterruptHandler:
 15363                           
 15364                           	psect	text64
 15365  088F                     __ptext64:	
 15366 ;; *************** function _TMR1_Initialize *****************
 15367 ;; Defined at:
 15368 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 15369 ;; Parameters:    Size  Location     Type
 15370 ;;		None
 15371 ;; Auto vars:     Size  Location     Type
 15372 ;;		None
 15373 ;; Return value:  Size  Location     Type
 15374 ;;                  1    wreg      void 
 15375 ;; Registers used:
 15376 ;;		wreg, status,2, status,0, pclath, cstack
 15377 ;; Tracked objects:
 15378 ;;		On entry : 0/0
 15379 ;;		On exit  : 0/0
 15380 ;;		Unchanged: 0/0
 15381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15386 ;;Total ram usage:        0 bytes
 15387 ;; Hardware stack levels used:    1
 15388 ;; Hardware stack levels required when called:    8
 15389 ;; This function calls:
 15390 ;;		_TMR1_SetInterruptHandler
 15391 ;; This function is called by:
 15392 ;;		_SYSTEM_Initialize
 15393 ;; This function uses a non-reentrant model
 15394 ;;
 15395                           
 15396                           
 15397                           ;psect for function _TMR1_Initialize
 15398  088F                     _TMR1_Initialize:
 15399  088F                     l4020:	
 15400                           ;incstack = 0
 15401                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15402                           
 15403                           
 15404                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 15405  088F  0144               	movlb	4	; select bank4
 15406  0890  018F               	clrf	15	;volatile
 15407                           
 15408                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 15409  0891  0190               	clrf	16	;volatile
 15410  0892                     l4022:
 15411                           
 15412                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x06;
 15413  0892  3006               	movlw	6
 15414  0893  0091               	movwf	17	;volatile
 15415  0894                     l4024:
 15416                           
 15417                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xF9;
 15418  0894  30F9               	movlw	249
 15419  0895  008D               	movwf	13	;volatile
 15420  0896                     l4026:
 15421                           
 15422                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xE5;
 15423  0896  30E5               	movlw	229
 15424  0897  008C               	movwf	12	;volatile
 15425  0898                     l4028:
 15426                           
 15427                           ;mcc_generated_files/tmr1.c: 84:     PIR4bits.TMR1IF = 0;
 15428  0898  014E               	movlb	14	; select bank14
 15429  0899  1010               	bcf	16,0	;volatile
 15430  089A                     l4030:
 15431                           
 15432                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 15433  089A  0144               	movlb	4	; select bank4
 15434  089B  080D               	movf	13,w	;volatile
 15435  089C  0141               	movlb	1	; select bank1
 15436  089D  00D9               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 15437  089E  0144               	movlb	4	; select bank4
 15438  089F  080C               	movf	12,w	;volatile
 15439  08A0  0141               	movlb	1	; select bank1
 15440  08A1  00D8               	movwf	_timer1ReloadVal^(0+128)	;volatile
 15441  08A2                     l4032:
 15442                           
 15443                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 15444  08A2  014E               	movlb	14	; select bank14
 15445  08A3  141A               	bsf	26,0	;volatile
 15446  08A4                     l4034:
 15447                           
 15448                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 15449  08A4  3001               	movlw	low _TMR1_DefaultInterruptHandler
 15450  08A5  0140               	movlb	0	; select bank0
 15451  08A6  00A6               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 15452  08A7  3008               	movlw	high _TMR1_DefaultInterruptHandler
 15453  08A8  00A7               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 15454  08A9  3195  2511  3188   	fcall	_TMR1_SetInterruptHandler
 15455  08AC                     l4036:
 15456                           
 15457                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x01;
 15458  08AC  3001               	movlw	1
 15459  08AD  0144               	movlb	4	; select bank4
 15460  08AE  008E               	movwf	14	;volatile
 15461  08AF                     l33:
 15462  08AF  0008               	return
 15463  08B0                     __end_of_TMR1_Initialize:
 15464                           
 15465                           	psect	text65
 15466  1511                     __ptext65:	
 15467 ;; *************** function _TMR1_SetInterruptHandler *****************
 15468 ;; Defined at:
 15469 ;;		line 185 in file "mcc_generated_files/tmr1.c"
 15470 ;; Parameters:    Size  Location     Type
 15471 ;;  InterruptHan    2    6[BANK0 ] PTR FTN()void 
 15472 ;;		 -> readJoystick(1), TMR1_DefaultInterruptHandler(1), 
 15473 ;; Auto vars:     Size  Location     Type
 15474 ;;		None
 15475 ;; Return value:  Size  Location     Type
 15476 ;;                  1    wreg      void 
 15477 ;; Registers used:
 15478 ;;		wreg
 15479 ;; Tracked objects:
 15480 ;;		On entry : 0/0
 15481 ;;		On exit  : 0/0
 15482 ;;		Unchanged: 0/0
 15483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15484 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15487 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15488 ;;Total ram usage:        2 bytes
 15489 ;; Hardware stack levels used:    1
 15490 ;; Hardware stack levels required when called:    7
 15491 ;; This function calls:
 15492 ;;		Nothing
 15493 ;; This function is called by:
 15494 ;;		_TMR1_Initialize
 15495 ;;		_initJoystick
 15496 ;; This function uses a non-reentrant model
 15497 ;;
 15498                           
 15499                           
 15500                           ;psect for function _TMR1_SetInterruptHandler
 15501  1511                     _TMR1_SetInterruptHandler:
 15502  1511                     l3730:	
 15503                           ;incstack = 0
 15504                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 15505                           
 15506                           
 15507                           ;mcc_generated_files/tmr1.c: 186:     TMR1_InterruptHandler = InterruptHandler;
 15508  1511  0140               	movlb	0	; select bank0
 15509  1512  0827               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 15510  1513  0141               	movlb	1	; select bank1
 15511  1514  00D7               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 15512  1515  0140               	movlb	0	; select bank0
 15513  1516  0826               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 15514  1517  0141               	movlb	1	; select bank1
 15515  1518  00D6               	movwf	_TMR1_InterruptHandler^(0+128)
 15516  1519                     l66:
 15517  1519  0008               	return
 15518  151A                     __end_of_TMR1_SetInterruptHandler:
 15519                           
 15520                           	psect	text66
 15521  1564                     __ptext66:	
 15522 ;; *************** function _PMD_Initialize *****************
 15523 ;; Defined at:
 15524 ;;		line 75 in file "mcc_generated_files/mcc.c"
 15525 ;; Parameters:    Size  Location     Type
 15526 ;;		None
 15527 ;; Auto vars:     Size  Location     Type
 15528 ;;		None
 15529 ;; Return value:  Size  Location     Type
 15530 ;;                  1    wreg      void 
 15531 ;; Registers used:
 15532 ;;		status,2
 15533 ;; Tracked objects:
 15534 ;;		On entry : 0/0
 15535 ;;		On exit  : 0/0
 15536 ;;		Unchanged: 0/0
 15537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15542 ;;Total ram usage:        0 bytes
 15543 ;; Hardware stack levels used:    1
 15544 ;; Hardware stack levels required when called:    7
 15545 ;; This function calls:
 15546 ;;		Nothing
 15547 ;; This function is called by:
 15548 ;;		_SYSTEM_Initialize
 15549 ;; This function uses a non-reentrant model
 15550 ;;
 15551                           
 15552                           
 15553                           ;psect for function _PMD_Initialize
 15554  1564                     _PMD_Initialize:
 15555  1564                     l4112:	
 15556                           ;incstack = 0
 15557                           ; Regs used in _PMD_Initialize: [status,2]
 15558                           
 15559                           
 15560                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
 15561  1564  014F               	movlb	15	; select bank15
 15562  1565  0196               	clrf	22	;volatile
 15563                           
 15564                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
 15565  1566  0197               	clrf	23	;volatile
 15566                           
 15567                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
 15568  1567  0198               	clrf	24	;volatile
 15569                           
 15570                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
 15571  1568  0199               	clrf	25	;volatile
 15572                           
 15573                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
 15574  1569  019A               	clrf	26	;volatile
 15575                           
 15576                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
 15577  156A  019B               	clrf	27	;volatile
 15578                           
 15579                           ;mcc_generated_files/mcc.c: 90:     PMD6 = 0x00;
 15580  156B  019C               	clrf	28	;volatile
 15581                           
 15582                           ;mcc_generated_files/mcc.c: 92:     PMD7 = 0x00;
 15583  156C  019D               	clrf	29	;volatile
 15584  156D                     l348:
 15585  156D  0008               	return
 15586  156E                     __end_of_PMD_Initialize:
 15587                           
 15588                           	psect	text67
 15589  0CA8                     __ptext67:	
 15590 ;; *************** function _PIN_MANAGER_Initialize *****************
 15591 ;; Defined at:
 15592 ;;		line 58 in file "mcc_generated_files/pin_manager.c"
 15593 ;; Parameters:    Size  Location     Type
 15594 ;;		None
 15595 ;; Auto vars:     Size  Location     Type
 15596 ;;		None
 15597 ;; Return value:  Size  Location     Type
 15598 ;;                  1    wreg      void 
 15599 ;; Registers used:
 15600 ;;		wreg, status,2, status,0, pclath, cstack
 15601 ;; Tracked objects:
 15602 ;;		On entry : 0/0
 15603 ;;		On exit  : 0/0
 15604 ;;		Unchanged: 0/0
 15605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15610 ;;Total ram usage:        0 bytes
 15611 ;; Hardware stack levels used:    1
 15612 ;; Hardware stack levels required when called:    8
 15613 ;; This function calls:
 15614 ;;		_IOCCF0_SetInterruptHandler
 15615 ;;		_IOCCF2_SetInterruptHandler
 15616 ;; This function is called by:
 15617 ;;		_SYSTEM_Initialize
 15618 ;; This function uses a non-reentrant model
 15619 ;;
 15620                           
 15621                           
 15622                           ;psect for function _PIN_MANAGER_Initialize
 15623  0CA8                     _PIN_MANAGER_Initialize:
 15624  0CA8                     l4114:	
 15625                           ;incstack = 0
 15626                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15627                           
 15628                           
 15629                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x20;
 15630  0CA8  3020               	movlw	32
 15631  0CA9  0140               	movlb	0	; select bank0
 15632  0CAA  0098               	movwf	24	;volatile
 15633                           
 15634                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x70;
 15635  0CAB  3070               	movlw	112
 15636  0CAC  0099               	movwf	25	;volatile
 15637                           
 15638                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0x50;
 15639  0CAD  3050               	movlw	80
 15640  0CAE  009A               	movwf	26	;volatile
 15641                           
 15642                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x1F;
 15643  0CAF  301F               	movlw	31
 15644  0CB0  0092               	movwf	18	;volatile
 15645                           
 15646                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0x80;
 15647  0CB1  3080               	movlw	128
 15648  0CB2  0093               	movwf	19	;volatile
 15649                           
 15650                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xAF;
 15651  0CB3  30AF               	movlw	175
 15652  0CB4  0094               	movwf	20	;volatile
 15653                           
 15654                           ;mcc_generated_files/pin_manager.c: 77:     ANSELC = 0x80;
 15655  0CB5  3080               	movlw	128
 15656  0CB6  017E               	movlb	62	; select bank62
 15657  0CB7  00CE               	movwf	78	;volatile
 15658  0CB8                     l4116:
 15659                           
 15660                           ;mcc_generated_files/pin_manager.c: 78:     ANSELB = 0x00;
 15661  0CB8  01C3               	clrf	67	;volatile
 15662  0CB9                     l4118:
 15663                           
 15664                           ;mcc_generated_files/pin_manager.c: 79:     ANSELA = 0x01;
 15665  0CB9  3001               	movlw	1
 15666  0CBA  00B8               	movwf	56	;volatile
 15667  0CBB                     l4120:
 15668                           
 15669                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0xF0;
 15670  0CBB  30F0               	movlw	240
 15671  0CBC  00C4               	movwf	68	;volatile
 15672  0CBD                     l4122:
 15673                           
 15674                           ;mcc_generated_files/pin_manager.c: 85:     WPUA = 0x16;
 15675  0CBD  3016               	movlw	22
 15676  0CBE  00B9               	movwf	57	;volatile
 15677  0CBF                     l4124:
 15678                           
 15679                           ;mcc_generated_files/pin_manager.c: 86:     WPUC = 0x57;
 15680  0CBF  3057               	movlw	87
 15681  0CC0  00CF               	movwf	79	;volatile
 15682  0CC1                     l4126:
 15683                           
 15684                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
 15685  0CC1  01BA               	clrf	58	;volatile
 15686  0CC2                     l4128:
 15687                           
 15688                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
 15689  0CC2  01C5               	clrf	69	;volatile
 15690  0CC3                     l4130:
 15691                           
 15692                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
 15693  0CC3  01D0               	clrf	80	;volatile
 15694                           
 15695                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0x37;
 15696  0CC4  3037               	movlw	55
 15697  0CC5  00BB               	movwf	59	;volatile
 15698                           
 15699                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xF0;
 15700  0CC6  30F0               	movlw	240
 15701  0CC7  00C6               	movwf	70	;volatile
 15702                           
 15703                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
 15704  0CC8  30FF               	movlw	255
 15705  0CC9  00D1               	movwf	81	;volatile
 15706                           
 15707                           ;mcc_generated_files/pin_manager.c: 105:     INLVLA = 0x3F;
 15708  0CCA  303F               	movlw	63
 15709  0CCB  00BC               	movwf	60	;volatile
 15710                           
 15711                           ;mcc_generated_files/pin_manager.c: 106:     INLVLB = 0xF0;
 15712  0CCC  30F0               	movlw	240
 15713  0CCD  00C7               	movwf	71	;volatile
 15714                           
 15715                           ;mcc_generated_files/pin_manager.c: 107:     INLVLC = 0xFF;
 15716  0CCE  30FF               	movlw	255
 15717  0CCF  00D2               	movwf	82	;volatile
 15718  0CD0                     l4132:
 15719                           
 15720                           ;mcc_generated_files/pin_manager.c: 114:     IOCCFbits.IOCCF0 = 0;
 15721  0CD0  1055               	bcf	85,0	;volatile
 15722  0CD1                     l4134:
 15723                           
 15724                           ;mcc_generated_files/pin_manager.c: 116:     IOCCFbits.IOCCF2 = 0;
 15725  0CD1  1155               	bcf	85,2	;volatile
 15726  0CD2                     l4136:
 15727                           
 15728                           ;mcc_generated_files/pin_manager.c: 118:     IOCCNbits.IOCCN0 = 1;
 15729  0CD2  1454               	bsf	84,0	;volatile
 15730  0CD3                     l4138:
 15731                           
 15732                           ;mcc_generated_files/pin_manager.c: 120:     IOCCNbits.IOCCN2 = 1;
 15733  0CD3  1554               	bsf	84,2	;volatile
 15734  0CD4                     l4140:
 15735                           
 15736                           ;mcc_generated_files/pin_manager.c: 122:     IOCCPbits.IOCCP0 = 0;
 15737  0CD4  1053               	bcf	83,0	;volatile
 15738  0CD5                     l4142:
 15739                           
 15740                           ;mcc_generated_files/pin_manager.c: 124:     IOCCPbits.IOCCP2 = 0;
 15741  0CD5  1153               	bcf	83,2	;volatile
 15742  0CD6                     l4144:
 15743                           
 15744                           ;mcc_generated_files/pin_manager.c: 129:     IOCCF0_SetInterruptHandler(IOCCF0_DefaultIn
      +                          terruptHandler);
 15745  0CD6  3000               	movlw	low _IOCCF0_DefaultInterruptHandler
 15746  0CD7  0140               	movlb	0	; select bank0
 15747  0CD8  00A6               	movwf	IOCCF0_SetInterruptHandler@InterruptHandler
 15748  0CD9  3008               	movlw	high _IOCCF0_DefaultInterruptHandler
 15749  0CDA  00A7               	movwf	IOCCF0_SetInterruptHandler@InterruptHandler+1
 15750  0CDB  3194  24FF  318C   	fcall	_IOCCF0_SetInterruptHandler
 15751  0CDE                     l4146:
 15752                           
 15753                           ;mcc_generated_files/pin_manager.c: 130:     IOCCF2_SetInterruptHandler(IOCCF2_DefaultIn
      +                          terruptHandler);
 15754  0CDE  3074               	movlw	low _IOCCF2_DefaultInterruptHandler
 15755  0CDF  0140               	movlb	0	; select bank0
 15756  0CE0  00A6               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler
 15757  0CE1  3014               	movlw	high _IOCCF2_DefaultInterruptHandler
 15758  0CE2  00A7               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler+1
 15759  0CE3  3195  2508  318C   	fcall	_IOCCF2_SetInterruptHandler
 15760  0CE6                     l4148:
 15761                           
 15762                           ;mcc_generated_files/pin_manager.c: 133:     PIE0bits.IOCIE = 1;
 15763  0CE6  014E               	movlb	14	; select bank14
 15764  0CE7  1616               	bsf	22,4	;volatile
 15765                           
 15766                           ;mcc_generated_files/pin_manager.c: 136:     RC4PPS = 0x0F;
 15767  0CE8  300F               	movlw	15
 15768  0CE9  017E               	movlb	62	; select bank62
 15769  0CEA  00A4               	movwf	36	;volatile
 15770                           
 15771                           ;mcc_generated_files/pin_manager.c: 137:     RX1DTPPS = 0x15;
 15772  0CEB  3015               	movlw	21
 15773  0CEC  017D               	movlb	61	; select bank61
 15774  0CED  00CB               	movwf	75	;volatile
 15775  0CEE                     l421:
 15776  0CEE  0008               	return
 15777  0CEF                     __end_of_PIN_MANAGER_Initialize:
 15778                           
 15779                           	psect	text68
 15780  1508                     __ptext68:	
 15781 ;; *************** function _IOCCF2_SetInterruptHandler *****************
 15782 ;; Defined at:
 15783 ;;		line 202 in file "mcc_generated_files/pin_manager.c"
 15784 ;; Parameters:    Size  Location     Type
 15785 ;;  InterruptHan    2    6[BANK0 ] PTR FTN()void 
 15786 ;;		 -> turnPowerOn(1), IOCCF2_DefaultInterruptHandler(1), 
 15787 ;; Auto vars:     Size  Location     Type
 15788 ;;		None
 15789 ;; Return value:  Size  Location     Type
 15790 ;;                  1    wreg      void 
 15791 ;; Registers used:
 15792 ;;		wreg
 15793 ;; Tracked objects:
 15794 ;;		On entry : 0/0
 15795 ;;		On exit  : 0/0
 15796 ;;		Unchanged: 0/0
 15797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15798 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15801 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15802 ;;Total ram usage:        2 bytes
 15803 ;; Hardware stack levels used:    1
 15804 ;; Hardware stack levels required when called:    7
 15805 ;; This function calls:
 15806 ;;		Nothing
 15807 ;; This function is called by:
 15808 ;;		_PIN_MANAGER_Initialize
 15809 ;;		_initUI
 15810 ;; This function uses a non-reentrant model
 15811 ;;
 15812                           
 15813                           
 15814                           ;psect for function _IOCCF2_SetInterruptHandler
 15815  1508                     _IOCCF2_SetInterruptHandler:
 15816  1508                     l3760:	
 15817                           ;incstack = 0
 15818                           ; Regs used in _IOCCF2_SetInterruptHandler: [wreg]
 15819                           
 15820                           
 15821                           ;mcc_generated_files/pin_manager.c: 203:     IOCCF2_InterruptHandler = InterruptHandler;
 15822  1508  0140               	movlb	0	; select bank0
 15823  1509  0827               	movf	IOCCF2_SetInterruptHandler@InterruptHandler+1,w
 15824  150A  0141               	movlb	1	; select bank1
 15825  150B  00C7               	movwf	(_IOCCF2_InterruptHandler+1)^(0+128)
 15826  150C  0140               	movlb	0	; select bank0
 15827  150D  0826               	movf	IOCCF2_SetInterruptHandler@InterruptHandler,w
 15828  150E  0141               	movlb	1	; select bank1
 15829  150F  00C6               	movwf	_IOCCF2_InterruptHandler^(0+128)
 15830  1510                     l443:
 15831  1510  0008               	return
 15832  1511                     __end_of_IOCCF2_SetInterruptHandler:
 15833                           
 15834                           	psect	text69
 15835  14FF                     __ptext69:	
 15836 ;; *************** function _IOCCF0_SetInterruptHandler *****************
 15837 ;; Defined at:
 15838 ;;		line 172 in file "mcc_generated_files/pin_manager.c"
 15839 ;; Parameters:    Size  Location     Type
 15840 ;;  InterruptHan    2    6[BANK0 ] PTR FTN()void 
 15841 ;;		 -> turnPowerOn(1), IOCCF0_DefaultInterruptHandler(1), 
 15842 ;; Auto vars:     Size  Location     Type
 15843 ;;		None
 15844 ;; Return value:  Size  Location     Type
 15845 ;;                  1    wreg      void 
 15846 ;; Registers used:
 15847 ;;		wreg
 15848 ;; Tracked objects:
 15849 ;;		On entry : 0/0
 15850 ;;		On exit  : 0/0
 15851 ;;		Unchanged: 0/0
 15852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15853 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15856 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15857 ;;Total ram usage:        2 bytes
 15858 ;; Hardware stack levels used:    1
 15859 ;; Hardware stack levels required when called:    7
 15860 ;; This function calls:
 15861 ;;		Nothing
 15862 ;; This function is called by:
 15863 ;;		_PIN_MANAGER_Initialize
 15864 ;;		_initUI
 15865 ;; This function uses a non-reentrant model
 15866 ;;
 15867                           
 15868                           
 15869                           ;psect for function _IOCCF0_SetInterruptHandler
 15870  14FF                     _IOCCF0_SetInterruptHandler:
 15871  14FF                     l3758:	
 15872                           ;incstack = 0
 15873                           ; Regs used in _IOCCF0_SetInterruptHandler: [wreg]
 15874                           
 15875                           
 15876                           ;mcc_generated_files/pin_manager.c: 173:     IOCCF0_InterruptHandler = InterruptHandler;
 15877  14FF  0140               	movlb	0	; select bank0
 15878  1500  0827               	movf	IOCCF0_SetInterruptHandler@InterruptHandler+1,w
 15879  1501  0141               	movlb	1	; select bank1
 15880  1502  00C9               	movwf	(_IOCCF0_InterruptHandler+1)^(0+128)
 15881  1503  0140               	movlb	0	; select bank0
 15882  1504  0826               	movf	IOCCF0_SetInterruptHandler@InterruptHandler,w
 15883  1505  0141               	movlb	1	; select bank1
 15884  1506  00C8               	movwf	_IOCCF0_InterruptHandler^(0+128)
 15885  1507                     l433:
 15886  1507  0008               	return
 15887  1508                     __end_of_IOCCF0_SetInterruptHandler:
 15888                           
 15889                           	psect	text70
 15890  14F6                     __ptext70:	
 15891 ;; *************** function _OSCILLATOR_Initialize *****************
 15892 ;; Defined at:
 15893 ;;		line 61 in file "mcc_generated_files/mcc.c"
 15894 ;; Parameters:    Size  Location     Type
 15895 ;;		None
 15896 ;; Auto vars:     Size  Location     Type
 15897 ;;		None
 15898 ;; Return value:  Size  Location     Type
 15899 ;;                  1    wreg      void 
 15900 ;; Registers used:
 15901 ;;		wreg, status,2
 15902 ;; Tracked objects:
 15903 ;;		On entry : 0/0
 15904 ;;		On exit  : 0/0
 15905 ;;		Unchanged: 0/0
 15906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15911 ;;Total ram usage:        0 bytes
 15912 ;; Hardware stack levels used:    1
 15913 ;; Hardware stack levels required when called:    7
 15914 ;; This function calls:
 15915 ;;		Nothing
 15916 ;; This function is called by:
 15917 ;;		_SYSTEM_Initialize
 15918 ;; This function uses a non-reentrant model
 15919 ;;
 15920                           
 15921                           
 15922                           ;psect for function _OSCILLATOR_Initialize
 15923  14F6                     _OSCILLATOR_Initialize:
 15924  14F6                     l4150:	
 15925                           ;incstack = 0
 15926                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 15927                           
 15928                           
 15929                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
 15930  14F6  3060               	movlw	96
 15931  14F7  0151               	movlb	17	; select bank17
 15932  14F8  008D               	movwf	13	;volatile
 15933  14F9                     l4152:
 15934                           
 15935                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
 15936  14F9  018F               	clrf	15	;volatile
 15937  14FA                     l4154:
 15938                           
 15939                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
 15940  14FA  0191               	clrf	17	;volatile
 15941                           
 15942                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x05;
 15943  14FB  3005               	movlw	5
 15944  14FC  0093               	movwf	19	;volatile
 15945  14FD                     l4156:
 15946                           
 15947                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
 15948  14FD  0192               	clrf	18	;volatile
 15949  14FE                     l345:
 15950  14FE  0008               	return
 15951  14FF                     __end_of_OSCILLATOR_Initialize:
 15952                           
 15953                           	psect	text71
 15954  0C1E                     __ptext71:	
 15955 ;; *************** function _EUSART1_Initialize *****************
 15956 ;; Defined at:
 15957 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 15958 ;; Parameters:    Size  Location     Type
 15959 ;;		None
 15960 ;; Auto vars:     Size  Location     Type
 15961 ;;		None
 15962 ;; Return value:  Size  Location     Type
 15963 ;;                  1    wreg      void 
 15964 ;; Registers used:
 15965 ;;		wreg, status,2, status,0, pclath, cstack
 15966 ;; Tracked objects:
 15967 ;;		On entry : 0/0
 15968 ;;		On exit  : 0/0
 15969 ;;		Unchanged: 0/0
 15970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15973 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15974 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15975 ;;Total ram usage:        1 bytes
 15976 ;; Hardware stack levels used:    1
 15977 ;; Hardware stack levels required when called:    8
 15978 ;; This function calls:
 15979 ;;		_EUSART1_SetErrorHandler
 15980 ;;		_EUSART1_SetFramingErrorHandler
 15981 ;;		_EUSART1_SetOverrunErrorHandler
 15982 ;;		_EUSART1_SetRxInterruptHandler
 15983 ;;		_EUSART1_SetTxInterruptHandler
 15984 ;; This function is called by:
 15985 ;;		_SYSTEM_Initialize
 15986 ;; This function uses a non-reentrant model
 15987 ;;
 15988                           
 15989                           
 15990                           ;psect for function _EUSART1_Initialize
 15991  0C1E                     _EUSART1_Initialize:
 15992  0C1E                     l4076:	
 15993                           ;incstack = 0
 15994                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15995                           
 15996                           
 15997                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 15998  0C1E  014E               	movlb	14	; select bank14
 15999  0C1F  1299               	bcf	25,5	;volatile
 16000  0C20                     l4078:
 16001                           
 16002                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 16003  0C20  30DD               	movlw	low _EUSART1_Receive_ISR
 16004  0C21  0140               	movlb	0	; select bank0
 16005  0C22  00A6               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 16006  0C23  300B               	movlw	high _EUSART1_Receive_ISR
 16007  0C24  00A7               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 16008  0C25  3194  24E4  318C   	fcall	_EUSART1_SetRxInterruptHandler
 16009  0C28                     l4080:
 16010                           
 16011                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 16012  0C28  014E               	movlb	14	; select bank14
 16013  0C29  1219               	bcf	25,4	;volatile
 16014                           
 16015                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 16016  0C2A  30F2               	movlw	low _EUSART1_Transmit_ISR
 16017  0C2B  0140               	movlb	0	; select bank0
 16018  0C2C  00A6               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
 16019  0C2D  3008               	movlw	high _EUSART1_Transmit_ISR
 16020  0C2E  00A7               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
 16021  0C2F  3194  24ED  318C   	fcall	_EUSART1_SetTxInterruptHandler
 16022  0C32                     l4082:
 16023                           
 16024                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 16025  0C32  3008               	movlw	8
 16026  0C33  0142               	movlb	2	; select bank2
 16027  0C34  009F               	movwf	31	;volatile
 16028  0C35                     l4084:
 16029                           
 16030                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 16031  0C35  3090               	movlw	144
 16032  0C36  009D               	movwf	29	;volatile
 16033  0C37                     l4086:
 16034                           
 16035                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 16036  0C37  3024               	movlw	36
 16037  0C38  009E               	movwf	30	;volatile
 16038  0C39                     l4088:
 16039                           
 16040                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x67;
 16041  0C39  3067               	movlw	103
 16042  0C3A  009B               	movwf	27	;volatile
 16043  0C3B                     l4090:
 16044                           
 16045                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x00;
 16046  0C3B  019C               	clrf	28	;volatile
 16047  0C3C                     l4092:
 16048                           
 16049                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 16050  0C3C  3073               	movlw	low _EUSART1_DefaultFramingErrorHandler
 16051  0C3D  0140               	movlb	0	; select bank0
 16052  0C3E  00A6               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 16053  0C3F  3014               	movlw	high _EUSART1_DefaultFramingErrorHandler
 16054  0C40  00A7               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 16055  0C41  3194  24D2  318C   	fcall	_EUSART1_SetFramingErrorHandler
 16056  0C44                     l4094:
 16057                           
 16058                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 16059  0C44  307F               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 16060  0C45  0140               	movlb	0	; select bank0
 16061  0C46  00A6               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 16062  0C47  3014               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 16063  0C48  00A7               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 16064  0C49  3194  24DB  318C   	fcall	_EUSART1_SetOverrunErrorHandler
 16065  0C4C                     l4096:
 16066                           
 16067                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 16068  0C4C  307B               	movlw	low _EUSART1_DefaultErrorHandler
 16069  0C4D  0140               	movlb	0	; select bank0
 16070  0C4E  00A6               	movwf	EUSART1_SetErrorHandler@interruptHandler
 16071  0C4F  3014               	movlw	high _EUSART1_DefaultErrorHandler
 16072  0C50  00A7               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 16073  0C51  3194  24C9  318C   	fcall	_EUSART1_SetErrorHandler
 16074                           
 16075                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 16076  0C54  0140               	movlb	0	; select bank0
 16077  0C55  01DC               	clrf	_eusart1RxLastError	;volatile
 16078                           
 16079                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 16080  0C56  01E1               	clrf	_eusart1TxHead	;volatile
 16081                           
 16082                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 16083  0C57  01E0               	clrf	_eusart1TxTail	;volatile
 16084  0C58                     l4098:
 16085                           
 16086                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 16087  0C58  3020               	movlw	32
 16088  0C59  00A8               	movwf	??_EUSART1_Initialize
 16089  0C5A  0828               	movf	??_EUSART1_Initialize,w
 16090  0C5B  00E8               	movwf	_eusart1TxBufferRemaining	;volatile
 16091  0C5C                     l4100:
 16092                           
 16093                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 16094  0C5C  01DF               	clrf	_eusart1RxHead	;volatile
 16095  0C5D                     l4102:
 16096                           
 16097                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 16098  0C5D  01DE               	clrf	_eusart1RxTail	;volatile
 16099  0C5E                     l4104:
 16100                           
 16101                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 16102  0C5E  01DD               	clrf	_eusart1RxCount	;volatile
 16103  0C5F                     l4106:
 16104                           
 16105                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 16106  0C5F  014E               	movlb	14	; select bank14
 16107  0C60  1699               	bsf	25,5	;volatile
 16108  0C61                     l230:
 16109  0C61  0008               	return
 16110  0C62                     __end_of_EUSART1_Initialize:
 16111                           
 16112                           	psect	text72
 16113  14ED                     __ptext72:	
 16114 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 16115 ;; Defined at:
 16116 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 16117 ;; Parameters:    Size  Location     Type
 16118 ;;  interruptHan    2    6[BANK0 ] PTR FTN()void 
 16119 ;;		 -> EUSART1_Transmit_ISR(1), 
 16120 ;; Auto vars:     Size  Location     Type
 16121 ;;		None
 16122 ;; Return value:  Size  Location     Type
 16123 ;;                  1    wreg      void 
 16124 ;; Registers used:
 16125 ;;		wreg
 16126 ;; Tracked objects:
 16127 ;;		On entry : 0/0
 16128 ;;		On exit  : 0/0
 16129 ;;		Unchanged: 0/0
 16130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16131 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16134 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16135 ;;Total ram usage:        2 bytes
 16136 ;; Hardware stack levels used:    1
 16137 ;; Hardware stack levels required when called:    7
 16138 ;; This function calls:
 16139 ;;		Nothing
 16140 ;; This function is called by:
 16141 ;;		_EUSART1_Initialize
 16142 ;; This function uses a non-reentrant model
 16143 ;;
 16144                           
 16145                           
 16146                           ;psect for function _EUSART1_SetTxInterruptHandler
 16147  14ED                     _EUSART1_SetTxInterruptHandler:
 16148  14ED                     l3740:	
 16149                           ;incstack = 0
 16150                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
 16151                           
 16152                           
 16153                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 16154  14ED  0140               	movlb	0	; select bank0
 16155  14EE  0827               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
 16156  14EF  0141               	movlb	1	; select bank1
 16157  14F0  00D3               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+128)
 16158  14F1  0140               	movlb	0	; select bank0
 16159  14F2  0826               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
 16160  14F3  0141               	movlb	1	; select bank1
 16161  14F4  00D2               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+128)
 16162  14F5                     l296:
 16163  14F5  0008               	return
 16164  14F6                     __end_of_EUSART1_SetTxInterruptHandler:
 16165                           
 16166                           	psect	text73
 16167  14E4                     __ptext73:	
 16168 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 16169 ;; Defined at:
 16170 ;;		line 280 in file "mcc_generated_files/eusart1.c"
 16171 ;; Parameters:    Size  Location     Type
 16172 ;;  interruptHan    2    6[BANK0 ] PTR FTN()void 
 16173 ;;		 -> EUSART1_Receive_ISR(1), 
 16174 ;; Auto vars:     Size  Location     Type
 16175 ;;		None
 16176 ;; Return value:  Size  Location     Type
 16177 ;;                  1    wreg      void 
 16178 ;; Registers used:
 16179 ;;		wreg
 16180 ;; Tracked objects:
 16181 ;;		On entry : 0/0
 16182 ;;		On exit  : 0/0
 16183 ;;		Unchanged: 0/0
 16184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16185 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16188 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16189 ;;Total ram usage:        2 bytes
 16190 ;; Hardware stack levels used:    1
 16191 ;; Hardware stack levels required when called:    7
 16192 ;; This function calls:
 16193 ;;		Nothing
 16194 ;; This function is called by:
 16195 ;;		_EUSART1_Initialize
 16196 ;; This function uses a non-reentrant model
 16197 ;;
 16198                           
 16199                           
 16200                           ;psect for function _EUSART1_SetRxInterruptHandler
 16201  14E4                     _EUSART1_SetRxInterruptHandler:
 16202  14E4                     l3738:	
 16203                           ;incstack = 0
 16204                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 16205                           
 16206                           
 16207                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 16208  14E4  0140               	movlb	0	; select bank0
 16209  14E5  0827               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 16210  14E6  0141               	movlb	1	; select bank1
 16211  14E7  00D1               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+128)
 16212  14E8  0140               	movlb	0	; select bank0
 16213  14E9  0826               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 16214  14EA  0141               	movlb	1	; select bank1
 16215  14EB  00D0               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+128)
 16216  14EC                     l299:
 16217  14EC  0008               	return
 16218  14ED                     __end_of_EUSART1_SetRxInterruptHandler:
 16219                           
 16220                           	psect	text74
 16221  14DB                     __ptext74:	
 16222 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 16223 ;; Defined at:
 16224 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 16225 ;; Parameters:    Size  Location     Type
 16226 ;;  interruptHan    2    6[BANK0 ] PTR FTN()void 
 16227 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 16228 ;; Auto vars:     Size  Location     Type
 16229 ;;		None
 16230 ;; Return value:  Size  Location     Type
 16231 ;;                  1    wreg      void 
 16232 ;; Registers used:
 16233 ;;		wreg
 16234 ;; Tracked objects:
 16235 ;;		On entry : 0/0
 16236 ;;		On exit  : 0/0
 16237 ;;		Unchanged: 0/0
 16238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16239 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16242 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16243 ;;Total ram usage:        2 bytes
 16244 ;; Hardware stack levels used:    1
 16245 ;; Hardware stack levels required when called:    7
 16246 ;; This function calls:
 16247 ;;		Nothing
 16248 ;; This function is called by:
 16249 ;;		_EUSART1_Initialize
 16250 ;; This function uses a non-reentrant model
 16251 ;;
 16252                           
 16253                           
 16254                           ;psect for function _EUSART1_SetOverrunErrorHandler
 16255  14DB                     _EUSART1_SetOverrunErrorHandler:
 16256  14DB                     l3744:	
 16257                           ;incstack = 0
 16258                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 16259                           
 16260                           
 16261                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
 16262  14DB  0140               	movlb	0	; select bank0
 16263  14DC  0827               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 16264  14DD  0141               	movlb	1	; select bank1
 16265  14DE  00CD               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+128)
 16266  14DF  0140               	movlb	0	; select bank0
 16267  14E0  0826               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 16268  14E1  0141               	movlb	1	; select bank1
 16269  14E2  00CC               	movwf	_EUSART1_OverrunErrorHandler^(0+128)
 16270  14E3                     l290:
 16271  14E3  0008               	return
 16272  14E4                     __end_of_EUSART1_SetOverrunErrorHandler:
 16273                           
 16274                           	psect	text75
 16275  14D2                     __ptext75:	
 16276 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 16277 ;; Defined at:
 16278 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 16279 ;; Parameters:    Size  Location     Type
 16280 ;;  interruptHan    2    6[BANK0 ] PTR FTN()void 
 16281 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 16282 ;; Auto vars:     Size  Location     Type
 16283 ;;		None
 16284 ;; Return value:  Size  Location     Type
 16285 ;;                  1    wreg      void 
 16286 ;; Registers used:
 16287 ;;		wreg
 16288 ;; Tracked objects:
 16289 ;;		On entry : 0/0
 16290 ;;		On exit  : 0/0
 16291 ;;		Unchanged: 0/0
 16292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16293 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16296 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16297 ;;Total ram usage:        2 bytes
 16298 ;; Hardware stack levels used:    1
 16299 ;; Hardware stack levels required when called:    7
 16300 ;; This function calls:
 16301 ;;		Nothing
 16302 ;; This function is called by:
 16303 ;;		_EUSART1_Initialize
 16304 ;; This function uses a non-reentrant model
 16305 ;;
 16306                           
 16307                           
 16308                           ;psect for function _EUSART1_SetFramingErrorHandler
 16309  14D2                     _EUSART1_SetFramingErrorHandler:
 16310  14D2                     l3742:	
 16311                           ;incstack = 0
 16312                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 16313                           
 16314                           
 16315                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
 16316  14D2  0140               	movlb	0	; select bank0
 16317  14D3  0827               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 16318  14D4  0141               	movlb	1	; select bank1
 16319  14D5  00CF               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+128)
 16320  14D6  0140               	movlb	0	; select bank0
 16321  14D7  0826               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 16322  14D8  0141               	movlb	1	; select bank1
 16323  14D9  00CE               	movwf	_EUSART1_FramingErrorHandler^(0+128)
 16324  14DA                     l287:
 16325  14DA  0008               	return
 16326  14DB                     __end_of_EUSART1_SetFramingErrorHandler:
 16327                           
 16328                           	psect	text76
 16329  14C9                     __ptext76:	
 16330 ;; *************** function _EUSART1_SetErrorHandler *****************
 16331 ;; Defined at:
 16332 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 16333 ;; Parameters:    Size  Location     Type
 16334 ;;  interruptHan    2    6[BANK0 ] PTR FTN()void 
 16335 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 16336 ;; Auto vars:     Size  Location     Type
 16337 ;;		None
 16338 ;; Return value:  Size  Location     Type
 16339 ;;                  1    wreg      void 
 16340 ;; Registers used:
 16341 ;;		wreg
 16342 ;; Tracked objects:
 16343 ;;		On entry : 0/0
 16344 ;;		On exit  : 0/0
 16345 ;;		Unchanged: 0/0
 16346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16347 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16350 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16351 ;;Total ram usage:        2 bytes
 16352 ;; Hardware stack levels used:    1
 16353 ;; Hardware stack levels required when called:    7
 16354 ;; This function calls:
 16355 ;;		Nothing
 16356 ;; This function is called by:
 16357 ;;		_EUSART1_Initialize
 16358 ;; This function uses a non-reentrant model
 16359 ;;
 16360                           
 16361                           
 16362                           ;psect for function _EUSART1_SetErrorHandler
 16363  14C9                     _EUSART1_SetErrorHandler:
 16364  14C9                     l3746:	
 16365                           ;incstack = 0
 16366                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 16367                           
 16368                           
 16369                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
 16370  14C9  0140               	movlb	0	; select bank0
 16371  14CA  0827               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 16372  14CB  0141               	movlb	1	; select bank1
 16373  14CC  00CB               	movwf	(_EUSART1_ErrorHandler+1)^(0+128)
 16374  14CD  0140               	movlb	0	; select bank0
 16375  14CE  0826               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 16376  14CF  0141               	movlb	1	; select bank1
 16377  14D0  00CA               	movwf	_EUSART1_ErrorHandler^(0+128)
 16378  14D1                     l293:
 16379  14D1  0008               	return
 16380  14D2                     __end_of_EUSART1_SetErrorHandler:
 16381                           
 16382                           	psect	intentry
 16383  0004                     __pintentry:	
 16384 ;; *************** function _INTERRUPT_InterruptManager *****************
 16385 ;; Defined at:
 16386 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16387 ;; Parameters:    Size  Location     Type
 16388 ;;		None
 16389 ;; Auto vars:     Size  Location     Type
 16390 ;;		None
 16391 ;; Return value:  Size  Location     Type
 16392 ;;                  1    wreg      void 
 16393 ;; Registers used:
 16394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16395 ;; Tracked objects:
 16396 ;;		On entry : 0/0
 16397 ;;		On exit  : 0/0
 16398 ;;		Unchanged: 0/0
 16399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16404 ;;Total ram usage:        0 bytes
 16405 ;; Hardware stack levels used:    1
 16406 ;; Hardware stack levels required when called:    6
 16407 ;; This function calls:
 16408 ;;		Absolute function
 16409 ;;		_EUSART1_Receive_ISR
 16410 ;;		_EUSART1_Transmit_ISR
 16411 ;;		_PIN_MANAGER_IOC
 16412 ;;		_TMR1_ISR
 16413 ;;		_TMR2_ISR
 16414 ;;		_TMR3_ISR
 16415 ;; This function is called by:
 16416 ;;		Interrupt level 1
 16417 ;; This function uses a non-reentrant model
 16418 ;;
 16419                           
 16420  0004                     _INTERRUPT_InterruptManager:
 16421                           
 16422                           ;incstack = 0
 16423  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 16424                           
 16425                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16426  0005  3180               	pagesel	$
 16427  0006                     i1l4640:
 16428                           
 16429                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 16430  0006  014E               	movlb	14	; select bank14
 16431  0007  1E16               	btfss	22,4	;volatile
 16432  0008  280A               	goto	u318_21
 16433  0009  280B               	goto	u318_20
 16434  000A                     u318_21:
 16435  000A  2813               	goto	i1l546
 16436  000B                     u318_20:
 16437  000B                     i1l4642:
 16438  000B  1E0C               	btfss	12,4	;volatile
 16439  000C  280E               	goto	u319_21
 16440  000D  280F               	goto	u319_20
 16441  000E                     u319_21:
 16442  000E  2813               	goto	i1l546
 16443  000F                     u319_20:
 16444  000F                     i1l4644:
 16445                           
 16446                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 16447  000F  3196  261C  3180   	fcall	_PIN_MANAGER_IOC
 16448                           
 16449                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 16450  0012  2859               	goto	i1l558
 16451  0013                     i1l546:	
 16452                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 16453                           
 16454  0013  1F0B               	btfss	11,6	;volatile
 16455  0014  2816               	goto	u320_21
 16456  0015  2817               	goto	u320_20
 16457  0016                     u320_21:
 16458  0016  2859               	goto	i1l558
 16459  0017                     u320_20:
 16460  0017                     i1l4646:
 16461                           
 16462                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE4bits.TMR3IE == 1 && PIR4bits.TMR3IF == 1)
 16463  0017  1D1A               	btfss	26,2	;volatile
 16464  0018  281A               	goto	u321_21
 16465  0019  281B               	goto	u321_20
 16466  001A                     u321_21:
 16467  001A  2823               	goto	i1l549
 16468  001B                     u321_20:
 16469  001B                     i1l4648:
 16470  001B  1D10               	btfss	16,2	;volatile
 16471  001C  281E               	goto	u322_21
 16472  001D  281F               	goto	u322_20
 16473  001E                     u322_21:
 16474  001E  2823               	goto	i1l549
 16475  001F                     u322_20:
 16476  001F                     i1l4650:
 16477                           
 16478                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR3_ISR();
 16479  001F  3195  25D1  3180   	fcall	_TMR3_ISR
 16480                           
 16481                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 16482  0022  2859               	goto	i1l558
 16483  0023                     i1l549:	
 16484                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
 16485                           
 16486  0023  1C9A               	btfss	26,1	;volatile
 16487  0024  2826               	goto	u323_21
 16488  0025  2827               	goto	u323_20
 16489  0026                     u323_21:
 16490  0026  282F               	goto	i1l551
 16491  0027                     u323_20:
 16492  0027                     i1l4652:
 16493  0027  1C90               	btfss	16,1	;volatile
 16494  0028  282A               	goto	u324_21
 16495  0029  282B               	goto	u324_20
 16496  002A                     u324_21:
 16497  002A  282F               	goto	i1l551
 16498  002B                     u324_20:
 16499  002B                     i1l4654:
 16500                           
 16501                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR2_ISR();
 16502  002B  3194  2491  3180   	fcall	_TMR2_ISR
 16503                           
 16504                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 16505  002E  2859               	goto	i1l558
 16506  002F                     i1l551:	
 16507                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
 16508                           
 16509  002F  1C1A               	btfss	26,0	;volatile
 16510  0030  2832               	goto	u325_21
 16511  0031  2833               	goto	u325_20
 16512  0032                     u325_21:
 16513  0032  283B               	goto	i1l553
 16514  0033                     u325_20:
 16515  0033                     i1l4656:
 16516  0033  1C10               	btfss	16,0	;volatile
 16517  0034  2836               	goto	u326_21
 16518  0035  2837               	goto	u326_20
 16519  0036                     u326_21:
 16520  0036  283B               	goto	i1l553
 16521  0037                     u326_20:
 16522  0037                     i1l4658:
 16523                           
 16524                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             TMR1_ISR();
 16525  0037  3195  25C3  3180   	fcall	_TMR1_ISR
 16526                           
 16527                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 16528  003A  2859               	goto	i1l558
 16529  003B                     i1l553:	
 16530                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 16531                           
 16532  003B  1E99               	btfss	25,5	;volatile
 16533  003C  283E               	goto	u327_21
 16534  003D  283F               	goto	u327_20
 16535  003E                     u327_21:
 16536  003E  284A               	goto	i1l555
 16537  003F                     u327_20:
 16538  003F                     i1l4660:
 16539  003F  1E8F               	btfss	15,5	;volatile
 16540  0040  2842               	goto	u328_21
 16541  0041  2843               	goto	u328_20
 16542  0042                     u328_21:
 16543  0042  284A               	goto	i1l555
 16544  0043                     u328_20:
 16545  0043                     i1l4662:
 16546                           
 16547                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 16548  0043  0141               	movlb	1	; select bank1
 16549  0044  0851               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+128),w
 16550  0045  008A               	movwf	10
 16551  0046  0850               	movf	_EUSART1_RxDefaultInterruptHandler^(0+128),w
 16552  0047  000A               	callw
 16553  0048  3180               	pagesel	$
 16554                           
 16555                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 16556  0049  2859               	goto	i1l558
 16557  004A                     i1l555:	
 16558                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 16559                           
 16560  004A  1E19               	btfss	25,4	;volatile
 16561  004B  284D               	goto	u329_21
 16562  004C  284E               	goto	u329_20
 16563  004D                     u329_21:
 16564  004D  2859               	goto	i1l552
 16565  004E                     u329_20:
 16566  004E                     i1l4664:
 16567  004E  1E0F               	btfss	15,4	;volatile
 16568  004F  2851               	goto	u330_21
 16569  0050  2852               	goto	u330_20
 16570  0051                     u330_21:
 16571  0051  2859               	goto	i1l552
 16572  0052                     u330_20:
 16573  0052                     i1l4666:
 16574                           
 16575                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             EUSART1_TxDefaultInterruptHandler();
 16576  0052  0141               	movlb	1	; select bank1
 16577  0053  0853               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+128),w
 16578  0054  008A               	movwf	10
 16579  0055  0852               	movf	_EUSART1_TxDefaultInterruptHandler^(0+128),w
 16580  0056  000A               	callw
 16581  0057  3180               	pagesel	$
 16582  0058  2859               	goto	i1l558
 16583  0059                     i1l552:
 16584  0059                     i1l558:
 16585  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 16586  005A  0009               	retfie
 16587  005B                     __end_of_INTERRUPT_InterruptManager:
 16588                           
 16589                           	psect	text78
 16590  15D1                     __ptext78:	
 16591 ;; *************** function _TMR3_ISR *****************
 16592 ;; Defined at:
 16593 ;;		line 164 in file "mcc_generated_files/tmr3.c"
 16594 ;; Parameters:    Size  Location     Type
 16595 ;;		None
 16596 ;; Auto vars:     Size  Location     Type
 16597 ;;		None
 16598 ;; Return value:  Size  Location     Type
 16599 ;;                  1    wreg      void 
 16600 ;; Registers used:
 16601 ;;		wreg, status,2, status,0, pclath, cstack
 16602 ;; Tracked objects:
 16603 ;;		On entry : 0/0
 16604 ;;		On exit  : 0/0
 16605 ;;		Unchanged: 0/0
 16606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16611 ;;Total ram usage:        0 bytes
 16612 ;; Hardware stack levels used:    1
 16613 ;; Hardware stack levels required when called:    2
 16614 ;; This function calls:
 16615 ;;		_TMR3_CallBack
 16616 ;;		_TMR3_WriteTimer
 16617 ;; This function is called by:
 16618 ;;		_INTERRUPT_InterruptManager
 16619 ;; This function uses a non-reentrant model
 16620 ;;
 16621                           
 16622                           
 16623                           ;psect for function _TMR3_ISR
 16624  15D1                     _TMR3_ISR:
 16625  15D1                     i1l4426:	
 16626                           ;incstack = 0
 16627                           ; Regs used in _TMR3_ISR: [wreg+status,2+status,0+pclath+cstack]
 16628                           
 16629                           
 16630                           ;mcc_generated_files/tmr3.c: 168:     PIR4bits.TMR3IF = 0;
 16631  15D1  014E               	movlb	14	; select bank14
 16632  15D2  1110               	bcf	16,2	;volatile
 16633  15D3                     i1l4428:
 16634                           
 16635                           ;mcc_generated_files/tmr3.c: 169:     TMR3_WriteTimer(timer3ReloadVal);
 16636  15D3  0141               	movlb	1	; select bank1
 16637  15D4  0845               	movf	(_timer3ReloadVal+1)^(0+128),w	;volatile
 16638  15D5  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 16639  15D6  0844               	movf	_timer3ReloadVal^(0+128),w	;volatile
 16640  15D7  00F0               	movwf	TMR3_WriteTimer@timerVal
 16641  15D8  3196  264F  3195   	fcall	_TMR3_WriteTimer
 16642                           
 16643                           ;mcc_generated_files/tmr3.c: 173:     TMR3_CallBack();
 16644  15DB  3195  25A9  3195   	fcall	_TMR3_CallBack
 16645  15DE                     i1l505:
 16646  15DE  0008               	return
 16647  15DF                     __end_of_TMR3_ISR:
 16648                           
 16649                           	psect	text79
 16650  164F                     __ptext79:	
 16651 ;; *************** function _TMR3_WriteTimer *****************
 16652 ;; Defined at:
 16653 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 16654 ;; Parameters:    Size  Location     Type
 16655 ;;  timerVal        2    0[COMMON] unsigned short 
 16656 ;; Auto vars:     Size  Location     Type
 16657 ;;		None
 16658 ;; Return value:  Size  Location     Type
 16659 ;;                  1    wreg      void 
 16660 ;; Registers used:
 16661 ;;		wreg, status,2
 16662 ;; Tracked objects:
 16663 ;;		On entry : 0/0
 16664 ;;		On exit  : 0/0
 16665 ;;		Unchanged: 0/0
 16666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16667 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16670 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16671 ;;Total ram usage:        2 bytes
 16672 ;; Hardware stack levels used:    1
 16673 ;; This function calls:
 16674 ;;		Nothing
 16675 ;; This function is called by:
 16676 ;;		_TMR3_ISR
 16677 ;;		_TMR3_Reload
 16678 ;; This function uses a non-reentrant model
 16679 ;;
 16680                           
 16681                           
 16682                           ;psect for function _TMR3_WriteTimer
 16683  164F                     _TMR3_WriteTimer:
 16684  164F                     i1l4188:	
 16685                           ;incstack = 0
 16686                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 16687                           
 16688                           
 16689                           ;mcc_generated_files/tmr3.c: 127: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 128: {;mcc_generated_files/tmr3.c: 129:     if (T3CONbits.NOT_SYNC == 1)
 16690  164F  0144               	movlb	4	; select bank4
 16691  1650  1D14               	btfss	20,2	;volatile
 16692  1651  2E53               	goto	u277_21
 16693  1652  2E54               	goto	u277_20
 16694  1653                     u277_21:
 16695  1653  2E5B               	goto	i1l4198
 16696  1654                     u277_20:
 16697  1654                     i1l4190:
 16698                           
 16699                           ;mcc_generated_files/tmr3.c: 130:     {;mcc_generated_files/tmr3.c: 132:         T3CONbi
      +                          ts.TMR3ON = 0;
 16700  1654  1014               	bcf	20,0	;volatile
 16701  1655                     i1l4192:
 16702                           
 16703                           ;mcc_generated_files/tmr3.c: 135:         TMR3H = (timerVal >> 8);
 16704  1655  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 16705  1656  0093               	movwf	19	;volatile
 16706  1657                     i1l4194:
 16707                           
 16708                           ;mcc_generated_files/tmr3.c: 136:         TMR3L = timerVal;
 16709  1657  0870               	movf	TMR3_WriteTimer@timerVal,w
 16710  1658  0092               	movwf	18	;volatile
 16711  1659                     i1l4196:
 16712                           
 16713                           ;mcc_generated_files/tmr3.c: 139:         T3CONbits.TMR3ON =1;
 16714  1659  1414               	bsf	20,0	;volatile
 16715                           
 16716                           ;mcc_generated_files/tmr3.c: 140:     }
 16717  165A  2E5F               	goto	i1l493
 16718  165B                     i1l4198:
 16719                           
 16720                           ;mcc_generated_files/tmr3.c: 142:     {;mcc_generated_files/tmr3.c: 144:         TMR3H =
      +                           (timerVal >> 8);
 16721  165B  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 16722  165C  0093               	movwf	19	;volatile
 16723  165D                     i1l4200:
 16724                           
 16725                           ;mcc_generated_files/tmr3.c: 145:         TMR3L = timerVal;
 16726  165D  0870               	movf	TMR3_WriteTimer@timerVal,w
 16727  165E  0092               	movwf	18	;volatile
 16728  165F                     i1l493:
 16729  165F  0008               	return
 16730  1660                     __end_of_TMR3_WriteTimer:
 16731                           
 16732                           	psect	text80
 16733  15A9                     __ptext80:	
 16734 ;; *************** function _TMR3_CallBack *****************
 16735 ;; Defined at:
 16736 ;;		line 176 in file "mcc_generated_files/tmr3.c"
 16737 ;; Parameters:    Size  Location     Type
 16738 ;;		None
 16739 ;; Auto vars:     Size  Location     Type
 16740 ;;		None
 16741 ;; Return value:  Size  Location     Type
 16742 ;;                  1    wreg      void 
 16743 ;; Registers used:
 16744 ;;		wreg, status,2, status,0, pclath, cstack
 16745 ;; Tracked objects:
 16746 ;;		On entry : 0/0
 16747 ;;		On exit  : 0/0
 16748 ;;		Unchanged: 0/0
 16749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16754 ;;Total ram usage:        0 bytes
 16755 ;; Hardware stack levels used:    1
 16756 ;; Hardware stack levels required when called:    1
 16757 ;; This function calls:
 16758 ;;		Absolute function
 16759 ;;		_TMR3_DefaultInterruptHandler
 16760 ;;		_UI_PWM_handler
 16761 ;; This function is called by:
 16762 ;;		_TMR3_ISR
 16763 ;; This function uses a non-reentrant model
 16764 ;;
 16765                           
 16766                           
 16767                           ;psect for function _TMR3_CallBack
 16768  15A9                     _TMR3_CallBack:
 16769  15A9                     i1l4202:	
 16770                           ;incstack = 0
 16771                           ; Regs used in _TMR3_CallBack: [wreg+status,2+status,0+pclath+cstack]
 16772                           
 16773                           
 16774                           ;mcc_generated_files/tmr3.c: 179:     if(TMR3_InterruptHandler)
 16775  15A9  0141               	movlb	1	; select bank1
 16776  15AA  0842               	movf	_TMR3_InterruptHandler^(0+128),w
 16777  15AB  0443               	iorwf	(_TMR3_InterruptHandler+1)^(0+128),w
 16778  15AC  1903               	btfsc	3,2
 16779  15AD  2DAF               	goto	u278_21
 16780  15AE  2DB0               	goto	u278_20
 16781  15AF                     u278_21:
 16782  15AF  2DB5               	goto	i1l509
 16783  15B0                     u278_20:
 16784  15B0                     i1l4204:
 16785                           
 16786                           ;mcc_generated_files/tmr3.c: 180:     {;mcc_generated_files/tmr3.c: 181:         TMR3_In
      +                          terruptHandler();
 16787  15B0  0843               	movf	(_TMR3_InterruptHandler+1)^(0+128),w
 16788  15B1  008A               	movwf	10
 16789  15B2  0842               	movf	_TMR3_InterruptHandler^(0+128),w
 16790  15B3  000A               	callw
 16791  15B4  3195               	pagesel	$
 16792  15B5                     i1l509:
 16793  15B5  0008               	return
 16794  15B6                     __end_of_TMR3_CallBack:
 16795                           
 16796                           	psect	text81
 16797  0003                     __ptext81:	
 16798 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 16799 ;; Defined at:
 16800 ;;		line 189 in file "mcc_generated_files/tmr3.c"
 16801 ;; Parameters:    Size  Location     Type
 16802 ;;		None
 16803 ;; Auto vars:     Size  Location     Type
 16804 ;;		None
 16805 ;; Return value:  Size  Location     Type
 16806 ;;                  1    wreg      void 
 16807 ;; Registers used:
 16808 ;;		None
 16809 ;; Tracked objects:
 16810 ;;		On entry : 0/0
 16811 ;;		On exit  : 0/0
 16812 ;;		Unchanged: 0/0
 16813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16818 ;;Total ram usage:        0 bytes
 16819 ;; Hardware stack levels used:    1
 16820 ;; This function calls:
 16821 ;;		Nothing
 16822 ;; This function is called by:
 16823 ;;		_TMR3_Initialize
 16824 ;;		_TMR3_CallBack
 16825 ;; This function uses a non-reentrant model
 16826 ;;
 16827                           
 16828                           
 16829                           ;psect for function _TMR3_DefaultInterruptHandler
 16830  0003                     _TMR3_DefaultInterruptHandler:
 16831  0003                     i1l515:	
 16832                           ;incstack = 0
 16833                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 16834                           
 16835  0003  0008               	return
 16836  0004                     __end_of_TMR3_DefaultInterruptHandler:
 16837                           
 16838                           	psect	text82
 16839  0BA2                     __ptext82:	
 16840 ;; *************** function _UI_PWM_handler *****************
 16841 ;; Defined at:
 16842 ;;		line 235 in file "ui.c"
 16843 ;; Parameters:    Size  Location     Type
 16844 ;;		None
 16845 ;; Auto vars:     Size  Location     Type
 16846 ;;		None
 16847 ;; Return value:  Size  Location     Type
 16848 ;;                  1    wreg      void 
 16849 ;; Registers used:
 16850 ;;		wreg, status,2, status,0
 16851 ;; Tracked objects:
 16852 ;;		On entry : 0/0
 16853 ;;		On exit  : 0/0
 16854 ;;		Unchanged: 0/0
 16855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16858 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16859 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16860 ;;Total ram usage:        1 bytes
 16861 ;; Hardware stack levels used:    1
 16862 ;; This function calls:
 16863 ;;		Nothing
 16864 ;; This function is called by:
 16865 ;;		_initUI
 16866 ;;		_TMR3_CallBack
 16867 ;; This function uses a non-reentrant model
 16868 ;;
 16869                           
 16870                           
 16871                           ;psect for function _UI_PWM_handler
 16872  0BA2                     _UI_PWM_handler:
 16873  0BA2                     i1l3952:	
 16874                           ;incstack = 0
 16875                           ; Regs used in _UI_PWM_handler: [wreg+status,2+status,0]
 16876                           
 16877                           
 16878                           ;ui.c: 239:     dutyCycle = (dutyCycle+1) & 0x0F;
 16879  0BA2  0140               	movlb	0	; select bank0
 16880  0BA3  0850               	movf	_dutyCycle,w
 16881  0BA4  3E01               	addlw	1
 16882  0BA5  390F               	andlw	15
 16883  0BA6  00F0               	movwf	??_UI_PWM_handler
 16884  0BA7  0870               	movf	??_UI_PWM_handler,w
 16885  0BA8  00D0               	movwf	_dutyCycle
 16886                           
 16887                           ;ui.c: 241:     if (dutyCycle == 0){
 16888  0BA9  0850               	movf	_dutyCycle,w
 16889  0BAA  1D03               	btfss	3,2
 16890  0BAB  2BAD               	goto	u254_21
 16891  0BAC  2BAE               	goto	u254_20
 16892  0BAD                     u254_21:
 16893  0BAD  2BC7               	goto	i1l3960
 16894  0BAE                     u254_20:
 16895  0BAE                     i1l3954:
 16896                           
 16897                           ;ui.c: 242:         if (R_LED > 0)
 16898  0BAE  0853               	movf	_R_LED,w
 16899  0BAF  1903               	btfsc	3,2
 16900  0BB0  2BB2               	goto	u255_21
 16901  0BB1  2BB3               	goto	u255_20
 16902  0BB2                     u255_21:
 16903  0BB2  2BB5               	goto	i1l1147
 16904  0BB3                     u255_20:
 16905  0BB3                     i1l1144:	
 16906                           ;ui.c: 243:             do { LATBbits.LATB6 = 0; } while(0);
 16907                           
 16908  0BB3  1319               	bcf	25,6	;volatile
 16909  0BB4  2BB6               	goto	i1l3956
 16910  0BB5                     i1l1147:	
 16911                           ;ui.c: 245:             do { LATBbits.LATB6 = 1; } while(0);
 16912                           
 16913  0BB5  1719               	bsf	25,6	;volatile
 16914  0BB6                     i1l3956:
 16915                           
 16916                           ;ui.c: 247:         if (G_LED > 0)
 16917  0BB6  0852               	movf	_G_LED,w
 16918  0BB7  1903               	btfsc	3,2
 16919  0BB8  2BBA               	goto	u256_21
 16920  0BB9  2BBB               	goto	u256_20
 16921  0BBA                     u256_21:
 16922  0BBA  2BBD               	goto	i1l1153
 16923  0BBB                     u256_20:
 16924  0BBB                     i1l1150:	
 16925                           ;ui.c: 248:             do { LATBbits.LATB5 = 0; } while(0);
 16926                           
 16927  0BBB  1299               	bcf	25,5	;volatile
 16928  0BBC  2BBE               	goto	i1l3958
 16929  0BBD                     i1l1153:	
 16930                           ;ui.c: 250:             do { LATBbits.LATB5 = 1; } while(0);
 16931                           
 16932  0BBD  1699               	bsf	25,5	;volatile
 16933  0BBE                     i1l3958:
 16934                           
 16935                           ;ui.c: 252:         if (B_LED > 0)
 16936  0BBE  0851               	movf	_B_LED,w
 16937  0BBF  1903               	btfsc	3,2
 16938  0BC0  2BC2               	goto	u257_21
 16939  0BC1  2BC3               	goto	u257_20
 16940  0BC2                     u257_21:
 16941  0BC2  2BC5               	goto	i1l1159
 16942  0BC3                     u257_20:
 16943  0BC3                     i1l1156:	
 16944                           ;ui.c: 253:             do { LATBbits.LATB4 = 0; } while(0);
 16945                           
 16946  0BC3  1219               	bcf	25,4	;volatile
 16947  0BC4  2BDC               	goto	i1l1171
 16948  0BC5                     i1l1159:	
 16949                           ;ui.c: 255:             do { LATBbits.LATB4 = 1; } while(0);
 16950                           
 16951  0BC5  1619               	bsf	25,4	;volatile
 16952  0BC6  2BDC               	goto	i1l1171
 16953  0BC7                     i1l3960:
 16954                           
 16955                           ;ui.c: 258:         if (dutyCycle >= R_LED)
 16956  0BC7  0853               	movf	_R_LED,w
 16957  0BC8  0250               	subwf	_dutyCycle,w
 16958  0BC9  1C03               	skipc
 16959  0BCA  2BCC               	goto	u258_21
 16960  0BCB  2BCD               	goto	u258_20
 16961  0BCC                     u258_21:
 16962  0BCC  2BCE               	goto	i1l3962
 16963  0BCD                     u258_20:
 16964  0BCD                     i1l1163:	
 16965                           ;ui.c: 259:             do { LATBbits.LATB6 = 1; } while(0);
 16966                           
 16967  0BCD  1719               	bsf	25,6	;volatile
 16968  0BCE                     i1l3962:
 16969                           
 16970                           ;ui.c: 260:         if (dutyCycle >= G_LED)
 16971  0BCE  0852               	movf	_G_LED,w
 16972  0BCF  0250               	subwf	_dutyCycle,w
 16973  0BD0  1C03               	skipc
 16974  0BD1  2BD3               	goto	u259_21
 16975  0BD2  2BD4               	goto	u259_20
 16976  0BD3                     u259_21:
 16977  0BD3  2BD5               	goto	i1l3964
 16978  0BD4                     u259_20:
 16979  0BD4                     i1l1166:	
 16980                           ;ui.c: 261:             do { LATBbits.LATB5 = 1; } while(0);
 16981                           
 16982  0BD4  1699               	bsf	25,5	;volatile
 16983  0BD5                     i1l3964:
 16984                           
 16985                           ;ui.c: 262:         if (dutyCycle >= B_LED)
 16986  0BD5  0851               	movf	_B_LED,w
 16987  0BD6  0250               	subwf	_dutyCycle,w
 16988  0BD7  1C03               	skipc
 16989  0BD8  2BDA               	goto	u260_21
 16990  0BD9  2BDB               	goto	u260_20
 16991  0BDA                     u260_21:
 16992  0BDA  2BDC               	goto	i1l1171
 16993  0BDB                     u260_20:
 16994  0BDB                     i1l1169:	
 16995                           ;ui.c: 263:             do { LATBbits.LATB4 = 1; } while(0);
 16996                           
 16997  0BDB  1619               	bsf	25,4	;volatile
 16998  0BDC                     i1l1171:
 16999  0BDC  0008               	return
 17000  0BDD                     __end_of_UI_PWM_handler:
 17001                           
 17002                           	psect	text83
 17003  1491                     __ptext83:	
 17004 ;; *************** function _TMR2_ISR *****************
 17005 ;; Defined at:
 17006 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 17007 ;; Parameters:    Size  Location     Type
 17008 ;;		None
 17009 ;; Auto vars:     Size  Location     Type
 17010 ;;		None
 17011 ;; Return value:  Size  Location     Type
 17012 ;;                  1    wreg      void 
 17013 ;; Registers used:
 17014 ;;		wreg, status,2, status,0, pclath, cstack
 17015 ;; Tracked objects:
 17016 ;;		On entry : 0/0
 17017 ;;		On exit  : 0/0
 17018 ;;		Unchanged: 0/0
 17019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17024 ;;Total ram usage:        0 bytes
 17025 ;; Hardware stack levels used:    1
 17026 ;; Hardware stack levels required when called:    2
 17027 ;; This function calls:
 17028 ;;		_TMR2_CallBack
 17029 ;; This function is called by:
 17030 ;;		_INTERRUPT_InterruptManager
 17031 ;; This function uses a non-reentrant model
 17032 ;;
 17033                           
 17034                           
 17035                           ;psect for function _TMR2_ISR
 17036  1491                     _TMR2_ISR:
 17037  1491                     i1l4368:	
 17038                           ;incstack = 0
 17039                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 17040                           
 17041                           
 17042                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 17043  1491  014E               	movlb	14	; select bank14
 17044  1492  1090               	bcf	16,1	;volatile
 17045  1493                     i1l4370:
 17046                           
 17047                           ;mcc_generated_files/tmr2.c: 173:     TMR2_CallBack();
 17048  1493  3195  259C  3194   	fcall	_TMR2_CallBack
 17049  1496                     i1l145:
 17050  1496  0008               	return
 17051  1497                     __end_of_TMR2_ISR:
 17052                           
 17053                           	psect	text84
 17054  159C                     __ptext84:	
 17055 ;; *************** function _TMR2_CallBack *****************
 17056 ;; Defined at:
 17057 ;;		line 176 in file "mcc_generated_files/tmr2.c"
 17058 ;; Parameters:    Size  Location     Type
 17059 ;;		None
 17060 ;; Auto vars:     Size  Location     Type
 17061 ;;		None
 17062 ;; Return value:  Size  Location     Type
 17063 ;;                  1    wreg      void 
 17064 ;; Registers used:
 17065 ;;		wreg, status,2, status,0, pclath, cstack
 17066 ;; Tracked objects:
 17067 ;;		On entry : 0/0
 17068 ;;		On exit  : 0/0
 17069 ;;		Unchanged: 0/0
 17070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17075 ;;Total ram usage:        0 bytes
 17076 ;; Hardware stack levels used:    1
 17077 ;; Hardware stack levels required when called:    1
 17078 ;; This function calls:
 17079 ;;		Absolute function
 17080 ;;		_TMR2_DefaultInterruptHandler
 17081 ;;		_timeKeeper
 17082 ;; This function is called by:
 17083 ;;		_TMR2_ISR
 17084 ;; This function uses a non-reentrant model
 17085 ;;
 17086                           
 17087                           
 17088                           ;psect for function _TMR2_CallBack
 17089  159C                     _TMR2_CallBack:
 17090  159C                     i1l4072:	
 17091                           ;incstack = 0
 17092                           ; Regs used in _TMR2_CallBack: [wreg+status,2+status,0+pclath+cstack]
 17093                           
 17094                           
 17095                           ;mcc_generated_files/tmr2.c: 180:     if(TMR2_InterruptHandler)
 17096  159C  0141               	movlb	1	; select bank1
 17097  159D  0854               	movf	_TMR2_InterruptHandler^(0+128),w
 17098  159E  0455               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
 17099  159F  1903               	btfsc	3,2
 17100  15A0  2DA2               	goto	u274_21
 17101  15A1  2DA3               	goto	u274_20
 17102  15A2                     u274_21:
 17103  15A2  2DA8               	goto	i1l149
 17104  15A3                     u274_20:
 17105  15A3                     i1l4074:
 17106                           
 17107                           ;mcc_generated_files/tmr2.c: 181:     {;mcc_generated_files/tmr2.c: 182:         TMR2_In
      +                          terruptHandler();
 17108  15A3  0855               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
 17109  15A4  008A               	movwf	10
 17110  15A5  0854               	movf	_TMR2_InterruptHandler^(0+128),w
 17111  15A6  000A               	callw
 17112  15A7  3195               	pagesel	$
 17113  15A8                     i1l149:
 17114  15A8  0008               	return
 17115  15A9                     __end_of_TMR2_CallBack:
 17116                           
 17117                           	psect	text85
 17118  0002                     __ptext85:	
 17119 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 17120 ;; Defined at:
 17121 ;;		line 190 in file "mcc_generated_files/tmr2.c"
 17122 ;; Parameters:    Size  Location     Type
 17123 ;;		None
 17124 ;; Auto vars:     Size  Location     Type
 17125 ;;		None
 17126 ;; Return value:  Size  Location     Type
 17127 ;;                  1    wreg      void 
 17128 ;; Registers used:
 17129 ;;		None
 17130 ;; Tracked objects:
 17131 ;;		On entry : 0/0
 17132 ;;		On exit  : 0/0
 17133 ;;		Unchanged: 0/0
 17134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17139 ;;Total ram usage:        0 bytes
 17140 ;; Hardware stack levels used:    1
 17141 ;; This function calls:
 17142 ;;		Nothing
 17143 ;; This function is called by:
 17144 ;;		_TMR2_Initialize
 17145 ;;		_TMR2_CallBack
 17146 ;; This function uses a non-reentrant model
 17147 ;;
 17148                           
 17149                           
 17150                           ;psect for function _TMR2_DefaultInterruptHandler
 17151  0002                     _TMR2_DefaultInterruptHandler:
 17152  0002                     i1l155:	
 17153                           ;incstack = 0
 17154                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 17155                           
 17156  0002  0008               	return
 17157  0003                     __end_of_TMR2_DefaultInterruptHandler:
 17158                           
 17159                           	psect	text86
 17160  086F                     __ptext86:	
 17161 ;; *************** function _timeKeeper *****************
 17162 ;; Defined at:
 17163 ;;		line 18 in file "timers.c"
 17164 ;; Parameters:    Size  Location     Type
 17165 ;;		None
 17166 ;; Auto vars:     Size  Location     Type
 17167 ;;		None
 17168 ;; Return value:  Size  Location     Type
 17169 ;;                  1    wreg      void 
 17170 ;; Registers used:
 17171 ;;		wreg
 17172 ;; Tracked objects:
 17173 ;;		On entry : 0/0
 17174 ;;		On exit  : 0/0
 17175 ;;		Unchanged: 0/0
 17176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17179 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17180 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17181 ;;Total ram usage:        4 bytes
 17182 ;; Hardware stack levels used:    1
 17183 ;; This function calls:
 17184 ;;		Nothing
 17185 ;; This function is called by:
 17186 ;;		_initTimers
 17187 ;;		_TMR2_CallBack
 17188 ;; This function uses a non-reentrant model
 17189 ;;
 17190                           
 17191                           
 17192                           ;psect for function _timeKeeper
 17193  086F                     _timeKeeper:
 17194  086F                     i1l3830:	
 17195                           ;incstack = 0
 17196                           ; Regs used in _timeKeeper: [wreg]
 17197                           
 17198                           
 17199                           ;timers.c: 19:     systemTime++;
 17200  086F  3001               	movlw	1
 17201  0870  0140               	movlb	0	; select bank0
 17202  0871  07C5               	addwf	_systemTime,f
 17203  0872  3000               	movlw	0
 17204  0873  3DC6               	addwfc	_systemTime+1,f
 17205  0874  3000               	movlw	0
 17206  0875  3DC7               	addwfc	_systemTime+2,f
 17207  0876  3000               	movlw	0
 17208  0877  3DC8               	addwfc	_systemTime+3,f
 17209                           
 17210                           ;timers.c: 22:     if ((systemTime & 0x03FF) == 0)
 17211  0878  30FF               	movlw	255
 17212  0879  0545               	andwf	_systemTime,w
 17213  087A  00F0               	movwf	??_timeKeeper
 17214  087B  3003               	movlw	3
 17215  087C  0546               	andwf	_systemTime+1,w
 17216  087D  00F1               	movwf	??_timeKeeper+1
 17217  087E  3000               	movlw	0
 17218  087F  0547               	andwf	_systemTime+2,w
 17219  0880  00F2               	movwf	??_timeKeeper+2
 17220  0881  3000               	movlw	0
 17221  0882  0548               	andwf	_systemTime+3,w
 17222  0883  00F3               	movwf	??_timeKeeper+3
 17223  0884  0873               	movf	??_timeKeeper+3,w
 17224  0885  0472               	iorwf	??_timeKeeper+2,w
 17225  0886  0471               	iorwf	??_timeKeeper+1,w
 17226  0887  0470               	iorwf	??_timeKeeper,w
 17227  0888  1D03               	skipz
 17228  0889  288B               	goto	u244_21
 17229  088A  288C               	goto	u244_20
 17230  088B                     u244_21:
 17231  088B  288E               	goto	i1l832
 17232  088C                     u244_20:
 17233  088C                     i1l3832:
 17234                           
 17235                           ;timers.c: 23:         oneSecBlink = 1;
 17236  088C  01D9               	clrf	_oneSecBlink
 17237  088D  0AD9               	incf	_oneSecBlink,f
 17238  088E                     i1l832:
 17239  088E  0008               	return
 17240  088F                     __end_of_timeKeeper:
 17241                           
 17242                           	psect	text87
 17243  15C3                     __ptext87:	
 17244 ;; *************** function _TMR1_ISR *****************
 17245 ;; Defined at:
 17246 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 17247 ;; Parameters:    Size  Location     Type
 17248 ;;		None
 17249 ;; Auto vars:     Size  Location     Type
 17250 ;;		None
 17251 ;; Return value:  Size  Location     Type
 17252 ;;                  1    wreg      void 
 17253 ;; Registers used:
 17254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17255 ;; Tracked objects:
 17256 ;;		On entry : 0/0
 17257 ;;		On exit  : 0/0
 17258 ;;		Unchanged: 0/0
 17259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17264 ;;Total ram usage:        0 bytes
 17265 ;; Hardware stack levels used:    1
 17266 ;; Hardware stack levels required when called:    5
 17267 ;; This function calls:
 17268 ;;		_TMR1_CallBack
 17269 ;;		_TMR1_WriteTimer
 17270 ;; This function is called by:
 17271 ;;		_INTERRUPT_InterruptManager
 17272 ;; This function uses a non-reentrant model
 17273 ;;
 17274                           
 17275                           
 17276                           ;psect for function _TMR1_ISR
 17277  15C3                     _TMR1_ISR:
 17278  15C3                     i1l4362:	
 17279                           ;incstack = 0
 17280                           ; Regs used in _TMR1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17281                           
 17282                           
 17283                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 17284  15C3  014E               	movlb	14	; select bank14
 17285  15C4  1010               	bcf	16,0	;volatile
 17286  15C5                     i1l4364:
 17287                           
 17288                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 17289  15C5  0141               	movlb	1	; select bank1
 17290  15C6  0859               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 17291  15C7  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 17292  15C8  0858               	movf	_timer1ReloadVal^(0+128),w	;volatile
 17293  15C9  00F0               	movwf	TMR1_WriteTimer@timerVal
 17294  15CA  3196  263E  3195   	fcall	_TMR1_WriteTimer
 17295  15CD                     i1l4366:
 17296                           
 17297                           ;mcc_generated_files/tmr1.c: 173:     TMR1_CallBack();
 17298  15CD  3195  258F  3195   	fcall	_TMR1_CallBack
 17299  15D0                     i1l59:
 17300  15D0  0008               	return
 17301  15D1                     __end_of_TMR1_ISR:
 17302                           
 17303                           	psect	text88
 17304  163E                     __ptext88:	
 17305 ;; *************** function _TMR1_WriteTimer *****************
 17306 ;; Defined at:
 17307 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 17308 ;; Parameters:    Size  Location     Type
 17309 ;;  timerVal        2    0[COMMON] unsigned short 
 17310 ;; Auto vars:     Size  Location     Type
 17311 ;;		None
 17312 ;; Return value:  Size  Location     Type
 17313 ;;                  1    wreg      void 
 17314 ;; Registers used:
 17315 ;;		wreg, status,2
 17316 ;; Tracked objects:
 17317 ;;		On entry : 0/0
 17318 ;;		On exit  : 0/0
 17319 ;;		Unchanged: 0/0
 17320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17321 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17324 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17325 ;;Total ram usage:        2 bytes
 17326 ;; Hardware stack levels used:    1
 17327 ;; This function calls:
 17328 ;;		Nothing
 17329 ;; This function is called by:
 17330 ;;		_TMR1_ISR
 17331 ;;		_TMR1_Reload
 17332 ;; This function uses a non-reentrant model
 17333 ;;
 17334                           
 17335                           
 17336                           ;psect for function _TMR1_WriteTimer
 17337  163E                     _TMR1_WriteTimer:
 17338  163E                     i1l4038:	
 17339                           ;incstack = 0
 17340                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 17341                           
 17342                           
 17343                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.NOT_SYNC == 1)
 17344  163E  0144               	movlb	4	; select bank4
 17345  163F  1D0E               	btfss	14,2	;volatile
 17346  1640  2E42               	goto	u272_21
 17347  1641  2E43               	goto	u272_20
 17348  1642                     u272_21:
 17349  1642  2E4A               	goto	i1l4048
 17350  1643                     u272_20:
 17351  1643                     i1l4040:
 17352                           
 17353                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 17354  1643  100E               	bcf	14,0	;volatile
 17355  1644                     i1l4042:
 17356                           
 17357                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 17358  1644  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17359  1645  008D               	movwf	13	;volatile
 17360  1646                     i1l4044:
 17361                           
 17362                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 17363  1646  0870               	movf	TMR1_WriteTimer@timerVal,w
 17364  1647  008C               	movwf	12	;volatile
 17365  1648                     i1l4046:
 17366                           
 17367                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 17368  1648  140E               	bsf	14,0	;volatile
 17369                           
 17370                           ;mcc_generated_files/tmr1.c: 140:     }
 17371  1649  2E4E               	goto	i1l47
 17372  164A                     i1l4048:
 17373                           
 17374                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 17375  164A  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17376  164B  008D               	movwf	13	;volatile
 17377  164C                     i1l4050:
 17378                           
 17379                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 17380  164C  0870               	movf	TMR1_WriteTimer@timerVal,w
 17381  164D  008C               	movwf	12	;volatile
 17382  164E                     i1l47:
 17383  164E  0008               	return
 17384  164F                     __end_of_TMR1_WriteTimer:
 17385                           
 17386                           	psect	text89
 17387  158F                     __ptext89:	
 17388 ;; *************** function _TMR1_CallBack *****************
 17389 ;; Defined at:
 17390 ;;		line 176 in file "mcc_generated_files/tmr1.c"
 17391 ;; Parameters:    Size  Location     Type
 17392 ;;		None
 17393 ;; Auto vars:     Size  Location     Type
 17394 ;;		None
 17395 ;; Return value:  Size  Location     Type
 17396 ;;                  1    wreg      void 
 17397 ;; Registers used:
 17398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17399 ;; Tracked objects:
 17400 ;;		On entry : 0/0
 17401 ;;		On exit  : 0/0
 17402 ;;		Unchanged: 0/0
 17403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17408 ;;Total ram usage:        0 bytes
 17409 ;; Hardware stack levels used:    1
 17410 ;; Hardware stack levels required when called:    4
 17411 ;; This function calls:
 17412 ;;		Absolute function
 17413 ;;		_TMR1_DefaultInterruptHandler
 17414 ;;		_readJoystick
 17415 ;; This function is called by:
 17416 ;;		_TMR1_ISR
 17417 ;; This function uses a non-reentrant model
 17418 ;;
 17419                           
 17420                           
 17421                           ;psect for function _TMR1_CallBack
 17422  158F                     _TMR1_CallBack:
 17423  158F                     i1l4052:	
 17424                           ;incstack = 0
 17425                           ; Regs used in _TMR1_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17426                           
 17427                           
 17428                           ;mcc_generated_files/tmr1.c: 179:     if(TMR1_InterruptHandler)
 17429  158F  0141               	movlb	1	; select bank1
 17430  1590  0856               	movf	_TMR1_InterruptHandler^(0+128),w
 17431  1591  0457               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 17432  1592  1903               	btfsc	3,2
 17433  1593  2D95               	goto	u273_21
 17434  1594  2D96               	goto	u273_20
 17435  1595                     u273_21:
 17436  1595  2D9B               	goto	i1l63
 17437  1596                     u273_20:
 17438  1596                     i1l4054:
 17439                           
 17440                           ;mcc_generated_files/tmr1.c: 180:     {;mcc_generated_files/tmr1.c: 181:         TMR1_In
      +                          terruptHandler();
 17441  1596  0857               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 17442  1597  008A               	movwf	10
 17443  1598  0856               	movf	_TMR1_InterruptHandler^(0+128),w
 17444  1599  000A               	callw
 17445  159A  3195               	pagesel	$
 17446  159B                     i1l63:
 17447  159B  0008               	return
 17448  159C                     __end_of_TMR1_CallBack:
 17449                           
 17450                           	psect	text90
 17451  0801                     __ptext90:	
 17452 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 17453 ;; Defined at:
 17454 ;;		line 189 in file "mcc_generated_files/tmr1.c"
 17455 ;; Parameters:    Size  Location     Type
 17456 ;;		None
 17457 ;; Auto vars:     Size  Location     Type
 17458 ;;		None
 17459 ;; Return value:  Size  Location     Type
 17460 ;;                  1    wreg      void 
 17461 ;; Registers used:
 17462 ;;		None
 17463 ;; Tracked objects:
 17464 ;;		On entry : 0/0
 17465 ;;		On exit  : 0/0
 17466 ;;		Unchanged: 0/0
 17467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17472 ;;Total ram usage:        0 bytes
 17473 ;; Hardware stack levels used:    1
 17474 ;; This function calls:
 17475 ;;		Nothing
 17476 ;; This function is called by:
 17477 ;;		_TMR1_Initialize
 17478 ;;		_TMR1_CallBack
 17479 ;; This function uses a non-reentrant model
 17480 ;;
 17481                           
 17482                           
 17483                           ;psect for function _TMR1_DefaultInterruptHandler
 17484  0801                     _TMR1_DefaultInterruptHandler:
 17485  0801                     i1l69:	
 17486                           ;incstack = 0
 17487                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 17488                           
 17489  0801  0008               	return
 17490  0802                     __end_of_TMR1_DefaultInterruptHandler:
 17491                           
 17492                           	psect	text91
 17493  02A4                     __ptext91:	
 17494 ;; *************** function _readJoystick *****************
 17495 ;; Defined at:
 17496 ;;		line 76 in file "joystick.c"
 17497 ;; Parameters:    Size  Location     Type
 17498 ;;		None
 17499 ;; Auto vars:     Size  Location     Type
 17500 ;;		None
 17501 ;; Return value:  Size  Location     Type
 17502 ;;                  1    wreg      void 
 17503 ;; Registers used:
 17504 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17505 ;; Tracked objects:
 17506 ;;		On entry : 0/0
 17507 ;;		On exit  : 0/0
 17508 ;;		Unchanged: 0/0
 17509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17512 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17513 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17514 ;;Total ram usage:        4 bytes
 17515 ;; Hardware stack levels used:    1
 17516 ;; Hardware stack levels required when called:    3
 17517 ;; This function calls:
 17518 ;;		_calculateMotion
 17519 ;;		_sendBTEstopCmd
 17520 ;;		_sendBTSpeedCmd
 17521 ;;		i1_EUSART1_Read
 17522 ;;		i1_EUSART1_is_rx_ready
 17523 ;;		i1_getTicks
 17524 ;;		i1_getTicksSince
 17525 ;;		i1_resetBTTimer
 17526 ;;		i1_setBTTimeout
 17527 ;; This function is called by:
 17528 ;;		_initJoystick
 17529 ;;		_TMR1_CallBack
 17530 ;; This function uses a non-reentrant model
 17531 ;;
 17532                           
 17533                           
 17534                           ;psect for function _readJoystick
 17535  02A4                     _readJoystick:
 17536  02A4                     i1l3766:	
 17537                           ;incstack = 0
 17538                           ; Regs used in _readJoystick: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17539                           
 17540                           
 17541                           ;joystick.c: 78:     accelAxialFP = accelLimitAxialFP;
 17542  02A4  0141               	movlb	1	; select bank1
 17543  02A5  0861               	movf	(_accelLimitAxialFP+1)^(0+128),w
 17544  02A6  00B3               	movwf	(_accelAxialFP+1)^(0+128)
 17545  02A7  0860               	movf	_accelLimitAxialFP^(0+128),w
 17546  02A8  00B2               	movwf	_accelAxialFP^(0+128)
 17547                           
 17548                           ;joystick.c: 79:     accelYawFP = accelLimitYawFP;
 17549  02A9  085F               	movf	(_accelLimitYawFP+1)^(0+128),w
 17550  02AA  00B1               	movwf	(_accelYawFP+1)^(0+128)
 17551  02AB  085E               	movf	_accelLimitYawFP^(0+128),w
 17552  02AC  00B0               	movwf	_accelYawFP^(0+128)
 17553  02AD                     i1l3768:
 17554                           
 17555                           ;joystick.c: 81:     if (joystickEnabled) {
 17556  02AD  087D               	movf	_joystickEnabled,w
 17557  02AE  1903               	btfsc	3,2
 17558  02AF  2AB1               	goto	u231_21
 17559  02B0  2AB2               	goto	u231_20
 17560  02B1                     u231_21:
 17561  02B1  2BBC               	goto	i1l710
 17562  02B2                     u231_20:
 17563  02B2                     i1l3770:
 17564                           
 17565                           ;joystick.c: 84:         if (PORTCbits.RC2 == 0) {
 17566  02B2  0140               	movlb	0	; select bank0
 17567  02B3  190E               	btfsc	14,2	;volatile
 17568  02B4  2AB6               	goto	u232_21
 17569  02B5  2AB7               	goto	u232_20
 17570  02B6                     u232_21:
 17571  02B6  2AEC               	goto	i1l3782
 17572  02B7                     u232_20:
 17573  02B7                     i1l3772:
 17574                           
 17575                           ;joystick.c: 85:             if (estopPending){
 17576  02B7  085B               	movf	_estopPending,w
 17577  02B8  1903               	btfsc	3,2
 17578  02B9  2ABB               	goto	u233_21
 17579  02BA  2ABC               	goto	u233_20
 17580  02BB                     u233_21:
 17581  02BB  2ADC               	goto	i1l3778
 17582  02BC                     u233_20:
 17583  02BC                     i1l3774:
 17584                           
 17585                           ;joystick.c: 86:                 if (getTicksSince(estopTimer) > 1000) {
 17586  02BC  0141               	movlb	1	; select bank1
 17587  02BD  082F               	movf	(_estopTimer+3)^(0+128),w
 17588  02BE  00F3               	movwf	i1getTicksSince@from+3
 17589  02BF  082E               	movf	(_estopTimer+2)^(0+128),w
 17590  02C0  00F2               	movwf	i1getTicksSince@from+2
 17591  02C1  082D               	movf	(_estopTimer+1)^(0+128),w
 17592  02C2  00F1               	movwf	i1getTicksSince@from+1
 17593  02C3  082C               	movf	_estopTimer^(0+128),w
 17594  02C4  00F0               	movwf	i1getTicksSince@from
 17595  02C5  3196  26EB  3182   	fcall	i1_getTicksSince
 17596  02C8  1BF3               	btfsc	?i1_getTicksSince+3,7
 17597  02C9  2AD7               	goto	u234_21
 17598  02CA  0873               	movf	?i1_getTicksSince+3,w
 17599  02CB  1D03               	btfss	3,2
 17600  02CC  2AD8               	goto	u234_20
 17601  02CD  0872               	movf	?i1_getTicksSince+2,w
 17602  02CE  1D03               	btfss	3,2
 17603  02CF  2AD8               	goto	u234_20
 17604  02D0  30E9               	movlw	233
 17605  02D1  0270               	subwf	?i1_getTicksSince,w
 17606  02D2  3003               	movlw	3
 17607  02D3  3B71               	subwfb	?i1_getTicksSince+1,w
 17608  02D4  1C03               	btfss	3,0
 17609  02D5  2AD7               	goto	u234_21
 17610  02D6  2AD8               	goto	u234_20
 17611  02D7                     u234_21:
 17612  02D7  2AEE               	goto	i1l3784
 17613  02D8                     u234_20:
 17614  02D8                     i1l3776:
 17615                           
 17616                           ;joystick.c: 87:                     estopActive = 1;
 17617  02D8  0140               	movlb	0	; select bank0
 17618  02D9  01DA               	clrf	_estopActive
 17619  02DA  0ADA               	incf	_estopActive,f
 17620  02DB  2AEE               	goto	i1l3784
 17621  02DC                     i1l3778:
 17622                           
 17623                           ;joystick.c: 90:                 estopTimer = getTicks();
 17624  02DC  3195  2550  3182   	fcall	i1_getTicks
 17625  02DF  0873               	movf	?i1_getTicks+3,w
 17626  02E0  0141               	movlb	1	; select bank1
 17627  02E1  00AF               	movwf	(_estopTimer+3)^(0+128)
 17628  02E2  0872               	movf	?i1_getTicks+2,w
 17629  02E3  00AE               	movwf	(_estopTimer+2)^(0+128)
 17630  02E4  0871               	movf	?i1_getTicks+1,w
 17631  02E5  00AD               	movwf	(_estopTimer+1)^(0+128)
 17632  02E6  0870               	movf	?i1_getTicks,w
 17633  02E7  00AC               	movwf	_estopTimer^(0+128)
 17634  02E8                     i1l3780:
 17635                           
 17636                           ;joystick.c: 91:                 estopPending = 1;
 17637  02E8  0140               	movlb	0	; select bank0
 17638  02E9  01DB               	clrf	_estopPending
 17639  02EA  0ADB               	incf	_estopPending,f
 17640  02EB  2AEE               	goto	i1l3784
 17641  02EC                     i1l3782:
 17642                           
 17643                           ;joystick.c: 94:             estopPending = 0;
 17644  02EC  01DB               	clrf	_estopPending
 17645                           
 17646                           ;joystick.c: 95:             estopActive = 0;
 17647  02ED  01DA               	clrf	_estopActive
 17648  02EE                     i1l3784:
 17649                           
 17650                           ;joystick.c: 98:         if (estopActive){
 17651  02EE  0140               	movlb	0	; select bank0
 17652  02EF  085A               	movf	_estopActive,w
 17653  02F0  1903               	btfsc	3,2
 17654  02F1  2AF3               	goto	u235_21
 17655  02F2  2AF4               	goto	u235_20
 17656  02F3                     u235_21:
 17657  02F3  2B03               	goto	i1l692
 17658  02F4                     u235_20:
 17659  02F4                     i1l3786:
 17660                           
 17661                           ;joystick.c: 99:             sendBTEstopCmd();
 17662  02F4  3188  2002  3182   	fcall	_sendBTEstopCmd
 17663  02F7                     i1l3788:
 17664                           
 17665                           ;joystick.c: 101:             targetAxialFP = 0;
 17666  02F7  0140               	movlb	0	; select bank0
 17667  02F8  01CD               	clrf	_targetAxialFP
 17668  02F9  01CE               	clrf	_targetAxialFP+1
 17669  02FA                     i1l3790:
 17670                           
 17671                           ;joystick.c: 102:             targetYawFP = 0;
 17672  02FA  0141               	movlb	1	; select bank1
 17673  02FB  01B4               	clrf	_targetYawFP^(0+128)
 17674  02FC  01B5               	clrf	(_targetYawFP+1)^(0+128)
 17675  02FD                     i1l3792:
 17676                           
 17677                           ;joystick.c: 103:             limitedAxialFP = 0;
 17678  02FD  0140               	movlb	0	; select bank0
 17679  02FE  01CB               	clrf	_limitedAxialFP
 17680  02FF  01CC               	clrf	_limitedAxialFP+1
 17681  0300                     i1l3794:
 17682                           
 17683                           ;joystick.c: 104:             limitedYawFP = 0;
 17684  0300  01C9               	clrf	_limitedYawFP
 17685  0301  01CA               	clrf	_limitedYawFP+1
 17686                           
 17687                           ;joystick.c: 105:         } else {
 17688  0302  2BB4               	goto	i1l706
 17689  0303                     i1l692:
 17690                           
 17691                           ;joystick.c: 108:             if (PORTCbits.RC0 == 0)
 17692  0303  180E               	btfsc	14,0	;volatile
 17693  0304  2B06               	goto	u236_21
 17694  0305  2B07               	goto	u236_20
 17695  0306                     u236_21:
 17696  0306  2B0C               	goto	i1l694
 17697  0307                     u236_20:
 17698  0307                     i1l3796:
 17699                           
 17700                           ;joystick.c: 109:                 targetAxialFP = topAxialSpeedFP;
 17701  0307  0865               	movf	_topAxialSpeedFP+1,w
 17702  0308  00CE               	movwf	_targetAxialFP+1
 17703  0309  0864               	movf	_topAxialSpeedFP,w
 17704  030A  00CD               	movwf	_targetAxialFP
 17705  030B  2B1E               	goto	i1l3802
 17706  030C                     i1l694:	
 17707                           ;joystick.c: 110:             else if (PORTAbits.RA2 == 0)
 17708                           
 17709  030C  190C               	btfsc	12,2	;volatile
 17710  030D  2B0F               	goto	u237_21
 17711  030E  2B10               	goto	u237_20
 17712  030F                     u237_21:
 17713  030F  2B1C               	goto	i1l3800
 17714  0310                     u237_20:
 17715  0310                     i1l3798:
 17716                           
 17717                           ;joystick.c: 111:                 targetAxialFP = -topAxialSpeedFP;
 17718  0310  0964               	comf	_topAxialSpeedFP,w
 17719  0311  00A2               	movwf	??_readJoystick
 17720  0312  0965               	comf	_topAxialSpeedFP+1,w
 17721  0313  00A3               	movwf	??_readJoystick+1
 17722  0314  0AA2               	incf	??_readJoystick,f
 17723  0315  1903               	skipnz
 17724  0316  0AA3               	incf	??_readJoystick+1,f
 17725  0317  0822               	movf	??_readJoystick,w
 17726  0318  00CD               	movwf	_targetAxialFP
 17727  0319  0823               	movf	??_readJoystick+1,w
 17728  031A  00CE               	movwf	_targetAxialFP+1
 17729  031B  2B1E               	goto	i1l3802
 17730  031C                     i1l3800:
 17731                           
 17732                           ;joystick.c: 113:                 targetAxialFP = 0;
 17733  031C  01CD               	clrf	_targetAxialFP
 17734  031D  01CE               	clrf	_targetAxialFP+1
 17735  031E                     i1l3802:
 17736                           
 17737                           ;joystick.c: 115:             if (PORTCbits.RC1 == 0){
 17738  031E  188E               	btfsc	14,1	;volatile
 17739  031F  2B21               	goto	u238_21
 17740  0320  2B22               	goto	u238_20
 17741  0321                     u238_21:
 17742  0321  2B3E               	goto	i1l698
 17743  0322                     u238_20:
 17744  0322                     i1l3804:
 17745                           
 17746                           ;joystick.c: 116:                 if (targetAxialFP == 0)
 17747  0322  084D               	movf	_targetAxialFP,w
 17748  0323  044E               	iorwf	_targetAxialFP+1,w
 17749  0324  1D03               	btfss	3,2
 17750  0325  2B27               	goto	u239_21
 17751  0326  2B28               	goto	u239_20
 17752  0327                     u239_21:
 17753  0327  2B30               	goto	i1l3808
 17754  0328                     u239_20:
 17755  0328                     i1l3806:
 17756                           
 17757                           ;joystick.c: 117:                     targetYawFP = topYawSpeedFP;
 17758  0328  0863               	movf	_topYawSpeedFP+1,w
 17759  0329  0141               	movlb	1	; select bank1
 17760  032A  00B5               	movwf	(_targetYawFP+1)^(0+128)
 17761  032B  0140               	movlb	0	; select bank0
 17762  032C  0862               	movf	_topYawSpeedFP,w
 17763  032D  0141               	movlb	1	; select bank1
 17764  032E  00B4               	movwf	_targetYawFP^(0+128)
 17765  032F  2B79               	goto	i1l3822
 17766  0330                     i1l3808:
 17767                           
 17768                           ;joystick.c: 119:                     targetYawFP = topSweepSpeedFP;
 17769  0330  0141               	movlb	1	; select bank1
 17770  0331  085B               	movf	(_topSweepSpeedFP+1)^(0+128),w
 17771  0332  00B5               	movwf	(_targetYawFP+1)^(0+128)
 17772  0333  085A               	movf	_topSweepSpeedFP^(0+128),w
 17773  0334  00B4               	movwf	_targetYawFP^(0+128)
 17774                           
 17775                           ;joystick.c: 120:                     accelYawFP = accelLimitSweepFP;
 17776  0335  0140               	movlb	0	; select bank0
 17777  0336  0867               	movf	_accelLimitSweepFP+1,w
 17778  0337  0141               	movlb	1	; select bank1
 17779  0338  00B1               	movwf	(_accelYawFP+1)^(0+128)
 17780  0339  0140               	movlb	0	; select bank0
 17781  033A  0866               	movf	_accelLimitSweepFP,w
 17782  033B  0141               	movlb	1	; select bank1
 17783  033C  00B0               	movwf	_accelYawFP^(0+128)
 17784  033D  2B79               	goto	i1l3822
 17785  033E                     i1l698:	
 17786                           ;joystick.c: 123:             else if (PORTAbits.RA1 == 0){
 17787                           
 17788  033E  188C               	btfsc	12,1	;volatile
 17789  033F  2B41               	goto	u240_21
 17790  0340  2B42               	goto	u240_20
 17791  0341                     u240_21:
 17792  0341  2B72               	goto	i1l3818
 17793  0342                     u240_20:
 17794  0342                     i1l3810:
 17795                           
 17796                           ;joystick.c: 124:                 if (targetAxialFP == 0)
 17797  0342  084D               	movf	_targetAxialFP,w
 17798  0343  044E               	iorwf	_targetAxialFP+1,w
 17799  0344  1D03               	btfss	3,2
 17800  0345  2B47               	goto	u241_21
 17801  0346  2B48               	goto	u241_20
 17802  0347                     u241_21:
 17803  0347  2B57               	goto	i1l3814
 17804  0348                     u241_20:
 17805  0348                     i1l3812:
 17806                           
 17807                           ;joystick.c: 125:                     targetYawFP = -topYawSpeedFP;
 17808  0348  0962               	comf	_topYawSpeedFP,w
 17809  0349  00A2               	movwf	??_readJoystick
 17810  034A  0963               	comf	_topYawSpeedFP+1,w
 17811  034B  00A3               	movwf	??_readJoystick+1
 17812  034C  0AA2               	incf	??_readJoystick,f
 17813  034D  1903               	skipnz
 17814  034E  0AA3               	incf	??_readJoystick+1,f
 17815  034F  0822               	movf	??_readJoystick,w
 17816  0350  0141               	movlb	1	; select bank1
 17817  0351  00B4               	movwf	_targetYawFP^(0+128)
 17818  0352  0140               	movlb	0	; select bank0
 17819  0353  0823               	movf	??_readJoystick+1,w
 17820  0354  0141               	movlb	1	; select bank1
 17821  0355  00B5               	movwf	(_targetYawFP+1)^(0+128)
 17822  0356  2B79               	goto	i1l3822
 17823  0357                     i1l3814:
 17824                           
 17825                           ;joystick.c: 127:                     targetYawFP = -topSweepSpeedFP;
 17826  0357  0141               	movlb	1	; select bank1
 17827  0358  095A               	comf	_topSweepSpeedFP^(0+128),w
 17828  0359  0140               	movlb	0	; select bank0
 17829  035A  00A2               	movwf	??_readJoystick
 17830  035B  0141               	movlb	1	; select bank1
 17831  035C  095B               	comf	(_topSweepSpeedFP+1)^(0+128),w
 17832  035D  0140               	movlb	0	; select bank0
 17833  035E  00A3               	movwf	??_readJoystick+1
 17834  035F  0AA2               	incf	??_readJoystick,f
 17835  0360  1903               	skipnz
 17836  0361  0AA3               	incf	??_readJoystick+1,f
 17837  0362  0822               	movf	??_readJoystick,w
 17838  0363  0141               	movlb	1	; select bank1
 17839  0364  00B4               	movwf	_targetYawFP^(0+128)
 17840  0365  0140               	movlb	0	; select bank0
 17841  0366  0823               	movf	??_readJoystick+1,w
 17842  0367  0141               	movlb	1	; select bank1
 17843  0368  00B5               	movwf	(_targetYawFP+1)^(0+128)
 17844  0369                     i1l3816:
 17845                           
 17846                           ;joystick.c: 128:                     accelYawFP = accelLimitSweepFP;
 17847  0369  0140               	movlb	0	; select bank0
 17848  036A  0867               	movf	_accelLimitSweepFP+1,w
 17849  036B  0141               	movlb	1	; select bank1
 17850  036C  00B1               	movwf	(_accelYawFP+1)^(0+128)
 17851  036D  0140               	movlb	0	; select bank0
 17852  036E  0866               	movf	_accelLimitSweepFP,w
 17853  036F  0141               	movlb	1	; select bank1
 17854  0370  00B0               	movwf	_accelYawFP^(0+128)
 17855  0371  2B79               	goto	i1l3822
 17856  0372                     i1l3818:
 17857                           
 17858                           ;joystick.c: 132:                 targetYawFP = 0;
 17859  0372  0141               	movlb	1	; select bank1
 17860  0373  01B4               	clrf	_targetYawFP^(0+128)
 17861  0374  01B5               	clrf	(_targetYawFP+1)^(0+128)
 17862  0375                     i1l3820:
 17863                           
 17864                           ;joystick.c: 133:                 accelYawFP = accelLimitYawStopFP;
 17865  0375  085D               	movf	(_accelLimitYawStopFP+1)^(0+128),w
 17866  0376  00B1               	movwf	(_accelYawFP+1)^(0+128)
 17867  0377  085C               	movf	_accelLimitYawStopFP^(0+128),w
 17868  0378  00B0               	movwf	_accelYawFP^(0+128)
 17869  0379                     i1l3822:
 17870                           
 17871                           ;joystick.c: 137:             calculateMotion();
 17872  0379  318A  22E9  3182   	fcall	_calculateMotion
 17873  037C                     i1l3824:
 17874                           
 17875                           ;joystick.c: 138:             sendBTSpeedCmd(limitedAxialFP >> 2, limitedYawFP >> 2, 0);
 17876  037C  0140               	movlb	0	; select bank0
 17877  037D  084C               	movf	_limitedAxialFP+1,w
 17878  037E  00A3               	movwf	??_readJoystick+1
 17879  037F  084B               	movf	_limitedAxialFP,w
 17880  0380  00A2               	movwf	??_readJoystick
 17881  0381  0D23               	rlf	??_readJoystick+1,w
 17882  0382  0CA3               	rrf	??_readJoystick+1,f
 17883  0383  0CA2               	rrf	??_readJoystick,f
 17884  0384  0D23               	rlf	??_readJoystick+1,w
 17885  0385  0CA3               	rrf	??_readJoystick+1,f
 17886  0386  0CA2               	rrf	??_readJoystick,f
 17887  0387  0822               	movf	??_readJoystick,w
 17888  0388  00F8               	movwf	sendBTSpeedCmd@axial
 17889  0389  0823               	movf	??_readJoystick+1,w
 17890  038A  00F9               	movwf	sendBTSpeedCmd@axial+1
 17891  038B  084A               	movf	_limitedYawFP+1,w
 17892  038C  00A5               	movwf	??_readJoystick+3
 17893  038D  0849               	movf	_limitedYawFP,w
 17894  038E  00A4               	movwf	??_readJoystick+2
 17895  038F  0D25               	rlf	??_readJoystick+3,w
 17896  0390  0CA5               	rrf	??_readJoystick+3,f
 17897  0391  0CA4               	rrf	??_readJoystick+2,f
 17898  0392  0D25               	rlf	??_readJoystick+3,w
 17899  0393  0CA5               	rrf	??_readJoystick+3,f
 17900  0394  0CA4               	rrf	??_readJoystick+2,f
 17901  0395  0824               	movf	??_readJoystick+2,w
 17902  0396  00FA               	movwf	sendBTSpeedCmd@yaw
 17903  0397  0825               	movf	??_readJoystick+3,w
 17904  0398  00FB               	movwf	sendBTSpeedCmd@yaw+1
 17905  0399  01FC               	clrf	sendBTSpeedCmd@blockIfBusy
 17906  039A  318A  228F  3182   	fcall	_sendBTSpeedCmd
 17907  039D  2BB4               	goto	i1l706
 17908  039E                     i1l3826:
 17909                           
 17910                           ;joystick.c: 143:             if (EUSART1_Read() == '/') {
 17911  039E  318A  2237  3182   	fcall	i1_EUSART1_Read
 17912  03A1  3A2F               	xorlw	47
 17913  03A2  1D03               	skipz
 17914  03A3  2BA5               	goto	u242_21
 17915  03A4  2BA6               	goto	u242_20
 17916  03A5                     u242_21:
 17917  03A5  2BB4               	goto	i1l706
 17918  03A6                     u242_20:
 17919  03A6                     i1l3828:
 17920                           
 17921                           ;joystick.c: 144:                 resetBTTimer();
 17922  03A6  3196  262D  3182   	fcall	i1_resetBTTimer
 17923                           
 17924                           ;joystick.c: 145:                 setBTTimeout(30000);
 17925  03A9  3000               	movlw	0
 17926  03AA  00F3               	movwf	i1setBTTimeout@timeout+3
 17927  03AB  3000               	movlw	0
 17928  03AC  00F2               	movwf	i1setBTTimeout@timeout+2
 17929  03AD  3075               	movlw	117
 17930  03AE  00F1               	movwf	i1setBTTimeout@timeout+1
 17931  03AF  3030               	movlw	48
 17932  03B0  00F0               	movwf	i1setBTTimeout@timeout
 17933  03B1  3195  255A  3182   	fcall	i1_setBTTimeout
 17934  03B4                     i1l706:	
 17935                           ;joystick.c: 147:         }
 17936                           
 17937                           
 17938                           ;joystick.c: 142:         while (EUSART1_is_rx_ready()) {
 17939  03B4  3194  24C0  3182   	fcall	i1_EUSART1_is_rx_ready
 17940  03B7  3A00               	xorlw	0
 17941  03B8  1D03               	skipz
 17942  03B9  2BBB               	goto	u243_21
 17943  03BA  2BBC               	goto	u243_20
 17944  03BB                     u243_21:
 17945  03BB  2B9E               	goto	i1l3826
 17946  03BC                     u243_20:
 17947  03BC                     i1l710:
 17948  03BC  0008               	return
 17949  03BD                     __end_of_readJoystick:
 17950                           
 17951                           	psect	text92
 17952  155A                     __ptext92:	
 17953 ;; *************** function i1_setBTTimeout *****************
 17954 ;; Defined at:
 17955 ;;		line 53 in file "timers.c"
 17956 ;; Parameters:    Size  Location     Type
 17957 ;;  timeout         4    0[COMMON] unsigned long 
 17958 ;; Auto vars:     Size  Location     Type
 17959 ;;		None
 17960 ;; Return value:  Size  Location     Type
 17961 ;;                  1    wreg      void 
 17962 ;; Registers used:
 17963 ;;		wreg
 17964 ;; Tracked objects:
 17965 ;;		On entry : 0/0
 17966 ;;		On exit  : 0/0
 17967 ;;		Unchanged: 0/0
 17968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17969 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17972 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17973 ;;Total ram usage:        4 bytes
 17974 ;; Hardware stack levels used:    1
 17975 ;; This function calls:
 17976 ;;		Nothing
 17977 ;; This function is called by:
 17978 ;;		_readJoystick
 17979 ;; This function uses a non-reentrant model
 17980 ;;
 17981                           
 17982                           
 17983                           ;psect for function i1_setBTTimeout
 17984  155A                     i1_setBTTimeout:
 17985  155A                     i1l3728:	
 17986                           ;incstack = 0
 17987                           ; Regs used in i1_setBTTimeout: [wreg]
 17988                           
 17989                           
 17990                           ;timers.c: 54:     BTTimeout = timeout;
 17991  155A  0873               	movf	i1setBTTimeout@timeout+3,w
 17992  155B  0141               	movlb	1	; select bank1
 17993  155C  00A7               	movwf	(_BTTimeout+3)^(0+128)
 17994  155D  0872               	movf	i1setBTTimeout@timeout+2,w
 17995  155E  00A6               	movwf	(_BTTimeout+2)^(0+128)
 17996  155F  0871               	movf	i1setBTTimeout@timeout+1,w
 17997  1560  00A5               	movwf	(_BTTimeout+1)^(0+128)
 17998  1561  0870               	movf	i1setBTTimeout@timeout,w
 17999  1562  00A4               	movwf	_BTTimeout^(0+128)
 18000  1563                     i1l855:
 18001  1563  0008               	return
 18002  1564                     __end_ofi1_setBTTimeout:
 18003                           
 18004                           	psect	text93
 18005  162D                     __ptext93:	
 18006 ;; *************** function i1_resetBTTimer *****************
 18007 ;; Defined at:
 18008 ;;		line 49 in file "timers.c"
 18009 ;; Parameters:    Size  Location     Type
 18010 ;;		None
 18011 ;; Auto vars:     Size  Location     Type
 18012 ;;		None
 18013 ;; Return value:  Size  Location     Type
 18014 ;;                  1    wreg      void 
 18015 ;; Registers used:
 18016 ;;		wreg
 18017 ;; Tracked objects:
 18018 ;;		On entry : 0/0
 18019 ;;		On exit  : 0/0
 18020 ;;		Unchanged: 0/0
 18021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18026 ;;Total ram usage:        0 bytes
 18027 ;; Hardware stack levels used:    1
 18028 ;; This function calls:
 18029 ;;		Nothing
 18030 ;; This function is called by:
 18031 ;;		_readJoystick
 18032 ;; This function uses a non-reentrant model
 18033 ;;
 18034                           
 18035                           
 18036                           ;psect for function i1_resetBTTimer
 18037  162D                     i1_resetBTTimer:
 18038  162D                     i1l3726:	
 18039                           ;incstack = 0
 18040                           ; Regs used in i1_resetBTTimer: [wreg]
 18041                           
 18042                           
 18043                           ;timers.c: 50:     lastBTTime = systemTime;
 18044  162D  0140               	movlb	0	; select bank0
 18045  162E  0848               	movf	_systemTime+3,w
 18046  162F  0141               	movlb	1	; select bank1
 18047  1630  00AB               	movwf	(_lastBTTime+3)^(0+128)
 18048  1631  0140               	movlb	0	; select bank0
 18049  1632  0847               	movf	_systemTime+2,w
 18050  1633  0141               	movlb	1	; select bank1
 18051  1634  00AA               	movwf	(_lastBTTime+2)^(0+128)
 18052  1635  0140               	movlb	0	; select bank0
 18053  1636  0846               	movf	_systemTime+1,w
 18054  1637  0141               	movlb	1	; select bank1
 18055  1638  00A9               	movwf	(_lastBTTime+1)^(0+128)
 18056  1639  0140               	movlb	0	; select bank0
 18057  163A  0845               	movf	_systemTime,w
 18058  163B  0141               	movlb	1	; select bank1
 18059  163C  00A8               	movwf	_lastBTTime^(0+128)
 18060  163D                     i1l852:
 18061  163D  0008               	return
 18062  163E                     __end_ofi1_resetBTTimer:
 18063                           
 18064                           	psect	text94
 18065  16EB                     __ptext94:	
 18066 ;; *************** function i1_getTicksSince *****************
 18067 ;; Defined at:
 18068 ;;		line 44 in file "timers.c"
 18069 ;; Parameters:    Size  Location     Type
 18070 ;;  from            4    0[COMMON] unsigned long 
 18071 ;; Auto vars:     Size  Location     Type
 18072 ;;		None
 18073 ;; Return value:  Size  Location     Type
 18074 ;;                  4    0[COMMON] long 
 18075 ;; Registers used:
 18076 ;;		wreg
 18077 ;; Tracked objects:
 18078 ;;		On entry : 0/0
 18079 ;;		On exit  : 0/0
 18080 ;;		Unchanged: 0/0
 18081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18082 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18084 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18085 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18086 ;;Total ram usage:        8 bytes
 18087 ;; Hardware stack levels used:    1
 18088 ;; This function calls:
 18089 ;;		Nothing
 18090 ;; This function is called by:
 18091 ;;		_readJoystick
 18092 ;; This function uses a non-reentrant model
 18093 ;;
 18094                           
 18095                           
 18096                           ;psect for function i1_getTicksSince
 18097  16EB                     i1_getTicksSince:
 18098  16EB                     i1l3722:	
 18099                           ;incstack = 0
 18100                           ; Regs used in i1_getTicksSince: [wreg]
 18101                           
 18102                           
 18103                           ;timers.c: 45:     return (systemTime - from);
 18104  16EB  0870               	movf	i1getTicksSince@from,w
 18105  16EC  0140               	movlb	0	; select bank0
 18106  16ED  0245               	subwf	_systemTime,w
 18107  16EE  00F4               	movwf	??i1_getTicksSince
 18108  16EF  0871               	movf	i1getTicksSince@from+1,w
 18109  16F0  3B46               	subwfb	_systemTime+1,w
 18110  16F1  00F5               	movwf	??i1_getTicksSince+1
 18111  16F2  0872               	movf	i1getTicksSince@from+2,w
 18112  16F3  3B47               	subwfb	_systemTime+2,w
 18113  16F4  00F6               	movwf	??i1_getTicksSince+2
 18114  16F5  0873               	movf	i1getTicksSince@from+3,w
 18115  16F6  3B48               	subwfb	_systemTime+3,w
 18116  16F7  00F7               	movwf	??i1_getTicksSince+3
 18117  16F8  0877               	movf	??i1_getTicksSince+3,w
 18118  16F9  00F3               	movwf	?i1_getTicksSince+3
 18119  16FA  0876               	movf	??i1_getTicksSince+2,w
 18120  16FB  00F2               	movwf	?i1_getTicksSince+2
 18121  16FC  0875               	movf	??i1_getTicksSince+1,w
 18122  16FD  00F1               	movwf	?i1_getTicksSince+1
 18123  16FE  0874               	movf	??i1_getTicksSince,w
 18124  16FF  00F0               	movwf	?i1_getTicksSince
 18125  1700                     i1l849:
 18126  1700  0008               	return
 18127  1701                     __end_ofi1_getTicksSince:
 18128                           
 18129                           	psect	text95
 18130  1550                     __ptext95:	
 18131 ;; *************** function i1_getTicks *****************
 18132 ;; Defined at:
 18133 ;;		line 40 in file "timers.c"
 18134 ;; Parameters:    Size  Location     Type
 18135 ;;		None
 18136 ;; Auto vars:     Size  Location     Type
 18137 ;;		None
 18138 ;; Return value:  Size  Location     Type
 18139 ;;                  4    0[COMMON] unsigned long 
 18140 ;; Registers used:
 18141 ;;		wreg
 18142 ;; Tracked objects:
 18143 ;;		On entry : 0/0
 18144 ;;		On exit  : 0/0
 18145 ;;		Unchanged: 0/0
 18146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18147 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18150 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18151 ;;Total ram usage:        4 bytes
 18152 ;; Hardware stack levels used:    1
 18153 ;; This function calls:
 18154 ;;		Nothing
 18155 ;; This function is called by:
 18156 ;;		_readJoystick
 18157 ;; This function uses a non-reentrant model
 18158 ;;
 18159                           
 18160                           
 18161                           ;psect for function i1_getTicks
 18162  1550                     i1_getTicks:
 18163  1550                     i1l3718:	
 18164                           ;incstack = 0
 18165                           ; Regs used in i1_getTicks: [wreg]
 18166                           
 18167                           
 18168                           ;timers.c: 41:     return systemTime;
 18169  1550  0140               	movlb	0	; select bank0
 18170  1551  0848               	movf	_systemTime+3,w
 18171  1552  00F3               	movwf	?i1_getTicks+3
 18172  1553  0847               	movf	_systemTime+2,w
 18173  1554  00F2               	movwf	?i1_getTicks+2
 18174  1555  0846               	movf	_systemTime+1,w
 18175  1556  00F1               	movwf	?i1_getTicks+1
 18176  1557  0845               	movf	_systemTime,w
 18177  1558  00F0               	movwf	?i1_getTicks
 18178  1559                     i1l846:
 18179  1559  0008               	return
 18180  155A                     __end_ofi1_getTicks:
 18181                           
 18182                           	psect	text96
 18183  14C0                     __ptext96:	
 18184 ;; *************** function i1_EUSART1_is_rx_ready *****************
 18185 ;; Defined at:
 18186 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 18187 ;; Parameters:    Size  Location     Type
 18188 ;;		None
 18189 ;; Auto vars:     Size  Location     Type
 18190 ;;		None
 18191 ;; Return value:  Size  Location     Type
 18192 ;;                  1    wreg      _Bool 
 18193 ;; Registers used:
 18194 ;;		wreg, status,2, status,0
 18195 ;; Tracked objects:
 18196 ;;		On entry : 0/0
 18197 ;;		On exit  : 0/0
 18198 ;;		Unchanged: 0/0
 18199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18204 ;;Total ram usage:        0 bytes
 18205 ;; Hardware stack levels used:    1
 18206 ;; This function calls:
 18207 ;;		Nothing
 18208 ;; This function is called by:
 18209 ;;		_readJoystick
 18210 ;; This function uses a non-reentrant model
 18211 ;;
 18212                           
 18213                           
 18214                           ;psect for function i1_EUSART1_is_rx_ready
 18215  14C0                     i1_EUSART1_is_rx_ready:
 18216  14C0                     i1l3692:	
 18217                           ;incstack = 0
 18218                           ; Regs used in i1_EUSART1_is_rx_ready: [wreg+status,2+status,0]
 18219                           
 18220                           
 18221                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 18222  14C0  0140               	movlb	0	; select bank0
 18223  14C1  085D               	movf	_eusart1RxCount,w	;volatile
 18224  14C2  1D03               	btfss	3,2
 18225  14C3  2CC5               	goto	u226_21
 18226  14C4  2CC7               	goto	u226_20
 18227  14C5                     u226_21:
 18228  14C5  3001               	movlw	1
 18229  14C6  2CC8               	goto	u227_20
 18230  14C7                     u226_20:
 18231  14C7  3000               	movlw	0
 18232  14C8                     u227_20:
 18233  14C8                     i1l236:
 18234  14C8  0008               	return
 18235  14C9                     __end_ofi1_EUSART1_is_rx_ready:
 18236                           
 18237                           	psect	text97
 18238  0A37                     __ptext97:	
 18239 ;; *************** function i1_EUSART1_Read *****************
 18240 ;; Defined at:
 18241 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 18242 ;; Parameters:    Size  Location     Type
 18243 ;;		None
 18244 ;; Auto vars:     Size  Location     Type
 18245 ;;  readValue       1    1[COMMON] unsigned char 
 18246 ;; Return value:  Size  Location     Type
 18247 ;;                  1    wreg      unsigned char 
 18248 ;; Registers used:
 18249 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18250 ;; Tracked objects:
 18251 ;;		On entry : 0/0
 18252 ;;		On exit  : 0/0
 18253 ;;		Unchanged: 0/0
 18254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18256 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18257 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18258 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18259 ;;Total ram usage:        2 bytes
 18260 ;; Hardware stack levels used:    1
 18261 ;; This function calls:
 18262 ;;		Nothing
 18263 ;; This function is called by:
 18264 ;;		_readJoystick
 18265 ;; This function uses a non-reentrant model
 18266 ;;
 18267                           
 18268                           
 18269                           ;psect for function i1_EUSART1_Read
 18270  0A37                     i1_EUSART1_Read:
 18271  0A37                     i1l3696:	
 18272                           ;incstack = 0
 18273                           ; Regs used in i1_EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 18274                           
 18275  0A37                     i1l3698:	
 18276                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 18277                           
 18278                           
 18279                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 18280  0A37  0140               	movlb	0	; select bank0
 18281  0A38  085D               	movf	_eusart1RxCount,w	;volatile
 18282  0A39  1903               	btfsc	3,2
 18283  0A3A  2A3C               	goto	u228_21
 18284  0A3B  2A3D               	goto	u228_20
 18285  0A3C                     u228_21:
 18286  0A3C  2A37               	goto	i1l3698
 18287  0A3D                     u228_20:
 18288  0A3D                     i1l3700:
 18289                           
 18290                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 18291  0A3D  085E               	movf	_eusart1RxTail,w	;volatile
 18292  0A3E  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 18293  0A3F  0086               	movwf	6
 18294  0A40  3001               	movlw	1	; select bank2/3
 18295  0A41  0087               	movwf	7
 18296  0A42  0801               	movf	1,w
 18297  0A43  00F0               	movwf	??i1_EUSART1_Read
 18298  0A44  0870               	movf	??i1_EUSART1_Read,w
 18299  0A45  00DC               	movwf	_eusart1RxLastError	;volatile
 18300                           
 18301                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 18302  0A46  085E               	movf	_eusart1RxTail,w
 18303  0A47  3E20               	addlw	(low (_eusart1RxBuffer| (0+512)))& (0+255)
 18304  0A48  0086               	movwf	6
 18305  0A49  3002               	movlw	2	; select bank4/5
 18306  0A4A  0087               	movwf	7
 18307  0A4B  0801               	movf	1,w
 18308  0A4C  00F0               	movwf	??i1_EUSART1_Read
 18309  0A4D  0870               	movf	??i1_EUSART1_Read,w
 18310  0A4E  00F1               	movwf	i1EUSART1_Read@readValue
 18311  0A4F                     i1l3702:
 18312  0A4F  3001               	movlw	1
 18313  0A50  00F0               	movwf	??i1_EUSART1_Read
 18314  0A51  0870               	movf	??i1_EUSART1_Read,w
 18315  0A52  07DE               	addwf	_eusart1RxTail,f	;volatile
 18316  0A53                     i1l3704:
 18317                           
 18318                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 18319  0A53  3020               	movlw	32
 18320  0A54  025E               	subwf	_eusart1RxTail,w	;volatile
 18321  0A55  1C03               	skipc
 18322  0A56  2A58               	goto	u229_21
 18323  0A57  2A59               	goto	u229_20
 18324  0A58                     u229_21:
 18325  0A58  2A5A               	goto	i1l3708
 18326  0A59                     u229_20:
 18327  0A59                     i1l3706:
 18328                           
 18329                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 18330  0A59  01DE               	clrf	_eusart1RxTail	;volatile
 18331  0A5A                     i1l3708:
 18332                           
 18333                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 18334  0A5A  014E               	movlb	14	; select bank14
 18335  0A5B  1299               	bcf	25,5	;volatile
 18336  0A5C                     i1l3710:
 18337                           
 18338                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 18339  0A5C  3001               	movlw	1
 18340  0A5D  0140               	movlb	0	; select bank0
 18341  0A5E  02DD               	subwf	_eusart1RxCount,f	;volatile
 18342  0A5F                     i1l3712:
 18343                           
 18344                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 18345  0A5F  014E               	movlb	14	; select bank14
 18346  0A60  1699               	bsf	25,5	;volatile
 18347  0A61                     i1l3714:
 18348                           
 18349                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 18350  0A61  0871               	movf	i1EUSART1_Read@readValue,w
 18351  0A62                     i1l249:
 18352  0A62  0008               	return
 18353  0A63                     __end_ofi1_EUSART1_Read:
 18354                           
 18355                           	psect	text98
 18356  0A8F                     __ptext98:	
 18357 ;; *************** function _sendBTSpeedCmd *****************
 18358 ;; Defined at:
 18359 ;;		line 25 in file "serial.c"
 18360 ;; Parameters:    Size  Location     Type
 18361 ;;  axial           2    8[COMMON] short 
 18362 ;;  yaw             2   10[COMMON] short 
 18363 ;;  blockIfBusy     1   12[COMMON] _Bool 
 18364 ;; Auto vars:     Size  Location     Type
 18365 ;;		None
 18366 ;; Return value:  Size  Location     Type
 18367 ;;                  1    wreg      _Bool 
 18368 ;; Registers used:
 18369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18370 ;; Tracked objects:
 18371 ;;		On entry : 0/0
 18372 ;;		On exit  : 0/0
 18373 ;;		Unchanged: 0/0
 18374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18375 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18377 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18378 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18379 ;;Total ram usage:        7 bytes
 18380 ;; Hardware stack levels used:    1
 18381 ;; Hardware stack levels required when called:    2
 18382 ;; This function calls:
 18383 ;;		_calcCRC
 18384 ;;		_int16ToBytes
 18385 ;;		i1_sendBTBuffer
 18386 ;; This function is called by:
 18387 ;;		_readJoystick
 18388 ;; This function uses a non-reentrant model
 18389 ;;
 18390                           
 18391                           
 18392                           ;psect for function _sendBTSpeedCmd
 18393  0A8F                     _sendBTSpeedCmd:
 18394  0A8F                     i1l3582:	
 18395                           ;incstack = 0
 18396                           ; Regs used in _sendBTSpeedCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18397                           
 18398                           
 18399                           ;serial.c: 26:     int16ToBytes(axial, speedBuffer + 5);
 18400  0A8F  0879               	movf	sendBTSpeedCmd@axial+1,w
 18401  0A90  00F1               	movwf	int16ToBytes@num+1
 18402  0A91  0878               	movf	sendBTSpeedCmd@axial,w
 18403  0A92  00F0               	movwf	int16ToBytes@num
 18404  0A93  30BB               	movlw	(low ((_speedBuffer| 0+5)))& (0+255)
 18405  0A94  0140               	movlb	0	; select bank0
 18406  0A95  00A0               	movwf	??_sendBTSpeedCmd
 18407  0A96  0820               	movf	??_sendBTSpeedCmd,w
 18408  0A97  00F2               	movwf	int16ToBytes@ndata
 18409  0A98  318B  2317  318A   	fcall	_int16ToBytes
 18410                           
 18411                           ;serial.c: 27:     int16ToBytes(yaw, speedBuffer + 7);
 18412  0A9B  087B               	movf	sendBTSpeedCmd@yaw+1,w
 18413  0A9C  00F1               	movwf	int16ToBytes@num+1
 18414  0A9D  087A               	movf	sendBTSpeedCmd@yaw,w
 18415  0A9E  00F0               	movwf	int16ToBytes@num
 18416  0A9F  30BD               	movlw	(low ((_speedBuffer| 0+7)))& (0+255)
 18417  0AA0  0140               	movlb	0	; select bank0
 18418  0AA1  00A0               	movwf	??_sendBTSpeedCmd
 18419  0AA2  0820               	movf	??_sendBTSpeedCmd,w
 18420  0AA3  00F2               	movwf	int16ToBytes@ndata
 18421  0AA4  318B  2317  318A   	fcall	_int16ToBytes
 18422                           
 18423                           ;serial.c: 28:     calcCRC(speedBuffer);
 18424  0AA7  30B6               	movlw	(low (_speedBuffer| 0))& (0+255)
 18425  0AA8  318F  2746  318A   	fcall	_calcCRC
 18426  0AAB                     i1l3584:
 18427                           
 18428                           ;serial.c: 29:     return sendBTBuffer((void *)speedBuffer, sizeof(speedBuffer), blockIf
      +                          Busy);;	Return value of _sendBTSpeedCmd is never used
 18429  0AAB  30B6               	movlw	low _speedBuffer
 18430  0AAC  00F2               	movwf	i1sendBTBuffer@buffer
 18431  0AAD  3000               	movlw	high _speedBuffer
 18432  0AAE  00F3               	movwf	i1sendBTBuffer@buffer+1
 18433  0AAF  300C               	movlw	12
 18434  0AB0  0140               	movlb	0	; select bank0
 18435  0AB1  00A0               	movwf	??_sendBTSpeedCmd
 18436  0AB2  0820               	movf	??_sendBTSpeedCmd,w
 18437  0AB3  00F4               	movwf	i1sendBTBuffer@length
 18438  0AB4  087C               	movf	sendBTSpeedCmd@blockIfBusy,w
 18439  0AB5  00A1               	movwf	??_sendBTSpeedCmd+1
 18440  0AB6  0821               	movf	??_sendBTSpeedCmd+1,w
 18441  0AB7  00F5               	movwf	i1sendBTBuffer@blockIfBusy
 18442  0AB8  318A  220B  318A   	fcall	i1_sendBTBuffer
 18443  0ABB                     i1l759:
 18444  0ABB  0008               	return
 18445  0ABC                     __end_of_sendBTSpeedCmd:
 18446                           
 18447                           	psect	text99
 18448  0B17                     __ptext99:	
 18449 ;; *************** function _int16ToBytes *****************
 18450 ;; Defined at:
 18451 ;;		line 117 in file "serial.c"
 18452 ;; Parameters:    Size  Location     Type
 18453 ;;  num             2    0[COMMON] short 
 18454 ;;  ndata           1    2[COMMON] PTR unsigned char 
 18455 ;;		 -> speedBuffer(12), 
 18456 ;; Auto vars:     Size  Location     Type
 18457 ;;  i               2    6[COMMON] int 
 18458 ;; Return value:  Size  Location     Type
 18459 ;;                  1    wreg      void 
 18460 ;; Registers used:
 18461 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18462 ;; Tracked objects:
 18463 ;;		On entry : 0/0
 18464 ;;		On exit  : 0/0
 18465 ;;		Unchanged: 0/0
 18466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18467 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18468 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18469 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18470 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18471 ;;Total ram usage:        8 bytes
 18472 ;; Hardware stack levels used:    1
 18473 ;; This function calls:
 18474 ;;		Nothing
 18475 ;; This function is called by:
 18476 ;;		_sendBTSpeedCmd
 18477 ;; This function uses a non-reentrant model
 18478 ;;
 18479                           
 18480                           
 18481                           ;psect for function _int16ToBytes
 18482  0B17                     _int16ToBytes:
 18483  0B17                     i1l3418:	
 18484                           ;incstack = 0
 18485                           ; Regs used in _int16ToBytes: [wreg+fsr1l+fsr1h+status,2+status,0]
 18486                           
 18487                           
 18488                           ;serial.c: 118:  for (int i = 0; i < 2; i++) {
 18489  0B17  01F6               	clrf	int16ToBytes@i
 18490  0B18  01F7               	clrf	int16ToBytes@i+1
 18491  0B19                     i1l3424:
 18492                           
 18493                           ;serial.c: 119:   *ndata++ = ((uint8_t)(num & 0xFF));
 18494  0B19  0870               	movf	int16ToBytes@num,w
 18495  0B1A  00F3               	movwf	??_int16ToBytes
 18496  0B1B  0872               	movf	int16ToBytes@ndata,w
 18497  0B1C  0086               	movwf	6
 18498  0B1D  0187               	clrf	7
 18499  0B1E  0873               	movf	??_int16ToBytes,w
 18500  0B1F  0081               	movwf	1
 18501  0B20                     i1l3426:
 18502  0B20  3001               	movlw	1
 18503  0B21  00F3               	movwf	??_int16ToBytes
 18504  0B22  0873               	movf	??_int16ToBytes,w
 18505  0B23  07F2               	addwf	int16ToBytes@ndata,f
 18506  0B24                     i1l3428:
 18507                           
 18508                           ;serial.c: 120:   num = num >> 8;
 18509  0B24  0871               	movf	int16ToBytes@num+1,w
 18510  0B25  00F4               	movwf	??_int16ToBytes+1
 18511  0B26  0870               	movf	int16ToBytes@num,w
 18512  0B27  00F3               	movwf	??_int16ToBytes
 18513  0B28  3008               	movlw	8
 18514  0B29  00F5               	movwf	??_int16ToBytes+2
 18515  0B2A                     u187_25:
 18516  0B2A  0D74               	rlf	??_int16ToBytes+1,w
 18517  0B2B  0CF4               	rrf	??_int16ToBytes+1,f
 18518  0B2C  0CF3               	rrf	??_int16ToBytes,f
 18519  0B2D  0BF5               	decfsz	??_int16ToBytes+2,f
 18520  0B2E  2B2A               	goto	u187_25
 18521  0B2F  0873               	movf	??_int16ToBytes,w
 18522  0B30  00F0               	movwf	int16ToBytes@num
 18523  0B31  0874               	movf	??_int16ToBytes+1,w
 18524  0B32  00F1               	movwf	int16ToBytes@num+1
 18525  0B33                     i1l3430:
 18526                           
 18527                           ;serial.c: 121:  }
 18528  0B33  3001               	movlw	1
 18529  0B34  07F6               	addwf	int16ToBytes@i,f
 18530  0B35  3000               	movlw	0
 18531  0B36  3DF7               	addwfc	int16ToBytes@i+1,f
 18532  0B37                     i1l3432:
 18533  0B37  0877               	movf	int16ToBytes@i+1,w
 18534  0B38  3A80               	xorlw	128
 18535  0B39  00F3               	movwf	??_int16ToBytes
 18536  0B3A  3080               	movlw	128
 18537  0B3B  0273               	subwf	??_int16ToBytes,w
 18538  0B3C  1D03               	skipz
 18539  0B3D  2B40               	goto	u188_25
 18540  0B3E  3002               	movlw	2
 18541  0B3F  0276               	subwf	int16ToBytes@i,w
 18542  0B40                     u188_25:
 18543  0B40  1C03               	skipc
 18544  0B41  2B43               	goto	u188_21
 18545  0B42  2B44               	goto	u188_20
 18546  0B43                     u188_21:
 18547  0B43  2B19               	goto	i1l3424
 18548  0B44                     u188_20:
 18549  0B44                     i1l809:
 18550  0B44  0008               	return
 18551  0B45                     __end_of_int16ToBytes:
 18552                           
 18553                           	psect	text100
 18554  0802                     __ptext100:	
 18555 ;; *************** function _sendBTEstopCmd *****************
 18556 ;; Defined at:
 18557 ;;		line 32 in file "serial.c"
 18558 ;; Parameters:    Size  Location     Type
 18559 ;;		None
 18560 ;; Auto vars:     Size  Location     Type
 18561 ;;		None
 18562 ;; Return value:  Size  Location     Type
 18563 ;;                  1    wreg      _Bool 
 18564 ;; Registers used:
 18565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18566 ;; Tracked objects:
 18567 ;;		On entry : 0/0
 18568 ;;		On exit  : 0/0
 18569 ;;		Unchanged: 0/0
 18570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18573 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18574 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18575 ;;Total ram usage:        1 bytes
 18576 ;; Hardware stack levels used:    1
 18577 ;; Hardware stack levels required when called:    2
 18578 ;; This function calls:
 18579 ;;		_calcCRC
 18580 ;;		i1_sendBTBuffer
 18581 ;; This function is called by:
 18582 ;;		_readJoystick
 18583 ;; This function uses a non-reentrant model
 18584 ;;
 18585                           
 18586                           
 18587                           ;psect for function _sendBTEstopCmd
 18588  0802                     _sendBTEstopCmd:
 18589  0802                     i1l3574:	
 18590                           ;incstack = 0
 18591                           ; Regs used in _sendBTEstopCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18592                           
 18593                           
 18594                           ;serial.c: 33:     calcCRC(estopBuffer);
 18595  0802  30E2               	movlw	(low (_estopBuffer| 0))& (0+255)
 18596  0803  318F  2746  3188   	fcall	_calcCRC
 18597  0806                     i1l3576:
 18598                           
 18599                           ;serial.c: 34:     return sendBTBuffer((void *)estopBuffer, sizeof(estopBuffer), 1);;	Re
      +                          turn value of _sendBTEstopCmd is never used
 18600  0806  30E2               	movlw	low _estopBuffer
 18601  0807  00F2               	movwf	i1sendBTBuffer@buffer
 18602  0808  3000               	movlw	high _estopBuffer
 18603  0809  00F3               	movwf	i1sendBTBuffer@buffer+1
 18604  080A  3008               	movlw	8
 18605  080B  00F8               	movwf	??_sendBTEstopCmd
 18606  080C  0878               	movf	??_sendBTEstopCmd,w
 18607  080D  00F4               	movwf	i1sendBTBuffer@length
 18608  080E  01F5               	clrf	i1sendBTBuffer@blockIfBusy
 18609  080F  0AF5               	incf	i1sendBTBuffer@blockIfBusy,f
 18610  0810  318A  220B  3188   	fcall	i1_sendBTBuffer
 18611  0813                     i1l762:
 18612  0813  0008               	return
 18613  0814                     __end_of_sendBTEstopCmd:
 18614                           
 18615                           	psect	text101
 18616  0A0B                     __ptext101:	
 18617 ;; *************** function i1_sendBTBuffer *****************
 18618 ;; Defined at:
 18619 ;;		line 42 in file "serial.c"
 18620 ;; Parameters:    Size  Location     Type
 18621 ;;  buffer          2    2[COMMON] PTR unsigned char 
 18622 ;;		 -> STR_22(9), STR_21(9), STR_20(9), STR_19(3), 
 18623 ;;		 -> STR_18(3), STR_16(7), STR_14(3), STR_12(9), 
 18624 ;;		 -> STR_10(9), STR_9(9), STR_8(3), STR_7(9), 
 18625 ;;		 -> STR_6(3), STR_5(9), STR_4(3), STR_1(6), 
 18626 ;;		 -> masterMAC(12), slaveMAC(12), estopBuffer(8), speedBuffer(12), 
 18627 ;;  length          1    4[COMMON] unsigned char 
 18628 ;;  blockIfBusy     1    5[COMMON] _Bool 
 18629 ;; Auto vars:     Size  Location     Type
 18630 ;;		None
 18631 ;; Return value:  Size  Location     Type
 18632 ;;                  1    wreg      _Bool 
 18633 ;; Registers used:
 18634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18635 ;; Tracked objects:
 18636 ;;		On entry : 0/0
 18637 ;;		On exit  : 0/0
 18638 ;;		Unchanged: 0/0
 18639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18640 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18643 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18644 ;;Total ram usage:        4 bytes
 18645 ;; Hardware stack levels used:    1
 18646 ;; Hardware stack levels required when called:    1
 18647 ;; This function calls:
 18648 ;;		i1_EUSART1_Write
 18649 ;;		i1_EUSART1_is_tx_ready
 18650 ;; This function is called by:
 18651 ;;		_sendBTSpeedCmd
 18652 ;;		_sendBTEstopCmd
 18653 ;; This function uses a non-reentrant model
 18654 ;;
 18655                           
 18656                           
 18657                           ;psect for function i1_sendBTBuffer
 18658  0A0B                     i1_sendBTBuffer:
 18659  0A0B                     i1l3550:	
 18660                           ;incstack = 0
 18661                           ; Regs used in i1_sendBTBuffer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18662                           
 18663                           
 18664                           ;serial.c: 43:     if (blockIfBusy || (eusart1TxBufferRemaining > length)){
 18665  0A0B  0875               	movf	i1sendBTBuffer@blockIfBusy,w
 18666  0A0C  1D03               	btfss	3,2
 18667  0A0D  2A0F               	goto	u207_21
 18668  0A0E  2A10               	goto	u207_20
 18669  0A0F                     u207_21:
 18670  0A0F  2A2E               	goto	i1l3562
 18671  0A10                     u207_20:
 18672  0A10                     i1l3552:
 18673  0A10  0140               	movlb	0	; select bank0
 18674  0A11  0868               	movf	_eusart1TxBufferRemaining,w	;volatile
 18675  0A12  0274               	subwf	i1sendBTBuffer@length,w
 18676  0A13  1803               	skipnc
 18677  0A14  2A16               	goto	u208_21
 18678  0A15  2A17               	goto	u208_20
 18679  0A16                     u208_21:
 18680  0A16  2A35               	goto	i1l3570
 18681  0A17                     u208_20:
 18682  0A17  2A2E               	goto	i1l3562
 18683  0A18                     i1l3554:
 18684  0A18  3194  24B7  318A   	fcall	i1_EUSART1_is_tx_ready
 18685  0A1B  3A00               	xorlw	0
 18686  0A1C  1903               	skipnz
 18687  0A1D  2A1F               	goto	u209_21
 18688  0A1E  2A20               	goto	u209_20
 18689  0A1F                     u209_21:
 18690  0A1F  2A18               	goto	i1l3554
 18691  0A20                     u209_20:
 18692  0A20                     i1l3556:
 18693                           
 18694                           ;serial.c: 49:             EUSART1_Write(*buffer++);
 18695  0A20  0872               	movf	i1sendBTBuffer@buffer,w
 18696  0A21  0084               	movwf	4
 18697  0A22  0873               	movf	i1sendBTBuffer@buffer+1,w
 18698  0A23  0085               	movwf	5
 18699  0A24  0800               	movf	0,w	;code access
 18700  0A25  3189  218A  318A   	fcall	i1_EUSART1_Write
 18701  0A28                     i1l3558:
 18702  0A28  3001               	movlw	1
 18703  0A29  07F2               	addwf	i1sendBTBuffer@buffer,f
 18704  0A2A  3000               	movlw	0
 18705  0A2B  3DF3               	addwfc	i1sendBTBuffer@buffer+1,f
 18706  0A2C                     i1l3560:
 18707                           
 18708                           ;serial.c: 50:             length--;
 18709  0A2C  3001               	movlw	1
 18710  0A2D  02F4               	subwf	i1sendBTBuffer@length,f
 18711  0A2E                     i1l3562:
 18712                           
 18713                           ;serial.c: 44:         while (length > 0) {
 18714  0A2E  0874               	movf	i1sendBTBuffer@length,w
 18715  0A2F  1D03               	btfss	3,2
 18716  0A30  2A32               	goto	u210_21
 18717  0A31  2A33               	goto	u210_20
 18718  0A32                     u210_21:
 18719  0A32  2A18               	goto	i1l3554
 18720  0A33                     u210_20:
 18721  0A33                     i1l3564:
 18722                           
 18723                           ;serial.c: 52:         return 1;
 18724  0A33  3001               	movlw	1
 18725  0A34  2A36               	goto	i1l777
 18726  0A35                     i1l3570:
 18727                           
 18728                           ;serial.c: 55:         return 0;
 18729  0A35  3000               	movlw	0
 18730  0A36                     i1l777:
 18731  0A36  0008               	return
 18732  0A37                     __end_ofi1_sendBTBuffer:
 18733                           
 18734                           	psect	text102
 18735  14B7                     __ptext102:	
 18736 ;; *************** function i1_EUSART1_is_tx_ready *****************
 18737 ;; Defined at:
 18738 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 18739 ;; Parameters:    Size  Location     Type
 18740 ;;		None
 18741 ;; Auto vars:     Size  Location     Type
 18742 ;;		None
 18743 ;; Return value:  Size  Location     Type
 18744 ;;                  1    wreg      _Bool 
 18745 ;; Registers used:
 18746 ;;		wreg, status,2, status,0
 18747 ;; Tracked objects:
 18748 ;;		On entry : 0/0
 18749 ;;		On exit  : 0/0
 18750 ;;		Unchanged: 0/0
 18751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18756 ;;Total ram usage:        0 bytes
 18757 ;; Hardware stack levels used:    1
 18758 ;; This function calls:
 18759 ;;		Nothing
 18760 ;; This function is called by:
 18761 ;;		i1_sendBTBuffer
 18762 ;; This function uses a non-reentrant model
 18763 ;;
 18764                           
 18765                           
 18766                           ;psect for function i1_EUSART1_is_tx_ready
 18767  14B7                     i1_EUSART1_is_tx_ready:
 18768  14B7                     i1l3374:	
 18769                           ;incstack = 0
 18770                           ; Regs used in i1_EUSART1_is_tx_ready: [wreg+status,2+status,0]
 18771                           
 18772                           
 18773                           ;mcc_generated_files/eusart1.c: 134:     return (eusart1TxBufferRemaining ? 1 : 0);
 18774  14B7  0140               	movlb	0	; select bank0
 18775  14B8  0868               	movf	_eusart1TxBufferRemaining,w	;volatile
 18776  14B9  1D03               	btfss	3,2
 18777  14BA  2CBC               	goto	u177_21
 18778  14BB  2CBE               	goto	u177_20
 18779  14BC                     u177_21:
 18780  14BC  3001               	movlw	1
 18781  14BD  2CBF               	goto	u178_20
 18782  14BE                     u177_20:
 18783  14BE  3000               	movlw	0
 18784  14BF                     u178_20:
 18785  14BF                     i1l233:
 18786  14BF  0008               	return
 18787  14C0                     __end_ofi1_EUSART1_is_tx_ready:
 18788                           
 18789                           	psect	text103
 18790  098A                     __ptext103:	
 18791 ;; *************** function i1_EUSART1_Write *****************
 18792 ;; Defined at:
 18793 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 18794 ;; Parameters:    Size  Location     Type
 18795 ;;  txData          1    wreg     unsigned char 
 18796 ;; Auto vars:     Size  Location     Type
 18797 ;;  txData          1    1[COMMON] unsigned char 
 18798 ;; Return value:  Size  Location     Type
 18799 ;;                  1    wreg      void 
 18800 ;; Registers used:
 18801 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18802 ;; Tracked objects:
 18803 ;;		On entry : 0/0
 18804 ;;		On exit  : 0/0
 18805 ;;		Unchanged: 0/0
 18806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18809 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18810 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18811 ;;Total ram usage:        2 bytes
 18812 ;; Hardware stack levels used:    1
 18813 ;; This function calls:
 18814 ;;		Nothing
 18815 ;; This function is called by:
 18816 ;;		i1_sendBTBuffer
 18817 ;; This function uses a non-reentrant model
 18818 ;;
 18819                           
 18820                           
 18821                           ;psect for function i1_EUSART1_Write
 18822  098A                     i1_EUSART1_Write:
 18823                           
 18824                           ;incstack = 0
 18825                           ; Regs used in i1_EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 18826                           ;i1EUSART1_Write@txData stored from wreg
 18827  098A  00F1               	movwf	i1EUSART1_Write@txData
 18828  098B                     i1l3378:
 18829  098B                     i1l3380:	
 18830                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 18831                           
 18832                           
 18833                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 18834  098B  0140               	movlb	0	; select bank0
 18835  098C  0868               	movf	_eusart1TxBufferRemaining,w	;volatile
 18836  098D  1903               	btfsc	3,2
 18837  098E  2990               	goto	u179_21
 18838  098F  2991               	goto	u179_20
 18839  0990                     u179_21:
 18840  0990  298B               	goto	i1l3380
 18841  0991                     u179_20:
 18842  0991                     i1l254:
 18843                           
 18844                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 18845  0991  014E               	movlb	14	; select bank14
 18846  0992  1A19               	btfsc	25,4	;volatile
 18847  0993  2995               	goto	u180_21
 18848  0994  2996               	goto	u180_20
 18849  0995                     u180_21:
 18850  0995  299A               	goto	i1l255
 18851  0996                     u180_20:
 18852  0996                     i1l3382:
 18853                           
 18854                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 18855  0996  0871               	movf	i1EUSART1_Write@txData,w
 18856  0997  0142               	movlb	2	; select bank2
 18857  0998  009A               	movwf	26	;volatile
 18858                           
 18859                           ;mcc_generated_files/eusart1.c: 182:     }
 18860  0999  29B2               	goto	i1l3394
 18861  099A                     i1l255:	
 18862                           ;mcc_generated_files/eusart1.c: 183:     else
 18863                           
 18864                           
 18865                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 18866  099A  1219               	bcf	25,4	;volatile
 18867  099B                     i1l3384:
 18868                           
 18869                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 18870  099B  0871               	movf	i1EUSART1_Write@txData,w
 18871  099C  00F0               	movwf	??i1_EUSART1_Write
 18872  099D  0140               	movlb	0	; select bank0
 18873  099E  0861               	movf	_eusart1TxHead,w
 18874  099F  3EA0               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 18875  09A0  0086               	movwf	6
 18876  09A1  3001               	movlw	1	; select bank3/4
 18877  09A2  0087               	movwf	7
 18878  09A3  0870               	movf	??i1_EUSART1_Write,w
 18879  09A4  0081               	movwf	1
 18880  09A5                     i1l3386:
 18881  09A5  3001               	movlw	1
 18882  09A6  00F0               	movwf	??i1_EUSART1_Write
 18883  09A7  0870               	movf	??i1_EUSART1_Write,w
 18884  09A8  07E1               	addwf	_eusart1TxHead,f	;volatile
 18885  09A9                     i1l3388:
 18886                           
 18887                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 18888  09A9  3020               	movlw	32
 18889  09AA  0261               	subwf	_eusart1TxHead,w	;volatile
 18890  09AB  1C03               	skipc
 18891  09AC  29AE               	goto	u181_21
 18892  09AD  29AF               	goto	u181_20
 18893  09AE                     u181_21:
 18894  09AE  29B0               	goto	i1l3392
 18895  09AF                     u181_20:
 18896  09AF                     i1l3390:
 18897                           
 18898                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 18899  09AF  01E1               	clrf	_eusart1TxHead	;volatile
 18900  09B0                     i1l3392:
 18901                           
 18902                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 18903  09B0  3001               	movlw	1
 18904  09B1  02E8               	subwf	_eusart1TxBufferRemaining,f	;volatile
 18905  09B2                     i1l3394:
 18906                           
 18907                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 18908  09B2  014E               	movlb	14	; select bank14
 18909  09B3  1619               	bsf	25,4	;volatile
 18910  09B4                     i1l258:
 18911  09B4  0008               	return
 18912  09B5                     __end_ofi1_EUSART1_Write:
 18913                           
 18914                           	psect	text104
 18915  0F46                     __ptext104:	
 18916 ;; *************** function _calcCRC *****************
 18917 ;; Defined at:
 18918 ;;		line 91 in file "serial.c"
 18919 ;; Parameters:    Size  Location     Type
 18920 ;;  ptr             1    wreg     PTR unsigned char 
 18921 ;;		 -> estopBuffer(8), speedBuffer(12), 
 18922 ;; Auto vars:     Size  Location     Type
 18923 ;;  ptr             1    5[COMMON] PTR unsigned char 
 18924 ;;		 -> estopBuffer(8), speedBuffer(12), 
 18925 ;;  crc             2    6[COMMON] unsigned short 
 18926 ;;  count           1    4[COMMON] char 
 18927 ;;  i               1    3[COMMON] unsigned char 
 18928 ;; Return value:  Size  Location     Type
 18929 ;;                  2  727[None  ] unsigned short 
 18930 ;; Registers used:
 18931 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18932 ;; Tracked objects:
 18933 ;;		On entry : 0/0
 18934 ;;		On exit  : 0/0
 18935 ;;		Unchanged: 0/0
 18936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18938 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18939 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18940 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18941 ;;Total ram usage:        8 bytes
 18942 ;; Hardware stack levels used:    1
 18943 ;; This function calls:
 18944 ;;		Nothing
 18945 ;; This function is called by:
 18946 ;;		_sendBTSpeedCmd
 18947 ;;		_sendBTEstopCmd
 18948 ;; This function uses a non-reentrant model
 18949 ;;
 18950                           
 18951                           
 18952                           ;psect for function _calcCRC
 18953  0F46                     _calcCRC:
 18954                           
 18955                           ;incstack = 0
 18956                           ; Regs used in _calcCRC: [wreg+fsr1l+fsr1h+status,2+status,0]
 18957                           ;calcCRC@ptr stored from wreg
 18958  0F46  00F5               	movwf	calcCRC@ptr
 18959  0F47                     i1l3434:
 18960                           
 18961                           ;serial.c: 91: uint16_t calcCRC(uint8_t *ptr);serial.c: 92: {;serial.c: 93:   uint16_t c
      +                          rc;;serial.c: 94:   uint8_t i;;serial.c: 95:   int8_t count = ptr[1] + 5;
 18962  0F47  0A75               	incf	calcCRC@ptr,w
 18963  0F48  0086               	movwf	6
 18964  0F49  0187               	clrf	7
 18965  0F4A  0801               	movf	1,w
 18966  0F4B  3E05               	addlw	5
 18967  0F4C  00F0               	movwf	??_calcCRC
 18968  0F4D  0870               	movf	??_calcCRC,w
 18969  0F4E  00F4               	movwf	calcCRC@count
 18970  0F4F                     i1l3436:
 18971                           
 18972                           ;serial.c: 96:   crc = 0;
 18973  0F4F  01F6               	clrf	calcCRC@crc
 18974  0F50  01F7               	clrf	calcCRC@crc+1
 18975                           
 18976                           ;serial.c: 98:   while (--count >= 0)
 18977  0F51  2F84               	goto	i1l3452
 18978  0F52                     i1l3438:
 18979                           
 18980                           ;serial.c: 99:   {;serial.c: 100:     crc = crc ^ (uint16_t) *ptr++ << 8;
 18981  0F52  0875               	movf	calcCRC@ptr,w
 18982  0F53  0086               	movwf	6
 18983  0F54  0187               	clrf	7
 18984  0F55  0801               	movf	1,w
 18985  0F56  00F0               	movwf	??_calcCRC
 18986  0F57  01F1               	clrf	??_calcCRC+1
 18987  0F58  0870               	movf	??_calcCRC,w
 18988  0F59  00F1               	movwf	??_calcCRC+1
 18989  0F5A  01F0               	clrf	??_calcCRC
 18990  0F5B  0876               	movf	calcCRC@crc,w
 18991  0F5C  0670               	xorwf	??_calcCRC,w
 18992  0F5D  00F6               	movwf	calcCRC@crc
 18993  0F5E  0877               	movf	calcCRC@crc+1,w
 18994  0F5F  0671               	xorwf	??_calcCRC+1,w
 18995  0F60  00F7               	movwf	calcCRC@crc+1
 18996  0F61                     i1l3440:
 18997  0F61  3001               	movlw	1
 18998  0F62  00F0               	movwf	??_calcCRC
 18999  0F63  0870               	movf	??_calcCRC,w
 19000  0F64  07F5               	addwf	calcCRC@ptr,f
 19001  0F65                     i1l3442:
 19002                           
 19003                           ;serial.c: 101:     i = 8;
 19004  0F65  3008               	movlw	8
 19005  0F66  00F0               	movwf	??_calcCRC
 19006  0F67  0870               	movf	??_calcCRC,w
 19007  0F68  00F3               	movwf	calcCRC@i
 19008  0F69                     i1l3444:
 19009                           
 19010                           ;serial.c: 103:     {;serial.c: 104:       if (crc & 0x8000)
 19011  0F69  1FF7               	btfss	calcCRC@crc+1,7
 19012  0F6A  2F6C               	goto	u189_21
 19013  0F6B  2F6D               	goto	u189_20
 19014  0F6C                     u189_21:
 19015  0F6C  2F7A               	goto	i1l3448
 19016  0F6D                     u189_20:
 19017  0F6D                     i1l3446:
 19018                           
 19019                           ;serial.c: 105:         crc = crc << 1 ^ 0x1021;
 19020  0F6D  0877               	movf	calcCRC@crc+1,w
 19021  0F6E  00F1               	movwf	??_calcCRC+1
 19022  0F6F  0876               	movf	calcCRC@crc,w
 19023  0F70  00F0               	movwf	??_calcCRC
 19024  0F71  35F0               	lslf	??_calcCRC,f
 19025  0F72  0DF1               	rlf	??_calcCRC+1,f
 19026  0F73  3021               	movlw	33
 19027  0F74  0670               	xorwf	??_calcCRC,w
 19028  0F75  00F6               	movwf	calcCRC@crc
 19029  0F76  3010               	movlw	16
 19030  0F77  0671               	xorwf	??_calcCRC+1,w
 19031  0F78  00F7               	movwf	calcCRC@crc+1
 19032  0F79  2F7E               	goto	i1l3450
 19033  0F7A                     i1l3448:
 19034                           
 19035                           ;serial.c: 107:         crc = crc << 1;
 19036  0F7A  3576               	lslf	calcCRC@crc,w
 19037  0F7B  00F6               	movwf	calcCRC@crc
 19038  0F7C  0D77               	rlf	calcCRC@crc+1,w
 19039  0F7D  00F7               	movwf	calcCRC@crc+1
 19040  0F7E                     i1l3450:
 19041                           
 19042                           ;serial.c: 108:     } while(--i);
 19043  0F7E  3001               	movlw	1
 19044  0F7F  02F3               	subwf	calcCRC@i,f
 19045  0F80  1D03               	btfss	3,2
 19046  0F81  2F83               	goto	u190_21
 19047  0F82  2F84               	goto	u190_20
 19048  0F83                     u190_21:
 19049  0F83  2F69               	goto	i1l3444
 19050  0F84                     u190_20:
 19051  0F84                     i1l3452:
 19052                           
 19053                           ;serial.c: 98:   while (--count >= 0)
 19054  0F84  30FF               	movlw	255
 19055  0F85  00F0               	movwf	??_calcCRC
 19056  0F86  0870               	movf	??_calcCRC,w
 19057  0F87  07F4               	addwf	calcCRC@count,f
 19058  0F88  1FF4               	btfss	calcCRC@count,7
 19059  0F89  2F8B               	goto	u191_21
 19060  0F8A  2F8C               	goto	u191_20
 19061  0F8B                     u191_21:
 19062  0F8B  2F52               	goto	i1l3438
 19063  0F8C                     u191_20:
 19064  0F8C                     i1l3454:
 19065                           
 19066                           ;serial.c: 111:   *ptr++ = crc & 0xFF;
 19067  0F8C  0876               	movf	calcCRC@crc,w
 19068  0F8D  00F0               	movwf	??_calcCRC
 19069  0F8E  0875               	movf	calcCRC@ptr,w
 19070  0F8F  0086               	movwf	6
 19071  0F90  0187               	clrf	7
 19072  0F91  0870               	movf	??_calcCRC,w
 19073  0F92  0081               	movwf	1
 19074  0F93                     i1l3456:
 19075  0F93  3001               	movlw	1
 19076  0F94  00F0               	movwf	??_calcCRC
 19077  0F95  0870               	movf	??_calcCRC,w
 19078  0F96  07F5               	addwf	calcCRC@ptr,f
 19079  0F97                     i1l3458:
 19080                           
 19081                           ;serial.c: 112:   *ptr++ = (crc >> 8) & 0xFF;
 19082  0F97  0877               	movf	calcCRC@crc+1,w
 19083  0F98  00F0               	movwf	??_calcCRC
 19084  0F99  0875               	movf	calcCRC@ptr,w
 19085  0F9A  0086               	movwf	6
 19086  0F9B  0187               	clrf	7
 19087  0F9C  0870               	movf	??_calcCRC,w
 19088  0F9D  0081               	movwf	1
 19089  0F9E                     i1l3460:
 19090  0F9E  3001               	movlw	1
 19091  0F9F  00F0               	movwf	??_calcCRC
 19092  0FA0  0870               	movf	??_calcCRC,w
 19093  0FA1  07F5               	addwf	calcCRC@ptr,f
 19094  0FA2                     i1l804:
 19095  0FA2  0008               	return
 19096  0FA3                     __end_of_calcCRC:
 19097                           
 19098                           	psect	text105
 19099  0AE9                     __ptext105:	
 19100 ;; *************** function _calculateMotion *****************
 19101 ;; Defined at:
 19102 ;;		line 153 in file "joystick.c"
 19103 ;; Parameters:    Size  Location     Type
 19104 ;;		None
 19105 ;; Auto vars:     Size  Location     Type
 19106 ;;		None
 19107 ;; Return value:  Size  Location     Type
 19108 ;;                  1    wreg      void 
 19109 ;; Registers used:
 19110 ;;		wreg, status,2, status,0, pclath, cstack
 19111 ;; Tracked objects:
 19112 ;;		On entry : 0/0
 19113 ;;		On exit  : 0/0
 19114 ;;		Unchanged: 0/0
 19115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19120 ;;Total ram usage:        0 bytes
 19121 ;; Hardware stack levels used:    1
 19122 ;; Hardware stack levels required when called:    1
 19123 ;; This function calls:
 19124 ;;		_limitSpeed
 19125 ;; This function is called by:
 19126 ;;		_readJoystick
 19127 ;; This function uses a non-reentrant model
 19128 ;;
 19129                           
 19130                           
 19131                           ;psect for function _calculateMotion
 19132  0AE9                     _calculateMotion:
 19133  0AE9                     i1l3580:	
 19134                           ;incstack = 0
 19135                           ; Regs used in _calculateMotion: [wreg+status,2+status,0+pclath+cstack]
 19136                           
 19137                           
 19138                           ;joystick.c: 155:     limitedAxialFP = limitSpeed(targetAxialFP, limitedAxialFP, accelAx
      +                          ialFP);
 19139  0AE9  0140               	movlb	0	; select bank0
 19140  0AEA  084E               	movf	_targetAxialFP+1,w
 19141  0AEB  00F1               	movwf	limitSpeed@targetFP+1
 19142  0AEC  084D               	movf	_targetAxialFP,w
 19143  0AED  00F0               	movwf	limitSpeed@targetFP
 19144  0AEE  084C               	movf	_limitedAxialFP+1,w
 19145  0AEF  00F3               	movwf	limitSpeed@limitedFP+1
 19146  0AF0  084B               	movf	_limitedAxialFP,w
 19147  0AF1  00F2               	movwf	limitSpeed@limitedFP
 19148  0AF2  0141               	movlb	1	; select bank1
 19149  0AF3  0833               	movf	(_accelAxialFP+1)^(0+128),w
 19150  0AF4  00F5               	movwf	limitSpeed@accelFP+1
 19151  0AF5  0832               	movf	_accelAxialFP^(0+128),w
 19152  0AF6  00F4               	movwf	limitSpeed@accelFP
 19153  0AF7  318D  258A  318A   	fcall	_limitSpeed
 19154  0AFA  0871               	movf	?_limitSpeed+1,w
 19155  0AFB  0140               	movlb	0	; select bank0
 19156  0AFC  00CC               	movwf	_limitedAxialFP+1
 19157  0AFD  0870               	movf	?_limitSpeed,w
 19158  0AFE  00CB               	movwf	_limitedAxialFP
 19159                           
 19160                           ;joystick.c: 156:     limitedYawFP = limitSpeed(targetYawFP, limitedYawFP, accelYawFP);
 19161  0AFF  0141               	movlb	1	; select bank1
 19162  0B00  0835               	movf	(_targetYawFP+1)^(0+128),w
 19163  0B01  00F1               	movwf	limitSpeed@targetFP+1
 19164  0B02  0834               	movf	_targetYawFP^(0+128),w
 19165  0B03  00F0               	movwf	limitSpeed@targetFP
 19166  0B04  0140               	movlb	0	; select bank0
 19167  0B05  084A               	movf	_limitedYawFP+1,w
 19168  0B06  00F3               	movwf	limitSpeed@limitedFP+1
 19169  0B07  0849               	movf	_limitedYawFP,w
 19170  0B08  00F2               	movwf	limitSpeed@limitedFP
 19171  0B09  0141               	movlb	1	; select bank1
 19172  0B0A  0831               	movf	(_accelYawFP+1)^(0+128),w
 19173  0B0B  00F5               	movwf	limitSpeed@accelFP+1
 19174  0B0C  0830               	movf	_accelYawFP^(0+128),w
 19175  0B0D  00F4               	movwf	limitSpeed@accelFP
 19176  0B0E  318D  258A  318A   	fcall	_limitSpeed
 19177  0B11  0871               	movf	?_limitSpeed+1,w
 19178  0B12  0140               	movlb	0	; select bank0
 19179  0B13  00CA               	movwf	_limitedYawFP+1
 19180  0B14  0870               	movf	?_limitSpeed,w
 19181  0B15  00C9               	movwf	_limitedYawFP
 19182  0B16                     i1l713:
 19183  0B16  0008               	return
 19184  0B17                     __end_of_calculateMotion:
 19185                           
 19186                           	psect	text106
 19187  0D8A                     __ptext106:	
 19188 ;; *************** function _limitSpeed *****************
 19189 ;; Defined at:
 19190 ;;		line 159 in file "joystick.c"
 19191 ;; Parameters:    Size  Location     Type
 19192 ;;  targetFP        2    0[COMMON] short 
 19193 ;;  limitedFP       2    2[COMMON] short 
 19194 ;;  accelFP         2    4[COMMON] short 
 19195 ;; Auto vars:     Size  Location     Type
 19196 ;;  diffFP          2   11[COMMON] short 
 19197 ;;  speedFP         2    9[COMMON] short 
 19198 ;; Return value:  Size  Location     Type
 19199 ;;                  2    0[COMMON] short 
 19200 ;; Registers used:
 19201 ;;		wreg, status,2, status,0
 19202 ;; Tracked objects:
 19203 ;;		On entry : 0/0
 19204 ;;		On exit  : 0/0
 19205 ;;		Unchanged: 0/0
 19206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19207 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19208 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19209 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19210 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19211 ;;Total ram usage:       13 bytes
 19212 ;; Hardware stack levels used:    1
 19213 ;; This function calls:
 19214 ;;		Nothing
 19215 ;; This function is called by:
 19216 ;;		_calculateMotion
 19217 ;; This function uses a non-reentrant model
 19218 ;;
 19219                           
 19220                           
 19221                           ;psect for function _limitSpeed
 19222  0D8A                     _limitSpeed:
 19223  0D8A                     i1l3396:	
 19224                           ;incstack = 0
 19225                           ; Regs used in _limitSpeed: [wreg+status,2+status,0]
 19226                           
 19227                           
 19228                           ;joystick.c: 161:     int16_t diffFP = targetFP - limitedFP;
 19229  0D8A  0872               	movf	limitSpeed@limitedFP,w
 19230  0D8B  0270               	subwf	limitSpeed@targetFP,w
 19231  0D8C  00FB               	movwf	limitSpeed@diffFP
 19232  0D8D  0873               	movf	limitSpeed@limitedFP+1,w
 19233  0D8E  3B71               	subwfb	limitSpeed@targetFP+1,w
 19234  0D8F  00FC               	movwf	limitSpeed@diffFP+1
 19235  0D90                     i1l3398:
 19236                           
 19237                           ;joystick.c: 162:     int16_t speedFP = targetFP;
 19238  0D90  0871               	movf	limitSpeed@targetFP+1,w
 19239  0D91  00FA               	movwf	limitSpeed@speedFP+1
 19240  0D92  0870               	movf	limitSpeed@targetFP,w
 19241  0D93  00F9               	movwf	limitSpeed@speedFP
 19242  0D94                     i1l3400:
 19243                           
 19244                           ;joystick.c: 165:     if (targetFP == 0)
 19245  0D94  0870               	movf	limitSpeed@targetFP,w
 19246  0D95  0471               	iorwf	limitSpeed@targetFP+1,w
 19247  0D96  1D03               	btfss	3,2
 19248  0D97  2D99               	goto	u182_21
 19249  0D98  2D9A               	goto	u182_20
 19250  0D99                     u182_21:
 19251  0D99  2D9F               	goto	i1l3404
 19252  0D9A                     u182_20:
 19253  0D9A                     i1l3402:
 19254                           
 19255                           ;joystick.c: 166:         accelFP *= 2;
 19256  0D9A  3001               	movlw	1
 19257  0D9B                     u183_25:
 19258  0D9B  35F4               	lslf	limitSpeed@accelFP,f
 19259  0D9C  0DF5               	rlf	limitSpeed@accelFP+1,f
 19260  0D9D  0B89               	decfsz	9,f
 19261  0D9E  2D9B               	goto	u183_25
 19262  0D9F                     i1l3404:
 19263                           
 19264                           ;joystick.c: 169:     if (accelFP == 0)
 19265  0D9F  0874               	movf	limitSpeed@accelFP,w
 19266  0DA0  0475               	iorwf	limitSpeed@accelFP+1,w
 19267  0DA1  1D03               	btfss	3,2
 19268  0DA2  2DA4               	goto	u184_21
 19269  0DA3  2DA5               	goto	u184_20
 19270  0DA4                     u184_21:
 19271  0DA4  2DA9               	goto	i1l717
 19272  0DA5                     u184_20:
 19273  0DA5                     i1l3406:
 19274                           
 19275                           ;joystick.c: 170:         accelFP = 1;
 19276  0DA5  3001               	movlw	1
 19277  0DA6  00F4               	movwf	limitSpeed@accelFP
 19278  0DA7  3000               	movlw	0
 19279  0DA8  00F5               	movwf	limitSpeed@accelFP+1
 19280  0DA9                     i1l717:
 19281                           
 19282                           ;joystick.c: 173:     if (diffFP > accelFP){
 19283  0DA9  0875               	movf	limitSpeed@accelFP+1,w
 19284  0DAA  3A80               	xorlw	128
 19285  0DAB  00F6               	movwf	??_limitSpeed
 19286  0DAC  087C               	movf	limitSpeed@diffFP+1,w
 19287  0DAD  3A80               	xorlw	128
 19288  0DAE  0276               	subwf	??_limitSpeed,w
 19289  0DAF  1D03               	skipz
 19290  0DB0  2DB3               	goto	u185_25
 19291  0DB1  087B               	movf	limitSpeed@diffFP,w
 19292  0DB2  0274               	subwf	limitSpeed@accelFP,w
 19293  0DB3                     u185_25:
 19294  0DB3  1803               	skipnc
 19295  0DB4  2DB6               	goto	u185_21
 19296  0DB5  2DB7               	goto	u185_20
 19297  0DB6                     u185_21:
 19298  0DB6  2DBE               	goto	i1l3410
 19299  0DB7                     u185_20:
 19300  0DB7                     i1l3408:
 19301                           
 19302                           ;joystick.c: 174:         speedFP = limitedFP + accelFP;
 19303  0DB7  0874               	movf	limitSpeed@accelFP,w
 19304  0DB8  0772               	addwf	limitSpeed@limitedFP,w
 19305  0DB9  00F9               	movwf	limitSpeed@speedFP
 19306  0DBA  0875               	movf	limitSpeed@accelFP+1,w
 19307  0DBB  3D73               	addwfc	limitSpeed@limitedFP+1,w
 19308  0DBC  00FA               	movwf	limitSpeed@speedFP+1
 19309                           
 19310                           ;joystick.c: 175:     } else if (diffFP < -accelFP){
 19311  0DBD  2DD9               	goto	i1l3414
 19312  0DBE                     i1l3410:
 19313  0DBE  0974               	comf	limitSpeed@accelFP,w
 19314  0DBF  00F6               	movwf	??_limitSpeed
 19315  0DC0  0975               	comf	limitSpeed@accelFP+1,w
 19316  0DC1  00F7               	movwf	??_limitSpeed+1
 19317  0DC2  0AF6               	incf	??_limitSpeed,f
 19318  0DC3  1903               	skipnz
 19319  0DC4  0AF7               	incf	??_limitSpeed+1,f
 19320  0DC5  087C               	movf	limitSpeed@diffFP+1,w
 19321  0DC6  3A80               	xorlw	128
 19322  0DC7  00F8               	movwf	??_limitSpeed+2
 19323  0DC8  0877               	movf	??_limitSpeed+1,w
 19324  0DC9  3A80               	xorlw	128
 19325  0DCA  0278               	subwf	??_limitSpeed+2,w
 19326  0DCB  1D03               	skipz
 19327  0DCC  2DCF               	goto	u186_25
 19328  0DCD  0876               	movf	??_limitSpeed,w
 19329  0DCE  027B               	subwf	limitSpeed@diffFP,w
 19330  0DCF                     u186_25:
 19331  0DCF  1803               	skipnc
 19332  0DD0  2DD2               	goto	u186_21
 19333  0DD1  2DD3               	goto	u186_20
 19334  0DD2                     u186_21:
 19335  0DD2  2DD9               	goto	i1l3414
 19336  0DD3                     u186_20:
 19337  0DD3                     i1l3412:
 19338                           
 19339                           ;joystick.c: 176:         speedFP = limitedFP - accelFP;
 19340  0DD3  0874               	movf	limitSpeed@accelFP,w
 19341  0DD4  0272               	subwf	limitSpeed@limitedFP,w
 19342  0DD5  00F9               	movwf	limitSpeed@speedFP
 19343  0DD6  0875               	movf	limitSpeed@accelFP+1,w
 19344  0DD7  3B73               	subwfb	limitSpeed@limitedFP+1,w
 19345  0DD8  00FA               	movwf	limitSpeed@speedFP+1
 19346  0DD9                     i1l3414:
 19347                           
 19348                           ;joystick.c: 179:     return (speedFP);
 19349  0DD9  087A               	movf	limitSpeed@speedFP+1,w
 19350  0DDA  00F1               	movwf	?_limitSpeed+1
 19351  0DDB  0879               	movf	limitSpeed@speedFP,w
 19352  0DDC  00F0               	movwf	?_limitSpeed
 19353  0DDD                     i1l721:
 19354  0DDD  0008               	return
 19355  0DDE                     __end_of_limitSpeed:
 19356                           
 19357                           	psect	text107
 19358  161C                     __ptext107:	
 19359 ;; *************** function _PIN_MANAGER_IOC *****************
 19360 ;; Defined at:
 19361 ;;		line 140 in file "mcc_generated_files/pin_manager.c"
 19362 ;; Parameters:    Size  Location     Type
 19363 ;;		None
 19364 ;; Auto vars:     Size  Location     Type
 19365 ;;		None
 19366 ;; Return value:  Size  Location     Type
 19367 ;;                  1    wreg      void 
 19368 ;; Registers used:
 19369 ;;		wreg, status,2, status,0, pclath, cstack
 19370 ;; Tracked objects:
 19371 ;;		On entry : 0/0
 19372 ;;		On exit  : 0/0
 19373 ;;		Unchanged: 0/0
 19374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19379 ;;Total ram usage:        0 bytes
 19380 ;; Hardware stack levels used:    1
 19381 ;; Hardware stack levels required when called:    2
 19382 ;; This function calls:
 19383 ;;		_IOCCF0_ISR
 19384 ;;		_IOCCF2_ISR
 19385 ;; This function is called by:
 19386 ;;		_INTERRUPT_InterruptManager
 19387 ;; This function uses a non-reentrant model
 19388 ;;
 19389                           
 19390                           
 19391                           ;psect for function _PIN_MANAGER_IOC
 19392  161C                     _PIN_MANAGER_IOC:
 19393  161C                     i1l4418:	
 19394                           ;incstack = 0
 19395                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 19396                           
 19397                           
 19398                           ;mcc_generated_files/pin_manager.c: 143:     if(IOCCFbits.IOCCF0 == 1)
 19399  161C  017E               	movlb	62	; select bank62
 19400  161D  1C55               	btfss	85,0	;volatile
 19401  161E  2E20               	goto	u296_21
 19402  161F  2E21               	goto	u296_20
 19403  1620                     u296_21:
 19404  1620  2E24               	goto	i1l4422
 19405  1621                     u296_20:
 19406  1621                     i1l4420:
 19407                           
 19408                           ;mcc_generated_files/pin_manager.c: 144:     {;mcc_generated_files/pin_manager.c: 145:  
      +                                 IOCCF0_ISR();
 19409  1621  3195  25DF  3196   	fcall	_IOCCF0_ISR
 19410  1624                     i1l4422:
 19411                           
 19412                           ;mcc_generated_files/pin_manager.c: 148:     if(IOCCFbits.IOCCF2 == 1)
 19413  1624  017E               	movlb	62	; select bank62
 19414  1625  1D55               	btfss	85,2	;volatile
 19415  1626  2E28               	goto	u297_21
 19416  1627  2E29               	goto	u297_20
 19417  1628                     u297_21:
 19418  1628  2E2C               	goto	i1l426
 19419  1629                     u297_20:
 19420  1629                     i1l4424:
 19421                           
 19422                           ;mcc_generated_files/pin_manager.c: 149:     {;mcc_generated_files/pin_manager.c: 150:  
      +                                 IOCCF2_ISR();
 19423  1629  3195  25EE  3196   	fcall	_IOCCF2_ISR
 19424  162C                     i1l426:
 19425  162C  0008               	return
 19426  162D                     __end_of_PIN_MANAGER_IOC:
 19427                           
 19428                           	psect	text108
 19429  15EE                     __ptext108:	
 19430 ;; *************** function _IOCCF2_ISR *****************
 19431 ;; Defined at:
 19432 ;;		line 187 in file "mcc_generated_files/pin_manager.c"
 19433 ;; Parameters:    Size  Location     Type
 19434 ;;		None
 19435 ;; Auto vars:     Size  Location     Type
 19436 ;;		None
 19437 ;; Return value:  Size  Location     Type
 19438 ;;                  1    wreg      void 
 19439 ;; Registers used:
 19440 ;;		wreg, status,2, status,0, pclath, cstack
 19441 ;; Tracked objects:
 19442 ;;		On entry : 0/0
 19443 ;;		On exit  : 0/0
 19444 ;;		Unchanged: 0/0
 19445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19450 ;;Total ram usage:        0 bytes
 19451 ;; Hardware stack levels used:    1
 19452 ;; Hardware stack levels required when called:    1
 19453 ;; This function calls:
 19454 ;;		Absolute function
 19455 ;;		_IOCCF2_DefaultInterruptHandler
 19456 ;;		i1_turnPowerOn
 19457 ;; This function is called by:
 19458 ;;		_PIN_MANAGER_IOC
 19459 ;; This function uses a non-reentrant model
 19460 ;;
 19461                           
 19462                           
 19463                           ;psect for function _IOCCF2_ISR
 19464  15EE                     _IOCCF2_ISR:
 19465  15EE                     i1l4182:	
 19466                           ;incstack = 0
 19467                           ; Regs used in _IOCCF2_ISR: [wreg+status,2+status,0+pclath+cstack]
 19468                           
 19469                           
 19470                           ;mcc_generated_files/pin_manager.c: 192:     if(IOCCF2_InterruptHandler)
 19471  15EE  0141               	movlb	1	; select bank1
 19472  15EF  0846               	movf	_IOCCF2_InterruptHandler^(0+128),w
 19473  15F0  0447               	iorwf	(_IOCCF2_InterruptHandler+1)^(0+128),w
 19474  15F1  1903               	btfsc	3,2
 19475  15F2  2DF4               	goto	u276_21
 19476  15F3  2DF5               	goto	u276_20
 19477  15F4                     u276_21:
 19478  15F4  2DFA               	goto	i1l4186
 19479  15F5                     u276_20:
 19480  15F5                     i1l4184:
 19481                           
 19482                           ;mcc_generated_files/pin_manager.c: 193:     {;mcc_generated_files/pin_manager.c: 194:  
      +                                 IOCCF2_InterruptHandler();
 19483  15F5  0847               	movf	(_IOCCF2_InterruptHandler+1)^(0+128),w
 19484  15F6  008A               	movwf	10
 19485  15F7  0846               	movf	_IOCCF2_InterruptHandler^(0+128),w
 19486  15F8  000A               	callw
 19487  15F9  3195               	pagesel	$
 19488  15FA                     i1l4186:
 19489                           
 19490                           ;mcc_generated_files/pin_manager.c: 196:     IOCCFbits.IOCCF2 = 0;
 19491  15FA  017E               	movlb	62	; select bank62
 19492  15FB  1155               	bcf	85,2	;volatile
 19493  15FC                     i1l440:
 19494  15FC  0008               	return
 19495  15FD                     __end_of_IOCCF2_ISR:
 19496                           
 19497                           	psect	text109
 19498  0800                     __ptext109:	
 19499 ;; *************** function _IOCCF0_DefaultInterruptHandler *****************
 19500 ;; Defined at:
 19501 ;;		line 179 in file "mcc_generated_files/pin_manager.c"
 19502 ;; Parameters:    Size  Location     Type
 19503 ;;		None
 19504 ;; Auto vars:     Size  Location     Type
 19505 ;;		None
 19506 ;; Return value:  Size  Location     Type
 19507 ;;                  1    wreg      void 
 19508 ;; Registers used:
 19509 ;;		None
 19510 ;; Tracked objects:
 19511 ;;		On entry : 0/0
 19512 ;;		On exit  : 0/0
 19513 ;;		Unchanged: 0/0
 19514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19519 ;;Total ram usage:        0 bytes
 19520 ;; Hardware stack levels used:    1
 19521 ;; This function calls:
 19522 ;;		Nothing
 19523 ;; This function is called by:
 19524 ;;		_PIN_MANAGER_Initialize
 19525 ;;		_IOCCF0_ISR
 19526 ;; This function uses a non-reentrant model
 19527 ;;
 19528                           
 19529                           
 19530                           ;psect for function _IOCCF0_DefaultInterruptHandler
 19531  0800                     _IOCCF0_DefaultInterruptHandler:
 19532  0800                     i1l436:	
 19533                           ;incstack = 0
 19534                           ; Regs used in _IOCCF0_DefaultInterruptHandler: []
 19535                           
 19536  0800  0008               	return
 19537  0801                     __end_of_IOCCF0_DefaultInterruptHandler:
 19538                           
 19539                           	psect	text110
 19540  1487                     __ptext110:	
 19541 ;; *************** function i1_turnPowerOn *****************
 19542 ;; Defined at:
 19543 ;;		line 50 in file "configure.c"
 19544 ;; Parameters:    Size  Location     Type
 19545 ;;		None
 19546 ;; Auto vars:     Size  Location     Type
 19547 ;;		None
 19548 ;; Return value:  Size  Location     Type
 19549 ;;                  1    wreg      void 
 19550 ;; Registers used:
 19551 ;;		None
 19552 ;; Tracked objects:
 19553 ;;		On entry : 0/0
 19554 ;;		On exit  : 0/0
 19555 ;;		Unchanged: 0/0
 19556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19561 ;;Total ram usage:        0 bytes
 19562 ;; Hardware stack levels used:    1
 19563 ;; This function calls:
 19564 ;;		Nothing
 19565 ;; This function is called by:
 19566 ;;		_IOCCF0_ISR
 19567 ;;		_IOCCF2_ISR
 19568 ;; This function uses a non-reentrant model
 19569 ;;
 19570                           
 19571                           
 19572                           ;psect for function i1_turnPowerOn
 19573  1487                     i1_turnPowerOn:
 19574  1487                     i1l928:	
 19575                           ;incstack = 0
 19576                           ; Regs used in i1_turnPowerOn: []
 19577                           ;configure.c: 51:     do { LATAbits.LATA5 = 0; } while(0);
 19578                           
 19579  1487  0140               	movlb	0	; select bank0
 19580  1488  1298               	bcf	24,5	;volatile
 19581  1489                     i1l929:
 19582                           
 19583                           ;configure.c: 52:     powerOn = 1;
 19584  1489  01D7               	clrf	_powerOn
 19585  148A  0AD7               	incf	_powerOn,f
 19586  148B                     i1l930:
 19587  148B  0008               	return
 19588  148C                     __end_ofi1_turnPowerOn:
 19589                           
 19590                           	psect	text111
 19591  1474                     __ptext111:	
 19592 ;; *************** function _IOCCF2_DefaultInterruptHandler *****************
 19593 ;; Defined at:
 19594 ;;		line 209 in file "mcc_generated_files/pin_manager.c"
 19595 ;; Parameters:    Size  Location     Type
 19596 ;;		None
 19597 ;; Auto vars:     Size  Location     Type
 19598 ;;		None
 19599 ;; Return value:  Size  Location     Type
 19600 ;;                  1    wreg      void 
 19601 ;; Registers used:
 19602 ;;		None
 19603 ;; Tracked objects:
 19604 ;;		On entry : 0/0
 19605 ;;		On exit  : 0/0
 19606 ;;		Unchanged: 0/0
 19607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19612 ;;Total ram usage:        0 bytes
 19613 ;; Hardware stack levels used:    1
 19614 ;; This function calls:
 19615 ;;		Nothing
 19616 ;; This function is called by:
 19617 ;;		_PIN_MANAGER_Initialize
 19618 ;;		_IOCCF2_ISR
 19619 ;; This function uses a non-reentrant model
 19620 ;;
 19621                           
 19622                           
 19623                           ;psect for function _IOCCF2_DefaultInterruptHandler
 19624  1474                     _IOCCF2_DefaultInterruptHandler:
 19625  1474                     i1l446:	
 19626                           ;incstack = 0
 19627                           ; Regs used in _IOCCF2_DefaultInterruptHandler: []
 19628                           
 19629  1474  0008               	return
 19630  1475                     __end_of_IOCCF2_DefaultInterruptHandler:
 19631                           
 19632                           	psect	text112
 19633  15DF                     __ptext112:	
 19634 ;; *************** function _IOCCF0_ISR *****************
 19635 ;; Defined at:
 19636 ;;		line 157 in file "mcc_generated_files/pin_manager.c"
 19637 ;; Parameters:    Size  Location     Type
 19638 ;;		None
 19639 ;; Auto vars:     Size  Location     Type
 19640 ;;		None
 19641 ;; Return value:  Size  Location     Type
 19642 ;;                  1    wreg      void 
 19643 ;; Registers used:
 19644 ;;		wreg, status,2, status,0, pclath, cstack
 19645 ;; Tracked objects:
 19646 ;;		On entry : 0/0
 19647 ;;		On exit  : 0/0
 19648 ;;		Unchanged: 0/0
 19649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19654 ;;Total ram usage:        0 bytes
 19655 ;; Hardware stack levels used:    1
 19656 ;; Hardware stack levels required when called:    1
 19657 ;; This function calls:
 19658 ;;		Absolute function
 19659 ;;		_IOCCF0_DefaultInterruptHandler
 19660 ;;		i1_turnPowerOn
 19661 ;; This function is called by:
 19662 ;;		_PIN_MANAGER_IOC
 19663 ;; This function uses a non-reentrant model
 19664 ;;
 19665                           
 19666                           
 19667                           ;psect for function _IOCCF0_ISR
 19668  15DF                     _IOCCF0_ISR:
 19669  15DF                     i1l4176:	
 19670                           ;incstack = 0
 19671                           ; Regs used in _IOCCF0_ISR: [wreg+status,2+status,0+pclath+cstack]
 19672                           
 19673                           
 19674                           ;mcc_generated_files/pin_manager.c: 162:     if(IOCCF0_InterruptHandler)
 19675  15DF  0141               	movlb	1	; select bank1
 19676  15E0  0848               	movf	_IOCCF0_InterruptHandler^(0+128),w
 19677  15E1  0449               	iorwf	(_IOCCF0_InterruptHandler+1)^(0+128),w
 19678  15E2  1903               	btfsc	3,2
 19679  15E3  2DE5               	goto	u275_21
 19680  15E4  2DE6               	goto	u275_20
 19681  15E5                     u275_21:
 19682  15E5  2DEB               	goto	i1l4180
 19683  15E6                     u275_20:
 19684  15E6                     i1l4178:
 19685                           
 19686                           ;mcc_generated_files/pin_manager.c: 163:     {;mcc_generated_files/pin_manager.c: 164:  
      +                                 IOCCF0_InterruptHandler();
 19687  15E6  0849               	movf	(_IOCCF0_InterruptHandler+1)^(0+128),w
 19688  15E7  008A               	movwf	10
 19689  15E8  0848               	movf	_IOCCF0_InterruptHandler^(0+128),w
 19690  15E9  000A               	callw
 19691  15EA  3195               	pagesel	$
 19692  15EB                     i1l4180:
 19693                           
 19694                           ;mcc_generated_files/pin_manager.c: 166:     IOCCFbits.IOCCF0 = 0;
 19695  15EB  017E               	movlb	62	; select bank62
 19696  15EC  1055               	bcf	85,0	;volatile
 19697  15ED                     i1l430:
 19698  15ED  0008               	return
 19699  15EE                     __end_of_IOCCF0_ISR:
 19700                           
 19701                           	psect	text113
 19702  08F2                     __ptext113:	
 19703 ;; *************** function _EUSART1_Transmit_ISR *****************
 19704 ;; Defined at:
 19705 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 19706 ;; Parameters:    Size  Location     Type
 19707 ;;		None
 19708 ;; Auto vars:     Size  Location     Type
 19709 ;;		None
 19710 ;; Return value:  Size  Location     Type
 19711 ;;                  1    wreg      void 
 19712 ;; Registers used:
 19713 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19714 ;; Tracked objects:
 19715 ;;		On entry : 0/0
 19716 ;;		On exit  : 0/0
 19717 ;;		Unchanged: 0/0
 19718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19721 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19722 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19723 ;;Total ram usage:        1 bytes
 19724 ;; Hardware stack levels used:    1
 19725 ;; This function calls:
 19726 ;;		Nothing
 19727 ;; This function is called by:
 19728 ;;		_EUSART1_Initialize
 19729 ;;		_INTERRUPT_InterruptManager
 19730 ;; This function uses a non-reentrant model
 19731 ;;
 19732                           
 19733                           
 19734                           ;psect for function _EUSART1_Transmit_ISR
 19735  08F2                     _EUSART1_Transmit_ISR:
 19736  08F2                     i1l4372:	
 19737                           ;incstack = 0
 19738                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 19739                           
 19740                           
 19741                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 19742  08F2  3020               	movlw	32
 19743  08F3  0140               	movlb	0	; select bank0
 19744  08F4  0268               	subwf	_eusart1TxBufferRemaining,w	;volatile
 19745  08F5  1803               	skipnc
 19746  08F6  28F8               	goto	u291_21
 19747  08F7  28F9               	goto	u291_20
 19748  08F8                     u291_21:
 19749  08F8  2912               	goto	i1l261
 19750  08F9                     u291_20:
 19751  08F9                     i1l4374:
 19752                           
 19753                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 19754  08F9  0860               	movf	_eusart1TxTail,w
 19755  08FA  3EA0               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 19756  08FB  0086               	movwf	6
 19757  08FC  3001               	movlw	1	; select bank3/4
 19758  08FD  0087               	movwf	7
 19759  08FE  0801               	movf	1,w
 19760  08FF  0142               	movlb	2	; select bank2
 19761  0900  009A               	movwf	26	;volatile
 19762  0901                     i1l4376:
 19763  0901  3001               	movlw	1
 19764  0902  00F0               	movwf	??_EUSART1_Transmit_ISR
 19765  0903  0870               	movf	??_EUSART1_Transmit_ISR,w
 19766  0904  0140               	movlb	0	; select bank0
 19767  0905  07E0               	addwf	_eusart1TxTail,f	;volatile
 19768  0906                     i1l4378:
 19769                           
 19770                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 19771  0906  3020               	movlw	32
 19772  0907  0260               	subwf	_eusart1TxTail,w	;volatile
 19773  0908  1C03               	skipc
 19774  0909  290B               	goto	u292_21
 19775  090A  290C               	goto	u292_20
 19776  090B                     u292_21:
 19777  090B  290D               	goto	i1l4382
 19778  090C                     u292_20:
 19779  090C                     i1l4380:
 19780                           
 19781                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 19782  090C  01E0               	clrf	_eusart1TxTail	;volatile
 19783  090D                     i1l4382:
 19784                           
 19785                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 19786  090D  3001               	movlw	1
 19787  090E  00F0               	movwf	??_EUSART1_Transmit_ISR
 19788  090F  0870               	movf	??_EUSART1_Transmit_ISR,w
 19789  0910  07E8               	addwf	_eusart1TxBufferRemaining,f	;volatile
 19790                           
 19791                           ;mcc_generated_files/eusart1.c: 209:     }
 19792  0911  2914               	goto	i1l264
 19793  0912                     i1l261:	
 19794                           ;mcc_generated_files/eusart1.c: 210:     else
 19795                           
 19796                           
 19797                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 19798  0912  014E               	movlb	14	; select bank14
 19799  0913  1219               	bcf	25,4	;volatile
 19800  0914                     i1l264:
 19801  0914  0008               	return
 19802  0915                     __end_of_EUSART1_Transmit_ISR:
 19803                           
 19804                           	psect	text114
 19805  0BDD                     __ptext114:	
 19806 ;; *************** function _EUSART1_Receive_ISR *****************
 19807 ;; Defined at:
 19808 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 19809 ;; Parameters:    Size  Location     Type
 19810 ;;		None
 19811 ;; Auto vars:     Size  Location     Type
 19812 ;;		None
 19813 ;; Return value:  Size  Location     Type
 19814 ;;                  1    wreg      void 
 19815 ;; Registers used:
 19816 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19817 ;; Tracked objects:
 19818 ;;		On entry : 0/0
 19819 ;;		On exit  : 0/0
 19820 ;;		Unchanged: 0/0
 19821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19826 ;;Total ram usage:        0 bytes
 19827 ;; Hardware stack levels used:    1
 19828 ;; Hardware stack levels required when called:    2
 19829 ;; This function calls:
 19830 ;;		Absolute function
 19831 ;;		_EUSART1_DefaultErrorHandler
 19832 ;;		_EUSART1_DefaultFramingErrorHandler
 19833 ;;		_EUSART1_DefaultOverrunErrorHandler
 19834 ;;		_EUSART1_RxDataHandler
 19835 ;; This function is called by:
 19836 ;;		_EUSART1_Initialize
 19837 ;;		_INTERRUPT_InterruptManager
 19838 ;; This function uses a non-reentrant model
 19839 ;;
 19840                           
 19841                           
 19842                           ;psect for function _EUSART1_Receive_ISR
 19843  0BDD                     _EUSART1_Receive_ISR:
 19844  0BDD                     i1l4384:	
 19845                           ;incstack = 0
 19846                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19847                           
 19848                           
 19849                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 19850  0BDD  0140               	movlb	0	; select bank0
 19851  0BDE  085F               	movf	_eusart1RxHead,w	;volatile
 19852  0BDF  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 19853  0BE0  0086               	movwf	6
 19854  0BE1  3001               	movlw	1	; select bank2/3
 19855  0BE2  0087               	movwf	7
 19856  0BE3  0181               	clrf	1
 19857  0BE4                     i1l4386:
 19858                           
 19859                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 19860  0BE4  0142               	movlb	2	; select bank2
 19861  0BE5  1D1D               	btfss	29,2	;volatile
 19862  0BE6  2BE8               	goto	u293_21
 19863  0BE7  2BE9               	goto	u293_20
 19864  0BE8                     u293_21:
 19865  0BE8  2BF6               	goto	i1l4392
 19866  0BE9                     u293_20:
 19867  0BE9                     i1l4388:
 19868                           
 19869                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 19870  0BE9  0140               	movlb	0	; select bank0
 19871  0BEA  085F               	movf	_eusart1RxHead,w	;volatile
 19872  0BEB  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 19873  0BEC  0086               	movwf	6
 19874  0BED  3001               	movlw	1	; select bank2/3
 19875  0BEE  0087               	movwf	7
 19876  0BEF  1481               	bsf	1,1
 19877  0BF0                     i1l4390:
 19878                           
 19879                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 19880  0BF0  0141               	movlb	1	; select bank1
 19881  0BF1  084F               	movf	(_EUSART1_FramingErrorHandler+1)^(0+128),w
 19882  0BF2  008A               	movwf	10
 19883  0BF3  084E               	movf	_EUSART1_FramingErrorHandler^(0+128),w
 19884  0BF4  000A               	callw
 19885  0BF5  318B               	pagesel	$
 19886  0BF6                     i1l4392:
 19887                           
 19888                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 19889  0BF6  0142               	movlb	2	; select bank2
 19890  0BF7  1C9D               	btfss	29,1	;volatile
 19891  0BF8  2BFA               	goto	u294_21
 19892  0BF9  2BFB               	goto	u294_20
 19893  0BFA                     u294_21:
 19894  0BFA  2C08               	goto	i1l4398
 19895  0BFB                     u294_20:
 19896  0BFB                     i1l4394:
 19897                           
 19898                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 19899  0BFB  0140               	movlb	0	; select bank0
 19900  0BFC  085F               	movf	_eusart1RxHead,w	;volatile
 19901  0BFD  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 19902  0BFE  0086               	movwf	6
 19903  0BFF  3001               	movlw	1	; select bank2/3
 19904  0C00  0087               	movwf	7
 19905  0C01  1501               	bsf	1,2
 19906  0C02                     i1l4396:
 19907                           
 19908                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 19909  0C02  0141               	movlb	1	; select bank1
 19910  0C03  084D               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+128),w
 19911  0C04  008A               	movwf	10
 19912  0C05  084C               	movf	_EUSART1_OverrunErrorHandler^(0+128),w
 19913  0C06  000A               	callw
 19914  0C07  318B               	pagesel	$
 19915  0C08                     i1l4398:
 19916                           
 19917                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 19918  0C08  0140               	movlb	0	; select bank0
 19919  0C09  085F               	movf	_eusart1RxHead,w	;volatile
 19920  0C0A  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 19921  0C0B  0086               	movwf	6
 19922  0C0C  3001               	movlw	1	; select bank2/3
 19923  0C0D  0087               	movwf	7
 19924  0C0E  0801               	movf	1,w
 19925  0C0F  1903               	btfsc	3,2
 19926  0C10  2C12               	goto	u295_21
 19927  0C11  2C13               	goto	u295_20
 19928  0C12                     u295_21:
 19929  0C12  2C1A               	goto	i1l4402
 19930  0C13                     u295_20:
 19931  0C13                     i1l4400:
 19932                           
 19933                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 19934  0C13  0141               	movlb	1	; select bank1
 19935  0C14  084B               	movf	(_EUSART1_ErrorHandler+1)^(0+128),w
 19936  0C15  008A               	movwf	10
 19937  0C16  084A               	movf	_EUSART1_ErrorHandler^(0+128),w
 19938  0C17  000A               	callw
 19939  0C18  318B               	pagesel	$
 19940                           
 19941                           ;mcc_generated_files/eusart1.c: 233:     } else {
 19942  0C19  2C1D               	goto	i1l271
 19943  0C1A                     i1l4402:
 19944                           
 19945                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 19946  0C1A  3197  27AC  318B   	fcall	_EUSART1_RxDataHandler
 19947  0C1D                     i1l271:
 19948  0C1D  0008               	return
 19949  0C1E                     __end_of_EUSART1_Receive_ISR:
 19950                           
 19951                           	psect	text115
 19952  147F                     __ptext115:	
 19953 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 19954 ;; Defined at:
 19955 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 19956 ;; Parameters:    Size  Location     Type
 19957 ;;		None
 19958 ;; Auto vars:     Size  Location     Type
 19959 ;;		None
 19960 ;; Return value:  Size  Location     Type
 19961 ;;                  1    wreg      void 
 19962 ;; Registers used:
 19963 ;;		None
 19964 ;; Tracked objects:
 19965 ;;		On entry : 0/0
 19966 ;;		On exit  : 0/0
 19967 ;;		Unchanged: 0/0
 19968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19973 ;;Total ram usage:        0 bytes
 19974 ;; Hardware stack levels used:    1
 19975 ;; This function calls:
 19976 ;;		Nothing
 19977 ;; This function is called by:
 19978 ;;		_EUSART1_Initialize
 19979 ;;		_EUSART1_Receive_ISR
 19980 ;; This function uses a non-reentrant model
 19981 ;;
 19982                           
 19983                           
 19984                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 19985  147F                     _EUSART1_DefaultOverrunErrorHandler:
 19986  147F                     i1l4108:	
 19987                           ;incstack = 0
 19988                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 19989                           
 19990                           
 19991                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 19992  147F  0142               	movlb	2	; select bank2
 19993  1480  121D               	bcf	29,4	;volatile
 19994                           
 19995                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 19996  1481  161D               	bsf	29,4	;volatile
 19997  1482                     i1l281:
 19998  1482  0008               	return
 19999  1483                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 20000                           
 20001                           	psect	text116
 20002  1473                     __ptext116:	
 20003 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 20004 ;; Defined at:
 20005 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 20006 ;; Parameters:    Size  Location     Type
 20007 ;;		None
 20008 ;; Auto vars:     Size  Location     Type
 20009 ;;		None
 20010 ;; Return value:  Size  Location     Type
 20011 ;;                  1    wreg      void 
 20012 ;; Registers used:
 20013 ;;		None
 20014 ;; Tracked objects:
 20015 ;;		On entry : 0/0
 20016 ;;		On exit  : 0/0
 20017 ;;		Unchanged: 0/0
 20018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20023 ;;Total ram usage:        0 bytes
 20024 ;; Hardware stack levels used:    1
 20025 ;; This function calls:
 20026 ;;		Nothing
 20027 ;; This function is called by:
 20028 ;;		_EUSART1_Initialize
 20029 ;;		_EUSART1_Receive_ISR
 20030 ;; This function uses a non-reentrant model
 20031 ;;
 20032                           
 20033                           
 20034                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 20035  1473                     _EUSART1_DefaultFramingErrorHandler:
 20036  1473                     i1l278:	
 20037                           ;incstack = 0
 20038                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 20039                           
 20040  1473  0008               	return
 20041  1474                     __end_of_EUSART1_DefaultFramingErrorHandler:
 20042                           
 20043                           	psect	text117
 20044  147B                     __ptext117:	
 20045 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 20046 ;; Defined at:
 20047 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 20048 ;; Parameters:    Size  Location     Type
 20049 ;;		None
 20050 ;; Auto vars:     Size  Location     Type
 20051 ;;		None
 20052 ;; Return value:  Size  Location     Type
 20053 ;;                  1    wreg      void 
 20054 ;; Registers used:
 20055 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20056 ;; Tracked objects:
 20057 ;;		On entry : 0/0
 20058 ;;		On exit  : 0/0
 20059 ;;		Unchanged: 0/0
 20060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20065 ;;Total ram usage:        0 bytes
 20066 ;; Hardware stack levels used:    1
 20067 ;; Hardware stack levels required when called:    1
 20068 ;; This function calls:
 20069 ;;		_EUSART1_RxDataHandler
 20070 ;; This function is called by:
 20071 ;;		_EUSART1_Initialize
 20072 ;;		_EUSART1_Receive_ISR
 20073 ;; This function uses a non-reentrant model
 20074 ;;
 20075                           
 20076                           
 20077                           ;psect for function _EUSART1_DefaultErrorHandler
 20078  147B                     _EUSART1_DefaultErrorHandler:
 20079  147B                     i1l4110:	
 20080                           ;incstack = 0
 20081                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 20082                           
 20083                           
 20084                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 20085  147B  3197  27AC  3194   	fcall	_EUSART1_RxDataHandler
 20086  147E                     i1l284:
 20087  147E  0008               	return
 20088  147F                     __end_of_EUSART1_DefaultErrorHandler:
 20089                           
 20090                           	psect	text118
 20091  17AC                     __ptext118:	
 20092 ;; *************** function _EUSART1_RxDataHandler *****************
 20093 ;; Defined at:
 20094 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 20095 ;; Parameters:    Size  Location     Type
 20096 ;;		None
 20097 ;; Auto vars:     Size  Location     Type
 20098 ;;		None
 20099 ;; Return value:  Size  Location     Type
 20100 ;;                  1    wreg      void 
 20101 ;; Registers used:
 20102 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20103 ;; Tracked objects:
 20104 ;;		On entry : 0/0
 20105 ;;		On exit  : 0/0
 20106 ;;		Unchanged: 0/0
 20107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20110 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20111 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20112 ;;Total ram usage:        1 bytes
 20113 ;; Hardware stack levels used:    1
 20114 ;; This function calls:
 20115 ;;		Nothing
 20116 ;; This function is called by:
 20117 ;;		_EUSART1_Receive_ISR
 20118 ;;		_EUSART1_DefaultErrorHandler
 20119 ;; This function uses a non-reentrant model
 20120 ;;
 20121                           
 20122                           
 20123                           ;psect for function _EUSART1_RxDataHandler
 20124  17AC                     _EUSART1_RxDataHandler:
 20125  17AC                     i1l3748:	
 20126                           ;incstack = 0
 20127                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 20128                           
 20129                           
 20130                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 20131  17AC  0142               	movlb	2	; select bank2
 20132  17AD  0819               	movf	25,w	;volatile
 20133  17AE  00F0               	movwf	??_EUSART1_RxDataHandler
 20134  17AF  0140               	movlb	0	; select bank0
 20135  17B0  085F               	movf	_eusart1RxHead,w
 20136  17B1  3E20               	addlw	(low (_eusart1RxBuffer| (0+512)))& (0+255)
 20137  17B2  0086               	movwf	6
 20138  17B3  3002               	movlw	2	; select bank4/5
 20139  17B4  0087               	movwf	7
 20140  17B5  0870               	movf	??_EUSART1_RxDataHandler,w
 20141  17B6  0081               	movwf	1
 20142  17B7                     i1l3750:
 20143  17B7  3001               	movlw	1
 20144  17B8  00F0               	movwf	??_EUSART1_RxDataHandler
 20145  17B9  0870               	movf	??_EUSART1_RxDataHandler,w
 20146  17BA  07DF               	addwf	_eusart1RxHead,f	;volatile
 20147  17BB                     i1l3752:
 20148                           
 20149                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 20150  17BB  3020               	movlw	32
 20151  17BC  025F               	subwf	_eusart1RxHead,w	;volatile
 20152  17BD  1C03               	skipc
 20153  17BE  2FC0               	goto	u230_21
 20154  17BF  2FC1               	goto	u230_20
 20155  17C0                     u230_21:
 20156  17C0  2FC2               	goto	i1l3756
 20157  17C1                     u230_20:
 20158  17C1                     i1l3754:
 20159                           
 20160                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 20161  17C1  01DF               	clrf	_eusart1RxHead	;volatile
 20162  17C2                     i1l3756:
 20163                           
 20164                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 20165  17C2  3001               	movlw	1
 20166  17C3  00F0               	movwf	??_EUSART1_RxDataHandler
 20167  17C4  0870               	movf	??_EUSART1_RxDataHandler,w
 20168  17C5  07DD               	addwf	_eusart1RxCount,f	;volatile
 20169  17C6                     i1l275:
 20170  17C6  0008               	return
 20171  17C7                     __end_of_EUSART1_RxDataHandler:
 20172  007E                     btemp	set	126	;btemp
 20173  007E                     int$flags	set	126
 20174  007E                     wtemp0	set	126
 20175                           
 20176                           	psect	config
 20177                           
 20178                           ;Config register CONFIG1 @ 0x8007
 20179                           ;	External Oscillator mode selection bits
 20180                           ;	FEXTOSC = OFF, Oscillator not enabled
 20181                           ;	Power-up default value for COSC bits
 20182                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 20183                           ;	Clock Out Enable bit
 20184                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 20185                           ;	Clock Switch Enable bit
 20186                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 20187                           ;	Fail-Safe Clock Monitor Enable bit
 20188                           ;	FCMEN = ON, FSCM timer enabled
 20189  8007                     	org	32775
 20190  8007  3FEC               	dw	16364
 20191                           
 20192                           ;Config register CONFIG2 @ 0x8008
 20193                           ;	Master Clear Enable bit
 20194                           ;	MCLRE = ON, MCLR pin is Master Clear function
 20195                           ;	Power-up Timer Enable bit
 20196                           ;	PWRTS = OFF, PWRT disabled
 20197                           ;	Low-Power BOR enable bit
 20198                           ;	LPBOREN = OFF, ULPBOR disabled
 20199                           ;	Brown-out reset enable bits
 20200                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 20201                           ;	Brown-out Reset Voltage Selection
 20202                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
 20203                           ;	Zero-cross detect disable
 20204                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 20205                           ;	Peripheral Pin Select one-way control
 20206                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
 20207                           ;	Stack Overflow/Underflow Reset Enable bit
 20208                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 20209  8008                     	org	32776
 20210  8008  37FF               	dw	14335
 20211                           
 20212                           ;Config register CONFIG3 @ 0x8009
 20213                           ;	WDT Period Select bits
 20214                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 20215                           ;	WDT operating mode
 20216                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 20217                           ;	WDT Window Select bits
 20218                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 20219                           ;	WDT input clock selector
 20220                           ;	WDTCCS = SC, Software Control
 20221  8009                     	org	32777
 20222  8009  3F9F               	dw	16287
 20223                           
 20224                           ;Config register CONFIG4 @ 0x800A
 20225                           ;	Boot Block Size Selection bits
 20226                           ;	BBSIZE = BB512, 512 words boot block size
 20227                           ;	Boot Block Enable bit
 20228                           ;	BBEN = OFF, Boot Block disabled
 20229                           ;	SAF Enable bit
 20230                           ;	SAFEN = OFF, SAF disabled
 20231                           ;	Application Block Write Protection bit
 20232                           ;	WRTAPP = OFF, Application Block not write protected
 20233                           ;	Boot Block Write Protection bit
 20234                           ;	WRTB = OFF, Boot Block not write protected
 20235                           ;	Configuration Register Write Protection bit
 20236                           ;	WRTC = OFF, Configuration Register not write protected
 20237                           ;	Data EEPROM write protection bit
 20238                           ;	WRTD = OFF, Data EEPROM NOT write protected
 20239                           ;	Storage Area Flash Write Protection bit
 20240                           ;	WRTSAF = OFF, SAF not write protected
 20241                           ;	Low Voltage Programming Enable bit
 20242                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 20243  800A                     	org	32778
 20244  800A  3FFF               	dw	16383
 20245                           
 20246                           ;Config register CONFIG5 @ 0x800B
 20247                           ;	UserNVM Program memory code protection bit
 20248                           ;	CP = OFF, UserNVM code protection disabled
 20249  800B                     	org	32779
 20250  800B  3FFF               	dw	16383

Data Sizes:
    Strings     88
    Constant    0
    Data        22
    BSS         234
    Persistent  57
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     37      73
    BANK1            80      6      80
    BANK2            80      0      64
    BANK3            80      0      72
    BANK4            80      0      32
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_23(CODE[3]), STR_17(CODE[3]), STR_15(CODE[3]), STR_13(CODE[6]), 
		 -> STR_11(CODE[3]), STR_3(CODE[6]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_23(CODE[3]), STR_17(CODE[3]), STR_15(CODE[3]), STR_13(CODE[6]), 
		 -> STR_11(CODE[3]), STR_3(CODE[6]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), RX_Buffer(BANK3[40]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), RX_Buffer(BANK3[40]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), RX_Buffer(BANK3[40]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), RX_Buffer(BANK3[40]), 

    strstr@h	PTR const unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), RX_Buffer(BANK3[40]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_23(CODE[3]), STR_17(CODE[3]), STR_15(CODE[3]), STR_13(CODE[6]), 
		 -> STR_11(CODE[3]), STR_3(CODE[6]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_23(CODE[3]), STR_22(CODE[9]), STR_21(CODE[9]), STR_20(CODE[9]), 
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[7]), 
		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[9]), 
		 -> STR_11(CODE[3]), STR_10(CODE[9]), STR_9(CODE[9]), STR_8(CODE[3]), 
		 -> STR_7(CODE[9]), STR_6(CODE[3]), STR_5(CODE[9]), STR_4(CODE[3]), 
		 -> STR_3(CODE[6]), STR_1(CODE[6]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_23(CODE[3]), STR_22(CODE[9]), STR_21(CODE[9]), STR_20(CODE[9]), 
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[7]), 
		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[9]), 
		 -> STR_11(CODE[3]), STR_10(CODE[9]), STR_9(CODE[9]), STR_8(CODE[3]), 
		 -> STR_7(CODE[9]), STR_6(CODE[3]), STR_5(CODE[9]), STR_4(CODE[3]), 
		 -> STR_3(CODE[6]), STR_1(CODE[6]), 

    memset@dest	PTR void  size(1) Largest target is 12
		 -> speedBuffer(BANK1[12]), 

    memset@s	PTR unsigned char  size(1) Largest target is 12
		 -> speedBuffer(BANK1[12]), 

    memcpy@d1	PTR void  size(1) Largest target is 12
		 -> masterMAC(BANK2[12]), slaveMAC(BANK2[12]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 12
		 -> masterMAC(BANK2[12]), slaveMAC(BANK2[12]), 

    memcpy@s1	PTR const void  size(1) Largest target is 40
		 -> NULL(NULL[0]), RX_Buffer(BANK3[40]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), RX_Buffer(BANK3[40]), 

    __ctoee@addr	PTR eeprom void  size(1) Largest target is 1
		 -> EEPROM_uiBrakeMode(EEDATA[1]), EEPROM_uiSpeedMode(EEDATA[1]), 

    __eetoc@addr	PTR eeprom void  size(1) Largest target is 1
		 -> EEPROM_uiBrakeMode(EEDATA[1]), EEPROM_uiSpeedMode(EEDATA[1]), 

    __memcpyee@to	PTR eeprom unsigned char  size(1) Largest target is 1
		 -> EEPROM_uiBrakeMode(EEDATA[1]), EEPROM_uiSpeedMode(EEDATA[1]), 

    __memcpyee@from	PTR const unsigned char  size(1) Largest target is 8
		 -> __fltoee@data(COMMON[4]), __fttoee@data(COMMON[4]), __otoee@data(COMMON[8]), __ltoee@data(COMMON[4]), 
		 -> __mtoee@data(COMMON[3]), __itoee@data(COMMON[2]), __ctoee@data(BANK0[1]), 

    __memcpyee@ptr	PTR const unsigned char  size(1) Largest target is 8
		 -> __fltoee@data(COMMON[4]), __fttoee@data(COMMON[4]), __otoee@data(COMMON[8]), __ltoee@data(COMMON[4]), 
		 -> __mtoee@data(COMMON[3]), __itoee@data(COMMON[2]), __ctoee@data(BANK0[1]), 

    __eecpymem@from	PTR eeprom unsigned char  size(1) Largest target is 1
		 -> EEPROM_uiBrakeMode(EEDATA[1]), EEPROM_uiSpeedMode(EEDATA[1]), 

    __eecpymem@to	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoo@data(COMMON[8]), __eetol@data(COMMON[4]), 
		 -> __eetom@data(COMMON[3]), __eetoi@data(COMMON[2]), __eetoc@data(BANK0[1]), 

    __eecpymem@cp	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoo@data(COMMON[8]), __eetol@data(COMMON[4]), 
		 -> __eetom@data(COMMON[3]), __eetoi@data(COMMON[2]), __eetoc@data(BANK0[1]), 

    setBTConnection@MAC	PTR unsigned char  size(1) Largest target is 12
		 -> masterMAC(BANK2[12]), slaveMAC(BANK2[12]), 

    sp__memcpy	PTR void  size(1) Largest target is 12
		 -> masterMAC(BANK2[12]), slaveMAC(BANK2[12]), 

    getBTAddress@MAC	PTR unsigned char  size(1) Largest target is 12
		 -> masterMAC(BANK2[12]), slaveMAC(BANK2[12]), 

    getBTAddress@addrPointer	PTR unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), RX_Buffer(BANK3[40]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), RX_Buffer(BANK3[40]), 

    int16ToBytes@ndata	PTR unsigned char  size(1) Largest target is 12
		 -> speedBuffer(BANK1[12]), 

    calcCRC@ptr	PTR unsigned char  size(1) Largest target is 12
		 -> estopBuffer(BANK1[8]), speedBuffer(BANK1[12]), 

    receiveBTBuffer@buffer	PTR unsigned char  size(1) Largest target is 40
		 -> RX_Buffer(BANK3[40]), 

    sendBTBuffer@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[9]), STR_21(CODE[9]), STR_20(CODE[9]), STR_19(CODE[3]), 
		 -> STR_18(CODE[3]), STR_16(CODE[7]), STR_14(CODE[3]), STR_12(CODE[9]), 
		 -> STR_10(CODE[9]), STR_9(CODE[9]), STR_8(CODE[3]), STR_7(CODE[9]), 
		 -> STR_6(CODE[3]), STR_5(CODE[9]), STR_4(CODE[3]), STR_1(CODE[6]), 
		 -> masterMAC(BANK2[12]), slaveMAC(BANK2[12]), estopBuffer(BANK1[8]), speedBuffer(BANK1[12]), 

    sendBTString@buffer	PTR unsigned char  size(2) Largest target is 9
		 -> STR_22(CODE[9]), STR_21(CODE[9]), STR_20(CODE[9]), STR_19(CODE[3]), 
		 -> STR_18(CODE[3]), STR_16(CODE[7]), STR_14(CODE[3]), STR_12(CODE[9]), 
		 -> STR_10(CODE[9]), STR_9(CODE[9]), STR_8(CODE[3]), STR_7(CODE[9]), 
		 -> STR_6(CODE[3]), STR_5(CODE[9]), STR_4(CODE[3]), STR_1(CODE[6]), 

    sp__memset	PTR void  size(1) Largest target is 12
		 -> speedBuffer(BANK1[12]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UI_PWM_handler(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UI_PWM_handler(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    IOCCF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> turnPowerOn(), IOCCF2_DefaultInterruptHandler(), 

    IOCCF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i1_turnPowerOn(), turnPowerOn(), IOCCF2_DefaultInterruptHandler(), Absolute function(), 

    IOCCF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> turnPowerOn(), IOCCF0_DefaultInterruptHandler(), 

    IOCCF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i1_turnPowerOn(), turnPowerOn(), IOCCF0_DefaultInterruptHandler(), Absolute function(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), Absolute function(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timeKeeper(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timeKeeper(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> readJoystick(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> readJoystick(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR3_ISR->_TMR3_WriteTimer
    _TMR3_CallBack->_UI_PWM_handler
    _TMR2_CallBack->_timeKeeper
    _readJoystick->_sendBTSpeedCmd
    _sendBTSpeedCmd->_calcCRC
    _sendBTSpeedCmd->_int16ToBytes
    _sendBTEstopCmd->_calcCRC
    i1_sendBTBuffer->i1_EUSART1_Write
    _calculateMotion->_limitSpeed
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _showStartup->_sleep
    _showShutdown->_sleep
    _runUI->_pairBluetoothDevices
    _pairBluetoothDevices->_setBTConnection
    _setBTConnection->_pulseLEDColor
    _setBTConnection->_receiveBTBuffer
    _setBTBaudRatesTo38400->_pulseLEDColor
    _getBTAddress->_pulseLEDColor
    _getBTAddress->_receiveBTBuffer
    _SetMasterTXRX->_sleep
    _SetSlaveTXMasterRX->_sleep
    _doFactoryReset->_pulseLEDColor
    _doFactoryReset->_receiveBTBuffer
    _strstr->_strncmp
    _sendBTBuffer->_strlen
    _flushBTRXbuffer->_sleep
    _receiveBTBuffer->_getTicksSince
    _SetDualReceive->_sleep
    _bumpUISpeedMode->_blinkLEDColor
    _bumpUIBrakeMode->_blinkLEDColor
    _blinkLEDColor->_pulseLEDColor
    _pulseLEDColor->_sleep
    ___ctoee->___memcpyee
    _initUI->___eetoc
    ___eetoc->___eecpymem
    _initTimers->_TMR2_SetInterruptHandler
    _initSerial->_memset
    _initJoystick->_TMR1_SetInterruptHandler
    _initConfiguration->_setSerialBaud
    _setSerialBaud->_sleep
    _SetSlaveTXRX->_sleep
    _sleep->_getTicksSince
    _SYSTEM_Initialize->_EUSART1_Initialize
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_CallBack->_readJoystick
    _readJoystick->_sendBTSpeedCmd

Critical Paths under _main in BANK1

    _main->_runUI

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  195992
                    _BTTimeRemaining
                  _SYSTEM_Initialize
                     _enableJoystick
                  _initConfiguration
                       _initJoystick
                         _initSerial
                         _initTimers
                             _initUI
                          _powerIsOn
                       _resetBTTimer
                              _runUI
                       _showShutdown
                        _showStartup
                              _sleep
                       _turnPowerOff
                        _turnPowerOn
 ---------------------------------------------------------------------------------
 (1) _turnPowerOn                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _turnPowerOff                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _showStartup                                          2     2      0    3371
                                             22 BANK0      2     2      0
                       _setBTTimeout
                              _sleep
 ---------------------------------------------------------------------------------
 (2) _setBTTimeout                                         4     0      4     148
                                              6 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _showShutdown                                         2     2      0    3223
                                             22 BANK0      2     2      0
                              _sleep
 ---------------------------------------------------------------------------------
 (1) _runUI                                                6     6      0  174992
                                              0 BANK1      6     6      0
                    _BTTimeRemaining
                      _USER1_pressed
                      _USER2_pressed
                    _bumpUIBrakeMode
                    _bumpUISpeedMode
                    _disableJoystick
                     _doFactoryReset
                     _enableJoystick
                           _getTicks
                      _getTicksSince
                             _oneSec
               _pairBluetoothDevices
                      _pulseLEDColor
 ---------------------------------------------------------------------------------
 (2) _pairBluetoothDevices                                 1     1      0  111601
                                             36 BANK0      1     1      0
                 _SetSlaveTXMasterRX
                       _SetSlaveTXRX
                      _USER1_pressed
                      _USER2_pressed
                       _getBTAddress
                      _pulseLEDColor
                    _receiveBTBuffer
                       _sendBTString
              _setBTBaudRatesTo38400
                    _setBTConnection
                              _sleep
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _setBTConnection                                      8     7      1   29733
                                             28 BANK0      8     7      1
                      _SetMasterTXRX
                       _SetSlaveTXRX
                      _pulseLEDColor
                    _receiveBTBuffer
                       _sendBTBuffer
                       _sendBTString
                              _sleep
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _setBTBaudRatesTo38400                                0     0      0   24493
                     _SetDualReceive
                      _pulseLEDColor
                       _sendBTString
                      _setSerialBaud
                              _sleep
 ---------------------------------------------------------------------------------
 (3) _getBTAddress                                         7     6      1   29123
                                             28 BANK0      7     6      1
                      _SetMasterTXRX
                       _SetSlaveTXRX
                             _memcpy
                      _pulseLEDColor
                    _receiveBTBuffer
                       _sendBTString
                              _sleep
                             _strstr
 ---------------------------------------------------------------------------------
 (4) _memcpy                                               8     5      3     424
                                              6 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (4) _SetMasterTXRX                                        0     0      0    3121
                              _sleep
 ---------------------------------------------------------------------------------
 (3) _USER2_pressed                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USER1_pressed                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SetSlaveTXMasterRX                                   0     0      0    3121
                              _sleep
 ---------------------------------------------------------------------------------
 (2) _oneSec                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _enableJoystick                                       0     0      0       0
                    _TMR1_StartTimer
                       _resetBTTimer
 ---------------------------------------------------------------------------------
 (3) _resetBTTimer                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _doFactoryReset                                       4     4      0   31891
                                             28 BANK0      4     4      0
                     _SetDualReceive
                       _SetSlaveTXRX
                      _pulseLEDColor
                    _receiveBTBuffer
                       _sendBTString
                      _setSerialBaud
                              _sleep
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               8     6      2    2173
                                             15 BANK0      8     6      2
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     5      4     541
                                              6 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) _strchr                                               3     1      2     250
                                              6 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _sendBTString                                         3     1      2    6032
                                             22 BANK0      3     1      2
                    _flushBTRXbuffer
                       _sendBTBuffer
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               5     3      2     310
                                              6 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) _sendBTBuffer                                         4     0      4    1062
                                             11 BANK0      4     0      4
                      _EUSART1_Write
                _EUSART1_is_tx_ready
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _EUSART1_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        2     2      0      62
                                              6 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _flushBTRXbuffer                                      0     0      0    3158
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                              _sleep
 ---------------------------------------------------------------------------------
 (4) _receiveBTBuffer                                     14    11      3    2067
                                             14 BANK0     14    11      3
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                           _getTicks
                      _getTicksSince
 ---------------------------------------------------------------------------------
 (6) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Read                                         2     2      0      37
                                              6 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _SetDualReceive                                       0     0      0    3121
                              _sleep
 ---------------------------------------------------------------------------------
 (2) _disableJoystick                                      0     0      0       0
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bumpUISpeedMode                                      1     1      0   11415
                                             33 BANK0      1     1      0
                            ___awmod
                            ___ctoee
                      _blinkLEDColor
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              6 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _bumpUIBrakeMode                                      1     1      0   10802
                                             33 BANK0      1     1      0
                            ___ctoee
                      _blinkLEDColor
 ---------------------------------------------------------------------------------
 (3) _blinkLEDColor                                        5     2      3    9076
                                             28 BANK0      5     2      3
                      _pulseLEDColor
 ---------------------------------------------------------------------------------
 (2) _pulseLEDColor                                        6     0      6    8617
                                             22 BANK0      6     0      6
                        _setLEDColor
                              _sleep
 ---------------------------------------------------------------------------------
 (3) _setLEDColor                                          5     3      2     273
                                              6 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) ___ctoee                                              3     2      1    1726
                                             11 BANK0      3     2      1
                         ___memcpyee
 ---------------------------------------------------------------------------------
 (4) ___memcpyee                                           5     3      2    1402
                                              6 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _BTTimeRemaining                                     12     8      4      65
                                              6 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (1) _powerIsOn                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUI                                               1     1      0    1885
                                             14 BANK0      1     1      0
         _IOCCF0_SetInterruptHandler
         _IOCCF2_SetInterruptHandler
           _TMR3_SetInterruptHandler
                            ___eetoc
                           _getTicks
 ---------------------------------------------------------------------------------
 (2) ___eetoc                                              3     3      0    1363
                                             11 BANK0      3     3      0
                         ___eecpymem
 ---------------------------------------------------------------------------------
 (3) ___eecpymem                                           5     3      2    1229
                                              6 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _initTimers                                           0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _initSerial                                           1     1      0     904
                                             16 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                              10     6      4     904
                                              6 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) _initJoystick                                         0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _initConfiguration                                    0     0      0    6723
                       _SetSlaveTXRX
                      _setSerialBaud
 ---------------------------------------------------------------------------------
 (4) _setSerialBaud                                        2     0      2    3602
                                             22 BANK0      2     0      2
                              _sleep
 ---------------------------------------------------------------------------------
 (4) _SetSlaveTXRX                                         0     0      0    3121
                              _sleep
 ---------------------------------------------------------------------------------
 (1) _sleep                                                8     4      4    3121
                                             14 BANK0      8     4      4
                           _getTicks
                      _getTicksSince
 ---------------------------------------------------------------------------------
 (2) _getTicksSince                                        8     4      4     536
                                              6 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _getTicks                                             4     0      4       0
                                              6 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1360
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     174
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             2     0      2     174
                                              6 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     174
                                              6 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR1_SetInterruptHandler                             2     0      2     174
                                              6 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     348
         _IOCCF0_SetInterruptHandler
         _IOCCF2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _IOCCF2_SetInterruptHandler                           2     0      2     174
                                              6 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _IOCCF0_SetInterruptHandler                           2     0      2     174
                                              6 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     490
                                              8 BANK0      1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              6 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              6 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              6 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              6 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              6 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0    3352
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR3_ISR                                             0     0      0     240
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (10) _TMR3_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR3_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                     _UI_PWM_handler *
 ---------------------------------------------------------------------------------
 (11) _UI_PWM_handler                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (10) _TMR2_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                         _timeKeeper *
 ---------------------------------------------------------------------------------
 (11) _timeKeeper                                          4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (11) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR1_ISR                                             0     0      0    3112
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (10) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR1_CallBack                                       0     0      0    2872
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _readJoystick *
 ---------------------------------------------------------------------------------
 (11) _readJoystick                                        4     4      0    2872
                                              2 BANK0      4     4      0
                    _calculateMotion
                     _sendBTEstopCmd
                     _sendBTSpeedCmd
                     i1_EUSART1_Read
              i1_EUSART1_is_rx_ready
                         i1_getTicks
                    i1_getTicksSince
                     i1_resetBTTimer
                     i1_setBTTimeout
 ---------------------------------------------------------------------------------
 (12) i1_setBTTimeout                                      4     0      4      48
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (12) i1_resetBTTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i1_getTicksSince                                     8     4      4      48
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (12) i1_getTicks                                          4     0      4       0
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (12) i1_EUSART1_is_rx_ready                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i1_EUSART1_Read                                      2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) _sendBTSpeedCmd                                      7     2      5    1347
                                              8 COMMON     5     0      5
                                              0 BANK0      2     2      0
                            _calcCRC
                       _int16ToBytes
                     i1_sendBTBuffer
 ---------------------------------------------------------------------------------
 (13) _int16ToBytes                                        8     5      3     418
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (12) _sendBTEstopCmd                                      1     1      0     635
                                              8 COMMON     1     1      0
                            _calcCRC
                     i1_sendBTBuffer
 ---------------------------------------------------------------------------------
 (13) i1_sendBTBuffer                                      4     0      4     290
                                              2 COMMON     4     0      4
                    i1_EUSART1_Write
              i1_EUSART1_is_tx_ready
 ---------------------------------------------------------------------------------
 (14) i1_EUSART1_is_tx_ready                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i1_EUSART1_Write                                     2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (13) _calcCRC                                             8     8      0     345
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (12) _calculateMotion                                     0     0      0     770
                         _limitSpeed
 ---------------------------------------------------------------------------------
 (13) _limitSpeed                                         13     7      6     770
                                              0 COMMON    13     7      6
 ---------------------------------------------------------------------------------
 (11) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCCF0_ISR
                         _IOCCF2_ISR
 ---------------------------------------------------------------------------------
 (10) _IOCCF2_ISR                                          0     0      0       0
                   Absolute function *
     _IOCCF2_DefaultInterruptHandler *
                      i1_turnPowerOn *
 ---------------------------------------------------------------------------------
 (11) _IOCCF2_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _IOCCF0_ISR                                          0     0      0       0
                   Absolute function *
     _IOCCF0_DefaultInterruptHandler *
                      i1_turnPowerOn *
 ---------------------------------------------------------------------------------
 (11) i1_turnPowerOn                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _IOCCF0_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Receive_ISR                                  0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BTTimeRemaining
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF0_SetInterruptHandler
       _IOCCF2_SetInterruptHandler
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
   _enableJoystick
     _TMR1_StartTimer
     _resetBTTimer
   _initConfiguration
     _SetSlaveTXRX
       _sleep
         _getTicks
         _getTicksSince
     _setSerialBaud
       _sleep
         _getTicks
         _getTicksSince
   _initJoystick
     _TMR1_SetInterruptHandler
   _initSerial
     _memset
   _initTimers
     _TMR2_SetInterruptHandler
   _initUI
     _IOCCF0_SetInterruptHandler
     _IOCCF2_SetInterruptHandler
     _TMR3_SetInterruptHandler
     ___eetoc
       ___eecpymem
     _getTicks
   _powerIsOn
   _resetBTTimer
   _runUI
     _BTTimeRemaining
     _USER1_pressed
     _USER2_pressed
     _bumpUIBrakeMode
       ___ctoee
         ___memcpyee
       _blinkLEDColor
         _pulseLEDColor
           _setLEDColor
           _sleep
             _getTicks
             _getTicksSince
     _bumpUISpeedMode
       ___awmod
       ___ctoee
         ___memcpyee
       _blinkLEDColor
         _pulseLEDColor
           _setLEDColor
           _sleep
             _getTicks
             _getTicksSince
     _disableJoystick
       _TMR1_StopTimer
     _doFactoryReset
       _SetDualReceive
         _sleep
           _getTicks
           _getTicksSince
       _SetSlaveTXRX
         _sleep
           _getTicks
           _getTicksSince
       _pulseLEDColor
         _setLEDColor
         _sleep
           _getTicks
           _getTicksSince
       _receiveBTBuffer
         _EUSART1_Read
         _EUSART1_is_rx_ready
         _getTicks
         _getTicksSince
       _sendBTString
         _flushBTRXbuffer
           _EUSART1_Read
           _EUSART1_is_rx_ready
           _sleep
             _getTicks
             _getTicksSince
         _sendBTBuffer
           _EUSART1_Write
           _EUSART1_is_tx_ready
           _strlen (ARG)
         _strlen
       _setSerialBaud
         _sleep
           _getTicks
           _getTicksSince
       _sleep
         _getTicks
         _getTicksSince
       _strstr
         _strchr
         _strlen
         _strncmp
     _enableJoystick
       _TMR1_StartTimer
       _resetBTTimer
     _getTicks
     _getTicksSince
     _oneSec
     _pairBluetoothDevices
       _SetSlaveTXMasterRX
         _sleep
           _getTicks
           _getTicksSince
       _SetSlaveTXRX
         _sleep
           _getTicks
           _getTicksSince
       _USER1_pressed
       _USER2_pressed
       _getBTAddress
         _SetMasterTXRX
           _sleep
             _getTicks
             _getTicksSince
         _SetSlaveTXRX
           _sleep
             _getTicks
             _getTicksSince
         _memcpy
         _pulseLEDColor
           _setLEDColor
           _sleep
             _getTicks
             _getTicksSince
         _receiveBTBuffer
           _EUSART1_Read
           _EUSART1_is_rx_ready
           _getTicks
           _getTicksSince
         _sendBTString
           _flushBTRXbuffer
             _EUSART1_Read
             _EUSART1_is_rx_ready
             _sleep
               _getTicks
               _getTicksSince
           _sendBTBuffer
             _EUSART1_Write
             _EUSART1_is_tx_ready
             _strlen (ARG)
           _strlen
         _sleep
           _getTicks
           _getTicksSince
         _strstr
           _strchr
           _strlen
           _strncmp
       _pulseLEDColor
         _setLEDColor
         _sleep
           _getTicks
           _getTicksSince
       _receiveBTBuffer
         _EUSART1_Read
         _EUSART1_is_rx_ready
         _getTicks
         _getTicksSince
       _sendBTString
         _flushBTRXbuffer
           _EUSART1_Read
           _EUSART1_is_rx_ready
           _sleep
             _getTicks
             _getTicksSince
         _sendBTBuffer
           _EUSART1_Write
           _EUSART1_is_tx_ready
           _strlen (ARG)
         _strlen
       _setBTBaudRatesTo38400
         _SetDualReceive
           _sleep
             _getTicks
             _getTicksSince
         _pulseLEDColor
           _setLEDColor
           _sleep
             _getTicks
             _getTicksSince
         _sendBTString
           _flushBTRXbuffer
             _EUSART1_Read
             _EUSART1_is_rx_ready
             _sleep
               _getTicks
               _getTicksSince
           _sendBTBuffer
             _EUSART1_Write
             _EUSART1_is_tx_ready
             _strlen (ARG)
           _strlen
         _setSerialBaud
           _sleep
             _getTicks
             _getTicksSince
         _sleep
           _getTicks
           _getTicksSince
       _setBTConnection
         _SetMasterTXRX
           _sleep
             _getTicks
             _getTicksSince
         _SetSlaveTXRX
           _sleep
             _getTicks
             _getTicksSince
         _pulseLEDColor
           _setLEDColor
           _sleep
             _getTicks
             _getTicksSince
         _receiveBTBuffer
           _EUSART1_Read
           _EUSART1_is_rx_ready
           _getTicks
           _getTicksSince
         _sendBTBuffer
           _EUSART1_Write
           _EUSART1_is_tx_ready
           _strlen (ARG)
         _sendBTString
           _flushBTRXbuffer
             _EUSART1_Read
             _EUSART1_is_rx_ready
             _sleep
               _getTicks
               _getTicksSince
           _sendBTBuffer
             _EUSART1_Write
             _EUSART1_is_tx_ready
             _strlen (ARG)
           _strlen
         _sleep
           _getTicks
           _getTicksSince
         _strstr
           _strchr
           _strlen
           _strncmp
       _sleep
         _getTicks
         _getTicksSince
       _strstr
         _strchr
         _strlen
         _strncmp
     _pulseLEDColor
       _setLEDColor
       _sleep
         _getTicks
         _getTicksSince
   _showShutdown
     _sleep
       _getTicks
       _getTicksSince
   _showStartup
     _setBTTimeout
     _sleep
       _getTicks
       _getTicksSince
   _sleep
     _getTicks
     _getTicksSince
   _turnPowerOff
   _turnPowerOn

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCCF0_ISR
       Absolute function(Fake) *
       _IOCCF0_DefaultInterruptHandler *
       i1_turnPowerOn *
     _IOCCF2_ISR
       Absolute function(Fake) *
       _IOCCF2_DefaultInterruptHandler *
       i1_turnPowerOn *
   _TMR1_ISR *
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _readJoystick *
         _calculateMotion
           _limitSpeed
         _sendBTEstopCmd
           _calcCRC
           i1_sendBTBuffer
             i1_EUSART1_Write
             i1_EUSART1_is_tx_ready
         _sendBTSpeedCmd
           _calcCRC
           _int16ToBytes
           i1_sendBTBuffer
             i1_EUSART1_Write
             i1_EUSART1_is_tx_ready
         i1_EUSART1_Read
         i1_EUSART1_is_rx_ready
         i1_getTicks
         i1_getTicksSince
         i1_resetBTTimer
         i1_setBTTimeout
     _TMR1_WriteTimer
   _TMR2_ISR *
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _timeKeeper *
   _TMR3_ISR *
     _TMR3_CallBack
       Absolute function(Fake) *
       _TMR3_DefaultInterruptHandler *
       _UI_PWM_handler *
     _TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       2       0        0.8%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     25      49       5       91.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     14F       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      6      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      48      12       90.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      20      14       40.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              20      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     14F      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Aug 13 15:48:38 2020

                                ?_USER2_pressed 0070                              sendBTString@buffer 0036  
              __end_of_TMR2_SetInterruptHandler 1523                        _eusart1TxBufferRemaining 0068  
                        ?i1_EUSART1_is_rx_ready 0070                          ?i1_EUSART1_is_tx_ready 0070  
                          __end_of_getBTAddress 0490                          BTTimeRemaining@elapsed 002E  
                                            l33 08AF                                              l36 07FF  
                                            l39 147A                                              l66 1519  
                               ?i1_resetBTTimer 0070                                  ?_pulseLEDColor 0036  
                                           l106 1743                                             l230 0C61  
                                           l152 1522                                             l233 153D  
                                           l236 1534                                             l421 0CEE  
                                           l342 1716                                             l254 0A6A  
                                           l255 0A74                                             l512 152B  
                                           l600 0FF1                                             l345 14FE  
                                           l433 1507                                             l249 0AE8  
                                           l290 14E3                                             l258 0A8E  
                                           l443 1510                                             l348 156D  
                                           l293 14D1                                             l287 14DA  
                                           l296 14F5                                             l299 14EC  
                                           l479 08D0                                             l680 1490  
                                           l913 158E                                             l922 16EA  
                                           l930 154F                                             l843 09DF  
                                           l683 16AB                                             l916 1696  
                                           l756 095F                                             l828 17E2  
                                           l852 1670                                             l836 1582  
                                           l781 08E9                                             l765 1791  
                                           l677 1546                                             l925 16D5  
                                           l933 1483                                             l846 1577  
                                           l943 086E                                             l919 16C0  
                                           l951 0688                                             l855 1681  
                                           l935 1486                                             l928 154B  
                                           l849 172C                                             l785 08F1  
                                           l777 0B72                                             l929 154D  
                                           l938 1477                                             l794 0EE9  
                                           l970 048F                                             l859 0E8D  
                                           l955 06B3                                             l958 07CC  
                                           l975 055D                                             l992 054E  
                                           l985 060C                                             _PR2 028D  
                                  ___ctoee@addr 002D                                    ___ctoee@data 002B  
                               _timer1ReloadVal 00D8                         __size_of_PMD_Initialize 000A  
                                  ___awmod@sign 002C                                 _TMR2_Initialize 172D  
                                           wreg 0009                                      i1_getTicks 1550  
              ??_IOCCF2_DefaultInterruptHandler 0070                 ?_IOCCF2_DefaultInterruptHandler 0070  
            __end_of_IOCCF0_SetInterruptHandler 1508                      _IOCCF0_SetInterruptHandler 14FF  
                               _topSweepSpeedFP 00DA                            getBTAddress@isMaster 003C  
                       __size_of_UI_PWM_handler 003B                        __size_of_BTTimeRemaining 005C  
                                          l1200 0B86                                            l1105 02A3  
                                          l1202 0BA1                                            l1210 0D04  
                                          l1130 175D                                            l1114 17FF  
                                          l1122 0A0A                                            l1108 0989  
                                          l1213 0D21                                            l1205 0CF5  
                                          l1133 0938                                            l1222 160B  
                                          l1214 0D28                                            l1071 0CA7  
                                          l1207 0CFA                                            l1127 084F  
                                          l1216 0D2C                                            l1219 0D3B  
                                          l1139 0831                                            l1237 15C2  
                                          l1174 14AF                                            l1177 14B6  
                               _timer3ReloadVal 00C4                                            l4100 0C5C  
                                          l4020 088F                                            l1196 0B79  
                                          l4102 0C5D                                            l4030 089A  
                                          l4022 0892                                            l1198 0B7E  
                                          l4104 0C5E                                            l4120 0CBB  
                                          l4112 1564                                            l4032 08A2  
                                          l4024 0894                                            l5000 03C4  
                                          l4106 0C5F                                            l4130 0CC3  
                                          l4122 0CBD                                            l4114 0CA8  
                                          l4034 08A4                                            l4026 0896  
                                          l5010 03EB                                            l5002 03C8  
                                          l4140 0CD4                                            l4132 0CD0  
                                          l4124 0CBF                                            l4116 0CB8  
                                          l4036 08AC                                            l4028 0898  
                                          l4060 1731                                            l5100 0DDE  
                                          l1820 0D89                                            l5020 041E  
                                          l5012 03F1                                            l5004 03CB  
                                          l4150 14F6                                            l4142 0CD5  
                                          l4134 0CD1                                            l4126 0CC1  
                                          l4118 0CB9                                            l4070 1740  
                                          l4062 1734                                            l4230 06B6  
                                          l5110 0DEF                                            l5102 0DE0  
                                          l5030 0451                                            l5022 0424  
                                          l5014 03F9                                            l5006 03D3  
                                          l1495 0E31                                            l1807 1777  
                                          l4080 0C28                                            l4152 14F9  
                                          l4144 0CD6                                            l4136 0CD2  
                                          l4128 0CC2                                            l4064 1735  
                                          l4056 172D                                            l4160 08B3  
                                          l4240 06D3                                            l4232 06BA  
                                          l5120 0E06                                            l5112 0DF4  
                                          l5104 0DE4                                            l5200 04AF  
                                          l5032 045D                                            l5024 0429  
                                          l5016 0400                                            l5008 03DF  
                                          l1833 0F45                                            l4090 0C3B  
                                          l4082 0C32                                            l4154 14FA  
                                          l4146 0CDE                                            l4138 0CD3  
                                          l4066 1737                                            l4058 1730  
                                          l4170 08C3                                            l4162 08B5  
                                          l4410 170A                                            l4250 06F7  
                                          l5122 0E0A                                            l5114 0DFA  
                                          l5130 0E23                                            l5106 0DE9  
                                          l1826 1794                                            l5210 04F7  
                                          l5202 04C3                                            l5034 0462  
                                          l5042 0480                                            l5026 0438  
                                          l5018 0411                                            l5050 055A  
                                          l4092 0C3C                                            l4084 0C35  
                                          l4076 0C1E                                            l4156 14FD  
                                          l4148 0CE6                                            l4068 1738  
                                          l4172 08C5                                            l4164 08B7  
                                          l4412 170D                                            l4404 1701  
                                          l4252 0702                                            l4244 06DD  
                                          l4236 06C1                                            l5132 0E28  
                                          l5124 0E14                                            l5116 0DFD  
                                          l5108 0DEB                                            l1828 17AB  
                                          l5220 052B                                            l5212 04FF  
                                          l5204 04CF                                            l5140 1540  
                                          l5036 046F                                            l5028 0440  
                                          l5060 0595                                            l5052 0569  
                                          l5300 0112                                            l4228 1671  
                                          l4094 0C44                                            l4086 0C37  
                                          l4078 0C20                                            l4174 08CD  
                                          l4166 08B9                                            l4158 08B0  
                                          l4414 1710                                            l4406 1704  
                                          l4270 074A                                            l4262 0729  
                                          l4246 06E4                                            l4238 06C8  
                                          l4430 17C7                                            l5134 0E2D  
                                          l5126 0E18                                            l5118 0E02  
                                          l5230 0974                                            l5222 0530  
                                          l5214 0507                                            l5206 04E3  
                                          l5142 1543                                            l5070 05D4  
                                          l5062 059A                                            l5054 0571  
                                          l5046 0551                                            l5310 0154  
                                          l5302 0114                                            l1791 07FC  
                                          l4096 0C4C                                            l4088 0C39  
                                          l4168 08BB                                            l4416 1713  
                                          l4408 1707                                            l4272 074E  
                                          l4264 073A                                            l4256 070C  
                                          l4248 06EC                                            l4440 094B  
                                          l4432 17D9                                            l5240 0C62  
                                          l5152 0E71                                            l5144 0E32  
                                          l5128 0E1D                                            l5232 097C  
                                          l5224 053F                                            l5216 0518  
                                          l5208 04EB                                            l5160 1578  
                                          l5080 14A9                                            l5072 05E5  
                                          l5064 05A9                                            l5056 0582  
                                          l5048 0556                                            l5320 0175  
                                          l5312 015A                                            l5304 0124  
                                          l4098 0C58                                            l3730 1511  
                                          l4450 1697                                            l4274 0752  
                                          l4266 073E                                            l4258 071F  
                                          l4442 0951                                            l4434 17DB  
                                          l5250 0C7F                                            l5242 0C68  
                                          l5146 0E68                                            l5090 0817  
                                          l5234 17E3                                            l5226 054B  
                                          l5218 0525                                            l5138 153E  
                                          l5162 157E                                            l5170 1581  
                                          l5074 05F2                                            l5066 05B5  
                                          l5058 058F                                            l5330 019E  
                                          l5322 0177                                            l5306 0127  
                                          l5402 0837                                            l5410 0FA3  
                                          l1795 0758                                            l3740 14ED  
                                          l4460 16AA                                            l4452 169F  
                                          l4268 0743                                            l4444 0952  
                                          l4436 0939                                            l4356 15FF  
                                          l5260 0C9F                                            l5252 0C80  
                                          l5244 0C7B                                            l5092 0826  
                                          l5236 17EA                                            l5228 0960  
                                          l5156 148C                                            l5164 157F  
                                          l5084 14B0                                            l1788 07F0  
                                          l5076 05F8                                            l5068 05BF  
                                          l5180 0636                                            l5340 01AC  
                                          l5332 01A1                                            l5324 017F  
                                          l5316 016A                                            l5308 012F  
                                          l5404 083B                                            l5420 0FB4  
                                          l5412 0FA9                                            l3742 14D2  
                                          l5262 1583                                            l4454 16A2  
                                          l4446 0958                                            l4438 0945  
                                          l4358 1609                                            l5254 0C88  
                                          l5246 0C7D                                            l5094 082B  
                                          l5238 17F2                                            l5158 148F  
                                          l5078 05FD                                            l5182 0648  
                                          l5190 0694                                            l5174 060D  
                                          l5350 01F4                                            l5342 01CF  
                                          l5334 01A3                                            l5326 018F  
                                          l5318 0172                                            l5406 0846  
                                          l5270 09E3                                            l4614 1485  
                                          l5430 0FCC                                            l5422 0FB7  
                                          l5414 0FAC                                            l3744 14DB  
                                          l3760 1508                                            l3736 151A  
                                          l4456 16A5                                            l4448 0959  
                                          l5256 0C90                                            l5248 0C7E  
                                          l4632 1475                                            l5096 15B8  
                                          l5088 0814                                            l5192 069C  
                                          l5184 0656                                            l5176 062A  
                                          l5360 0206                                            l5352 01F7  
                                          l5344 01DE                                            l5328 0196  
                                          l5408 084B                                            l5280 09FF  
                                          l5272 09E7                                            l5264 09E0  
                                          l5440 0FE3                                            l5432 0FCF  
                                          l5424 0FBA                                            l5416 0FB2  
                                          l3746 14C9                                            l3738 14E4  
                                          l3762 1523                                            l4722 1717  
                                          l4458 16A8                                            l5258 0C97  
                                          l4810 08D5                                            l4730 1535  
                                          l4802 0B71                                            l5194 06A4  
                                          l5186 0667                                            l5178 062E  
                                          l5362 020E                                            l5354 01FA  
                                          l5346 01E4                                            l5290 00C4  
                                          l5282 00A2                                            l5274 09F2  
                                          l5442 0FEB                                            l5434 0FDB  
                                          l5426 0FBD                                            l5418 0FB3  
                                          l4900 0862                                            l4740 0ABC  
                                          l4812 08DD                                            l4820 1771  
                                          l5196 0490                                            l5188 0678  
                                          l5380 0261                                            l5364 0211  
                                          l5348 01EC                                            l5292 00CC  
                                          l5284 00A3                                            l5372 0215  
                                          l5276 09F7                                            l5436 0FDE  
                                          l5428 0FC9                                            l3758 14FF  
                                          l4726 156E                                            l4902 1682  
                                          l4750 0ADF                                            l4742 0AC2  
                                          l4734 152C                                            l4806 08D1  
                                          l4814 175E                                            l4830 0EEC  
                                          l5198 04A7                                            l4910 16D6  
                                          l5382 0272                                            l5358 01FE  
                                          l5294 00DF                                            l5374 0236  
                                          l5286 00AB                                            l5278 09FE  
                                          l5438 0FE2                                            l4904 168A  
                                          l4824 1744                                            l4752 0AE1  
                                          l4744 0AD4                                            l4808 08D2  
                                          l4760 0A65                                            l4816 1764  
                                          l4840 0F07                                            l4832 0EF4  
                                          l4920 0D64                                            l4912 16DE  
                                          l5384 0282                                            l5376 023E  
                                          l5296 00E5                                            l5288 00BE  
                                          l3970 0B88                                            l4826 174A  
                                          l4906 16AC                                            l4754 0AE4  
                                          l4746 0AD8                                            l4738 0ABC  
                                          l4770 0A83                                            l4762 0A65  
                                          l4818 1768                                            l4850 0F27  
                                          l4842 0F0B                                            l4834 0F00  
                                          l4930 0D88                                            l4914 0D3E  
                                          l5386 0293                                            l5378 0251  
                                          l5474 021F                                            l5298 00ED  
                                          l5394 0832                                            l4780 09C1  
                                          l3972 0B90                                            l4828 1758  
                                          l4908 16B4                                            l4756 0AE6  
                                          l4748 0ADE                                            l4772 0A89  
                                          l4764 0A6F                                            l4852 0F37  
                                          l4844 0F0F                                            l4924 0D66  
                                          l4916 0D44                                            l4940 07E0  
                                          l5396 0832                                            l3974 0B94  
                                          l3966 0B75                                            l4950 0D02  
                                          l4934 0915                                            l4774 0A8A  
                                          l4766 0A75                                            l4790 0B63  
                                          l4782 0B45                                            l4870 177B  
                                          l4862 17A0                                            l4846 0F18  
                                          l4838 0F03                                            l4918 0D51  
                                          l4926 0D7A                                            l4942 07E4  
                                          l3976 0B99                                            l3968 0B7F  
                                          l4960 0D1C                                            l4952 0D09  
                                          l4944 0CF1                                            l4880 0EB1  
                                          l4872 0E90                                            l4768 0A7F  
                                          l4776 0A8C                                            l4792 0B68  
                                          l4784 0B4B                                            l4864 17AA  
                                          l4856 1794                                            l4848 0F21  
                                          l4928 0D7F                                            l4936 07CF  
                                          l4778 09B5                                            l4962 0D20  
                                          l4954 0D10                                            l4970 0D33  
                                          l4946 0CFB                                            l4882 0EB5  
                                          l4874 0E9C                                            l4786 0B52  
                                          l4794 0B6A                                            l4858 179E  
                                          l4938 07D8                                            l4892 0850  
                                          l4964 0D23                                            l4956 0D15  
                                          l4948 0D00                                            l4876 0E9E  
                                          l4884 0EB9                                            l4796 0B6F  
                                          l4788 0B5A                                            l4868 1778  
                                          l4972 07FD                                            l4980 16C9  
                                          l4894 0858                                            l4966 0D27  
                                          l4958 0D1A                                            l4974 1478  
                                          l4886 0EC0                                            l4878 0EA6  
                                          l4990 079C                                            l4982 0759  
                                          l4896 085B                                            l4968 0D32  
                                          l4888 0EE8                                            l4976 1660  
                                          l4992 07B0                                            l4984 0774  
                                          l4898 085D                                            l4978 16C1  
                                          l4994 07B8                                            l4986 077C  
                                          l4996 07C4                                            l4988 0790  
                                          l4998 03BF                                            STR_1 1846  
                                          STR_3 1846                                            STR_4 1855  
                                          STR_5 181B                                            STR_6 1855  
                                          STR_7 182D                                            STR_8 1855  
                                          STR_9 1812                                            _LATA 0018  
                                          _LATB 0019                                            _LATC 001A  
                                          u4000 00CC                                            u4001 00CB  
                                          u4010 00ED                                            u4011 00EC  
                                          u4100 01EC                                            u4020 0112  
                                          u4101 01EB                                            u4021 0111  
                                          u4110 01F4                                            u4030 012F  
                                          u4111 01F3                                            u4031 012E  
                                          u3400 0A6F                                            u4120 0206  
                                          u4040 0154                                            u3401 0A6E  
                                          u4121 0205                                            u4041 0153  
                                          u2610 0B7E                                            u3410 0A89  
                                          u3330 153C                                            u4130 020E  
                                          u4050 0172                                            _T2PR 028D  
                                          u2611 0B7D                                            u3411 0A88  
                                          u3331 153A                                            u4131 020D  
                                          u4051 0171                                            u3420 09DF  
                                          u2620 0BA1                                            u3340 153D  
                                          u4140 023E                                            u4060 017F  
                                          u3421 09DE                                            u2621 0BA0  
                                          u4141 023D                                            u4061 017E  
                                          u3350 1533                                            u3430 0B4B  
                                          u3510 0F00                                            u4150 0261  
                                          u4070 019E                                            u3351 1531  
                                          u3431 0B4A                                            u3511 0EFF  
                                          u4151 0260                                            u4071 019D  
                                          u2800 06C0                                            u3360 1534  
                                          u3600 0EE8                                            u3440 0B51  
                                          u3520 0F18                                            u4160 0282  
                                          u4080 01AB                                            u3425 09DB  
                                          u2801 06BF                                            u3505 174F  
                                          u3601 0EE7                                            u3441 0B50  
                                          u3521 0F17                                            u4161 0281  
                                          u4081 01AA                                            u3610 0858  
                                          u2810 06DC                                            u3370 0AC2  
                                          u3450 0B5A                                            u3530 0F21  
                                          u4090 01CF                                            u4170 084F  
                                          u3611 0857                                            u2811 06DB  
                                          u3371 0AC1                                            u3603 0EE4  
                                          u3451 0B59                                            u3531 0F20  
                                          u4091 01CE                                            u4171 084E  
                                          u2820 070B                                            u3700 0D2C  
                                          u3380 0ADE                                            u3460 0B6F  
                                          u3540 0F27                                            u3620 0D44  
                                          u4180 0FDB                                            u2821 070A  
                                          u3701 0D2B                                            u3381 0ADD  
                                          u3461 0B6E                                            u3541 0F26  
                                          u3621 0D43                                            u4181 0FDA  
                                          u2830 0728                                            u3710 0D32  
                                          u3470 08DD                                            u3390 0A6A  
                                          u3550 0F37                                            u3630 0D64  
                                          u4190 0FEB                                            u2831 0727  
                                          u3711 0D31                                            u3471 08DC  
                                          u3391 0A69                                            u3551 0F36  
                                          u3631 0D63                                            u4191 0FEA  
                                          u2840 0758                                            u3720 0D3B  
                                          u3480 08F1                                            u3560 179E  
                                          u3640 0D7F                                            u3800 05F2  
                                          u2841 0757                                            u3721 0D3A  
                                          u3481 08F0                                            u3561 179D  
                                          u3641 0D7E                                            u3801 05F1  
                                          u3810 0831                                            u3490 1771  
                                          u3570 17AA                                            u3650 0D88  
                                          u3730 03C4                                            u3811 0830  
                                          u3491 1770                                            u3571 17A9  
                                          u3651 0D87                                            u3731 03C3  
                                          u3900 0E28                                            u3820 0DE4  
                                          u3580 0EA6                                            u3660 07FC  
                                          u3740 03F1                                            _PMD0 0796  
                                          u3901 0E27                                            u3821 0DE3  
                                          u3581 0EA5                                            u3661 07FB  
                                          u3741 03F0                                            _PMD1 0797  
                                          u3910 0E68                                            u3670 0CFA  
                                          u3830 0DEF                                            u3590 0EC0  
                                          u3750 041E                                            _PMD2 0798  
                                          u3911 0E67                                            u3671 0CF9  
                                          u3831 0DEE                                            u3591 0EBF  
                                          u3751 041D                                            _PMD3 0799  
                                          u3680 0D09                                            u3840 0DFA  
                                          u3920 157E                                            u3760 0462  
                                          _PMD4 079A                                            u3681 0D08  
                                          u3841 0DF9                                            u3921 157D  
                                          u3761 0461                                            _PMD5 079B  
                                          u3690 0D20                                            u3770 0556  
                                          u3930 0648                                            _PMD6 079C  
                                          u3915 0E64                                            u3691 0D1F  
                                          u3771 0555                                            u3931 0647  
                                          _PMD7 079D                                            u3860 0E0A  
                                          u3780 058F                                            u3940 0656  
                                          u3861 0E09                                            u3781 058E  
                                          u3941 0655                                            u3870 0E14  
                                          u3790 05BF                                            u3950 069C  
                                          i1l63 159B                                            i1l47 164E  
                                          u3871 0E13                                            u3855 0DFE  
                                          u3791 05BE                                            u3951 069B  
                                          u3960 06A4                                            u3961 06A3  
                                          u3890 0E23                                            u3970 0525  
                                          i1l59 15D0                                            u3891 0E22  
                                          u3875 0E10                                            u3971 0524  
                                          u3980 09FE                                            i1l69 0801  
                                          u3885 0E19                                            u3981 09FD  
                                          u3990 00AB                               ??_setBTConnection 003D  
                                          u3991 00AA                                            _TMR2 028C  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                                   _EUSART1_Write 0A63  
                                          _main 0FA3                                   ?_EUSART1_Read 0070  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          btemp 007E                                ?_bumpUIBrakeMode 0070  
                                          start 005B                             sendBTSpeedCmd@axial 0078  
                               _TMR3_Initialize 08B0                      ??_TMR1_SetInterruptHandler 0028  
                            runUI@timeRemaining 00EC                                    _accelAxialFP 00B2  
                       __end_ofi1_getTicksSince 1701                  __size_of_OSCILLATOR_Initialize 0009  
                              ?_calculateMotion 0070                   __end_of_OSCILLATOR_Initialize 14FF  
                           __size_of_IOCCF0_ISR 000F                             _accelLimitYawStopFP 00DC  
                           __size_of_IOCCF2_ISR 000F                           _eusart1RxStatusBuffer 0120  
                                         ?_main 0070                                 __end_of___eetoc 160C  
                                   _turnPowerOn 1547                                           STR_10 1809  
                                         STR_11 1852                                           STR_12 1824  
                                         STR_20 1800                                           STR_21 182D  
                                         STR_13 184C                                           STR_14 1855  
                                         STR_22 1836                                           STR_23 1852  
                                         STR_15 1852                                           STR_16 183F  
                                         STR_17 1852                                 __end_of___ctoee 15C3  
                                         STR_18 1855                                           STR_19 1855  
                               __end_of___awmod 0E32                                 _TMR1_StartTimer 07FD  
                              ??_SetDualReceive 0036                                 __end_of_calcCRC 0FA3  
                                         _T1CLK 0211                                           _T1CON 020E  
                                         _T3CLK 0217                                           _T2CON 028E  
                                         _T3CON 0214                                           _T2HLT 028F  
                                         _T2TMR 028C                                           i1l233 14BF  
                                         i1l145 1496                                           _T2RST 0291  
                                         i1l155 0002                                           i1l236 14C8  
                                         i1l261 0912                                           i1l149 15A8  
                                         i1l430 15ED                                           i1l254 0991  
                                         _B_LED 0051                                           i1l271 0C1D  
                                         i1l255 099A                                           i1l264 0914  
                                         i1l440 15FC                                           i1l281 1482  
                                         i1l249 0A62                                           i1l505 15DE  
                                         i1l426 162C                                           i1l258 09B4  
                                         i1l275 17C6                                           i1l515 0003  
                                         i1l284 147E                                           i1l436 0800  
                                         i1l509 15B5                                           i1l278 1473  
                                         i1l446 1474                                           i1l710 03BC  
                                         i1l551 002F                                           i1l552 0059  
                                         i1l721 0DDD                                           i1l713 0B16  
                                         i1l553 003B                                           i1l706 03B4  
                                         i1l546 0013                                           i1l555 004A  
                                         i1l804 0FA2                                           i1l717 0DA9  
                                         i1l493 165F                                           i1l549 0023  
                                         i1l558 0059                                           i1l832 088E  
                                         i1l809 0B44                                           i1l930 148B  
                                         i1l762 0813                                           i1l852 163D  
                                         i1l692 0303                                           i1l846 1559  
                                         i1l694 030C                                           i1l759 0ABB  
                                         i1l855 1563                                           i1l928 1487  
                                         i1l929 1489                                           i1l777 0A36  
                                         i1l849 1700                                           i1l698 033E  
                                  ?_setLEDColor 0026                            _pairBluetoothDevices 060D  
                              showShutdown@ramp 0037                                           _G_LED 0052  
                           _doFactoryReset$1680 003E                                           _OSCEN 0891  
                                         _TMR1H 020D                                           _TMR1L 020C  
                                         _TMR3H 0213                                           _TMR3L 0212  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014                                           _R_LED 0053  
             __size_of_TMR3_SetInterruptHandler 0009                            _EUSART1_Transmit_ISR 08F2  
                     ?_TMR3_SetInterruptHandler 0026                                __end_of_TMR1_ISR 15D1  
                               showStartup@ramp 0037                                __end_of_TMR2_ISR 1497  
                              __end_of_TMR3_ISR 15DF                  ??_TMR3_DefaultInterruptHandler 0070  
                       __end_of_PIN_MANAGER_IOC 162D                                           _sleep 09B5  
                                         _runUI 00A2                                  ?_EUSART1_Write 0070  
                       __end_of_TMR1_Initialize 08B0                            __end_of_int16ToBytes 0B45  
                                         pclath 000A                                  ??_EUSART1_Read 0026  
                                 ___memcpyee@to 002A                                           status 0003  
                                         wtemp0 007E                               setSerialBaud@baud 0036  
                               __end_of_strncmp 0F46      __end_of_EUSART1_DefaultFramingErrorHandler 1474  
   __size_of_EUSART1_DefaultFramingErrorHandler 0001            ??_EUSART1_DefaultFramingErrorHandler 0070  
           ?_EUSART1_DefaultFramingErrorHandler 0070              _EUSART1_DefaultFramingErrorHandler 1473  
                               _TMR1_WriteTimer 163E                           __size_of_turnPowerOff 0004  
                               ??_USER1_pressed 0026                                ?_bumpUISpeedMode 0070  
                              ??i1_setBTTimeout 0074                                 ??_USER2_pressed 0026  
                       getBTAddress@addrPointer 0042                                 __initialization 005D  
                       ??_setBTBaudRatesTo38400 003C                      __end_of_EUSART1_Initialize 0C62  
                                  __end_of_main 1000                                 ??_pulseLEDColor 003C  
                       __end_of_TMR2_Initialize 1744                     ?_INTERRUPT_InterruptManager 0070  
                         __end_of_setSerialBaud 086F                        _TMR2_SetInterruptHandler 151A  
                                        ??_main 0045                           __end_ofi1_turnPowerOn 148C  
                         ?_pairBluetoothDevices 0070                           _TMR3_InterruptHandler 00C2  
                                 ?_initJoystick 0070                         _IOCCF2_InterruptHandler 00C6  
                         ?_EUSART1_Transmit_ISR 0070                                     ?i1_getTicks 0070  
                              ??i1_sendBTBuffer 0076                           __end_of_blinkLEDColor 0832  
                                  _turnPowerOff 1483                                   ?_readJoystick 0070  
                                        ?_sleep 002E                                          ?_runUI 0070  
                                        _ANSELA 1F38                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                                          _T1GATE 0210  
                                        _T1GCON 020F                                          _T3GATE 0216  
                                        _T3GCON 0215                                          _RC1REG 0119  
                                        _RC1STA 011D                         TMR1_WriteTimer@timerVal 0070  
                                        _RC4PPS 1F24                                          i1l1150 0BBB  
                                        i1l1144 0BB3                                          i1l1153 0BBD  
                                        i1l1163 0BCD                                          i1l1171 0BDC  
                                        i1l1147 0BB5                                          i1l1156 0BC3  
                                        i1l1166 0BD4                                          i1l1159 0BC5  
                                        i1l1169 0BDB                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          i1l4110 147B  
                                        i1l3400 0D94                                          i1l4040 1643  
                                        i1l4200 165D                    __size_of_EUSART1_is_rx_ready 0009  
                                        i1l3410 0DBE                                          i1l3402 0D9A  
                                        i1l4050 164C                                          i1l4042 1644  
                                        i1l4202 15A9                                          i1l4108 147F  
                                        i1l3412 0DD3                                          i1l3404 0D9F  
                                        i1l4052 158F                                          i1l4044 1646  
                                        i1l4204 15B0                                          i1l3414 0DD9  
                                        i1l3406 0DA5                                          i1l3430 0B33  
                                        i1l4054 1596                                          i1l4046 1648  
                                        i1l4038 163E                                          i1l4400 0C13  
                                        i1l3408 0DB7                                          i1l3440 0F61  
                                        u210_20 0A33                                          i1l3432 0B37  
                                        i1l3424 0B19                                          i1l4048 164A  
                                        i1l4072 159C                                          u210_21 0A32  
                                        i1l4402 0C1A                                          i1l3450 0F7E  
                                        i1l3442 0F65                                          i1l3434 0F47  
                                        i1l3426 0B20                                          i1l3418 0B17  
                                        i1l4074 15A3                                          i1l4180 15EB  
                                        i1l4420 1621                                          i1l3460 0F9E  
                                        i1l3444 0F69                                          i1l3452 0F84  
                                        i1l3436 0F4F                                          i1l3380 098B  
                                        i1l3428 0B24                                          i1l3700 0A3D  
                       __end_of_TMR3_Initialize 08D1                                          i1l4182 15EE  
                                        i1l4422 1624                                          i1l3454 0F8C  
                                        i1l3446 0F6D                                          i1l3438 0F52  
                                        i1l3390 09AF                                          i1l3382 0996  
                                        i1l3374 14B7                                          i1l3550 0A0B  
                                        i1l3710 0A5C                                          i1l3702 0A4F  
                                        i1l4190 1654                                          i1l4176 15DF  
                                        i1l4184 15F5                                          i1l4424 1629  
                                        i1l3456 0F93                                          i1l3448 0F7A  
                                        i1l3392 09B0                                          i1l3384 099B  
                                        i1l3560 0A2C                                          i1l3552 0A10  
                                        i1l3712 0A5F                                          i1l3704 0A53  
                                        i1l3800 031C                                          i1l4192 1655  
                                        i1l4178 15E6                                          i1l4186 15FA  
                                        i1l4418 161C                                          i1l3458 0F97  
                                        i1l3386 09A5                                          i1l3394 09B2  
                                        i1l3378 098B                                          i1l3554 0A18  
                                        i1l3570 0A35                                          i1l3562 0A2E  
                                        i1l3714 0A61                                          i1l3706 0A59  
                                        i1l3722 16EB                                          i1l3810 0342  
                                        i1l3802 031E                                          i1l4362 15C3  
                                        i1l4370 1493                                          i1l4194 1657  
                                        i1l4426 15D1                                          i1l4380 090C  
                                        i1l4372 08F2                                          i1l3396 0D8A  
                                        i1l3580 0AE9                                          i1l3388 09A9  
                                        i1l3564 0A33                                          i1l3556 0A20  
                                        i1l3708 0A5A                                          i1l3820 0375  
                                        i1l3812 0348                                          i1l3804 0322  
                                        i1l4364 15C5                                          i1l4196 1659  
                                        i1l4188 164F                                          i1l4428 15D3  
                                        i1l3750 17B7                                          i1l4390 0BF0  
                                        i1l4382 090D                                          i1l4374 08F9  
                                        i1l3398 0D90                                          i1l3558 0A28  
                                        i1l3574 0802                                          i1l3582 0A8F  
                                        i1l3718 1550                                          i1l3726 162D  
                                        i1l3814 0357                                          i1l3822 0379  
                                        i1l3806 0328                                          i1l4366 15CD  
                                        i1l3830 086F                                          i1l4198 165B  
                                        i1l3752 17BB                                          i1l4392 0BF6  
                                        i1l4384 0BDD                                          i1l4376 0901  
                                        i1l3576 0806                                          i1l3584 0AAB  
                                        i1l3728 155A                                          i1l3824 037C  
                                        i1l3816 0369                                          i1l3808 0330  
                                        i1l3832 088C                                          i1l4368 1491  
                                        i1l4640 0006                                          i1l3754 17C1  
                                        i1l4394 0BFB                                          i1l4386 0BE4  
                                        i1l4378 0906                                          i1l3826 039E  
                                        i1l3818 0372                                          i1l3770 02B2  
                                        i1l4650 001F                                          i1l4642 000B  
                                        i1l3756 17C2                                          i1l3748 17AC  
                                        i1l4396 0C02                                          i1l4388 0BE9  
                                        i1l3692 14C0                                          i1l3828 03A6  
                                        i1l3780 02E8                                          i1l3772 02B7  
                                        i1l4660 003F                                          i1l4652 0027  
                                        i1l4644 000F                                          i1l4398 0C08  
                                        i1l3790 02FA                                          i1l3774 02BC  
                                        i1l3782 02EC                                          i1l3766 02A4  
                                        i1l4662 0043                                          i1l4654 002B  
                                        i1l4646 0017                                          i1l3696 0A37  
                                        i1l3792 02FD                                          i1l3776 02D8  
                                        i1l3784 02EE                                          i1l3768 02AD  
                                        i1l3960 0BC7                                          i1l3952 0BA2  
                                        i1l4664 004E                                          i1l4656 0033  
                                        i1l4648 001B                                          i1l3698 0A37  
                                        i1l3794 0300                                          i1l3786 02F4  
                                        i1l3778 02DC                                          i1l3962 0BCE  
                                        i1l3954 0BAE                                          i1l4666 0052  
                                        i1l4658 0037                                          i1l3796 0307  
                                        i1l3788 02F7                                          i1l3964 0BD5  
                                        i1l3956 0BB6                                          i1l3798 0310  
                                        i1l3958 0BBE                                          u230_20 17C1  
                                        u230_21 17C0                                          u207_20 0A10  
                                        u231_20 02B2                                          u207_21 0A0F  
                                        u231_21 02B1                                          u208_20 0A17  
                                        u240_20 0342                                          u232_20 02B7  
                                        u320_20 0017                                          u208_21 0A16  
                                        u240_21 0341                                          u232_21 02B6  
                                        u320_21 0016                                          _INLVLA 1F3C  
                                        _INLVLB 1F47                                          _INLVLC 1F52  
                                        u209_20 0A20                                          u241_20 0348  
                                        u233_20 02BC                                          u321_20 001B  
                                        u209_21 0A1F                                          u241_21 0347  
                                        u233_21 02BB                                          u321_21 001A  
                                        u226_20 14C7                                          u242_20 03A6  
                                        u234_20 02D8                                          u330_20 0052  
                                        u322_20 001F                                          u226_21 14C5  
                                        u242_21 03A5                                          u234_21 02D7  
                                        u330_21 0051                                          u322_21 001E  
                                        u227_20 14C8                                          u243_20 03BC  
                                        u235_20 02F4                                          u323_20 0027  
                                        u243_21 03BB                                          u235_21 02F3  
                                        u323_21 0026                                          u180_20 0996  
                                        u228_20 0A3D                                          u236_20 0307  
                                        u244_20 088C                                          u260_20 0BDB  
                                        u324_20 002B                                          u180_21 0995  
                                        u228_21 0A3C                                          u236_21 0306  
                                        u244_21 088B                                          u260_21 0BDA  
                                        u324_21 002A                                          u181_20 09AF  
                                        u229_20 0A59                                          u237_20 0310  
                                        u325_20 0033                                          u181_21 09AE  
                                        u229_21 0A58                                          u237_21 030F  
                                        u325_21 0032                                          u182_20 0D9A  
                                        u190_20 0F84                                          u238_20 0322  
                                        u254_20 0BAE                                          u326_20 0037  
                                        u318_20 000B                                          u182_21 0D99  
                                        u190_21 0F83                                          u238_21 0321  
                                        u254_21 0BAD                                          u326_21 0036  
                                        u318_21 000A                                          u191_20 0F8C  
                                        u239_20 0328                                          u255_20 0BB3  
                                        u327_20 003F                                          u319_20 000F  
                                        u191_21 0F8B                                          u239_21 0327  
                                        u255_21 0BB2                                          u327_21 003E  
                                        u319_21 000E                                          u183_25 0D9B  
                                        u184_20 0DA5                                          u272_20 1643  
                                        u256_20 0BBB                                          u328_20 0043  
                                        u184_21 0DA4                                          u272_21 1642  
                                        u256_21 0BBA                                          u328_21 0042  
                                        u185_20 0DB7                                          u177_20 14BE  
                                        u273_20 1596                                          u257_20 0BC3  
                                        u329_20 004E                                          u185_21 0DB6  
                                        u177_21 14BC                                          u273_21 1595  
                                        u257_21 0BC2                                          u329_21 004D  
                                        u185_25 0DB3                                          u186_20 0DD3  
                                        u178_20 14BF                                          u274_20 15A3  
                                        u258_20 0BCD                                          u186_21 0DD2  
                                        u274_21 15A2                                          u258_21 0BCC  
                                        u186_25 0DCF                                          u291_20 08F9  
                                        u275_20 15E6                                          u179_20 0991  
                                        u259_20 0BD4                                          u291_21 08F8  
                                        u275_21 15E5                                          u179_21 0990  
                                        u259_21 0BD3                                          u187_25 0B2A  
                                        u292_20 090C                                          u276_20 15F5  
                                        u188_20 0B44                                          u292_21 090B  
                                        u276_21 15F4                                          u188_21 0B43  
                                        u188_25 0B40                                          u293_20 0BE9  
                                        u189_20 0F6D                                          u277_20 1654  
                                        u293_21 0BE8                                          u189_21 0F6C  
                                        u277_21 1653                                          u294_20 0BFB  
                                        u278_20 15B0                                          u294_21 0BFA  
                                        u278_21 15AF                                          u295_20 0C13  
                                        u295_21 0C12                                          u296_20 1621  
                      __size_of_flushBTRXbuffer 0021                                          u296_21 1620  
                                        u297_20 1629                                          u297_21 1628  
                                        _OSCFRQ 0893                    __size_of_EUSART1_is_tx_ready 0009  
                                        _TX1REG 011A                                          _TX1STA 011E  
                               _TMR3_WriteTimer 164F                               ??_BTTimeRemaining 002A  
                         __size_of_getBTAddress 00D3                                 i1_EUSART1_Write 098A  
                              __end_of_getTicks 1578            __end_of_TMR1_DefaultInterruptHandler 0802  
         __size_of_TMR1_DefaultInterruptHandler 0001                    _TMR1_DefaultInterruptHandler 0801  
                       __end_of_TMR1_StartTimer 0800                                       ??___eetoc 002B  
                            _EEPROM_uiBrakeMode 0000                                       ??___ctoee 002C  
                                     ??___awmod 002A                                   ?_setBTTimeout 0026  
                                     ??_calcCRC 0070                                ?i1_getTicksSince 0070  
                      ?_EUSART1_SetErrorHandler 0026                                          _initUI 0C62  
                                        _memcpy 07CD                                          _oneSec 1578  
                                        _memset 06B4                                 ___awmod@divisor 0026  
                               ___awmod@counter 002B                ??_EUSART1_SetOverrunErrorHandler 0028  
               ?_EUSART1_SetOverrunErrorHandler 0026                             setBTTimeout@timeout 0026  
                                        _strchr 1792                                  ??_initJoystick 0028  
                                        _strlen 175E                                          _strstr 0D3C  
                                _PMD_Initialize 1564                                 _disableJoystick 148C  
                                _UI_PWM_handler 0BA2                                    ?_showStartup 0070  
                              ??_sendBTEstopCmd 0078                                  ___memcpyee@ptr 0029  
                                ??_readJoystick 0022                                 ??_EUSART1_Write 0026  
      TMR3_SetInterruptHandler@InterruptHandler 0026      IOCCF2_SetInterruptHandler@InterruptHandler 0026  
    IOCCF0_SetInterruptHandler@InterruptHandler 0026        TMR2_SetInterruptHandler@InterruptHandler 0026  
      TMR1_SetInterruptHandler@InterruptHandler 0026                                ?_PIN_MANAGER_IOC 0070  
                       __end_of_TMR1_WriteTimer 164F                                 _eusart1RxBuffer 0220  
                                     ??_strncmp 002A                                   ?_sendBTBuffer 002B  
                                  ??_IOCCF0_ISR 0070                            _setBTConnection$1672 0041  
                            blinkLEDColor@blink 0040                            _setBTConnection$1669 003F  
                                  ??_IOCCF2_ISR 0070                                    _getBTAddress 03BD  
                         __end_of_TMR1_CallBack 159C                               _initConfiguration 1583  
                               _eusart1TxBuffer 01A0                                      ___eecpymem 0B73  
                              ?_TMR1_Initialize 0070                               _SYSTEM_Initialize 1701  
                              ??_sendBTSpeedCmd 0020                         __end_of__initialization 009E  
                                 ?_sendBTString 0036                               getTicksSince@from 0026  
                         __end_of_TMR2_CallBack 15A9                              ?_initConfiguration 0070  
                            ?_SYSTEM_Initialize 0070                                   ?_SetSlaveTXRX 0070  
                       ??i1_EUSART1_is_rx_ready 0070                           __end_of_TMR3_CallBack 15B6  
                __size_of_EUSART1_RxDataHandler 001B                                ??i1_resetBTTimer 0070  
                                    ___memcpyee 0CEF                         ??i1_EUSART1_is_tx_ready 0070  
                 __end_of_EUSART1_RxDataHandler 17C7                        __size_of_receiveBTBuffer 005C  
                             sendBTSpeedCmd@yaw 007A                             __size_ofi1_getTicks 000A  
                                __pcstackCOMMON 0070                             ??_initConfiguration 0038  
                                ??_setBTTimeout 002A                                    calcCRC@count 0074  
                                    _accelYawFP 00B0                              setBTConnection@MAC 0043  
                                  __pidataBANK0 14A3                                    __pidataBANK1 160C  
                           ??_SYSTEM_Initialize 0029                                       ?_TMR1_ISR 0070  
                                     ?_TMR2_ISR 0070                   ?_TMR1_DefaultInterruptHandler 0070  
                                     ?_TMR3_ISR 0070                              _EEPROM_uiSpeedMode 0001  
                                 __end_of_sleep 09E0                                   __end_of_runUI 02A4  
                              ?_TMR2_Initialize 0070                          ??_pairBluetoothDevices 0044  
                        __end_of_PMD_Initialize 156E                              __end_of_IOCCF0_ISR 15EE  
                          __end_of_EUSART1_Read 0AE9                              __end_of_IOCCF2_ISR 15FD  
                               _setBTConnection 054F                          ??_EUSART1_Transmit_ISR 0070  
                        __end_of_UI_PWM_handler 0BDD                     __end_of_EUSART1_Receive_ISR 0C1E  
                         __size_of_int16ToBytes 002E                            __size_of_setLEDColor 001A  
                   ?_IOCCF0_SetInterruptHandler 0026                          __size_of_SetMasterTXRX 0015  
                     __end_of_initConfiguration 158F                                  ??_sendBTBuffer 002F  
                     __end_of_SYSTEM_Initialize 1717                                blinkLEDColor@RGB 003C  
                                       ??_sleep 0032                                         ??_runUI 00EA  
                       __end_of_TMR3_WriteTimer 1660                                   _eusart1RxHead 005F  
                                 _eusart1TxHead 0061                                   _eusart1RxTail 005E  
                                    __pbssBANK0 0045                                      __pbssBANK1 00A0  
                                    __pbssBANK2 0120                                      __pbssBANK3 01A0  
                                    __pbssBANK4 0220                                   _eusart1TxTail 0060  
             _EUSART1_TxDefaultInterruptHandler 00D2                         __end_ofi1_EUSART1_Write 09B5  
               ??_EUSART1_SetRxInterruptHandler 0028                                ?_TMR3_Initialize 0070  
                                ??_sendBTString 0038                                      calcCRC@crc 0076  
                                    calcCRC@ptr 0075                                  ??_SetSlaveTXRX 0036  
                    __end_of_SetSlaveTXMasterRX 16D6          __end_of_IOCCF2_DefaultInterruptHandler 1475  
       __size_of_IOCCF2_DefaultInterruptHandler 0001                  _IOCCF2_DefaultInterruptHandler 1474  
               __end_of_EUSART1_SetErrorHandler 14D2                               ??_flushBTRXbuffer 0036  
                                    __pmaintext 0FA3                __end_of_TMR3_SetInterruptHandler 152C  
                         __end_of_getTicksSince 172D                         __size_of_enableJoystick 0009  
                              ?_TMR1_StartTimer 0070                                      ??_TMR1_ISR 007D  
                                    ??_TMR2_ISR 0074                                      ??_TMR3_ISR 0072  
                                    __pintentry 0004                                   ?_resetBTTimer 0070  
                                       ?_initUI 0070                                         ?_memcpy 0026  
                                       ?_oneSec 0070                                         ?_memset 0026  
                                  _int16ToBytes 0B17                         __end_of_disableJoystick 1491  
              ??_IOCCF0_DefaultInterruptHandler 0070                 ?_IOCCF0_DefaultInterruptHandler 0070  
                               ?_PMD_Initialize 0070                                    ?_turnPowerOn 0070  
                                       ?_strchr 0026                                         ?_strlen 0026  
        __end_of_EUSART1_SetFramingErrorHandler 14DB         __size_of_EUSART1_SetFramingErrorHandler 0009  
                _EUSART1_SetFramingErrorHandler 14D2                         __size_of_TMR1_StopTimer 0003  
                                       ?_strstr 002F                                 ?_UI_PWM_handler 0070  
                  ?_EUSART1_DefaultErrorHandler 0070                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                              __size_of_powerIsOn 0003  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                                       _NVMADRH 081B                                         _NVMADRL 081A  
                                       _NVMDATH 081D                                         _OSCTUNE 0892  
                                       _NVMDATL 081C                                         _NVMCON2 081F  
                                       _SLRCONA 1F3B                                         _SLRCONB 1F46  
                                       _SLRCONC 1F51                                       ?_getTicks 0026  
                          i1sendBTBuffer@buffer 0072                                ?_TMR1_WriteTimer 0070  
                          i1sendBTBuffer@length 0074                                     ?___eecpymem 0026  
                                    _lastBTTime 00A8                            __end_of_initJoystick 16AC  
                                   ?___memcpyee 0026                         __size_ofi1_EUSART1_Read 002C  
                    ??_TMR2_SetInterruptHandler 0028                         __size_of_doFactoryReset 00BF  
                                 _SetMasterTXRX 16D6                                         ___eetoc 15FD  
                                    _initSerial 0939                                  ??_resetBTTimer 0026  
                       __end_of_setBTConnection 060D                                         ___ctoee 15B6  
                                       ___awmod 0DDE                                      _initTimers 17C7  
                          __end_of_readJoystick 03BD                                         _calcCRC 0F46  
                __size_of_setBTBaudRatesTo38400 0074                   __end_of_setBTBaudRatesTo38400 07CD  
                      __size_of_bumpUIBrakeMode 001D                             _EUSART1_is_rx_ready 152C  
                               __size_of_initUI 0046                                 __size_of_memcpy 0030  
                               __size_of_oneSec 000B                                 __size_of_memset 00A5  
                             ??_receiveBTBuffer 0031                             _EUSART1_is_tx_ready 1535  
                                       __ptext1 1547                                         __ptext2 1483  
                                       __ptext3 09E0                                         __ptext4 1671  
                                       __ptext5 0832                                         __ptext6 00A2  
                                       __ptext7 060D                                         __ptext8 054F  
                                       __ptext9 0759                                      _limitSpeed 0D8A  
                ??_TMR1_DefaultInterruptHandler 0070                                      _estopTimer 00AC  
                               __size_of_strchr 001A                                 __size_of_strlen 001A  
                                     _T1CONbits 020E                                 __size_of_strstr 004E  
                         _OSCILLATOR_Initialize 14F6                                       _T2CONbits 028E  
                                     _T3CONbits 0214                                    ??i1_getTicks 0074  
                              ___awmod@dividend 0028               __size_of_TMR1_SetInterruptHandler 0009  
                            _EUSART1_Initialize 0C1E                        ??_PIN_MANAGER_Initialize 0028  
                     ?_TMR1_SetInterruptHandler 0026                                         _uiState 004F  
                                     _T2HLTbits 028F                                       _IOCCFbits 1F55  
                            limitSpeed@targetFP 0070                                pulseLEDColor@RGB 0036  
                                     _IOCCNbits 1F54                                       _IOCCPbits 1F53  
                      __size_of_calculateMotion 002E                   ??_EUSART1_DefaultErrorHandler 0071  
                                       _powerOn 0057                                 _BTTimeRemaining 0E32  
                                    ??_getTicks 002A                      __size_of_initConfiguration 000C  
                    __size_of_SYSTEM_Initialize 0016                            __end_of_setBTTimeout 1682  
                                       clrloop0 1498                                         _strncmp 0EEA  
                          end_of_initialization 009E                                ?_TMR3_WriteTimer 0070  
                          __size_of_showStartup 002B                            ?_EUSART1_is_rx_ready 0070  
                                     _T2RSTbits 0291                             ?_EUSART1_Initialize 0070  
                              ?i1_EUSART1_Write 0070                            ?_EUSART1_is_tx_ready 0070  
                                       memcpy@d 002C                                         memcpy@n 0027  
                                       memcpy@s 002D                                 _topAxialSpeedFP 0064  
                                       init_ram 149D                                         memset@c 0026  
                                       memset@k 002C                                         memset@n 0028  
                                       memset@s 002F                     _EUSART1_OverrunErrorHandler 00CC  
                                       initloop 149E           __end_of_EUSART1_SetRxInterruptHandler 14ED  
        __size_of_EUSART1_SetRxInterruptHandler 0009                   _EUSART1_SetRxInterruptHandler 14E4  
                                     _BTTimeout 00A4                       sendBTSpeedCmd@blockIfBusy 007C  
                         __end_of_USER1_pressed 14B0                                  ?_SetMasterTXRX 0070  
                                    _timeKeeper 086F                               __end_of_powerIsOn 1478  
                                 ?_showShutdown 0070                           __end_of_USER2_pressed 14B7  
                            __end_ofi1_getTicks 155A                                 ___memcpyee@from 0026  
                         __size_of_EUSART1_Read 002D                                 ___memcpyee@size 0027  
                          __end_of_sendBTBuffer 0B73                            ??_EUSART1_Initialize 0028  
                                       strchr@c 0026                                         strchr@s 0028  
                      __size_of_bumpUISpeedMode 002A                                         strlen@a 0029  
                                       strlen@s 0026                                ?_disableJoystick 0070  
                         __end_of_pulseLEDColor 0939                             __size_of___eecpymem 002F  
                                       strstr@h 0036                                         strstr@n 002F  
                                     _PORTAbits 000C                                       _PORTBbits 000D  
                                     _PORTCbits 000E                            __end_of_sendBTString 1792  
                      _TMR3_SetInterruptHandler 1523                             blinkLEDColor@blinks 003E  
                          __end_of_SetSlaveTXRX 1697                             __size_of___memcpyee 004D  
                             _accelLimitAxialFP 00E0                __size_of_EUSART1_SetErrorHandler 0009  
                  ??_IOCCF2_SetInterruptHandler 0028                             EUSART1_Write@txData 0027  
                         ??_EUSART1_is_rx_ready 0026                         __size_of_SetDualReceive 0015  
                         ??_EUSART1_is_tx_ready 0026                         sendBTBuffer@blockIfBusy 002E  
                        __size_of_setSerialBaud 001F                               _accelLimitSweepFP 0066  
                                  _EUSART1_Read 0ABC                          __size_ofi1_turnPowerOn 0005  
                                ??_showShutdown 0036            __size_of_EUSART1_DefaultErrorHandler 0004  
                                     _RX_Buffer 01C0                  __size_ofi1_EUSART1_is_rx_ready 0009  
                 __end_ofi1_EUSART1_is_rx_ready 14C9                          __size_of_blinkLEDColor 001E  
                                _enableJoystick 153E                  __size_ofi1_EUSART1_is_tx_ready 0009  
                     i1sendBTBuffer@blockIfBusy 0075                                     ?_initSerial 0070  
                 __end_ofi1_EUSART1_is_tx_ready 14C0                                     ?_initTimers 0070  
                              ?_setBTConnection 003C            __end_of_TMR2_DefaultInterruptHandler 0003  
         __size_of_TMR2_DefaultInterruptHandler 0001                    _TMR2_DefaultInterruptHandler 0002  
                             __size_of_TMR1_ISR 000E                               __size_of_TMR2_ISR 0006  
                             __size_of_TMR3_ISR 000E                                  _TMR1_StopTimer 1478  
                       __size_ofi1_setBTTimeout 000A                                  __end_of_initUI 0CA8  
                                   ?_limitSpeed 0070                                  __end_of_memcpy 07FD  
                        ?_OSCILLATOR_Initialize 0070                         __end_of_BTTimeRemaining 0E8E  
                                __end_of_oneSec 1583                                  __end_of_memset 0759  
           __size_of_IOCCF2_SetInterruptHandler 0009                                  __end_of_strchr 17AC  
                                __end_of_strlen 1778                               ??_bumpUIBrakeMode 0041  
                                __end_of_strstr 0D8A                            __size_of_turnPowerOn 0009  
                           start_initialization 005D                        __size_ofi1_getTicksSince 0016  
                                    _systemTime 0045                 __size_of_PIN_MANAGER_Initialize 0047  
 EUSART1_SetRxInterruptHandler@interruptHandler 0026   EUSART1_SetTxInterruptHandler@interruptHandler 0026  
                          __end_of_resetBTTimer 1671                           __size_of_initJoystick 0015  
                               _flushBTRXbuffer 08D1                           __end_of_EUSART1_Write 0A8F  
                             ??_calculateMotion 007D                         __size_ofi1_sendBTBuffer 002C  
                               ??_SetMasterTXRX 0036                        __size_of_PIN_MANAGER_IOC 0011  
                         __size_of_readJoystick 0119                          __end_of_enableJoystick 1547  
                                i1_EUSART1_Read 0A37                                  _doFactoryReset 0490  
                                   ?_timeKeeper 0070                               int16ToBytes@ndata 0072  
                      __size_of_TMR1_Initialize 0021                                ??_PMD_Initialize 0026  
                         _EUSART1_RxDataHandler 17AC                  ?_EUSART1_SetRxInterruptHandler 0026  
                        __end_of_TMR1_StopTimer 147B                                     __pdataBANK0 0062  
                                   __pdataBANK1 00DA                                        ??_initUI 002E  
                              ??_UI_PWM_handler 0070                                        ??_memcpy 0029  
                                      ??_oneSec 0026                                        ??_memset 002A  
                 ?_TMR2_DefaultInterruptHandler 0070                                      memset@dest 002E  
                            _SetSlaveTXMasterRX 16C1                          __size_of_TMR1_CallBack 000D  
                                 _setSerialBaud 0850                             i1getTicksSince@from 0070  
                                      ??_strchr 0028                                        ??_strlen 0028  
                                _eusart1RxCount 005D                                        ??_strstr 0031  
                                 ??_setLEDColor 0028                                   i1_turnPowerOn 1487  
                 __size_of_pairBluetoothDevices 00A7                                     __pbssEEDATA 0000  
                        __size_of_TMR2_CallBack 000D                                    _initJoystick 1697  
                         __size_of_setBTTimeout 0011                                 _accelLimitYawFP 00DE  
                                   __pbssCOMMON 007D               _EUSART1_RxDefaultInterruptHandler 00D0  
                             ??_bumpUISpeedMode 0041                                       ___latbits 0003  
                 __size_of_EUSART1_Transmit_ISR 0023                                   __pcstackBANK0 0020  
                                 __pcstackBANK1 00EA                             ?_SetSlaveTXMasterRX 0070  
                      __size_of_TMR2_Initialize 0017                          __size_of_TMR3_CallBack 000D  
                                 _blinkLEDColor 0814                              sendBTBuffer@buffer 002B  
                                  _readJoystick 02A4          __end_of_IOCCF0_DefaultInterruptHandler 0801  
       __size_of_IOCCF0_DefaultInterruptHandler 0001                  _IOCCF0_DefaultInterruptHandler 0800  
                           __size_of_initSerial 0027                         i1EUSART1_Read@readValue 0071  
                                  ??___eecpymem 0028                             __size_of_initTimers 001C  
                            sendBTBuffer@length 002D                        receiveBTBuffer@charsRead 003A  
                             __size_of_getTicks 000A                 ??_EUSART1_SetTxInterruptHandler 0028  
              ??_EUSART1_SetFramingErrorHandler 0028                 ?_EUSART1_SetFramingErrorHandler 0026  
                               int16ToBytes@num 0070                    __size_of_EUSART1_Receive_ISR 0041  
                        __end_ofi1_EUSART1_Read 0A63                          __end_of_doFactoryReset 054F  
                               _timeoutSequence 0054                             __size_of_limitSpeed 0054  
                                     __pnvBANK0 0068                                       __pnvBANK1 00C2  
                       __size_of_sendBTEstopCmd 0012                                       _charsRead 0058  
                               _receiveBTBuffer 0E8E                           __size_of_sendBTBuffer 002E  
                                 int16ToBytes@i 0076                                   _targetAxialFP 004D  
                               ?_enableJoystick 0070                                    ??___memcpyee 0028  
                        _PIN_MANAGER_Initialize 0CA8                            ??_SetSlaveTXMasterRX 0036  
                      __size_of_TMR3_Initialize 0021                __end_of_TMR1_SetInterruptHandler 151A  
                         __size_of_sendBTString 001A                                        ?___eetoc 0070  
                                     __ptext100 0802                                       __ptext101 0A0B  
                                     __ptext110 1487                                       __ptext102 14B7  
                                     __ptext111 1474                                       __ptext103 098A  
                                     __ptext112 15DF                                       __ptext104 0F46  
                                     __ptext113 08F2                                       __ptext105 0AE9  
                                     __ptext114 0BDD                                       __ptext106 0D8A  
                                     __ptext115 147F                                       __ptext107 161C  
                                     __ptext116 1473                                       __ptext108 15EE  
                                     __ptext117 147B                                       __ptext109 0800  
                                     __ptext118 17AC                                        ?___ctoee 002B  
                                      ?___awmod 0026                         __size_of_sendBTSpeedCmd 002D  
                                      ?_calcCRC 0070                                    _setBTTimeout 1671  
                               ?_TMR1_StopTimer 0070                           __size_of_SetSlaveTXRX 0015  
                                  _estopPending 005B                                  ?_setSerialBaud 0036  
                  ??_INTERRUPT_InterruptManager 007D                           i1setBTTimeout@timeout 0070  
                                ?i1_turnPowerOn 0070                                    _limitedYawFP 0049  
                            __end_of___eecpymem 0BA2                                ?_BTTimeRemaining 0026  
                       __size_ofi1_resetBTTimer 0011                                        _BAUD1CON 011F  
                             limitSpeed@accelFP 0074                        __size_of_TMR1_StartTimer 0003  
    __end_of_EUSART1_DefaultOverrunErrorHandler 1483     __size_of_EUSART1_DefaultOverrunErrorHandler 0004  
          ??_EUSART1_DefaultOverrunErrorHandler 0070             ?_EUSART1_DefaultOverrunErrorHandler 0070  
            _EUSART1_DefaultOverrunErrorHandler 147F                         __end_of_flushBTRXbuffer 08F2  
                          _EUSART1_ErrorHandler 00CA                                  ?_blinkLEDColor 003C  
                          __end_of_showShutdown 0850                         _EUSART1_SetErrorHandler 14C9  
            __end_of_IOCCF2_SetInterruptHandler 1511                      _IOCCF2_SetInterruptHandler 1508  
                           __size_of_timeKeeper 0020                                       _masterMAC 0148  
                                 ?_turnPowerOff 0070                              __end_of___memcpyee 0D3C  
                           __end_of_setLEDColor 175E                                      sleep@delay 002E  
                                      _T2CLKCON 0290                           receiveBTBuffer@buffer 003B  
                                     _dutyCycle 0050                                        ?_strncmp 0026  
                                __size_of_sleep 002B                                  __size_of_runUI 0202  
                                _SetDualReceive 16AC                                    _sendBTBuffer 0B45  
                        __size_of_getTicksSince 0016                                      sleep@start 0032  
                             ??i1_getTicksSince 0074                           _turnPowerOn$intlevel0 154B  
                                 _TMR1_CallBack 158F                               limitSpeed@speedFP 0079  
                                      _LATAbits 0018         EUSART1_SetErrorHandler@interruptHandler 0026  
                                      _LATBbits 0019                                    _sendBTString 1778  
                               ?i1_EUSART1_Read 0070                                 ?_doFactoryReset 0070  
                                     clear_ram0 1497                                   _TMR2_CallBack 159C  
                                      _PIE0bits 0716                                        _PIE3bits 0719  
                                      _PIE4bits 071A                                    _SetSlaveTXRX 1682  
                      __size_of_TMR1_WriteTimer 0011                        receiveBTBuffer@timeoutMS 002F  
           __size_of_INTERRUPT_InterruptManager 0057                                        _PIR0bits 070C  
                                      _PIR3bits 070F                                        _PIR4bits 0710  
                    ??_TMR3_SetInterruptHandler 0028                                   _TMR3_CallBack 15A9  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0070  
                                setLEDColor@RGB 0026                                  _limitedAxialFP 004B  
                      receiveBTBuffer@startTime 0036                                        _TMR1_ISR 15C3  
                                      _TMR2_ISR 1491                                        _TMR3_ISR 15D1  
                             ??_PIN_MANAGER_IOC 0070                                       _powerIsOn 1475  
                                i1_setBTTimeout 155A                               ??_TMR1_Initialize 0028  
                         _setBTBaudRatesTo38400 0759                           __size_of_resetBTTimer 0011  
                ??_TMR2_DefaultInterruptHandler 0070               __size_of_TMR2_SetInterruptHandler 0009  
                     ?_TMR2_SetInterruptHandler 0026                                   ??_showStartup 0036  
                                ??_turnPowerOff 0026                          __end_of_SetDualReceive 16C1  
                                 ?_getBTAddress 003C                         __end_of_receiveBTBuffer 0EEA  
                                ?_TMR1_CallBack 0070                               ??_TMR2_Initialize 0028  
                                i1_sendBTBuffer 0A0B                           EUSART1_Read@readValue 0027  
                                ?_TMR2_CallBack 0070           __end_of_EUSART1_SetTxInterruptHandler 14F6  
        __size_of_EUSART1_SetTxInterruptHandler 0009                   _EUSART1_SetTxInterruptHandler 14ED  
                                ?_TMR3_CallBack 0070                        __size_of_TMR3_WriteTimer 0011  
                                     memcpy@tmp 002A                        __size_ofi1_EUSART1_Write 002B  
                                  ??_initSerial 0030                         setBTConnection@isMaster 003C  
                               _bumpUIBrakeMode 17E3                                    ??_initTimers 0028  
                               ??_setSerialBaud 0038                          __end_ofi1_setBTTimeout 1564  
                       ??_OSCILLATOR_Initialize 0026                                   _getTicksSince 1717  
                              __size_of___eetoc 000F                                __size_of___ctoee 000D  
                              __size_of___awmod 0054                                      ?_powerIsOn 0070  
                                  _resetBTTimer 1660                                 ??i1_turnPowerOn 0070  
                              __size_of_calcCRC 005D                     __size_of_EUSART1_Initialize 0044  
                                   _uiBrakeMode 0055                                    ??_limitSpeed 0076  
                             ??_TMR3_Initialize 0028                        _TMR1_SetInterruptHandler 1511  
                             _getBTAddress$1661 003F                                 ??_blinkLEDColor 003F  
                         _TMR1_InterruptHandler 00D6                       ??_EUSART1_SetErrorHandler 0028  
                                   _setLEDColor 1744             __end_of_EUSART1_DefaultErrorHandler 147F  
                   _EUSART1_DefaultErrorHandler 147B                     __end_of_EUSART1_is_rx_ready 1535  
                       _IOCCF0_InterruptHandler 00C8                                        calcCRC@i 0073  
                              ?_flushBTRXbuffer 0070                                 _calculateMotion 0AE9  
                   __end_of_EUSART1_is_tx_ready 153E                                     _estopActive 005A  
                                   _oneSecBlink 0059                                 ?_SetDualReceive 0070  
                                   _estopBuffer 00E2                        __size_of_disableJoystick 0005  
                       receiveBTBuffer@maxChars 002E                          __size_of_USER1_pressed 0007  
                                      __ptext10 03BD                                        __ptext11 07CD  
                                      __ptext20 0490                                        __ptext12 16D6  
                                      __ptext21 0D3C                                        __ptext13 14B0  
                                    _T1GCONbits 020F                                        __ptext30 0E8E  
                                      __ptext22 0EEA                                        __ptext14 14A9  
                                      __ptext31 152C                                        __ptext23 1792  
                                      __ptext15 16C1                                        __ptext40 0915  
                                      __ptext32 0ABC                                        __ptext24 1778  
                                      __ptext16 1578                                        __ptext41 1744  
                                      __ptext33 16AC                                        __ptext25 175E  
                                      __ptext17 153E                                        __ptext50 0939  
                                      __ptext42 15B6                                        __ptext34 148C  
                                      __ptext26 0B45                                        __ptext18 1660  
                                      __ptext51 06B4                                        __ptext43 0CEF  
                                      __ptext35 1478                                        __ptext27 1535  
                                      __ptext19 07FD                                        __ptext60 08B0  
                                      __ptext52 1697                                        __ptext44 0E32  
                                      __ptext36 0960                                        __ptext28 0A63  
                                      __ptext61 1523                                        __ptext53 1583  
                                      __ptext45 1475                                        __ptext37 0DDE  
                                      __ptext29 08D1                                        __ptext70 14F6  
                                      __ptext62 172D                                        __ptext54 0850  
                                      __ptext46 0C62                                        __ptext38 17E3  
                                      __ptext71 0C1E                                        __ptext63 151A  
                                      __ptext55 1682                                        __ptext47 15FD  
                                      __ptext39 0814                                        __ptext80 15A9  
                                      __ptext72 14ED                                        __ptext64 088F  
                                      __ptext56 09B5                                        __ptext48 0B73  
                                      __ptext81 0003                                        __ptext73 14E4  
                                      __ptext65 1511                                        __ptext57 1717  
                                      __ptext49 17C7                                        __ptext90 0801  
                                      __ptext82 0BA2                                        __ptext74 14DB  
                                      __ptext66 1564                                        __ptext58 156E  
                                      __ptext91 02A4                                        __ptext83 1491  
                                      __ptext75 14D2                                        __ptext67 0CA8  
                                      __ptext59 1701                                        __ptext92 155A  
                                      __ptext84 159C                                        __ptext76 14C9  
                                      __ptext68 1508                                        __ptext93 162D  
                                      __ptext85 0002                                        __ptext69 14FF  
                                      __ptext94 16EB                                        __ptext86 086F  
                                      __ptext78 15D1                                        __ptext95 1550  
                                      __ptext87 15C3                                        __ptext79 164F  
                                      __ptext96 14C0                                        __ptext88 163E  
                                      __ptext97 0A37                                        __ptext89 158F  
                                      __ptext98 0A8F                                        __ptext99 0B17  
                                      _getTicks 156E                    ??_IOCCF0_SetInterruptHandler 0028  
                                ??_getBTAddress 003D                          __size_of_USER2_pressed 0007  
                        __end_ofi1_sendBTBuffer 0A37                               ??_TMR1_StartTimer 0026  
                                    _T3GCONbits 0215                                      _IOCCF0_ISR 15DF  
                                    _IOCCF2_ISR 15EE                                __size_of_strncmp 005C  
                       TMR3_WriteTimer@timerVal 0070                              __end_of_initSerial 0960  
                           limitSpeed@limitedFP 0072                                limitSpeed@diffFP 007B  
                            __end_of_initTimers 17E3                             __end_of_showStartup 0A0B  
                                 __size_of_main 005D                          __size_of_pulseLEDColor 0024  
                                _sendBTEstopCmd 0802                              __end_of_limitSpeed 0DDE  
                                  ??_timeKeeper 0070                                        _slaveMAC 0154  
                                    _RC1STAbits 011D  EUSART1_SetOverrunErrorHandler@interruptHandler 0026  
                                _sendBTSpeedCmd 0A8F                                        int$flags 007E  
                                ?_getTicksSince 0026                                 _bumpUISpeedMode 0960  
                               ?i1_setBTTimeout 0070                           i1_EUSART1_is_rx_ready 14C0  
            __end_of_INTERRUPT_InterruptManager 005B                      _INTERRUPT_InterruptManager 0004  
                                 ?_int16ToBytes 0070                               ??_TMR1_WriteTimer 0072  
                        ?_setBTBaudRatesTo38400 0070                           i1_EUSART1_is_tx_ready 14B7  
          __end_of_TMR3_DefaultInterruptHandler 0004           __size_of_TMR3_DefaultInterruptHandler 0001  
                  _TMR3_DefaultInterruptHandler 0003                     _EUSART1_FramingErrorHandler 00CE  
                           _EUSART1_Receive_ISR 0BDD                                   ??_turnPowerOn 0026  
                                   _uiSpeedMode 0056                           __size_of_showShutdown 001E  
                                i1_resetBTTimer 162D             __size_of_IOCCF0_SetInterruptHandler 0009  
                               ___eecpymem@from 0026                                 ___eecpymem@size 0027  
                                    _INTCONbits 000B                        __size_of_setBTConnection 00BE  
                                   _NVMCON1bits 081E                                     _uiStateTime 00A0  
                                      memcpy@d1 002B                                        memcpy@s1 0026  
                                __pstringtext10 184C                                  __pstringtext11 1852  
                                __pstringtext12 1855                                  __pstringtext13 0000  
                               ??_TMR1_CallBack 007D                              __end_of_timeKeeper 088F  
                               ?i1_sendBTBuffer 0072                                        intlevel1 0000  
                              ?_receiveBTBuffer 002E                                 ??_TMR2_CallBack 0074  
                              ??_enableJoystick 0026                          __end_of_sendBTEstopCmd 0814  
                          ?_EUSART1_Receive_ISR 0070                                     _targetYawFP 00B4  
                  __end_of_pairBluetoothDevices 06B4                         ?_PIN_MANAGER_Initialize 0070  
                               ??_TMR3_CallBack 0071                         __end_of_bumpUIBrakeMode 1800  
        __end_of_EUSART1_SetOverrunErrorHandler 14E4         __size_of_EUSART1_SetOverrunErrorHandler 0009  
                _EUSART1_SetOverrunErrorHandler 14DB                                     _replyBuffer 0140  
                  __end_of_EUSART1_Transmit_ISR 0915                                       strncmp@_l 002B  
                                     strncmp@_r 0026                                ??_TMR1_StopTimer 0026  
                        __end_of_sendBTSpeedCmd 0ABC                           __end_of_SetMasterTXRX 16EB  
                                  _showShutdown 0832                                   _USER1_pressed 14A9  
                          __end_of_turnPowerOff 1487                                   _USER2_pressed 14B0  
EUSART1_SetFramingErrorHandler@interruptHandler 0026                  ?_EUSART1_SetTxInterruptHandler 0026  
                                ??_int16ToBytes 0073                          __end_ofi1_resetBTTimer 163E  
                                   ??_powerIsOn 0026                         __end_of_calculateMotion 0B17  
                             ??_TMR3_WriteTimer 0072                          __size_of_EUSART1_Write 002C  
                            _eusart1RxLastError 005C                                     _speedBuffer 00B6  
                                 __pstringtext1 1800                                   __pstringtext2 1809  
                                 __pstringtext3 1812                                   __pstringtext4 181B  
                                 __pstringtext5 1824                                   __pstringtext6 182D  
                                 __pstringtext7 1836                                   __pstringtext8 183F  
                                 __pstringtext9 1846                               ??i1_EUSART1_Write 0070  
                                 _pulseLEDColor 0915                   ?_TMR3_DefaultInterruptHandler 0070  
                               i1_getTicksSince 16EB                                        strncmp@l 002E  
                                      strncmp@n 0028                                        strncmp@r 002C  
                               _joystickEnabled 007D                             __end_of_turnPowerOn 1550  
                                   _showStartup 09E0                     ?_IOCCF2_SetInterruptHandler 0026  
                                      strstr@nl 0034                                      _TX1STAbits 011E  
                                 ___eecpymem@cp 0029                           i1EUSART1_Write@txData 0071  
                                 ___eecpymem@to 002A                                ??i1_EUSART1_Read 0070  
                              ??_doFactoryReset 003C                                     ?_IOCCF0_ISR 0070  
                                   ?_IOCCF2_ISR 0070                          pulseLEDColor@offTimeMS 003A  
                         ??_EUSART1_Receive_ISR 0071                  __end_of_PIN_MANAGER_Initialize 0CEF  
                               ?_sendBTEstopCmd 0070                                      _STATUSbits 0003  
                             ??_disableJoystick 0026                                 _PIN_MANAGER_IOC 161C  
                                 _topYawSpeedFP 0062                           _TMR2_InterruptHandler 00D4  
                       ??_EUSART1_RxDataHandler 0070                         __end_of_bumpUISpeedMode 098A  
                         pulseLEDColor@onTimeMS 0038                                 _TMR1_Initialize 088F  
                               getBTAddress@MAC 0041                                    ___eetoc@addr 002C  
                               ?_sendBTSpeedCmd 0078                                    ___eetoc@data 002D  
                                ?_USER1_pressed 0070                                 ??_getTicksSince 002A  
                   __size_of_SetSlaveTXMasterRX 0015  
