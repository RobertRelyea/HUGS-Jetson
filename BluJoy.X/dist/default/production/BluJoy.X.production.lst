

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Oct 04 14:07:38 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16LF18446
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    25                           	psect	cinit,global,class=CODE,merge=1,delta=2
    26                           	psect	bssEEDATA,global,class=EEDATA,space=3,delta=2,noexec
    27                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    29                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    30                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    31                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    32                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    33                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    34                           	psect	inittext,global,class=CODE,delta=2
    35                           	psect	clrtext,global,class=CODE,delta=2
    36                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    37                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    38                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    39                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    40                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    41                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    42                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    43                           	psect	text1,local,class=CODE,merge=1,delta=2
    44                           	psect	text2,local,class=CODE,merge=1,delta=2
    45                           	psect	text3,local,class=CODE,merge=1,delta=2
    46                           	psect	text4,local,class=CODE,merge=1,delta=2
    47                           	psect	text5,local,class=CODE,merge=1,delta=2
    48                           	psect	text6,local,class=CODE,merge=1,delta=2
    49                           	psect	text7,local,class=CODE,merge=1,delta=2
    50                           	psect	text8,local,class=CODE,merge=1,delta=2
    51                           	psect	text9,local,class=CODE,merge=1,delta=2
    52                           	psect	text10,local,class=CODE,merge=1,delta=2
    53                           	psect	text11,local,class=CODE,merge=1,delta=2
    54                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text13,local,class=CODE,merge=1,delta=2
    56                           	psect	text14,local,class=CODE,merge=1,delta=2
    57                           	psect	text15,local,class=CODE,merge=1,delta=2
    58                           	psect	text16,local,class=CODE,merge=1,delta=2
    59                           	psect	text17,local,class=CODE,merge=1,delta=2
    60                           	psect	text18,local,class=CODE,merge=1,delta=2
    61                           	psect	text19,local,class=CODE,merge=1,delta=2
    62                           	psect	text20,local,class=CODE,merge=1,delta=2
    63                           	psect	text21,local,class=CODE,merge=1,delta=2
    64                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text25,local,class=CODE,merge=1,delta=2
    68                           	psect	text26,local,class=CODE,merge=1,delta=2
    69                           	psect	text27,local,class=CODE,merge=1,delta=2
    70                           	psect	text28,local,class=CODE,merge=1,delta=2
    71                           	psect	text29,local,class=CODE,merge=1,delta=2
    72                           	psect	text30,local,class=CODE,merge=1,delta=2
    73                           	psect	text31,local,class=CODE,merge=1,delta=2
    74                           	psect	text32,local,class=CODE,merge=1,delta=2
    75                           	psect	text33,local,class=CODE,merge=1,delta=2
    76                           	psect	text34,local,class=CODE,merge=1,delta=2
    77                           	psect	text35,local,class=CODE,merge=1,delta=2
    78                           	psect	text36,local,class=CODE,merge=1,delta=2
    79                           	psect	text37,local,class=CODE,merge=1,delta=2
    80                           	psect	text38,local,class=CODE,merge=1,delta=2
    81                           	psect	text39,local,class=CODE,merge=1,delta=2
    82                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    83                           	psect	text41,local,class=CODE,merge=1,delta=2
    84                           	psect	text42,local,class=CODE,merge=1,delta=2
    85                           	psect	text43,local,class=CODE,merge=1,delta=2
    86                           	psect	text44,local,class=CODE,merge=1,delta=2
    87                           	psect	text45,local,class=CODE,merge=1,delta=2
    88                           	psect	text46,local,class=CODE,merge=1,delta=2
    89                           	psect	text47,local,class=CODE,merge=1,delta=2
    90                           	psect	text48,local,class=CODE,merge=1,delta=2
    91                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text50,local,class=CODE,merge=1,delta=2
    93                           	psect	text51,local,class=CODE,merge=1,delta=2
    94                           	psect	text52,local,class=CODE,merge=1,delta=2
    95                           	psect	text53,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text54,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text55,local,class=CODE,merge=1,delta=2,group=2
    98                           	psect	text56,local,class=CODE,merge=1,delta=2
    99                           	psect	text57,local,class=CODE,merge=1,delta=2
   100                           	psect	text58,local,class=CODE,merge=1,delta=2
   101                           	psect	text59,local,class=CODE,merge=1,delta=2
   102                           	psect	text60,local,class=CODE,merge=1,delta=2
   103                           	psect	text61,local,class=CODE,merge=1,delta=2
   104                           	psect	text62,local,class=CODE,merge=1,delta=2
   105                           	psect	text63,local,class=CODE,merge=1,delta=2
   106                           	psect	text64,local,class=CODE,merge=1,delta=2
   107                           	psect	text65,local,class=CODE,merge=1,delta=2
   108                           	psect	text66,local,class=CODE,merge=1,delta=2,group=1
   109                           	psect	text67,local,class=CODE,merge=1,delta=2,group=1
   110                           	psect	text68,local,class=CODE,merge=1,delta=2
   111                           	psect	text69,local,class=CODE,merge=1,delta=2
   112                           	psect	text70,local,class=CODE,merge=1,delta=2
   113                           	psect	text71,local,class=CODE,merge=1,delta=2
   114                           	psect	text72,local,class=CODE,merge=1,delta=2
   115                           	psect	text73,local,class=CODE,merge=1,delta=2
   116                           	psect	text74,local,class=CODE,merge=1,delta=2
   117                           	psect	text75,local,class=CODE,merge=1,delta=2
   118                           	psect	text76,local,class=CODE,merge=1,delta=2
   119                           	psect	text77,local,class=CODE,merge=1,delta=2
   120                           	psect	text78,local,class=CODE,merge=1,delta=2
   121                           	psect	text79,local,class=CODE,merge=1,delta=2
   122                           	psect	text80,local,class=CODE,merge=1,delta=2
   123                           	psect	text81,local,class=CODE,merge=1,delta=2
   124                           	psect	text82,local,class=CODE,merge=1,delta=2
   125                           	psect	text83,local,class=CODE,merge=1,delta=2
   126                           	psect	text84,local,class=CODE,merge=1,delta=2
   127                           	psect	text85,local,class=CODE,merge=1,delta=2
   128                           	psect	text86,local,class=CODE,merge=1,delta=2
   129                           	psect	text87,local,class=CODE,merge=1,delta=2
   130                           	psect	text88,local,class=CODE,merge=1,delta=2
   131                           	psect	text89,local,class=CODE,merge=1,delta=2
   132                           	psect	text90,local,class=CODE,merge=1,delta=2
   133                           	psect	text91,local,class=CODE,merge=1,delta=2
   134                           	psect	text92,local,class=CODE,merge=1,delta=2
   135                           	psect	text93,local,class=CODE,merge=1,delta=2
   136                           	psect	text94,local,class=CODE,merge=1,delta=2
   137                           	psect	intentry,global,class=CODE,delta=2
   138                           	psect	text96,local,class=CODE,merge=1,delta=2
   139                           	psect	text97,local,class=CODE,merge=1,delta=2
   140                           	psect	text98,local,class=CODE,merge=1,delta=2
   141                           	psect	text99,local,class=CODE,merge=1,delta=2
   142                           	psect	text100,local,class=CODE,merge=1,delta=2
   143                           	psect	text101,local,class=CODE,merge=1,delta=2
   144                           	psect	text102,local,class=CODE,merge=1,delta=2
   145                           	psect	text103,local,class=CODE,merge=1,delta=2
   146                           	psect	text104,local,class=CODE,merge=1,delta=2
   147                           	psect	text105,local,class=CODE,merge=1,delta=2
   148                           	psect	text106,local,class=CODE,merge=1,delta=2
   149                           	psect	text107,local,class=CODE,merge=1,delta=2
   150                           	psect	text108,local,class=CODE,merge=1,delta=2
   151                           	psect	text109,local,class=CODE,merge=1,delta=2
   152                           	psect	text110,local,class=CODE,merge=1,delta=2
   153                           	psect	text111,local,class=CODE,merge=1,delta=2
   154                           	psect	text112,local,class=CODE,merge=1,delta=2
   155                           	psect	text113,local,class=CODE,merge=1,delta=2
   156                           	psect	text114,local,class=CODE,merge=1,delta=2
   157                           	psect	text115,local,class=CODE,merge=1,delta=2
   158                           	psect	text116,local,class=CODE,merge=1,delta=2
   159                           	psect	text117,local,class=CODE,merge=1,delta=2
   160                           	psect	text118,local,class=CODE,merge=1,delta=2
   161                           	psect	text119,local,class=CODE,merge=1,delta=2
   162                           	psect	text120,local,class=CODE,merge=1,delta=2
   163                           	psect	text121,local,class=CODE,merge=1,delta=2,group=1
   164                           	psect	text122,local,class=CODE,merge=1,delta=2,group=1
   165                           	psect	text123,local,class=CODE,merge=1,delta=2
   166                           	psect	text124,local,class=CODE,merge=1,delta=2
   167                           	psect	text125,local,class=CODE,merge=1,delta=2
   168                           	psect	text126,local,class=CODE,merge=1,delta=2
   169                           	psect	text127,local,class=CODE,merge=1,delta=2
   170                           	psect	text128,local,class=CODE,merge=1,delta=2
   171                           	psect	text129,local,class=CODE,merge=1,delta=2
   172                           	psect	text130,local,class=CODE,merge=1,delta=2
   173                           	psect	text131,local,class=CODE,merge=1,delta=2
   174                           	psect	text132,local,class=CODE,merge=1,delta=2
   175                           	psect	text133,local,class=CODE,merge=1,delta=2
   176                           	psect	text134,local,class=CODE,merge=1,delta=2
   177                           	psect	text135,local,class=CODE,merge=1,delta=2
   178                           	psect	text136,local,class=CODE,merge=1,delta=2
   179                           	psect	text137,local,class=CODE,merge=1,delta=2
   180                           	psect	text138,local,class=CODE,merge=1,delta=2
   181                           	psect	text139,local,class=CODE,merge=1,delta=2
   182                           	psect	text140,local,class=CODE,merge=1,delta=2
   183                           	psect	text141,local,class=CODE,merge=1,delta=2
   184                           	psect	text142,local,class=CODE,merge=1,delta=2
   185                           	psect	text143,local,class=CODE,merge=1,delta=2
   186                           	psect	text144,local,class=CODE,merge=1,delta=2
   187                           	psect	text145,local,class=CODE,merge=1,delta=2
   188                           	psect	text146,local,class=CODE,merge=1,delta=2
   189                           	psect	text147,local,class=CODE,merge=1,delta=2
   190                           	psect	text148,local,class=CODE,merge=1,delta=2
   191                           	psect	text149,local,class=CODE,merge=1,delta=2
   192                           	psect	text150,local,class=CODE,merge=1,delta=2
   193                           	psect	text151,local,class=CODE,merge=1,delta=2
   194                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   195                           	dabs	1,0x7E,2
   196  0000                     
   197                           ; Version 2.20
   198                           ; Generated 30/04/2020 GMT
   199                           ; 
   200                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   201                           ; All rights reserved.
   202                           ; 
   203                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   204                           ; 
   205                           ; Redistribution and use in source and binary forms, with or without modification, are
   206                           ; permitted provided that the following conditions are met:
   207                           ; 
   208                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   209                           ;        conditions and the following disclaimer.
   210                           ; 
   211                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   212                           ;        of conditions and the following disclaimer in the documentation and/or other
   213                           ;        materials provided with the distribution.
   214                           ; 
   215                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   216                           ;        software without specific prior written permission.
   217                           ; 
   218                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   219                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   220                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   221                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   222                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   223                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   224                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   225                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   226                           ; 
   227                           ; 
   228                           ; Code-generator required, PIC16LF18446 Definitions
   229                           ; 
   230                           ; SFR Addresses
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  008C                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  010F                     	;# 
   286  0110                     	;# 
   287  0111                     	;# 
   288  0112                     	;# 
   289  0113                     	;# 
   290  0114                     	;# 
   291  0115                     	;# 
   292  0116                     	;# 
   293  0117                     	;# 
   294  0118                     	;# 
   295  0119                     	;# 
   296  0119                     	;# 
   297  0119                     	;# 
   298  011A                     	;# 
   299  011A                     	;# 
   300  011A                     	;# 
   301  011B                     	;# 
   302  011B                     	;# 
   303  011B                     	;# 
   304  011B                     	;# 
   305  011B                     	;# 
   306  011C                     	;# 
   307  011C                     	;# 
   308  011C                     	;# 
   309  011D                     	;# 
   310  011D                     	;# 
   311  011D                     	;# 
   312  011E                     	;# 
   313  011E                     	;# 
   314  011E                     	;# 
   315  011F                     	;# 
   316  011F                     	;# 
   317  011F                     	;# 
   318  011F                     	;# 
   319  011F                     	;# 
   320  018C                     	;# 
   321  018D                     	;# 
   322  018E                     	;# 
   323  018F                     	;# 
   324  0190                     	;# 
   325  0191                     	;# 
   326  0192                     	;# 
   327  0196                     	;# 
   328  0197                     	;# 
   329  0198                     	;# 
   330  0199                     	;# 
   331  019A                     	;# 
   332  019B                     	;# 
   333  019C                     	;# 
   334  020C                     	;# 
   335  020D                     	;# 
   336  020E                     	;# 
   337  020E                     	;# 
   338  020F                     	;# 
   339  020F                     	;# 
   340  0210                     	;# 
   341  0210                     	;# 
   342  0211                     	;# 
   343  0211                     	;# 
   344  0212                     	;# 
   345  0213                     	;# 
   346  0214                     	;# 
   347  0214                     	;# 
   348  0215                     	;# 
   349  0215                     	;# 
   350  0216                     	;# 
   351  0216                     	;# 
   352  0217                     	;# 
   353  0217                     	;# 
   354  0218                     	;# 
   355  0219                     	;# 
   356  021A                     	;# 
   357  021A                     	;# 
   358  021B                     	;# 
   359  021B                     	;# 
   360  021C                     	;# 
   361  021C                     	;# 
   362  021D                     	;# 
   363  021D                     	;# 
   364  021E                     	;# 
   365  021F                     	;# 
   366  028C                     	;# 
   367  028C                     	;# 
   368  028D                     	;# 
   369  028D                     	;# 
   370  028E                     	;# 
   371  028F                     	;# 
   372  0290                     	;# 
   373  0291                     	;# 
   374  0292                     	;# 
   375  0292                     	;# 
   376  0293                     	;# 
   377  0293                     	;# 
   378  0294                     	;# 
   379  0295                     	;# 
   380  0296                     	;# 
   381  0297                     	;# 
   382  0298                     	;# 
   383  0298                     	;# 
   384  0299                     	;# 
   385  0299                     	;# 
   386  029A                     	;# 
   387  029B                     	;# 
   388  029C                     	;# 
   389  029D                     	;# 
   390  029F                     	;# 
   391  030C                     	;# 
   392  030C                     	;# 
   393  030D                     	;# 
   394  030E                     	;# 
   395  030F                     	;# 
   396  0310                     	;# 
   397  0310                     	;# 
   398  0311                     	;# 
   399  0312                     	;# 
   400  0313                     	;# 
   401  0314                     	;# 
   402  0314                     	;# 
   403  0315                     	;# 
   404  0316                     	;# 
   405  0317                     	;# 
   406  0318                     	;# 
   407  0318                     	;# 
   408  0319                     	;# 
   409  031A                     	;# 
   410  031B                     	;# 
   411  038C                     	;# 
   412  038C                     	;# 
   413  038D                     	;# 
   414  038E                     	;# 
   415  0390                     	;# 
   416  0390                     	;# 
   417  0391                     	;# 
   418  0392                     	;# 
   419  048C                     	;# 
   420  048C                     	;# 
   421  048D                     	;# 
   422  048E                     	;# 
   423  048F                     	;# 
   424  048F                     	;# 
   425  0490                     	;# 
   426  0491                     	;# 
   427  0492                     	;# 
   428  0492                     	;# 
   429  0493                     	;# 
   430  0494                     	;# 
   431  0495                     	;# 
   432  0495                     	;# 
   433  0496                     	;# 
   434  0497                     	;# 
   435  0498                     	;# 
   436  0499                     	;# 
   437  049A                     	;# 
   438  049B                     	;# 
   439  049C                     	;# 
   440  049D                     	;# 
   441  058C                     	;# 
   442  058C                     	;# 
   443  058D                     	;# 
   444  058E                     	;# 
   445  058F                     	;# 
   446  058F                     	;# 
   447  0590                     	;# 
   448  0591                     	;# 
   449  0592                     	;# 
   450  0593                     	;# 
   451  059C                     	;# 
   452  059C                     	;# 
   453  059D                     	;# 
   454  059D                     	;# 
   455  059E                     	;# 
   456  059F                     	;# 
   457  060C                     	;# 
   458  060C                     	;# 
   459  060D                     	;# 
   460  060D                     	;# 
   461  060E                     	;# 
   462  060F                     	;# 
   463  0610                     	;# 
   464  0611                     	;# 
   465  0612                     	;# 
   466  0613                     	;# 
   467  0614                     	;# 
   468  0616                     	;# 
   469  0616                     	;# 
   470  0617                     	;# 
   471  0617                     	;# 
   472  0618                     	;# 
   473  0619                     	;# 
   474  061A                     	;# 
   475  061B                     	;# 
   476  061C                     	;# 
   477  061D                     	;# 
   478  061E                     	;# 
   479  070C                     	;# 
   480  070D                     	;# 
   481  070E                     	;# 
   482  070F                     	;# 
   483  0710                     	;# 
   484  0711                     	;# 
   485  0712                     	;# 
   486  0713                     	;# 
   487  0714                     	;# 
   488  0716                     	;# 
   489  0717                     	;# 
   490  0718                     	;# 
   491  0719                     	;# 
   492  071A                     	;# 
   493  071B                     	;# 
   494  071C                     	;# 
   495  071D                     	;# 
   496  071E                     	;# 
   497  0796                     	;# 
   498  0797                     	;# 
   499  0798                     	;# 
   500  0799                     	;# 
   501  079A                     	;# 
   502  079B                     	;# 
   503  079C                     	;# 
   504  079D                     	;# 
   505  080C                     	;# 
   506  080D                     	;# 
   507  080E                     	;# 
   508  080F                     	;# 
   509  0810                     	;# 
   510  0811                     	;# 
   511  0813                     	;# 
   512  0814                     	;# 
   513  081A                     	;# 
   514  081A                     	;# 
   515  081B                     	;# 
   516  081C                     	;# 
   517  081C                     	;# 
   518  081D                     	;# 
   519  081E                     	;# 
   520  081F                     	;# 
   521  088C                     	;# 
   522  088D                     	;# 
   523  088E                     	;# 
   524  088F                     	;# 
   525  0890                     	;# 
   526  0891                     	;# 
   527  0892                     	;# 
   528  0893                     	;# 
   529  0895                     	;# 
   530  0896                     	;# 
   531  0897                     	;# 
   532  0898                     	;# 
   533  0899                     	;# 
   534  089A                     	;# 
   535  089B                     	;# 
   536  090C                     	;# 
   537  090E                     	;# 
   538  090F                     	;# 
   539  091F                     	;# 
   540  098F                     	;# 
   541  098F                     	;# 
   542  0990                     	;# 
   543  0991                     	;# 
   544  0992                     	;# 
   545  0993                     	;# 
   546  0994                     	;# 
   547  0995                     	;# 
   548  0996                     	;# 
   549  0997                     	;# 
   550  1E0F                     	;# 
   551  1E10                     	;# 
   552  1E11                     	;# 
   553  1E12                     	;# 
   554  1E13                     	;# 
   555  1E14                     	;# 
   556  1E15                     	;# 
   557  1E16                     	;# 
   558  1E17                     	;# 
   559  1E18                     	;# 
   560  1E19                     	;# 
   561  1E1A                     	;# 
   562  1E1B                     	;# 
   563  1E1C                     	;# 
   564  1E1D                     	;# 
   565  1E1E                     	;# 
   566  1E1F                     	;# 
   567  1E20                     	;# 
   568  1E21                     	;# 
   569  1E22                     	;# 
   570  1E23                     	;# 
   571  1E24                     	;# 
   572  1E25                     	;# 
   573  1E26                     	;# 
   574  1E27                     	;# 
   575  1E28                     	;# 
   576  1E29                     	;# 
   577  1E2A                     	;# 
   578  1E2B                     	;# 
   579  1E2C                     	;# 
   580  1E2D                     	;# 
   581  1E2E                     	;# 
   582  1E2F                     	;# 
   583  1E30                     	;# 
   584  1E31                     	;# 
   585  1E32                     	;# 
   586  1E33                     	;# 
   587  1E34                     	;# 
   588  1E35                     	;# 
   589  1E36                     	;# 
   590  1E37                     	;# 
   591  1E8F                     	;# 
   592  1E90                     	;# 
   593  1E91                     	;# 
   594  1E92                     	;# 
   595  1E93                     	;# 
   596  1E94                     	;# 
   597  1E95                     	;# 
   598  1E96                     	;# 
   599  1E97                     	;# 
   600  1E9C                     	;# 
   601  1E9D                     	;# 
   602  1E9E                     	;# 
   603  1EA1                     	;# 
   604  1EA2                     	;# 
   605  1EA3                     	;# 
   606  1EA4                     	;# 
   607  1EA9                     	;# 
   608  1EAA                     	;# 
   609  1EB1                     	;# 
   610  1EB2                     	;# 
   611  1EB8                     	;# 
   612  1EB9                     	;# 
   613  1EBA                     	;# 
   614  1EBB                     	;# 
   615  1EBC                     	;# 
   616  1EBD                     	;# 
   617  1EBE                     	;# 
   618  1EC3                     	;# 
   619  1EC5                     	;# 
   620  1EC6                     	;# 
   621  1EC7                     	;# 
   622  1EC8                     	;# 
   623  1EC9                     	;# 
   624  1ECA                     	;# 
   625  1ECB                     	;# 
   626  1ECB                     	;# 
   627  1ECB                     	;# 
   628  1ECC                     	;# 
   629  1ECC                     	;# 
   630  1ECC                     	;# 
   631  1F10                     	;# 
   632  1F11                     	;# 
   633  1F12                     	;# 
   634  1F14                     	;# 
   635  1F15                     	;# 
   636  1F1C                     	;# 
   637  1F1D                     	;# 
   638  1F1E                     	;# 
   639  1F1F                     	;# 
   640  1F20                     	;# 
   641  1F21                     	;# 
   642  1F22                     	;# 
   643  1F23                     	;# 
   644  1F24                     	;# 
   645  1F25                     	;# 
   646  1F26                     	;# 
   647  1F27                     	;# 
   648  1F38                     	;# 
   649  1F39                     	;# 
   650  1F3A                     	;# 
   651  1F3B                     	;# 
   652  1F3C                     	;# 
   653  1F3D                     	;# 
   654  1F3E                     	;# 
   655  1F3F                     	;# 
   656  1F43                     	;# 
   657  1F44                     	;# 
   658  1F45                     	;# 
   659  1F46                     	;# 
   660  1F47                     	;# 
   661  1F48                     	;# 
   662  1F49                     	;# 
   663  1F4A                     	;# 
   664  1F4E                     	;# 
   665  1F4F                     	;# 
   666  1F50                     	;# 
   667  1F51                     	;# 
   668  1F52                     	;# 
   669  1F53                     	;# 
   670  1F54                     	;# 
   671  1F55                     	;# 
   672  1FE4                     	;# 
   673  1FE5                     	;# 
   674  1FE6                     	;# 
   675  1FE7                     	;# 
   676  1FE8                     	;# 
   677  1FE8                     	;# 
   678  1FE9                     	;# 
   679  1FEA                     	;# 
   680  1FEB                     	;# 
   681  1FED                     	;# 
   682  1FEE                     	;# 
   683  1FEF                     	;# 
   684  0000                     	;# 
   685  0001                     	;# 
   686  0002                     	;# 
   687  0003                     	;# 
   688  0004                     	;# 
   689  0005                     	;# 
   690  0006                     	;# 
   691  0007                     	;# 
   692  0008                     	;# 
   693  0009                     	;# 
   694  000A                     	;# 
   695  000B                     	;# 
   696  000C                     	;# 
   697  000D                     	;# 
   698  000E                     	;# 
   699  0012                     	;# 
   700  0013                     	;# 
   701  0014                     	;# 
   702  0018                     	;# 
   703  0019                     	;# 
   704  001A                     	;# 
   705  008C                     	;# 
   706  008C                     	;# 
   707  008D                     	;# 
   708  008E                     	;# 
   709  008E                     	;# 
   710  008F                     	;# 
   711  0090                     	;# 
   712  0090                     	;# 
   713  0091                     	;# 
   714  0092                     	;# 
   715  0092                     	;# 
   716  0093                     	;# 
   717  0094                     	;# 
   718  0094                     	;# 
   719  0095                     	;# 
   720  0096                     	;# 
   721  0096                     	;# 
   722  0097                     	;# 
   723  0098                     	;# 
   724  0099                     	;# 
   725  009A                     	;# 
   726  009B                     	;# 
   727  009B                     	;# 
   728  009C                     	;# 
   729  009D                     	;# 
   730  009D                     	;# 
   731  009E                     	;# 
   732  009F                     	;# 
   733  010C                     	;# 
   734  010C                     	;# 
   735  010D                     	;# 
   736  010E                     	;# 
   737  010F                     	;# 
   738  010F                     	;# 
   739  0110                     	;# 
   740  0111                     	;# 
   741  0112                     	;# 
   742  0113                     	;# 
   743  0114                     	;# 
   744  0115                     	;# 
   745  0116                     	;# 
   746  0117                     	;# 
   747  0118                     	;# 
   748  0119                     	;# 
   749  0119                     	;# 
   750  0119                     	;# 
   751  011A                     	;# 
   752  011A                     	;# 
   753  011A                     	;# 
   754  011B                     	;# 
   755  011B                     	;# 
   756  011B                     	;# 
   757  011B                     	;# 
   758  011B                     	;# 
   759  011C                     	;# 
   760  011C                     	;# 
   761  011C                     	;# 
   762  011D                     	;# 
   763  011D                     	;# 
   764  011D                     	;# 
   765  011E                     	;# 
   766  011E                     	;# 
   767  011E                     	;# 
   768  011F                     	;# 
   769  011F                     	;# 
   770  011F                     	;# 
   771  011F                     	;# 
   772  011F                     	;# 
   773  018C                     	;# 
   774  018D                     	;# 
   775  018E                     	;# 
   776  018F                     	;# 
   777  0190                     	;# 
   778  0191                     	;# 
   779  0192                     	;# 
   780  0196                     	;# 
   781  0197                     	;# 
   782  0198                     	;# 
   783  0199                     	;# 
   784  019A                     	;# 
   785  019B                     	;# 
   786  019C                     	;# 
   787  020C                     	;# 
   788  020D                     	;# 
   789  020E                     	;# 
   790  020E                     	;# 
   791  020F                     	;# 
   792  020F                     	;# 
   793  0210                     	;# 
   794  0210                     	;# 
   795  0211                     	;# 
   796  0211                     	;# 
   797  0212                     	;# 
   798  0213                     	;# 
   799  0214                     	;# 
   800  0214                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0216                     	;# 
   804  0216                     	;# 
   805  0217                     	;# 
   806  0217                     	;# 
   807  0218                     	;# 
   808  0219                     	;# 
   809  021A                     	;# 
   810  021A                     	;# 
   811  021B                     	;# 
   812  021B                     	;# 
   813  021C                     	;# 
   814  021C                     	;# 
   815  021D                     	;# 
   816  021D                     	;# 
   817  021E                     	;# 
   818  021F                     	;# 
   819  028C                     	;# 
   820  028C                     	;# 
   821  028D                     	;# 
   822  028D                     	;# 
   823  028E                     	;# 
   824  028F                     	;# 
   825  0290                     	;# 
   826  0291                     	;# 
   827  0292                     	;# 
   828  0292                     	;# 
   829  0293                     	;# 
   830  0293                     	;# 
   831  0294                     	;# 
   832  0295                     	;# 
   833  0296                     	;# 
   834  0297                     	;# 
   835  0298                     	;# 
   836  0298                     	;# 
   837  0299                     	;# 
   838  0299                     	;# 
   839  029A                     	;# 
   840  029B                     	;# 
   841  029C                     	;# 
   842  029D                     	;# 
   843  029F                     	;# 
   844  030C                     	;# 
   845  030C                     	;# 
   846  030D                     	;# 
   847  030E                     	;# 
   848  030F                     	;# 
   849  0310                     	;# 
   850  0310                     	;# 
   851  0311                     	;# 
   852  0312                     	;# 
   853  0313                     	;# 
   854  0314                     	;# 
   855  0314                     	;# 
   856  0315                     	;# 
   857  0316                     	;# 
   858  0317                     	;# 
   859  0318                     	;# 
   860  0318                     	;# 
   861  0319                     	;# 
   862  031A                     	;# 
   863  031B                     	;# 
   864  038C                     	;# 
   865  038C                     	;# 
   866  038D                     	;# 
   867  038E                     	;# 
   868  0390                     	;# 
   869  0390                     	;# 
   870  0391                     	;# 
   871  0392                     	;# 
   872  048C                     	;# 
   873  048C                     	;# 
   874  048D                     	;# 
   875  048E                     	;# 
   876  048F                     	;# 
   877  048F                     	;# 
   878  0490                     	;# 
   879  0491                     	;# 
   880  0492                     	;# 
   881  0492                     	;# 
   882  0493                     	;# 
   883  0494                     	;# 
   884  0495                     	;# 
   885  0495                     	;# 
   886  0496                     	;# 
   887  0497                     	;# 
   888  0498                     	;# 
   889  0499                     	;# 
   890  049A                     	;# 
   891  049B                     	;# 
   892  049C                     	;# 
   893  049D                     	;# 
   894  058C                     	;# 
   895  058C                     	;# 
   896  058D                     	;# 
   897  058E                     	;# 
   898  058F                     	;# 
   899  058F                     	;# 
   900  0590                     	;# 
   901  0591                     	;# 
   902  0592                     	;# 
   903  0593                     	;# 
   904  059C                     	;# 
   905  059C                     	;# 
   906  059D                     	;# 
   907  059D                     	;# 
   908  059E                     	;# 
   909  059F                     	;# 
   910  060C                     	;# 
   911  060C                     	;# 
   912  060D                     	;# 
   913  060D                     	;# 
   914  060E                     	;# 
   915  060F                     	;# 
   916  0610                     	;# 
   917  0611                     	;# 
   918  0612                     	;# 
   919  0613                     	;# 
   920  0614                     	;# 
   921  0616                     	;# 
   922  0616                     	;# 
   923  0617                     	;# 
   924  0617                     	;# 
   925  0618                     	;# 
   926  0619                     	;# 
   927  061A                     	;# 
   928  061B                     	;# 
   929  061C                     	;# 
   930  061D                     	;# 
   931  061E                     	;# 
   932  070C                     	;# 
   933  070D                     	;# 
   934  070E                     	;# 
   935  070F                     	;# 
   936  0710                     	;# 
   937  0711                     	;# 
   938  0712                     	;# 
   939  0713                     	;# 
   940  0714                     	;# 
   941  0716                     	;# 
   942  0717                     	;# 
   943  0718                     	;# 
   944  0719                     	;# 
   945  071A                     	;# 
   946  071B                     	;# 
   947  071C                     	;# 
   948  071D                     	;# 
   949  071E                     	;# 
   950  0796                     	;# 
   951  0797                     	;# 
   952  0798                     	;# 
   953  0799                     	;# 
   954  079A                     	;# 
   955  079B                     	;# 
   956  079C                     	;# 
   957  079D                     	;# 
   958  080C                     	;# 
   959  080D                     	;# 
   960  080E                     	;# 
   961  080F                     	;# 
   962  0810                     	;# 
   963  0811                     	;# 
   964  0813                     	;# 
   965  0814                     	;# 
   966  081A                     	;# 
   967  081A                     	;# 
   968  081B                     	;# 
   969  081C                     	;# 
   970  081C                     	;# 
   971  081D                     	;# 
   972  081E                     	;# 
   973  081F                     	;# 
   974  088C                     	;# 
   975  088D                     	;# 
   976  088E                     	;# 
   977  088F                     	;# 
   978  0890                     	;# 
   979  0891                     	;# 
   980  0892                     	;# 
   981  0893                     	;# 
   982  0895                     	;# 
   983  0896                     	;# 
   984  0897                     	;# 
   985  0898                     	;# 
   986  0899                     	;# 
   987  089A                     	;# 
   988  089B                     	;# 
   989  090C                     	;# 
   990  090E                     	;# 
   991  090F                     	;# 
   992  091F                     	;# 
   993  098F                     	;# 
   994  098F                     	;# 
   995  0990                     	;# 
   996  0991                     	;# 
   997  0992                     	;# 
   998  0993                     	;# 
   999  0994                     	;# 
  1000  0995                     	;# 
  1001  0996                     	;# 
  1002  0997                     	;# 
  1003  1E0F                     	;# 
  1004  1E10                     	;# 
  1005  1E11                     	;# 
  1006  1E12                     	;# 
  1007  1E13                     	;# 
  1008  1E14                     	;# 
  1009  1E15                     	;# 
  1010  1E16                     	;# 
  1011  1E17                     	;# 
  1012  1E18                     	;# 
  1013  1E19                     	;# 
  1014  1E1A                     	;# 
  1015  1E1B                     	;# 
  1016  1E1C                     	;# 
  1017  1E1D                     	;# 
  1018  1E1E                     	;# 
  1019  1E1F                     	;# 
  1020  1E20                     	;# 
  1021  1E21                     	;# 
  1022  1E22                     	;# 
  1023  1E23                     	;# 
  1024  1E24                     	;# 
  1025  1E25                     	;# 
  1026  1E26                     	;# 
  1027  1E27                     	;# 
  1028  1E28                     	;# 
  1029  1E29                     	;# 
  1030  1E2A                     	;# 
  1031  1E2B                     	;# 
  1032  1E2C                     	;# 
  1033  1E2D                     	;# 
  1034  1E2E                     	;# 
  1035  1E2F                     	;# 
  1036  1E30                     	;# 
  1037  1E31                     	;# 
  1038  1E32                     	;# 
  1039  1E33                     	;# 
  1040  1E34                     	;# 
  1041  1E35                     	;# 
  1042  1E36                     	;# 
  1043  1E37                     	;# 
  1044  1E8F                     	;# 
  1045  1E90                     	;# 
  1046  1E91                     	;# 
  1047  1E92                     	;# 
  1048  1E93                     	;# 
  1049  1E94                     	;# 
  1050  1E95                     	;# 
  1051  1E96                     	;# 
  1052  1E97                     	;# 
  1053  1E9C                     	;# 
  1054  1E9D                     	;# 
  1055  1E9E                     	;# 
  1056  1EA1                     	;# 
  1057  1EA2                     	;# 
  1058  1EA3                     	;# 
  1059  1EA4                     	;# 
  1060  1EA9                     	;# 
  1061  1EAA                     	;# 
  1062  1EB1                     	;# 
  1063  1EB2                     	;# 
  1064  1EB8                     	;# 
  1065  1EB9                     	;# 
  1066  1EBA                     	;# 
  1067  1EBB                     	;# 
  1068  1EBC                     	;# 
  1069  1EBD                     	;# 
  1070  1EBE                     	;# 
  1071  1EC3                     	;# 
  1072  1EC5                     	;# 
  1073  1EC6                     	;# 
  1074  1EC7                     	;# 
  1075  1EC8                     	;# 
  1076  1EC9                     	;# 
  1077  1ECA                     	;# 
  1078  1ECB                     	;# 
  1079  1ECB                     	;# 
  1080  1ECB                     	;# 
  1081  1ECC                     	;# 
  1082  1ECC                     	;# 
  1083  1ECC                     	;# 
  1084  1F10                     	;# 
  1085  1F11                     	;# 
  1086  1F12                     	;# 
  1087  1F14                     	;# 
  1088  1F15                     	;# 
  1089  1F1C                     	;# 
  1090  1F1D                     	;# 
  1091  1F1E                     	;# 
  1092  1F1F                     	;# 
  1093  1F20                     	;# 
  1094  1F21                     	;# 
  1095  1F22                     	;# 
  1096  1F23                     	;# 
  1097  1F24                     	;# 
  1098  1F25                     	;# 
  1099  1F26                     	;# 
  1100  1F27                     	;# 
  1101  1F38                     	;# 
  1102  1F39                     	;# 
  1103  1F3A                     	;# 
  1104  1F3B                     	;# 
  1105  1F3C                     	;# 
  1106  1F3D                     	;# 
  1107  1F3E                     	;# 
  1108  1F3F                     	;# 
  1109  1F43                     	;# 
  1110  1F44                     	;# 
  1111  1F45                     	;# 
  1112  1F46                     	;# 
  1113  1F47                     	;# 
  1114  1F48                     	;# 
  1115  1F49                     	;# 
  1116  1F4A                     	;# 
  1117  1F4E                     	;# 
  1118  1F4F                     	;# 
  1119  1F50                     	;# 
  1120  1F51                     	;# 
  1121  1F52                     	;# 
  1122  1F53                     	;# 
  1123  1F54                     	;# 
  1124  1F55                     	;# 
  1125  1FE4                     	;# 
  1126  1FE5                     	;# 
  1127  1FE6                     	;# 
  1128  1FE7                     	;# 
  1129  1FE8                     	;# 
  1130  1FE8                     	;# 
  1131  1FE9                     	;# 
  1132  1FEA                     	;# 
  1133  1FEB                     	;# 
  1134  1FED                     	;# 
  1135  1FEE                     	;# 
  1136  1FEF                     	;# 
  1137  0000                     	;# 
  1138  0001                     	;# 
  1139  0002                     	;# 
  1140  0003                     	;# 
  1141  0004                     	;# 
  1142  0005                     	;# 
  1143  0006                     	;# 
  1144  0007                     	;# 
  1145  0008                     	;# 
  1146  0009                     	;# 
  1147  000A                     	;# 
  1148  000B                     	;# 
  1149  000C                     	;# 
  1150  000D                     	;# 
  1151  000E                     	;# 
  1152  0012                     	;# 
  1153  0013                     	;# 
  1154  0014                     	;# 
  1155  0018                     	;# 
  1156  0019                     	;# 
  1157  001A                     	;# 
  1158  008C                     	;# 
  1159  008C                     	;# 
  1160  008D                     	;# 
  1161  008E                     	;# 
  1162  008E                     	;# 
  1163  008F                     	;# 
  1164  0090                     	;# 
  1165  0090                     	;# 
  1166  0091                     	;# 
  1167  0092                     	;# 
  1168  0092                     	;# 
  1169  0093                     	;# 
  1170  0094                     	;# 
  1171  0094                     	;# 
  1172  0095                     	;# 
  1173  0096                     	;# 
  1174  0096                     	;# 
  1175  0097                     	;# 
  1176  0098                     	;# 
  1177  0099                     	;# 
  1178  009A                     	;# 
  1179  009B                     	;# 
  1180  009B                     	;# 
  1181  009C                     	;# 
  1182  009D                     	;# 
  1183  009D                     	;# 
  1184  009E                     	;# 
  1185  009F                     	;# 
  1186  010C                     	;# 
  1187  010C                     	;# 
  1188  010D                     	;# 
  1189  010E                     	;# 
  1190  010F                     	;# 
  1191  010F                     	;# 
  1192  0110                     	;# 
  1193  0111                     	;# 
  1194  0112                     	;# 
  1195  0113                     	;# 
  1196  0114                     	;# 
  1197  0115                     	;# 
  1198  0116                     	;# 
  1199  0117                     	;# 
  1200  0118                     	;# 
  1201  0119                     	;# 
  1202  0119                     	;# 
  1203  0119                     	;# 
  1204  011A                     	;# 
  1205  011A                     	;# 
  1206  011A                     	;# 
  1207  011B                     	;# 
  1208  011B                     	;# 
  1209  011B                     	;# 
  1210  011B                     	;# 
  1211  011B                     	;# 
  1212  011C                     	;# 
  1213  011C                     	;# 
  1214  011C                     	;# 
  1215  011D                     	;# 
  1216  011D                     	;# 
  1217  011D                     	;# 
  1218  011E                     	;# 
  1219  011E                     	;# 
  1220  011E                     	;# 
  1221  011F                     	;# 
  1222  011F                     	;# 
  1223  011F                     	;# 
  1224  011F                     	;# 
  1225  011F                     	;# 
  1226  018C                     	;# 
  1227  018D                     	;# 
  1228  018E                     	;# 
  1229  018F                     	;# 
  1230  0190                     	;# 
  1231  0191                     	;# 
  1232  0192                     	;# 
  1233  0196                     	;# 
  1234  0197                     	;# 
  1235  0198                     	;# 
  1236  0199                     	;# 
  1237  019A                     	;# 
  1238  019B                     	;# 
  1239  019C                     	;# 
  1240  020C                     	;# 
  1241  020D                     	;# 
  1242  020E                     	;# 
  1243  020E                     	;# 
  1244  020F                     	;# 
  1245  020F                     	;# 
  1246  0210                     	;# 
  1247  0210                     	;# 
  1248  0211                     	;# 
  1249  0211                     	;# 
  1250  0212                     	;# 
  1251  0213                     	;# 
  1252  0214                     	;# 
  1253  0214                     	;# 
  1254  0215                     	;# 
  1255  0215                     	;# 
  1256  0216                     	;# 
  1257  0216                     	;# 
  1258  0217                     	;# 
  1259  0217                     	;# 
  1260  0218                     	;# 
  1261  0219                     	;# 
  1262  021A                     	;# 
  1263  021A                     	;# 
  1264  021B                     	;# 
  1265  021B                     	;# 
  1266  021C                     	;# 
  1267  021C                     	;# 
  1268  021D                     	;# 
  1269  021D                     	;# 
  1270  021E                     	;# 
  1271  021F                     	;# 
  1272  028C                     	;# 
  1273  028C                     	;# 
  1274  028D                     	;# 
  1275  028D                     	;# 
  1276  028E                     	;# 
  1277  028F                     	;# 
  1278  0290                     	;# 
  1279  0291                     	;# 
  1280  0292                     	;# 
  1281  0292                     	;# 
  1282  0293                     	;# 
  1283  0293                     	;# 
  1284  0294                     	;# 
  1285  0295                     	;# 
  1286  0296                     	;# 
  1287  0297                     	;# 
  1288  0298                     	;# 
  1289  0298                     	;# 
  1290  0299                     	;# 
  1291  0299                     	;# 
  1292  029A                     	;# 
  1293  029B                     	;# 
  1294  029C                     	;# 
  1295  029D                     	;# 
  1296  029F                     	;# 
  1297  030C                     	;# 
  1298  030C                     	;# 
  1299  030D                     	;# 
  1300  030E                     	;# 
  1301  030F                     	;# 
  1302  0310                     	;# 
  1303  0310                     	;# 
  1304  0311                     	;# 
  1305  0312                     	;# 
  1306  0313                     	;# 
  1307  0314                     	;# 
  1308  0314                     	;# 
  1309  0315                     	;# 
  1310  0316                     	;# 
  1311  0317                     	;# 
  1312  0318                     	;# 
  1313  0318                     	;# 
  1314  0319                     	;# 
  1315  031A                     	;# 
  1316  031B                     	;# 
  1317  038C                     	;# 
  1318  038C                     	;# 
  1319  038D                     	;# 
  1320  038E                     	;# 
  1321  0390                     	;# 
  1322  0390                     	;# 
  1323  0391                     	;# 
  1324  0392                     	;# 
  1325  048C                     	;# 
  1326  048C                     	;# 
  1327  048D                     	;# 
  1328  048E                     	;# 
  1329  048F                     	;# 
  1330  048F                     	;# 
  1331  0490                     	;# 
  1332  0491                     	;# 
  1333  0492                     	;# 
  1334  0492                     	;# 
  1335  0493                     	;# 
  1336  0494                     	;# 
  1337  0495                     	;# 
  1338  0495                     	;# 
  1339  0496                     	;# 
  1340  0497                     	;# 
  1341  0498                     	;# 
  1342  0499                     	;# 
  1343  049A                     	;# 
  1344  049B                     	;# 
  1345  049C                     	;# 
  1346  049D                     	;# 
  1347  058C                     	;# 
  1348  058C                     	;# 
  1349  058D                     	;# 
  1350  058E                     	;# 
  1351  058F                     	;# 
  1352  058F                     	;# 
  1353  0590                     	;# 
  1354  0591                     	;# 
  1355  0592                     	;# 
  1356  0593                     	;# 
  1357  059C                     	;# 
  1358  059C                     	;# 
  1359  059D                     	;# 
  1360  059D                     	;# 
  1361  059E                     	;# 
  1362  059F                     	;# 
  1363  060C                     	;# 
  1364  060C                     	;# 
  1365  060D                     	;# 
  1366  060D                     	;# 
  1367  060E                     	;# 
  1368  060F                     	;# 
  1369  0610                     	;# 
  1370  0611                     	;# 
  1371  0612                     	;# 
  1372  0613                     	;# 
  1373  0614                     	;# 
  1374  0616                     	;# 
  1375  0616                     	;# 
  1376  0617                     	;# 
  1377  0617                     	;# 
  1378  0618                     	;# 
  1379  0619                     	;# 
  1380  061A                     	;# 
  1381  061B                     	;# 
  1382  061C                     	;# 
  1383  061D                     	;# 
  1384  061E                     	;# 
  1385  070C                     	;# 
  1386  070D                     	;# 
  1387  070E                     	;# 
  1388  070F                     	;# 
  1389  0710                     	;# 
  1390  0711                     	;# 
  1391  0712                     	;# 
  1392  0713                     	;# 
  1393  0714                     	;# 
  1394  0716                     	;# 
  1395  0717                     	;# 
  1396  0718                     	;# 
  1397  0719                     	;# 
  1398  071A                     	;# 
  1399  071B                     	;# 
  1400  071C                     	;# 
  1401  071D                     	;# 
  1402  071E                     	;# 
  1403  0796                     	;# 
  1404  0797                     	;# 
  1405  0798                     	;# 
  1406  0799                     	;# 
  1407  079A                     	;# 
  1408  079B                     	;# 
  1409  079C                     	;# 
  1410  079D                     	;# 
  1411  080C                     	;# 
  1412  080D                     	;# 
  1413  080E                     	;# 
  1414  080F                     	;# 
  1415  0810                     	;# 
  1416  0811                     	;# 
  1417  0813                     	;# 
  1418  0814                     	;# 
  1419  081A                     	;# 
  1420  081A                     	;# 
  1421  081B                     	;# 
  1422  081C                     	;# 
  1423  081C                     	;# 
  1424  081D                     	;# 
  1425  081E                     	;# 
  1426  081F                     	;# 
  1427  088C                     	;# 
  1428  088D                     	;# 
  1429  088E                     	;# 
  1430  088F                     	;# 
  1431  0890                     	;# 
  1432  0891                     	;# 
  1433  0892                     	;# 
  1434  0893                     	;# 
  1435  0895                     	;# 
  1436  0896                     	;# 
  1437  0897                     	;# 
  1438  0898                     	;# 
  1439  0899                     	;# 
  1440  089A                     	;# 
  1441  089B                     	;# 
  1442  090C                     	;# 
  1443  090E                     	;# 
  1444  090F                     	;# 
  1445  091F                     	;# 
  1446  098F                     	;# 
  1447  098F                     	;# 
  1448  0990                     	;# 
  1449  0991                     	;# 
  1450  0992                     	;# 
  1451  0993                     	;# 
  1452  0994                     	;# 
  1453  0995                     	;# 
  1454  0996                     	;# 
  1455  0997                     	;# 
  1456  1E0F                     	;# 
  1457  1E10                     	;# 
  1458  1E11                     	;# 
  1459  1E12                     	;# 
  1460  1E13                     	;# 
  1461  1E14                     	;# 
  1462  1E15                     	;# 
  1463  1E16                     	;# 
  1464  1E17                     	;# 
  1465  1E18                     	;# 
  1466  1E19                     	;# 
  1467  1E1A                     	;# 
  1468  1E1B                     	;# 
  1469  1E1C                     	;# 
  1470  1E1D                     	;# 
  1471  1E1E                     	;# 
  1472  1E1F                     	;# 
  1473  1E20                     	;# 
  1474  1E21                     	;# 
  1475  1E22                     	;# 
  1476  1E23                     	;# 
  1477  1E24                     	;# 
  1478  1E25                     	;# 
  1479  1E26                     	;# 
  1480  1E27                     	;# 
  1481  1E28                     	;# 
  1482  1E29                     	;# 
  1483  1E2A                     	;# 
  1484  1E2B                     	;# 
  1485  1E2C                     	;# 
  1486  1E2D                     	;# 
  1487  1E2E                     	;# 
  1488  1E2F                     	;# 
  1489  1E30                     	;# 
  1490  1E31                     	;# 
  1491  1E32                     	;# 
  1492  1E33                     	;# 
  1493  1E34                     	;# 
  1494  1E35                     	;# 
  1495  1E36                     	;# 
  1496  1E37                     	;# 
  1497  1E8F                     	;# 
  1498  1E90                     	;# 
  1499  1E91                     	;# 
  1500  1E92                     	;# 
  1501  1E93                     	;# 
  1502  1E94                     	;# 
  1503  1E95                     	;# 
  1504  1E96                     	;# 
  1505  1E97                     	;# 
  1506  1E9C                     	;# 
  1507  1E9D                     	;# 
  1508  1E9E                     	;# 
  1509  1EA1                     	;# 
  1510  1EA2                     	;# 
  1511  1EA3                     	;# 
  1512  1EA4                     	;# 
  1513  1EA9                     	;# 
  1514  1EAA                     	;# 
  1515  1EB1                     	;# 
  1516  1EB2                     	;# 
  1517  1EB8                     	;# 
  1518  1EB9                     	;# 
  1519  1EBA                     	;# 
  1520  1EBB                     	;# 
  1521  1EBC                     	;# 
  1522  1EBD                     	;# 
  1523  1EBE                     	;# 
  1524  1EC3                     	;# 
  1525  1EC5                     	;# 
  1526  1EC6                     	;# 
  1527  1EC7                     	;# 
  1528  1EC8                     	;# 
  1529  1EC9                     	;# 
  1530  1ECA                     	;# 
  1531  1ECB                     	;# 
  1532  1ECB                     	;# 
  1533  1ECB                     	;# 
  1534  1ECC                     	;# 
  1535  1ECC                     	;# 
  1536  1ECC                     	;# 
  1537  1F10                     	;# 
  1538  1F11                     	;# 
  1539  1F12                     	;# 
  1540  1F14                     	;# 
  1541  1F15                     	;# 
  1542  1F1C                     	;# 
  1543  1F1D                     	;# 
  1544  1F1E                     	;# 
  1545  1F1F                     	;# 
  1546  1F20                     	;# 
  1547  1F21                     	;# 
  1548  1F22                     	;# 
  1549  1F23                     	;# 
  1550  1F24                     	;# 
  1551  1F25                     	;# 
  1552  1F26                     	;# 
  1553  1F27                     	;# 
  1554  1F38                     	;# 
  1555  1F39                     	;# 
  1556  1F3A                     	;# 
  1557  1F3B                     	;# 
  1558  1F3C                     	;# 
  1559  1F3D                     	;# 
  1560  1F3E                     	;# 
  1561  1F3F                     	;# 
  1562  1F43                     	;# 
  1563  1F44                     	;# 
  1564  1F45                     	;# 
  1565  1F46                     	;# 
  1566  1F47                     	;# 
  1567  1F48                     	;# 
  1568  1F49                     	;# 
  1569  1F4A                     	;# 
  1570  1F4E                     	;# 
  1571  1F4F                     	;# 
  1572  1F50                     	;# 
  1573  1F51                     	;# 
  1574  1F52                     	;# 
  1575  1F53                     	;# 
  1576  1F54                     	;# 
  1577  1F55                     	;# 
  1578  1FE4                     	;# 
  1579  1FE5                     	;# 
  1580  1FE6                     	;# 
  1581  1FE7                     	;# 
  1582  1FE8                     	;# 
  1583  1FE8                     	;# 
  1584  1FE9                     	;# 
  1585  1FEA                     	;# 
  1586  1FEB                     	;# 
  1587  1FED                     	;# 
  1588  1FEE                     	;# 
  1589  1FEF                     	;# 
  1590  0000                     	;# 
  1591  0001                     	;# 
  1592  0002                     	;# 
  1593  0003                     	;# 
  1594  0004                     	;# 
  1595  0005                     	;# 
  1596  0006                     	;# 
  1597  0007                     	;# 
  1598  0008                     	;# 
  1599  0009                     	;# 
  1600  000A                     	;# 
  1601  000B                     	;# 
  1602  000C                     	;# 
  1603  000D                     	;# 
  1604  000E                     	;# 
  1605  0012                     	;# 
  1606  0013                     	;# 
  1607  0014                     	;# 
  1608  0018                     	;# 
  1609  0019                     	;# 
  1610  001A                     	;# 
  1611  008C                     	;# 
  1612  008C                     	;# 
  1613  008D                     	;# 
  1614  008E                     	;# 
  1615  008E                     	;# 
  1616  008F                     	;# 
  1617  0090                     	;# 
  1618  0090                     	;# 
  1619  0091                     	;# 
  1620  0092                     	;# 
  1621  0092                     	;# 
  1622  0093                     	;# 
  1623  0094                     	;# 
  1624  0094                     	;# 
  1625  0095                     	;# 
  1626  0096                     	;# 
  1627  0096                     	;# 
  1628  0097                     	;# 
  1629  0098                     	;# 
  1630  0099                     	;# 
  1631  009A                     	;# 
  1632  009B                     	;# 
  1633  009B                     	;# 
  1634  009C                     	;# 
  1635  009D                     	;# 
  1636  009D                     	;# 
  1637  009E                     	;# 
  1638  009F                     	;# 
  1639  010C                     	;# 
  1640  010C                     	;# 
  1641  010D                     	;# 
  1642  010E                     	;# 
  1643  010F                     	;# 
  1644  010F                     	;# 
  1645  0110                     	;# 
  1646  0111                     	;# 
  1647  0112                     	;# 
  1648  0113                     	;# 
  1649  0114                     	;# 
  1650  0115                     	;# 
  1651  0116                     	;# 
  1652  0117                     	;# 
  1653  0118                     	;# 
  1654  0119                     	;# 
  1655  0119                     	;# 
  1656  0119                     	;# 
  1657  011A                     	;# 
  1658  011A                     	;# 
  1659  011A                     	;# 
  1660  011B                     	;# 
  1661  011B                     	;# 
  1662  011B                     	;# 
  1663  011B                     	;# 
  1664  011B                     	;# 
  1665  011C                     	;# 
  1666  011C                     	;# 
  1667  011C                     	;# 
  1668  011D                     	;# 
  1669  011D                     	;# 
  1670  011D                     	;# 
  1671  011E                     	;# 
  1672  011E                     	;# 
  1673  011E                     	;# 
  1674  011F                     	;# 
  1675  011F                     	;# 
  1676  011F                     	;# 
  1677  011F                     	;# 
  1678  011F                     	;# 
  1679  018C                     	;# 
  1680  018D                     	;# 
  1681  018E                     	;# 
  1682  018F                     	;# 
  1683  0190                     	;# 
  1684  0191                     	;# 
  1685  0192                     	;# 
  1686  0196                     	;# 
  1687  0197                     	;# 
  1688  0198                     	;# 
  1689  0199                     	;# 
  1690  019A                     	;# 
  1691  019B                     	;# 
  1692  019C                     	;# 
  1693  020C                     	;# 
  1694  020D                     	;# 
  1695  020E                     	;# 
  1696  020E                     	;# 
  1697  020F                     	;# 
  1698  020F                     	;# 
  1699  0210                     	;# 
  1700  0210                     	;# 
  1701  0211                     	;# 
  1702  0211                     	;# 
  1703  0212                     	;# 
  1704  0213                     	;# 
  1705  0214                     	;# 
  1706  0214                     	;# 
  1707  0215                     	;# 
  1708  0215                     	;# 
  1709  0216                     	;# 
  1710  0216                     	;# 
  1711  0217                     	;# 
  1712  0217                     	;# 
  1713  0218                     	;# 
  1714  0219                     	;# 
  1715  021A                     	;# 
  1716  021A                     	;# 
  1717  021B                     	;# 
  1718  021B                     	;# 
  1719  021C                     	;# 
  1720  021C                     	;# 
  1721  021D                     	;# 
  1722  021D                     	;# 
  1723  021E                     	;# 
  1724  021F                     	;# 
  1725  028C                     	;# 
  1726  028C                     	;# 
  1727  028D                     	;# 
  1728  028D                     	;# 
  1729  028E                     	;# 
  1730  028F                     	;# 
  1731  0290                     	;# 
  1732  0291                     	;# 
  1733  0292                     	;# 
  1734  0292                     	;# 
  1735  0293                     	;# 
  1736  0293                     	;# 
  1737  0294                     	;# 
  1738  0295                     	;# 
  1739  0296                     	;# 
  1740  0297                     	;# 
  1741  0298                     	;# 
  1742  0298                     	;# 
  1743  0299                     	;# 
  1744  0299                     	;# 
  1745  029A                     	;# 
  1746  029B                     	;# 
  1747  029C                     	;# 
  1748  029D                     	;# 
  1749  029F                     	;# 
  1750  030C                     	;# 
  1751  030C                     	;# 
  1752  030D                     	;# 
  1753  030E                     	;# 
  1754  030F                     	;# 
  1755  0310                     	;# 
  1756  0310                     	;# 
  1757  0311                     	;# 
  1758  0312                     	;# 
  1759  0313                     	;# 
  1760  0314                     	;# 
  1761  0314                     	;# 
  1762  0315                     	;# 
  1763  0316                     	;# 
  1764  0317                     	;# 
  1765  0318                     	;# 
  1766  0318                     	;# 
  1767  0319                     	;# 
  1768  031A                     	;# 
  1769  031B                     	;# 
  1770  038C                     	;# 
  1771  038C                     	;# 
  1772  038D                     	;# 
  1773  038E                     	;# 
  1774  0390                     	;# 
  1775  0390                     	;# 
  1776  0391                     	;# 
  1777  0392                     	;# 
  1778  048C                     	;# 
  1779  048C                     	;# 
  1780  048D                     	;# 
  1781  048E                     	;# 
  1782  048F                     	;# 
  1783  048F                     	;# 
  1784  0490                     	;# 
  1785  0491                     	;# 
  1786  0492                     	;# 
  1787  0492                     	;# 
  1788  0493                     	;# 
  1789  0494                     	;# 
  1790  0495                     	;# 
  1791  0495                     	;# 
  1792  0496                     	;# 
  1793  0497                     	;# 
  1794  0498                     	;# 
  1795  0499                     	;# 
  1796  049A                     	;# 
  1797  049B                     	;# 
  1798  049C                     	;# 
  1799  049D                     	;# 
  1800  058C                     	;# 
  1801  058C                     	;# 
  1802  058D                     	;# 
  1803  058E                     	;# 
  1804  058F                     	;# 
  1805  058F                     	;# 
  1806  0590                     	;# 
  1807  0591                     	;# 
  1808  0592                     	;# 
  1809  0593                     	;# 
  1810  059C                     	;# 
  1811  059C                     	;# 
  1812  059D                     	;# 
  1813  059D                     	;# 
  1814  059E                     	;# 
  1815  059F                     	;# 
  1816  060C                     	;# 
  1817  060C                     	;# 
  1818  060D                     	;# 
  1819  060D                     	;# 
  1820  060E                     	;# 
  1821  060F                     	;# 
  1822  0610                     	;# 
  1823  0611                     	;# 
  1824  0612                     	;# 
  1825  0613                     	;# 
  1826  0614                     	;# 
  1827  0616                     	;# 
  1828  0616                     	;# 
  1829  0617                     	;# 
  1830  0617                     	;# 
  1831  0618                     	;# 
  1832  0619                     	;# 
  1833  061A                     	;# 
  1834  061B                     	;# 
  1835  061C                     	;# 
  1836  061D                     	;# 
  1837  061E                     	;# 
  1838  070C                     	;# 
  1839  070D                     	;# 
  1840  070E                     	;# 
  1841  070F                     	;# 
  1842  0710                     	;# 
  1843  0711                     	;# 
  1844  0712                     	;# 
  1845  0713                     	;# 
  1846  0714                     	;# 
  1847  0716                     	;# 
  1848  0717                     	;# 
  1849  0718                     	;# 
  1850  0719                     	;# 
  1851  071A                     	;# 
  1852  071B                     	;# 
  1853  071C                     	;# 
  1854  071D                     	;# 
  1855  071E                     	;# 
  1856  0796                     	;# 
  1857  0797                     	;# 
  1858  0798                     	;# 
  1859  0799                     	;# 
  1860  079A                     	;# 
  1861  079B                     	;# 
  1862  079C                     	;# 
  1863  079D                     	;# 
  1864  080C                     	;# 
  1865  080D                     	;# 
  1866  080E                     	;# 
  1867  080F                     	;# 
  1868  0810                     	;# 
  1869  0811                     	;# 
  1870  0813                     	;# 
  1871  0814                     	;# 
  1872  081A                     	;# 
  1873  081A                     	;# 
  1874  081B                     	;# 
  1875  081C                     	;# 
  1876  081C                     	;# 
  1877  081D                     	;# 
  1878  081E                     	;# 
  1879  081F                     	;# 
  1880  088C                     	;# 
  1881  088D                     	;# 
  1882  088E                     	;# 
  1883  088F                     	;# 
  1884  0890                     	;# 
  1885  0891                     	;# 
  1886  0892                     	;# 
  1887  0893                     	;# 
  1888  0895                     	;# 
  1889  0896                     	;# 
  1890  0897                     	;# 
  1891  0898                     	;# 
  1892  0899                     	;# 
  1893  089A                     	;# 
  1894  089B                     	;# 
  1895  090C                     	;# 
  1896  090E                     	;# 
  1897  090F                     	;# 
  1898  091F                     	;# 
  1899  098F                     	;# 
  1900  098F                     	;# 
  1901  0990                     	;# 
  1902  0991                     	;# 
  1903  0992                     	;# 
  1904  0993                     	;# 
  1905  0994                     	;# 
  1906  0995                     	;# 
  1907  0996                     	;# 
  1908  0997                     	;# 
  1909  1E0F                     	;# 
  1910  1E10                     	;# 
  1911  1E11                     	;# 
  1912  1E12                     	;# 
  1913  1E13                     	;# 
  1914  1E14                     	;# 
  1915  1E15                     	;# 
  1916  1E16                     	;# 
  1917  1E17                     	;# 
  1918  1E18                     	;# 
  1919  1E19                     	;# 
  1920  1E1A                     	;# 
  1921  1E1B                     	;# 
  1922  1E1C                     	;# 
  1923  1E1D                     	;# 
  1924  1E1E                     	;# 
  1925  1E1F                     	;# 
  1926  1E20                     	;# 
  1927  1E21                     	;# 
  1928  1E22                     	;# 
  1929  1E23                     	;# 
  1930  1E24                     	;# 
  1931  1E25                     	;# 
  1932  1E26                     	;# 
  1933  1E27                     	;# 
  1934  1E28                     	;# 
  1935  1E29                     	;# 
  1936  1E2A                     	;# 
  1937  1E2B                     	;# 
  1938  1E2C                     	;# 
  1939  1E2D                     	;# 
  1940  1E2E                     	;# 
  1941  1E2F                     	;# 
  1942  1E30                     	;# 
  1943  1E31                     	;# 
  1944  1E32                     	;# 
  1945  1E33                     	;# 
  1946  1E34                     	;# 
  1947  1E35                     	;# 
  1948  1E36                     	;# 
  1949  1E37                     	;# 
  1950  1E8F                     	;# 
  1951  1E90                     	;# 
  1952  1E91                     	;# 
  1953  1E92                     	;# 
  1954  1E93                     	;# 
  1955  1E94                     	;# 
  1956  1E95                     	;# 
  1957  1E96                     	;# 
  1958  1E97                     	;# 
  1959  1E9C                     	;# 
  1960  1E9D                     	;# 
  1961  1E9E                     	;# 
  1962  1EA1                     	;# 
  1963  1EA2                     	;# 
  1964  1EA3                     	;# 
  1965  1EA4                     	;# 
  1966  1EA9                     	;# 
  1967  1EAA                     	;# 
  1968  1EB1                     	;# 
  1969  1EB2                     	;# 
  1970  1EB8                     	;# 
  1971  1EB9                     	;# 
  1972  1EBA                     	;# 
  1973  1EBB                     	;# 
  1974  1EBC                     	;# 
  1975  1EBD                     	;# 
  1976  1EBE                     	;# 
  1977  1EC3                     	;# 
  1978  1EC5                     	;# 
  1979  1EC6                     	;# 
  1980  1EC7                     	;# 
  1981  1EC8                     	;# 
  1982  1EC9                     	;# 
  1983  1ECA                     	;# 
  1984  1ECB                     	;# 
  1985  1ECB                     	;# 
  1986  1ECB                     	;# 
  1987  1ECC                     	;# 
  1988  1ECC                     	;# 
  1989  1ECC                     	;# 
  1990  1F10                     	;# 
  1991  1F11                     	;# 
  1992  1F12                     	;# 
  1993  1F14                     	;# 
  1994  1F15                     	;# 
  1995  1F1C                     	;# 
  1996  1F1D                     	;# 
  1997  1F1E                     	;# 
  1998  1F1F                     	;# 
  1999  1F20                     	;# 
  2000  1F21                     	;# 
  2001  1F22                     	;# 
  2002  1F23                     	;# 
  2003  1F24                     	;# 
  2004  1F25                     	;# 
  2005  1F26                     	;# 
  2006  1F27                     	;# 
  2007  1F38                     	;# 
  2008  1F39                     	;# 
  2009  1F3A                     	;# 
  2010  1F3B                     	;# 
  2011  1F3C                     	;# 
  2012  1F3D                     	;# 
  2013  1F3E                     	;# 
  2014  1F3F                     	;# 
  2015  1F43                     	;# 
  2016  1F44                     	;# 
  2017  1F45                     	;# 
  2018  1F46                     	;# 
  2019  1F47                     	;# 
  2020  1F48                     	;# 
  2021  1F49                     	;# 
  2022  1F4A                     	;# 
  2023  1F4E                     	;# 
  2024  1F4F                     	;# 
  2025  1F50                     	;# 
  2026  1F51                     	;# 
  2027  1F52                     	;# 
  2028  1F53                     	;# 
  2029  1F54                     	;# 
  2030  1F55                     	;# 
  2031  1FE4                     	;# 
  2032  1FE5                     	;# 
  2033  1FE6                     	;# 
  2034  1FE7                     	;# 
  2035  1FE8                     	;# 
  2036  1FE8                     	;# 
  2037  1FE9                     	;# 
  2038  1FEA                     	;# 
  2039  1FEB                     	;# 
  2040  1FED                     	;# 
  2041  1FEE                     	;# 
  2042  1FEF                     	;# 
  2043  0000                     	;# 
  2044  0001                     	;# 
  2045  0002                     	;# 
  2046  0003                     	;# 
  2047  0004                     	;# 
  2048  0005                     	;# 
  2049  0006                     	;# 
  2050  0007                     	;# 
  2051  0008                     	;# 
  2052  0009                     	;# 
  2053  000A                     	;# 
  2054  000B                     	;# 
  2055  000C                     	;# 
  2056  000D                     	;# 
  2057  000E                     	;# 
  2058  0012                     	;# 
  2059  0013                     	;# 
  2060  0014                     	;# 
  2061  0018                     	;# 
  2062  0019                     	;# 
  2063  001A                     	;# 
  2064  008C                     	;# 
  2065  008C                     	;# 
  2066  008D                     	;# 
  2067  008E                     	;# 
  2068  008E                     	;# 
  2069  008F                     	;# 
  2070  0090                     	;# 
  2071  0090                     	;# 
  2072  0091                     	;# 
  2073  0092                     	;# 
  2074  0092                     	;# 
  2075  0093                     	;# 
  2076  0094                     	;# 
  2077  0094                     	;# 
  2078  0095                     	;# 
  2079  0096                     	;# 
  2080  0096                     	;# 
  2081  0097                     	;# 
  2082  0098                     	;# 
  2083  0099                     	;# 
  2084  009A                     	;# 
  2085  009B                     	;# 
  2086  009B                     	;# 
  2087  009C                     	;# 
  2088  009D                     	;# 
  2089  009D                     	;# 
  2090  009E                     	;# 
  2091  009F                     	;# 
  2092  010C                     	;# 
  2093  010C                     	;# 
  2094  010D                     	;# 
  2095  010E                     	;# 
  2096  010F                     	;# 
  2097  010F                     	;# 
  2098  0110                     	;# 
  2099  0111                     	;# 
  2100  0112                     	;# 
  2101  0113                     	;# 
  2102  0114                     	;# 
  2103  0115                     	;# 
  2104  0116                     	;# 
  2105  0117                     	;# 
  2106  0118                     	;# 
  2107  0119                     	;# 
  2108  0119                     	;# 
  2109  0119                     	;# 
  2110  011A                     	;# 
  2111  011A                     	;# 
  2112  011A                     	;# 
  2113  011B                     	;# 
  2114  011B                     	;# 
  2115  011B                     	;# 
  2116  011B                     	;# 
  2117  011B                     	;# 
  2118  011C                     	;# 
  2119  011C                     	;# 
  2120  011C                     	;# 
  2121  011D                     	;# 
  2122  011D                     	;# 
  2123  011D                     	;# 
  2124  011E                     	;# 
  2125  011E                     	;# 
  2126  011E                     	;# 
  2127  011F                     	;# 
  2128  011F                     	;# 
  2129  011F                     	;# 
  2130  011F                     	;# 
  2131  011F                     	;# 
  2132  018C                     	;# 
  2133  018D                     	;# 
  2134  018E                     	;# 
  2135  018F                     	;# 
  2136  0190                     	;# 
  2137  0191                     	;# 
  2138  0192                     	;# 
  2139  0196                     	;# 
  2140  0197                     	;# 
  2141  0198                     	;# 
  2142  0199                     	;# 
  2143  019A                     	;# 
  2144  019B                     	;# 
  2145  019C                     	;# 
  2146  020C                     	;# 
  2147  020D                     	;# 
  2148  020E                     	;# 
  2149  020E                     	;# 
  2150  020F                     	;# 
  2151  020F                     	;# 
  2152  0210                     	;# 
  2153  0210                     	;# 
  2154  0211                     	;# 
  2155  0211                     	;# 
  2156  0212                     	;# 
  2157  0213                     	;# 
  2158  0214                     	;# 
  2159  0214                     	;# 
  2160  0215                     	;# 
  2161  0215                     	;# 
  2162  0216                     	;# 
  2163  0216                     	;# 
  2164  0217                     	;# 
  2165  0217                     	;# 
  2166  0218                     	;# 
  2167  0219                     	;# 
  2168  021A                     	;# 
  2169  021A                     	;# 
  2170  021B                     	;# 
  2171  021B                     	;# 
  2172  021C                     	;# 
  2173  021C                     	;# 
  2174  021D                     	;# 
  2175  021D                     	;# 
  2176  021E                     	;# 
  2177  021F                     	;# 
  2178  028C                     	;# 
  2179  028C                     	;# 
  2180  028D                     	;# 
  2181  028D                     	;# 
  2182  028E                     	;# 
  2183  028F                     	;# 
  2184  0290                     	;# 
  2185  0291                     	;# 
  2186  0292                     	;# 
  2187  0292                     	;# 
  2188  0293                     	;# 
  2189  0293                     	;# 
  2190  0294                     	;# 
  2191  0295                     	;# 
  2192  0296                     	;# 
  2193  0297                     	;# 
  2194  0298                     	;# 
  2195  0298                     	;# 
  2196  0299                     	;# 
  2197  0299                     	;# 
  2198  029A                     	;# 
  2199  029B                     	;# 
  2200  029C                     	;# 
  2201  029D                     	;# 
  2202  029F                     	;# 
  2203  030C                     	;# 
  2204  030C                     	;# 
  2205  030D                     	;# 
  2206  030E                     	;# 
  2207  030F                     	;# 
  2208  0310                     	;# 
  2209  0310                     	;# 
  2210  0311                     	;# 
  2211  0312                     	;# 
  2212  0313                     	;# 
  2213  0314                     	;# 
  2214  0314                     	;# 
  2215  0315                     	;# 
  2216  0316                     	;# 
  2217  0317                     	;# 
  2218  0318                     	;# 
  2219  0318                     	;# 
  2220  0319                     	;# 
  2221  031A                     	;# 
  2222  031B                     	;# 
  2223  038C                     	;# 
  2224  038C                     	;# 
  2225  038D                     	;# 
  2226  038E                     	;# 
  2227  0390                     	;# 
  2228  0390                     	;# 
  2229  0391                     	;# 
  2230  0392                     	;# 
  2231  048C                     	;# 
  2232  048C                     	;# 
  2233  048D                     	;# 
  2234  048E                     	;# 
  2235  048F                     	;# 
  2236  048F                     	;# 
  2237  0490                     	;# 
  2238  0491                     	;# 
  2239  0492                     	;# 
  2240  0492                     	;# 
  2241  0493                     	;# 
  2242  0494                     	;# 
  2243  0495                     	;# 
  2244  0495                     	;# 
  2245  0496                     	;# 
  2246  0497                     	;# 
  2247  0498                     	;# 
  2248  0499                     	;# 
  2249  049A                     	;# 
  2250  049B                     	;# 
  2251  049C                     	;# 
  2252  049D                     	;# 
  2253  058C                     	;# 
  2254  058C                     	;# 
  2255  058D                     	;# 
  2256  058E                     	;# 
  2257  058F                     	;# 
  2258  058F                     	;# 
  2259  0590                     	;# 
  2260  0591                     	;# 
  2261  0592                     	;# 
  2262  0593                     	;# 
  2263  059C                     	;# 
  2264  059C                     	;# 
  2265  059D                     	;# 
  2266  059D                     	;# 
  2267  059E                     	;# 
  2268  059F                     	;# 
  2269  060C                     	;# 
  2270  060C                     	;# 
  2271  060D                     	;# 
  2272  060D                     	;# 
  2273  060E                     	;# 
  2274  060F                     	;# 
  2275  0610                     	;# 
  2276  0611                     	;# 
  2277  0612                     	;# 
  2278  0613                     	;# 
  2279  0614                     	;# 
  2280  0616                     	;# 
  2281  0616                     	;# 
  2282  0617                     	;# 
  2283  0617                     	;# 
  2284  0618                     	;# 
  2285  0619                     	;# 
  2286  061A                     	;# 
  2287  061B                     	;# 
  2288  061C                     	;# 
  2289  061D                     	;# 
  2290  061E                     	;# 
  2291  070C                     	;# 
  2292  070D                     	;# 
  2293  070E                     	;# 
  2294  070F                     	;# 
  2295  0710                     	;# 
  2296  0711                     	;# 
  2297  0712                     	;# 
  2298  0713                     	;# 
  2299  0714                     	;# 
  2300  0716                     	;# 
  2301  0717                     	;# 
  2302  0718                     	;# 
  2303  0719                     	;# 
  2304  071A                     	;# 
  2305  071B                     	;# 
  2306  071C                     	;# 
  2307  071D                     	;# 
  2308  071E                     	;# 
  2309  0796                     	;# 
  2310  0797                     	;# 
  2311  0798                     	;# 
  2312  0799                     	;# 
  2313  079A                     	;# 
  2314  079B                     	;# 
  2315  079C                     	;# 
  2316  079D                     	;# 
  2317  080C                     	;# 
  2318  080D                     	;# 
  2319  080E                     	;# 
  2320  080F                     	;# 
  2321  0810                     	;# 
  2322  0811                     	;# 
  2323  0813                     	;# 
  2324  0814                     	;# 
  2325  081A                     	;# 
  2326  081A                     	;# 
  2327  081B                     	;# 
  2328  081C                     	;# 
  2329  081C                     	;# 
  2330  081D                     	;# 
  2331  081E                     	;# 
  2332  081F                     	;# 
  2333  088C                     	;# 
  2334  088D                     	;# 
  2335  088E                     	;# 
  2336  088F                     	;# 
  2337  0890                     	;# 
  2338  0891                     	;# 
  2339  0892                     	;# 
  2340  0893                     	;# 
  2341  0895                     	;# 
  2342  0896                     	;# 
  2343  0897                     	;# 
  2344  0898                     	;# 
  2345  0899                     	;# 
  2346  089A                     	;# 
  2347  089B                     	;# 
  2348  090C                     	;# 
  2349  090E                     	;# 
  2350  090F                     	;# 
  2351  091F                     	;# 
  2352  098F                     	;# 
  2353  098F                     	;# 
  2354  0990                     	;# 
  2355  0991                     	;# 
  2356  0992                     	;# 
  2357  0993                     	;# 
  2358  0994                     	;# 
  2359  0995                     	;# 
  2360  0996                     	;# 
  2361  0997                     	;# 
  2362  1E0F                     	;# 
  2363  1E10                     	;# 
  2364  1E11                     	;# 
  2365  1E12                     	;# 
  2366  1E13                     	;# 
  2367  1E14                     	;# 
  2368  1E15                     	;# 
  2369  1E16                     	;# 
  2370  1E17                     	;# 
  2371  1E18                     	;# 
  2372  1E19                     	;# 
  2373  1E1A                     	;# 
  2374  1E1B                     	;# 
  2375  1E1C                     	;# 
  2376  1E1D                     	;# 
  2377  1E1E                     	;# 
  2378  1E1F                     	;# 
  2379  1E20                     	;# 
  2380  1E21                     	;# 
  2381  1E22                     	;# 
  2382  1E23                     	;# 
  2383  1E24                     	;# 
  2384  1E25                     	;# 
  2385  1E26                     	;# 
  2386  1E27                     	;# 
  2387  1E28                     	;# 
  2388  1E29                     	;# 
  2389  1E2A                     	;# 
  2390  1E2B                     	;# 
  2391  1E2C                     	;# 
  2392  1E2D                     	;# 
  2393  1E2E                     	;# 
  2394  1E2F                     	;# 
  2395  1E30                     	;# 
  2396  1E31                     	;# 
  2397  1E32                     	;# 
  2398  1E33                     	;# 
  2399  1E34                     	;# 
  2400  1E35                     	;# 
  2401  1E36                     	;# 
  2402  1E37                     	;# 
  2403  1E8F                     	;# 
  2404  1E90                     	;# 
  2405  1E91                     	;# 
  2406  1E92                     	;# 
  2407  1E93                     	;# 
  2408  1E94                     	;# 
  2409  1E95                     	;# 
  2410  1E96                     	;# 
  2411  1E97                     	;# 
  2412  1E9C                     	;# 
  2413  1E9D                     	;# 
  2414  1E9E                     	;# 
  2415  1EA1                     	;# 
  2416  1EA2                     	;# 
  2417  1EA3                     	;# 
  2418  1EA4                     	;# 
  2419  1EA9                     	;# 
  2420  1EAA                     	;# 
  2421  1EB1                     	;# 
  2422  1EB2                     	;# 
  2423  1EB8                     	;# 
  2424  1EB9                     	;# 
  2425  1EBA                     	;# 
  2426  1EBB                     	;# 
  2427  1EBC                     	;# 
  2428  1EBD                     	;# 
  2429  1EBE                     	;# 
  2430  1EC3                     	;# 
  2431  1EC5                     	;# 
  2432  1EC6                     	;# 
  2433  1EC7                     	;# 
  2434  1EC8                     	;# 
  2435  1EC9                     	;# 
  2436  1ECA                     	;# 
  2437  1ECB                     	;# 
  2438  1ECB                     	;# 
  2439  1ECB                     	;# 
  2440  1ECC                     	;# 
  2441  1ECC                     	;# 
  2442  1ECC                     	;# 
  2443  1F10                     	;# 
  2444  1F11                     	;# 
  2445  1F12                     	;# 
  2446  1F14                     	;# 
  2447  1F15                     	;# 
  2448  1F1C                     	;# 
  2449  1F1D                     	;# 
  2450  1F1E                     	;# 
  2451  1F1F                     	;# 
  2452  1F20                     	;# 
  2453  1F21                     	;# 
  2454  1F22                     	;# 
  2455  1F23                     	;# 
  2456  1F24                     	;# 
  2457  1F25                     	;# 
  2458  1F26                     	;# 
  2459  1F27                     	;# 
  2460  1F38                     	;# 
  2461  1F39                     	;# 
  2462  1F3A                     	;# 
  2463  1F3B                     	;# 
  2464  1F3C                     	;# 
  2465  1F3D                     	;# 
  2466  1F3E                     	;# 
  2467  1F3F                     	;# 
  2468  1F43                     	;# 
  2469  1F44                     	;# 
  2470  1F45                     	;# 
  2471  1F46                     	;# 
  2472  1F47                     	;# 
  2473  1F48                     	;# 
  2474  1F49                     	;# 
  2475  1F4A                     	;# 
  2476  1F4E                     	;# 
  2477  1F4F                     	;# 
  2478  1F50                     	;# 
  2479  1F51                     	;# 
  2480  1F52                     	;# 
  2481  1F53                     	;# 
  2482  1F54                     	;# 
  2483  1F55                     	;# 
  2484  1FE4                     	;# 
  2485  1FE5                     	;# 
  2486  1FE6                     	;# 
  2487  1FE7                     	;# 
  2488  1FE8                     	;# 
  2489  1FE8                     	;# 
  2490  1FE9                     	;# 
  2491  1FEA                     	;# 
  2492  1FEB                     	;# 
  2493  1FED                     	;# 
  2494  1FEE                     	;# 
  2495  1FEF                     	;# 
  2496  0000                     	;# 
  2497  0001                     	;# 
  2498  0002                     	;# 
  2499  0003                     	;# 
  2500  0004                     	;# 
  2501  0005                     	;# 
  2502  0006                     	;# 
  2503  0007                     	;# 
  2504  0008                     	;# 
  2505  0009                     	;# 
  2506  000A                     	;# 
  2507  000B                     	;# 
  2508  000C                     	;# 
  2509  000D                     	;# 
  2510  000E                     	;# 
  2511  0012                     	;# 
  2512  0013                     	;# 
  2513  0014                     	;# 
  2514  0018                     	;# 
  2515  0019                     	;# 
  2516  001A                     	;# 
  2517  008C                     	;# 
  2518  008C                     	;# 
  2519  008D                     	;# 
  2520  008E                     	;# 
  2521  008E                     	;# 
  2522  008F                     	;# 
  2523  0090                     	;# 
  2524  0090                     	;# 
  2525  0091                     	;# 
  2526  0092                     	;# 
  2527  0092                     	;# 
  2528  0093                     	;# 
  2529  0094                     	;# 
  2530  0094                     	;# 
  2531  0095                     	;# 
  2532  0096                     	;# 
  2533  0096                     	;# 
  2534  0097                     	;# 
  2535  0098                     	;# 
  2536  0099                     	;# 
  2537  009A                     	;# 
  2538  009B                     	;# 
  2539  009B                     	;# 
  2540  009C                     	;# 
  2541  009D                     	;# 
  2542  009D                     	;# 
  2543  009E                     	;# 
  2544  009F                     	;# 
  2545  010C                     	;# 
  2546  010C                     	;# 
  2547  010D                     	;# 
  2548  010E                     	;# 
  2549  010F                     	;# 
  2550  010F                     	;# 
  2551  0110                     	;# 
  2552  0111                     	;# 
  2553  0112                     	;# 
  2554  0113                     	;# 
  2555  0114                     	;# 
  2556  0115                     	;# 
  2557  0116                     	;# 
  2558  0117                     	;# 
  2559  0118                     	;# 
  2560  0119                     	;# 
  2561  0119                     	;# 
  2562  0119                     	;# 
  2563  011A                     	;# 
  2564  011A                     	;# 
  2565  011A                     	;# 
  2566  011B                     	;# 
  2567  011B                     	;# 
  2568  011B                     	;# 
  2569  011B                     	;# 
  2570  011B                     	;# 
  2571  011C                     	;# 
  2572  011C                     	;# 
  2573  011C                     	;# 
  2574  011D                     	;# 
  2575  011D                     	;# 
  2576  011D                     	;# 
  2577  011E                     	;# 
  2578  011E                     	;# 
  2579  011E                     	;# 
  2580  011F                     	;# 
  2581  011F                     	;# 
  2582  011F                     	;# 
  2583  011F                     	;# 
  2584  011F                     	;# 
  2585  018C                     	;# 
  2586  018D                     	;# 
  2587  018E                     	;# 
  2588  018F                     	;# 
  2589  0190                     	;# 
  2590  0191                     	;# 
  2591  0192                     	;# 
  2592  0196                     	;# 
  2593  0197                     	;# 
  2594  0198                     	;# 
  2595  0199                     	;# 
  2596  019A                     	;# 
  2597  019B                     	;# 
  2598  019C                     	;# 
  2599  020C                     	;# 
  2600  020D                     	;# 
  2601  020E                     	;# 
  2602  020E                     	;# 
  2603  020F                     	;# 
  2604  020F                     	;# 
  2605  0210                     	;# 
  2606  0210                     	;# 
  2607  0211                     	;# 
  2608  0211                     	;# 
  2609  0212                     	;# 
  2610  0213                     	;# 
  2611  0214                     	;# 
  2612  0214                     	;# 
  2613  0215                     	;# 
  2614  0215                     	;# 
  2615  0216                     	;# 
  2616  0216                     	;# 
  2617  0217                     	;# 
  2618  0217                     	;# 
  2619  0218                     	;# 
  2620  0219                     	;# 
  2621  021A                     	;# 
  2622  021A                     	;# 
  2623  021B                     	;# 
  2624  021B                     	;# 
  2625  021C                     	;# 
  2626  021C                     	;# 
  2627  021D                     	;# 
  2628  021D                     	;# 
  2629  021E                     	;# 
  2630  021F                     	;# 
  2631  028C                     	;# 
  2632  028C                     	;# 
  2633  028D                     	;# 
  2634  028D                     	;# 
  2635  028E                     	;# 
  2636  028F                     	;# 
  2637  0290                     	;# 
  2638  0291                     	;# 
  2639  0292                     	;# 
  2640  0292                     	;# 
  2641  0293                     	;# 
  2642  0293                     	;# 
  2643  0294                     	;# 
  2644  0295                     	;# 
  2645  0296                     	;# 
  2646  0297                     	;# 
  2647  0298                     	;# 
  2648  0298                     	;# 
  2649  0299                     	;# 
  2650  0299                     	;# 
  2651  029A                     	;# 
  2652  029B                     	;# 
  2653  029C                     	;# 
  2654  029D                     	;# 
  2655  029F                     	;# 
  2656  030C                     	;# 
  2657  030C                     	;# 
  2658  030D                     	;# 
  2659  030E                     	;# 
  2660  030F                     	;# 
  2661  0310                     	;# 
  2662  0310                     	;# 
  2663  0311                     	;# 
  2664  0312                     	;# 
  2665  0313                     	;# 
  2666  0314                     	;# 
  2667  0314                     	;# 
  2668  0315                     	;# 
  2669  0316                     	;# 
  2670  0317                     	;# 
  2671  0318                     	;# 
  2672  0318                     	;# 
  2673  0319                     	;# 
  2674  031A                     	;# 
  2675  031B                     	;# 
  2676  038C                     	;# 
  2677  038C                     	;# 
  2678  038D                     	;# 
  2679  038E                     	;# 
  2680  0390                     	;# 
  2681  0390                     	;# 
  2682  0391                     	;# 
  2683  0392                     	;# 
  2684  048C                     	;# 
  2685  048C                     	;# 
  2686  048D                     	;# 
  2687  048E                     	;# 
  2688  048F                     	;# 
  2689  048F                     	;# 
  2690  0490                     	;# 
  2691  0491                     	;# 
  2692  0492                     	;# 
  2693  0492                     	;# 
  2694  0493                     	;# 
  2695  0494                     	;# 
  2696  0495                     	;# 
  2697  0495                     	;# 
  2698  0496                     	;# 
  2699  0497                     	;# 
  2700  0498                     	;# 
  2701  0499                     	;# 
  2702  049A                     	;# 
  2703  049B                     	;# 
  2704  049C                     	;# 
  2705  049D                     	;# 
  2706  058C                     	;# 
  2707  058C                     	;# 
  2708  058D                     	;# 
  2709  058E                     	;# 
  2710  058F                     	;# 
  2711  058F                     	;# 
  2712  0590                     	;# 
  2713  0591                     	;# 
  2714  0592                     	;# 
  2715  0593                     	;# 
  2716  059C                     	;# 
  2717  059C                     	;# 
  2718  059D                     	;# 
  2719  059D                     	;# 
  2720  059E                     	;# 
  2721  059F                     	;# 
  2722  060C                     	;# 
  2723  060C                     	;# 
  2724  060D                     	;# 
  2725  060D                     	;# 
  2726  060E                     	;# 
  2727  060F                     	;# 
  2728  0610                     	;# 
  2729  0611                     	;# 
  2730  0612                     	;# 
  2731  0613                     	;# 
  2732  0614                     	;# 
  2733  0616                     	;# 
  2734  0616                     	;# 
  2735  0617                     	;# 
  2736  0617                     	;# 
  2737  0618                     	;# 
  2738  0619                     	;# 
  2739  061A                     	;# 
  2740  061B                     	;# 
  2741  061C                     	;# 
  2742  061D                     	;# 
  2743  061E                     	;# 
  2744  070C                     	;# 
  2745  070D                     	;# 
  2746  070E                     	;# 
  2747  070F                     	;# 
  2748  0710                     	;# 
  2749  0711                     	;# 
  2750  0712                     	;# 
  2751  0713                     	;# 
  2752  0714                     	;# 
  2753  0716                     	;# 
  2754  0717                     	;# 
  2755  0718                     	;# 
  2756  0719                     	;# 
  2757  071A                     	;# 
  2758  071B                     	;# 
  2759  071C                     	;# 
  2760  071D                     	;# 
  2761  071E                     	;# 
  2762  0796                     	;# 
  2763  0797                     	;# 
  2764  0798                     	;# 
  2765  0799                     	;# 
  2766  079A                     	;# 
  2767  079B                     	;# 
  2768  079C                     	;# 
  2769  079D                     	;# 
  2770  080C                     	;# 
  2771  080D                     	;# 
  2772  080E                     	;# 
  2773  080F                     	;# 
  2774  0810                     	;# 
  2775  0811                     	;# 
  2776  0813                     	;# 
  2777  0814                     	;# 
  2778  081A                     	;# 
  2779  081A                     	;# 
  2780  081B                     	;# 
  2781  081C                     	;# 
  2782  081C                     	;# 
  2783  081D                     	;# 
  2784  081E                     	;# 
  2785  081F                     	;# 
  2786  088C                     	;# 
  2787  088D                     	;# 
  2788  088E                     	;# 
  2789  088F                     	;# 
  2790  0890                     	;# 
  2791  0891                     	;# 
  2792  0892                     	;# 
  2793  0893                     	;# 
  2794  0895                     	;# 
  2795  0896                     	;# 
  2796  0897                     	;# 
  2797  0898                     	;# 
  2798  0899                     	;# 
  2799  089A                     	;# 
  2800  089B                     	;# 
  2801  090C                     	;# 
  2802  090E                     	;# 
  2803  090F                     	;# 
  2804  091F                     	;# 
  2805  098F                     	;# 
  2806  098F                     	;# 
  2807  0990                     	;# 
  2808  0991                     	;# 
  2809  0992                     	;# 
  2810  0993                     	;# 
  2811  0994                     	;# 
  2812  0995                     	;# 
  2813  0996                     	;# 
  2814  0997                     	;# 
  2815  1E0F                     	;# 
  2816  1E10                     	;# 
  2817  1E11                     	;# 
  2818  1E12                     	;# 
  2819  1E13                     	;# 
  2820  1E14                     	;# 
  2821  1E15                     	;# 
  2822  1E16                     	;# 
  2823  1E17                     	;# 
  2824  1E18                     	;# 
  2825  1E19                     	;# 
  2826  1E1A                     	;# 
  2827  1E1B                     	;# 
  2828  1E1C                     	;# 
  2829  1E1D                     	;# 
  2830  1E1E                     	;# 
  2831  1E1F                     	;# 
  2832  1E20                     	;# 
  2833  1E21                     	;# 
  2834  1E22                     	;# 
  2835  1E23                     	;# 
  2836  1E24                     	;# 
  2837  1E25                     	;# 
  2838  1E26                     	;# 
  2839  1E27                     	;# 
  2840  1E28                     	;# 
  2841  1E29                     	;# 
  2842  1E2A                     	;# 
  2843  1E2B                     	;# 
  2844  1E2C                     	;# 
  2845  1E2D                     	;# 
  2846  1E2E                     	;# 
  2847  1E2F                     	;# 
  2848  1E30                     	;# 
  2849  1E31                     	;# 
  2850  1E32                     	;# 
  2851  1E33                     	;# 
  2852  1E34                     	;# 
  2853  1E35                     	;# 
  2854  1E36                     	;# 
  2855  1E37                     	;# 
  2856  1E8F                     	;# 
  2857  1E90                     	;# 
  2858  1E91                     	;# 
  2859  1E92                     	;# 
  2860  1E93                     	;# 
  2861  1E94                     	;# 
  2862  1E95                     	;# 
  2863  1E96                     	;# 
  2864  1E97                     	;# 
  2865  1E9C                     	;# 
  2866  1E9D                     	;# 
  2867  1E9E                     	;# 
  2868  1EA1                     	;# 
  2869  1EA2                     	;# 
  2870  1EA3                     	;# 
  2871  1EA4                     	;# 
  2872  1EA9                     	;# 
  2873  1EAA                     	;# 
  2874  1EB1                     	;# 
  2875  1EB2                     	;# 
  2876  1EB8                     	;# 
  2877  1EB9                     	;# 
  2878  1EBA                     	;# 
  2879  1EBB                     	;# 
  2880  1EBC                     	;# 
  2881  1EBD                     	;# 
  2882  1EBE                     	;# 
  2883  1EC3                     	;# 
  2884  1EC5                     	;# 
  2885  1EC6                     	;# 
  2886  1EC7                     	;# 
  2887  1EC8                     	;# 
  2888  1EC9                     	;# 
  2889  1ECA                     	;# 
  2890  1ECB                     	;# 
  2891  1ECB                     	;# 
  2892  1ECB                     	;# 
  2893  1ECC                     	;# 
  2894  1ECC                     	;# 
  2895  1ECC                     	;# 
  2896  1F10                     	;# 
  2897  1F11                     	;# 
  2898  1F12                     	;# 
  2899  1F14                     	;# 
  2900  1F15                     	;# 
  2901  1F1C                     	;# 
  2902  1F1D                     	;# 
  2903  1F1E                     	;# 
  2904  1F1F                     	;# 
  2905  1F20                     	;# 
  2906  1F21                     	;# 
  2907  1F22                     	;# 
  2908  1F23                     	;# 
  2909  1F24                     	;# 
  2910  1F25                     	;# 
  2911  1F26                     	;# 
  2912  1F27                     	;# 
  2913  1F38                     	;# 
  2914  1F39                     	;# 
  2915  1F3A                     	;# 
  2916  1F3B                     	;# 
  2917  1F3C                     	;# 
  2918  1F3D                     	;# 
  2919  1F3E                     	;# 
  2920  1F3F                     	;# 
  2921  1F43                     	;# 
  2922  1F44                     	;# 
  2923  1F45                     	;# 
  2924  1F46                     	;# 
  2925  1F47                     	;# 
  2926  1F48                     	;# 
  2927  1F49                     	;# 
  2928  1F4A                     	;# 
  2929  1F4E                     	;# 
  2930  1F4F                     	;# 
  2931  1F50                     	;# 
  2932  1F51                     	;# 
  2933  1F52                     	;# 
  2934  1F53                     	;# 
  2935  1F54                     	;# 
  2936  1F55                     	;# 
  2937  1FE4                     	;# 
  2938  1FE5                     	;# 
  2939  1FE6                     	;# 
  2940  1FE7                     	;# 
  2941  1FE8                     	;# 
  2942  1FE8                     	;# 
  2943  1FE9                     	;# 
  2944  1FEA                     	;# 
  2945  1FEB                     	;# 
  2946  1FED                     	;# 
  2947  1FEE                     	;# 
  2948  1FEF                     	;# 
  2949  0000                     	;# 
  2950  0001                     	;# 
  2951  0002                     	;# 
  2952  0003                     	;# 
  2953  0004                     	;# 
  2954  0005                     	;# 
  2955  0006                     	;# 
  2956  0007                     	;# 
  2957  0008                     	;# 
  2958  0009                     	;# 
  2959  000A                     	;# 
  2960  000B                     	;# 
  2961  000C                     	;# 
  2962  000D                     	;# 
  2963  000E                     	;# 
  2964  0012                     	;# 
  2965  0013                     	;# 
  2966  0014                     	;# 
  2967  0018                     	;# 
  2968  0019                     	;# 
  2969  001A                     	;# 
  2970  008C                     	;# 
  2971  008C                     	;# 
  2972  008D                     	;# 
  2973  008E                     	;# 
  2974  008E                     	;# 
  2975  008F                     	;# 
  2976  0090                     	;# 
  2977  0090                     	;# 
  2978  0091                     	;# 
  2979  0092                     	;# 
  2980  0092                     	;# 
  2981  0093                     	;# 
  2982  0094                     	;# 
  2983  0094                     	;# 
  2984  0095                     	;# 
  2985  0096                     	;# 
  2986  0096                     	;# 
  2987  0097                     	;# 
  2988  0098                     	;# 
  2989  0099                     	;# 
  2990  009A                     	;# 
  2991  009B                     	;# 
  2992  009B                     	;# 
  2993  009C                     	;# 
  2994  009D                     	;# 
  2995  009D                     	;# 
  2996  009E                     	;# 
  2997  009F                     	;# 
  2998  010C                     	;# 
  2999  010C                     	;# 
  3000  010D                     	;# 
  3001  010E                     	;# 
  3002  010F                     	;# 
  3003  010F                     	;# 
  3004  0110                     	;# 
  3005  0111                     	;# 
  3006  0112                     	;# 
  3007  0113                     	;# 
  3008  0114                     	;# 
  3009  0115                     	;# 
  3010  0116                     	;# 
  3011  0117                     	;# 
  3012  0118                     	;# 
  3013  0119                     	;# 
  3014  0119                     	;# 
  3015  0119                     	;# 
  3016  011A                     	;# 
  3017  011A                     	;# 
  3018  011A                     	;# 
  3019  011B                     	;# 
  3020  011B                     	;# 
  3021  011B                     	;# 
  3022  011B                     	;# 
  3023  011B                     	;# 
  3024  011C                     	;# 
  3025  011C                     	;# 
  3026  011C                     	;# 
  3027  011D                     	;# 
  3028  011D                     	;# 
  3029  011D                     	;# 
  3030  011E                     	;# 
  3031  011E                     	;# 
  3032  011E                     	;# 
  3033  011F                     	;# 
  3034  011F                     	;# 
  3035  011F                     	;# 
  3036  011F                     	;# 
  3037  011F                     	;# 
  3038  018C                     	;# 
  3039  018D                     	;# 
  3040  018E                     	;# 
  3041  018F                     	;# 
  3042  0190                     	;# 
  3043  0191                     	;# 
  3044  0192                     	;# 
  3045  0196                     	;# 
  3046  0197                     	;# 
  3047  0198                     	;# 
  3048  0199                     	;# 
  3049  019A                     	;# 
  3050  019B                     	;# 
  3051  019C                     	;# 
  3052  020C                     	;# 
  3053  020D                     	;# 
  3054  020E                     	;# 
  3055  020E                     	;# 
  3056  020F                     	;# 
  3057  020F                     	;# 
  3058  0210                     	;# 
  3059  0210                     	;# 
  3060  0211                     	;# 
  3061  0211                     	;# 
  3062  0212                     	;# 
  3063  0213                     	;# 
  3064  0214                     	;# 
  3065  0214                     	;# 
  3066  0215                     	;# 
  3067  0215                     	;# 
  3068  0216                     	;# 
  3069  0216                     	;# 
  3070  0217                     	;# 
  3071  0217                     	;# 
  3072  0218                     	;# 
  3073  0219                     	;# 
  3074  021A                     	;# 
  3075  021A                     	;# 
  3076  021B                     	;# 
  3077  021B                     	;# 
  3078  021C                     	;# 
  3079  021C                     	;# 
  3080  021D                     	;# 
  3081  021D                     	;# 
  3082  021E                     	;# 
  3083  021F                     	;# 
  3084  028C                     	;# 
  3085  028C                     	;# 
  3086  028D                     	;# 
  3087  028D                     	;# 
  3088  028E                     	;# 
  3089  028F                     	;# 
  3090  0290                     	;# 
  3091  0291                     	;# 
  3092  0292                     	;# 
  3093  0292                     	;# 
  3094  0293                     	;# 
  3095  0293                     	;# 
  3096  0294                     	;# 
  3097  0295                     	;# 
  3098  0296                     	;# 
  3099  0297                     	;# 
  3100  0298                     	;# 
  3101  0298                     	;# 
  3102  0299                     	;# 
  3103  0299                     	;# 
  3104  029A                     	;# 
  3105  029B                     	;# 
  3106  029C                     	;# 
  3107  029D                     	;# 
  3108  029F                     	;# 
  3109  030C                     	;# 
  3110  030C                     	;# 
  3111  030D                     	;# 
  3112  030E                     	;# 
  3113  030F                     	;# 
  3114  0310                     	;# 
  3115  0310                     	;# 
  3116  0311                     	;# 
  3117  0312                     	;# 
  3118  0313                     	;# 
  3119  0314                     	;# 
  3120  0314                     	;# 
  3121  0315                     	;# 
  3122  0316                     	;# 
  3123  0317                     	;# 
  3124  0318                     	;# 
  3125  0318                     	;# 
  3126  0319                     	;# 
  3127  031A                     	;# 
  3128  031B                     	;# 
  3129  038C                     	;# 
  3130  038C                     	;# 
  3131  038D                     	;# 
  3132  038E                     	;# 
  3133  0390                     	;# 
  3134  0390                     	;# 
  3135  0391                     	;# 
  3136  0392                     	;# 
  3137  048C                     	;# 
  3138  048C                     	;# 
  3139  048D                     	;# 
  3140  048E                     	;# 
  3141  048F                     	;# 
  3142  048F                     	;# 
  3143  0490                     	;# 
  3144  0491                     	;# 
  3145  0492                     	;# 
  3146  0492                     	;# 
  3147  0493                     	;# 
  3148  0494                     	;# 
  3149  0495                     	;# 
  3150  0495                     	;# 
  3151  0496                     	;# 
  3152  0497                     	;# 
  3153  0498                     	;# 
  3154  0499                     	;# 
  3155  049A                     	;# 
  3156  049B                     	;# 
  3157  049C                     	;# 
  3158  049D                     	;# 
  3159  058C                     	;# 
  3160  058C                     	;# 
  3161  058D                     	;# 
  3162  058E                     	;# 
  3163  058F                     	;# 
  3164  058F                     	;# 
  3165  0590                     	;# 
  3166  0591                     	;# 
  3167  0592                     	;# 
  3168  0593                     	;# 
  3169  059C                     	;# 
  3170  059C                     	;# 
  3171  059D                     	;# 
  3172  059D                     	;# 
  3173  059E                     	;# 
  3174  059F                     	;# 
  3175  060C                     	;# 
  3176  060C                     	;# 
  3177  060D                     	;# 
  3178  060D                     	;# 
  3179  060E                     	;# 
  3180  060F                     	;# 
  3181  0610                     	;# 
  3182  0611                     	;# 
  3183  0612                     	;# 
  3184  0613                     	;# 
  3185  0614                     	;# 
  3186  0616                     	;# 
  3187  0616                     	;# 
  3188  0617                     	;# 
  3189  0617                     	;# 
  3190  0618                     	;# 
  3191  0619                     	;# 
  3192  061A                     	;# 
  3193  061B                     	;# 
  3194  061C                     	;# 
  3195  061D                     	;# 
  3196  061E                     	;# 
  3197  070C                     	;# 
  3198  070D                     	;# 
  3199  070E                     	;# 
  3200  070F                     	;# 
  3201  0710                     	;# 
  3202  0711                     	;# 
  3203  0712                     	;# 
  3204  0713                     	;# 
  3205  0714                     	;# 
  3206  0716                     	;# 
  3207  0717                     	;# 
  3208  0718                     	;# 
  3209  0719                     	;# 
  3210  071A                     	;# 
  3211  071B                     	;# 
  3212  071C                     	;# 
  3213  071D                     	;# 
  3214  071E                     	;# 
  3215  0796                     	;# 
  3216  0797                     	;# 
  3217  0798                     	;# 
  3218  0799                     	;# 
  3219  079A                     	;# 
  3220  079B                     	;# 
  3221  079C                     	;# 
  3222  079D                     	;# 
  3223  080C                     	;# 
  3224  080D                     	;# 
  3225  080E                     	;# 
  3226  080F                     	;# 
  3227  0810                     	;# 
  3228  0811                     	;# 
  3229  0813                     	;# 
  3230  0814                     	;# 
  3231  081A                     	;# 
  3232  081A                     	;# 
  3233  081B                     	;# 
  3234  081C                     	;# 
  3235  081C                     	;# 
  3236  081D                     	;# 
  3237  081E                     	;# 
  3238  081F                     	;# 
  3239  088C                     	;# 
  3240  088D                     	;# 
  3241  088E                     	;# 
  3242  088F                     	;# 
  3243  0890                     	;# 
  3244  0891                     	;# 
  3245  0892                     	;# 
  3246  0893                     	;# 
  3247  0895                     	;# 
  3248  0896                     	;# 
  3249  0897                     	;# 
  3250  0898                     	;# 
  3251  0899                     	;# 
  3252  089A                     	;# 
  3253  089B                     	;# 
  3254  090C                     	;# 
  3255  090E                     	;# 
  3256  090F                     	;# 
  3257  091F                     	;# 
  3258  098F                     	;# 
  3259  098F                     	;# 
  3260  0990                     	;# 
  3261  0991                     	;# 
  3262  0992                     	;# 
  3263  0993                     	;# 
  3264  0994                     	;# 
  3265  0995                     	;# 
  3266  0996                     	;# 
  3267  0997                     	;# 
  3268  1E0F                     	;# 
  3269  1E10                     	;# 
  3270  1E11                     	;# 
  3271  1E12                     	;# 
  3272  1E13                     	;# 
  3273  1E14                     	;# 
  3274  1E15                     	;# 
  3275  1E16                     	;# 
  3276  1E17                     	;# 
  3277  1E18                     	;# 
  3278  1E19                     	;# 
  3279  1E1A                     	;# 
  3280  1E1B                     	;# 
  3281  1E1C                     	;# 
  3282  1E1D                     	;# 
  3283  1E1E                     	;# 
  3284  1E1F                     	;# 
  3285  1E20                     	;# 
  3286  1E21                     	;# 
  3287  1E22                     	;# 
  3288  1E23                     	;# 
  3289  1E24                     	;# 
  3290  1E25                     	;# 
  3291  1E26                     	;# 
  3292  1E27                     	;# 
  3293  1E28                     	;# 
  3294  1E29                     	;# 
  3295  1E2A                     	;# 
  3296  1E2B                     	;# 
  3297  1E2C                     	;# 
  3298  1E2D                     	;# 
  3299  1E2E                     	;# 
  3300  1E2F                     	;# 
  3301  1E30                     	;# 
  3302  1E31                     	;# 
  3303  1E32                     	;# 
  3304  1E33                     	;# 
  3305  1E34                     	;# 
  3306  1E35                     	;# 
  3307  1E36                     	;# 
  3308  1E37                     	;# 
  3309  1E8F                     	;# 
  3310  1E90                     	;# 
  3311  1E91                     	;# 
  3312  1E92                     	;# 
  3313  1E93                     	;# 
  3314  1E94                     	;# 
  3315  1E95                     	;# 
  3316  1E96                     	;# 
  3317  1E97                     	;# 
  3318  1E9C                     	;# 
  3319  1E9D                     	;# 
  3320  1E9E                     	;# 
  3321  1EA1                     	;# 
  3322  1EA2                     	;# 
  3323  1EA3                     	;# 
  3324  1EA4                     	;# 
  3325  1EA9                     	;# 
  3326  1EAA                     	;# 
  3327  1EB1                     	;# 
  3328  1EB2                     	;# 
  3329  1EB8                     	;# 
  3330  1EB9                     	;# 
  3331  1EBA                     	;# 
  3332  1EBB                     	;# 
  3333  1EBC                     	;# 
  3334  1EBD                     	;# 
  3335  1EBE                     	;# 
  3336  1EC3                     	;# 
  3337  1EC5                     	;# 
  3338  1EC6                     	;# 
  3339  1EC7                     	;# 
  3340  1EC8                     	;# 
  3341  1EC9                     	;# 
  3342  1ECA                     	;# 
  3343  1ECB                     	;# 
  3344  1ECB                     	;# 
  3345  1ECB                     	;# 
  3346  1ECC                     	;# 
  3347  1ECC                     	;# 
  3348  1ECC                     	;# 
  3349  1F10                     	;# 
  3350  1F11                     	;# 
  3351  1F12                     	;# 
  3352  1F14                     	;# 
  3353  1F15                     	;# 
  3354  1F1C                     	;# 
  3355  1F1D                     	;# 
  3356  1F1E                     	;# 
  3357  1F1F                     	;# 
  3358  1F20                     	;# 
  3359  1F21                     	;# 
  3360  1F22                     	;# 
  3361  1F23                     	;# 
  3362  1F24                     	;# 
  3363  1F25                     	;# 
  3364  1F26                     	;# 
  3365  1F27                     	;# 
  3366  1F38                     	;# 
  3367  1F39                     	;# 
  3368  1F3A                     	;# 
  3369  1F3B                     	;# 
  3370  1F3C                     	;# 
  3371  1F3D                     	;# 
  3372  1F3E                     	;# 
  3373  1F3F                     	;# 
  3374  1F43                     	;# 
  3375  1F44                     	;# 
  3376  1F45                     	;# 
  3377  1F46                     	;# 
  3378  1F47                     	;# 
  3379  1F48                     	;# 
  3380  1F49                     	;# 
  3381  1F4A                     	;# 
  3382  1F4E                     	;# 
  3383  1F4F                     	;# 
  3384  1F50                     	;# 
  3385  1F51                     	;# 
  3386  1F52                     	;# 
  3387  1F53                     	;# 
  3388  1F54                     	;# 
  3389  1F55                     	;# 
  3390  1FE4                     	;# 
  3391  1FE5                     	;# 
  3392  1FE6                     	;# 
  3393  1FE7                     	;# 
  3394  1FE8                     	;# 
  3395  1FE8                     	;# 
  3396  1FE9                     	;# 
  3397  1FEA                     	;# 
  3398  1FEB                     	;# 
  3399  1FED                     	;# 
  3400  1FEE                     	;# 
  3401  1FEF                     	;# 
  3402  0000                     	;# 
  3403  0001                     	;# 
  3404  0002                     	;# 
  3405  0003                     	;# 
  3406  0004                     	;# 
  3407  0005                     	;# 
  3408  0006                     	;# 
  3409  0007                     	;# 
  3410  0008                     	;# 
  3411  0009                     	;# 
  3412  000A                     	;# 
  3413  000B                     	;# 
  3414  000C                     	;# 
  3415  000D                     	;# 
  3416  000E                     	;# 
  3417  0012                     	;# 
  3418  0013                     	;# 
  3419  0014                     	;# 
  3420  0018                     	;# 
  3421  0019                     	;# 
  3422  001A                     	;# 
  3423  008C                     	;# 
  3424  008C                     	;# 
  3425  008D                     	;# 
  3426  008E                     	;# 
  3427  008E                     	;# 
  3428  008F                     	;# 
  3429  0090                     	;# 
  3430  0090                     	;# 
  3431  0091                     	;# 
  3432  0092                     	;# 
  3433  0092                     	;# 
  3434  0093                     	;# 
  3435  0094                     	;# 
  3436  0094                     	;# 
  3437  0095                     	;# 
  3438  0096                     	;# 
  3439  0096                     	;# 
  3440  0097                     	;# 
  3441  0098                     	;# 
  3442  0099                     	;# 
  3443  009A                     	;# 
  3444  009B                     	;# 
  3445  009B                     	;# 
  3446  009C                     	;# 
  3447  009D                     	;# 
  3448  009D                     	;# 
  3449  009E                     	;# 
  3450  009F                     	;# 
  3451  010C                     	;# 
  3452  010C                     	;# 
  3453  010D                     	;# 
  3454  010E                     	;# 
  3455  010F                     	;# 
  3456  010F                     	;# 
  3457  0110                     	;# 
  3458  0111                     	;# 
  3459  0112                     	;# 
  3460  0113                     	;# 
  3461  0114                     	;# 
  3462  0115                     	;# 
  3463  0116                     	;# 
  3464  0117                     	;# 
  3465  0118                     	;# 
  3466  0119                     	;# 
  3467  0119                     	;# 
  3468  0119                     	;# 
  3469  011A                     	;# 
  3470  011A                     	;# 
  3471  011A                     	;# 
  3472  011B                     	;# 
  3473  011B                     	;# 
  3474  011B                     	;# 
  3475  011B                     	;# 
  3476  011B                     	;# 
  3477  011C                     	;# 
  3478  011C                     	;# 
  3479  011C                     	;# 
  3480  011D                     	;# 
  3481  011D                     	;# 
  3482  011D                     	;# 
  3483  011E                     	;# 
  3484  011E                     	;# 
  3485  011E                     	;# 
  3486  011F                     	;# 
  3487  011F                     	;# 
  3488  011F                     	;# 
  3489  011F                     	;# 
  3490  011F                     	;# 
  3491  018C                     	;# 
  3492  018D                     	;# 
  3493  018E                     	;# 
  3494  018F                     	;# 
  3495  0190                     	;# 
  3496  0191                     	;# 
  3497  0192                     	;# 
  3498  0196                     	;# 
  3499  0197                     	;# 
  3500  0198                     	;# 
  3501  0199                     	;# 
  3502  019A                     	;# 
  3503  019B                     	;# 
  3504  019C                     	;# 
  3505  020C                     	;# 
  3506  020D                     	;# 
  3507  020E                     	;# 
  3508  020E                     	;# 
  3509  020F                     	;# 
  3510  020F                     	;# 
  3511  0210                     	;# 
  3512  0210                     	;# 
  3513  0211                     	;# 
  3514  0211                     	;# 
  3515  0212                     	;# 
  3516  0213                     	;# 
  3517  0214                     	;# 
  3518  0214                     	;# 
  3519  0215                     	;# 
  3520  0215                     	;# 
  3521  0216                     	;# 
  3522  0216                     	;# 
  3523  0217                     	;# 
  3524  0217                     	;# 
  3525  0218                     	;# 
  3526  0219                     	;# 
  3527  021A                     	;# 
  3528  021A                     	;# 
  3529  021B                     	;# 
  3530  021B                     	;# 
  3531  021C                     	;# 
  3532  021C                     	;# 
  3533  021D                     	;# 
  3534  021D                     	;# 
  3535  021E                     	;# 
  3536  021F                     	;# 
  3537  028C                     	;# 
  3538  028C                     	;# 
  3539  028D                     	;# 
  3540  028D                     	;# 
  3541  028E                     	;# 
  3542  028F                     	;# 
  3543  0290                     	;# 
  3544  0291                     	;# 
  3545  0292                     	;# 
  3546  0292                     	;# 
  3547  0293                     	;# 
  3548  0293                     	;# 
  3549  0294                     	;# 
  3550  0295                     	;# 
  3551  0296                     	;# 
  3552  0297                     	;# 
  3553  0298                     	;# 
  3554  0298                     	;# 
  3555  0299                     	;# 
  3556  0299                     	;# 
  3557  029A                     	;# 
  3558  029B                     	;# 
  3559  029C                     	;# 
  3560  029D                     	;# 
  3561  029F                     	;# 
  3562  030C                     	;# 
  3563  030C                     	;# 
  3564  030D                     	;# 
  3565  030E                     	;# 
  3566  030F                     	;# 
  3567  0310                     	;# 
  3568  0310                     	;# 
  3569  0311                     	;# 
  3570  0312                     	;# 
  3571  0313                     	;# 
  3572  0314                     	;# 
  3573  0314                     	;# 
  3574  0315                     	;# 
  3575  0316                     	;# 
  3576  0317                     	;# 
  3577  0318                     	;# 
  3578  0318                     	;# 
  3579  0319                     	;# 
  3580  031A                     	;# 
  3581  031B                     	;# 
  3582  038C                     	;# 
  3583  038C                     	;# 
  3584  038D                     	;# 
  3585  038E                     	;# 
  3586  0390                     	;# 
  3587  0390                     	;# 
  3588  0391                     	;# 
  3589  0392                     	;# 
  3590  048C                     	;# 
  3591  048C                     	;# 
  3592  048D                     	;# 
  3593  048E                     	;# 
  3594  048F                     	;# 
  3595  048F                     	;# 
  3596  0490                     	;# 
  3597  0491                     	;# 
  3598  0492                     	;# 
  3599  0492                     	;# 
  3600  0493                     	;# 
  3601  0494                     	;# 
  3602  0495                     	;# 
  3603  0495                     	;# 
  3604  0496                     	;# 
  3605  0497                     	;# 
  3606  0498                     	;# 
  3607  0499                     	;# 
  3608  049A                     	;# 
  3609  049B                     	;# 
  3610  049C                     	;# 
  3611  049D                     	;# 
  3612  058C                     	;# 
  3613  058C                     	;# 
  3614  058D                     	;# 
  3615  058E                     	;# 
  3616  058F                     	;# 
  3617  058F                     	;# 
  3618  0590                     	;# 
  3619  0591                     	;# 
  3620  0592                     	;# 
  3621  0593                     	;# 
  3622  059C                     	;# 
  3623  059C                     	;# 
  3624  059D                     	;# 
  3625  059D                     	;# 
  3626  059E                     	;# 
  3627  059F                     	;# 
  3628  060C                     	;# 
  3629  060C                     	;# 
  3630  060D                     	;# 
  3631  060D                     	;# 
  3632  060E                     	;# 
  3633  060F                     	;# 
  3634  0610                     	;# 
  3635  0611                     	;# 
  3636  0612                     	;# 
  3637  0613                     	;# 
  3638  0614                     	;# 
  3639  0616                     	;# 
  3640  0616                     	;# 
  3641  0617                     	;# 
  3642  0617                     	;# 
  3643  0618                     	;# 
  3644  0619                     	;# 
  3645  061A                     	;# 
  3646  061B                     	;# 
  3647  061C                     	;# 
  3648  061D                     	;# 
  3649  061E                     	;# 
  3650  070C                     	;# 
  3651  070D                     	;# 
  3652  070E                     	;# 
  3653  070F                     	;# 
  3654  0710                     	;# 
  3655  0711                     	;# 
  3656  0712                     	;# 
  3657  0713                     	;# 
  3658  0714                     	;# 
  3659  0716                     	;# 
  3660  0717                     	;# 
  3661  0718                     	;# 
  3662  0719                     	;# 
  3663  071A                     	;# 
  3664  071B                     	;# 
  3665  071C                     	;# 
  3666  071D                     	;# 
  3667  071E                     	;# 
  3668  0796                     	;# 
  3669  0797                     	;# 
  3670  0798                     	;# 
  3671  0799                     	;# 
  3672  079A                     	;# 
  3673  079B                     	;# 
  3674  079C                     	;# 
  3675  079D                     	;# 
  3676  080C                     	;# 
  3677  080D                     	;# 
  3678  080E                     	;# 
  3679  080F                     	;# 
  3680  0810                     	;# 
  3681  0811                     	;# 
  3682  0813                     	;# 
  3683  0814                     	;# 
  3684  081A                     	;# 
  3685  081A                     	;# 
  3686  081B                     	;# 
  3687  081C                     	;# 
  3688  081C                     	;# 
  3689  081D                     	;# 
  3690  081E                     	;# 
  3691  081F                     	;# 
  3692  088C                     	;# 
  3693  088D                     	;# 
  3694  088E                     	;# 
  3695  088F                     	;# 
  3696  0890                     	;# 
  3697  0891                     	;# 
  3698  0892                     	;# 
  3699  0893                     	;# 
  3700  0895                     	;# 
  3701  0896                     	;# 
  3702  0897                     	;# 
  3703  0898                     	;# 
  3704  0899                     	;# 
  3705  089A                     	;# 
  3706  089B                     	;# 
  3707  090C                     	;# 
  3708  090E                     	;# 
  3709  090F                     	;# 
  3710  091F                     	;# 
  3711  098F                     	;# 
  3712  098F                     	;# 
  3713  0990                     	;# 
  3714  0991                     	;# 
  3715  0992                     	;# 
  3716  0993                     	;# 
  3717  0994                     	;# 
  3718  0995                     	;# 
  3719  0996                     	;# 
  3720  0997                     	;# 
  3721  1E0F                     	;# 
  3722  1E10                     	;# 
  3723  1E11                     	;# 
  3724  1E12                     	;# 
  3725  1E13                     	;# 
  3726  1E14                     	;# 
  3727  1E15                     	;# 
  3728  1E16                     	;# 
  3729  1E17                     	;# 
  3730  1E18                     	;# 
  3731  1E19                     	;# 
  3732  1E1A                     	;# 
  3733  1E1B                     	;# 
  3734  1E1C                     	;# 
  3735  1E1D                     	;# 
  3736  1E1E                     	;# 
  3737  1E1F                     	;# 
  3738  1E20                     	;# 
  3739  1E21                     	;# 
  3740  1E22                     	;# 
  3741  1E23                     	;# 
  3742  1E24                     	;# 
  3743  1E25                     	;# 
  3744  1E26                     	;# 
  3745  1E27                     	;# 
  3746  1E28                     	;# 
  3747  1E29                     	;# 
  3748  1E2A                     	;# 
  3749  1E2B                     	;# 
  3750  1E2C                     	;# 
  3751  1E2D                     	;# 
  3752  1E2E                     	;# 
  3753  1E2F                     	;# 
  3754  1E30                     	;# 
  3755  1E31                     	;# 
  3756  1E32                     	;# 
  3757  1E33                     	;# 
  3758  1E34                     	;# 
  3759  1E35                     	;# 
  3760  1E36                     	;# 
  3761  1E37                     	;# 
  3762  1E8F                     	;# 
  3763  1E90                     	;# 
  3764  1E91                     	;# 
  3765  1E92                     	;# 
  3766  1E93                     	;# 
  3767  1E94                     	;# 
  3768  1E95                     	;# 
  3769  1E96                     	;# 
  3770  1E97                     	;# 
  3771  1E9C                     	;# 
  3772  1E9D                     	;# 
  3773  1E9E                     	;# 
  3774  1EA1                     	;# 
  3775  1EA2                     	;# 
  3776  1EA3                     	;# 
  3777  1EA4                     	;# 
  3778  1EA9                     	;# 
  3779  1EAA                     	;# 
  3780  1EB1                     	;# 
  3781  1EB2                     	;# 
  3782  1EB8                     	;# 
  3783  1EB9                     	;# 
  3784  1EBA                     	;# 
  3785  1EBB                     	;# 
  3786  1EBC                     	;# 
  3787  1EBD                     	;# 
  3788  1EBE                     	;# 
  3789  1EC3                     	;# 
  3790  1EC5                     	;# 
  3791  1EC6                     	;# 
  3792  1EC7                     	;# 
  3793  1EC8                     	;# 
  3794  1EC9                     	;# 
  3795  1ECA                     	;# 
  3796  1ECB                     	;# 
  3797  1ECB                     	;# 
  3798  1ECB                     	;# 
  3799  1ECC                     	;# 
  3800  1ECC                     	;# 
  3801  1ECC                     	;# 
  3802  1F10                     	;# 
  3803  1F11                     	;# 
  3804  1F12                     	;# 
  3805  1F14                     	;# 
  3806  1F15                     	;# 
  3807  1F1C                     	;# 
  3808  1F1D                     	;# 
  3809  1F1E                     	;# 
  3810  1F1F                     	;# 
  3811  1F20                     	;# 
  3812  1F21                     	;# 
  3813  1F22                     	;# 
  3814  1F23                     	;# 
  3815  1F24                     	;# 
  3816  1F25                     	;# 
  3817  1F26                     	;# 
  3818  1F27                     	;# 
  3819  1F38                     	;# 
  3820  1F39                     	;# 
  3821  1F3A                     	;# 
  3822  1F3B                     	;# 
  3823  1F3C                     	;# 
  3824  1F3D                     	;# 
  3825  1F3E                     	;# 
  3826  1F3F                     	;# 
  3827  1F43                     	;# 
  3828  1F44                     	;# 
  3829  1F45                     	;# 
  3830  1F46                     	;# 
  3831  1F47                     	;# 
  3832  1F48                     	;# 
  3833  1F49                     	;# 
  3834  1F4A                     	;# 
  3835  1F4E                     	;# 
  3836  1F4F                     	;# 
  3837  1F50                     	;# 
  3838  1F51                     	;# 
  3839  1F52                     	;# 
  3840  1F53                     	;# 
  3841  1F54                     	;# 
  3842  1F55                     	;# 
  3843  1FE4                     	;# 
  3844  1FE5                     	;# 
  3845  1FE6                     	;# 
  3846  1FE7                     	;# 
  3847  1FE8                     	;# 
  3848  1FE8                     	;# 
  3849  1FE9                     	;# 
  3850  1FEA                     	;# 
  3851  1FEB                     	;# 
  3852  1FED                     	;# 
  3853  1FEE                     	;# 
  3854  1FEF                     	;# 
  3855  0000                     	;# 
  3856  0001                     	;# 
  3857  0002                     	;# 
  3858  0003                     	;# 
  3859  0004                     	;# 
  3860  0005                     	;# 
  3861  0006                     	;# 
  3862  0007                     	;# 
  3863  0008                     	;# 
  3864  0009                     	;# 
  3865  000A                     	;# 
  3866  000B                     	;# 
  3867  000C                     	;# 
  3868  000D                     	;# 
  3869  000E                     	;# 
  3870  0012                     	;# 
  3871  0013                     	;# 
  3872  0014                     	;# 
  3873  0018                     	;# 
  3874  0019                     	;# 
  3875  001A                     	;# 
  3876  008C                     	;# 
  3877  008C                     	;# 
  3878  008D                     	;# 
  3879  008E                     	;# 
  3880  008E                     	;# 
  3881  008F                     	;# 
  3882  0090                     	;# 
  3883  0090                     	;# 
  3884  0091                     	;# 
  3885  0092                     	;# 
  3886  0092                     	;# 
  3887  0093                     	;# 
  3888  0094                     	;# 
  3889  0094                     	;# 
  3890  0095                     	;# 
  3891  0096                     	;# 
  3892  0096                     	;# 
  3893  0097                     	;# 
  3894  0098                     	;# 
  3895  0099                     	;# 
  3896  009A                     	;# 
  3897  009B                     	;# 
  3898  009B                     	;# 
  3899  009C                     	;# 
  3900  009D                     	;# 
  3901  009D                     	;# 
  3902  009E                     	;# 
  3903  009F                     	;# 
  3904  010C                     	;# 
  3905  010C                     	;# 
  3906  010D                     	;# 
  3907  010E                     	;# 
  3908  010F                     	;# 
  3909  010F                     	;# 
  3910  0110                     	;# 
  3911  0111                     	;# 
  3912  0112                     	;# 
  3913  0113                     	;# 
  3914  0114                     	;# 
  3915  0115                     	;# 
  3916  0116                     	;# 
  3917  0117                     	;# 
  3918  0118                     	;# 
  3919  0119                     	;# 
  3920  0119                     	;# 
  3921  0119                     	;# 
  3922  011A                     	;# 
  3923  011A                     	;# 
  3924  011A                     	;# 
  3925  011B                     	;# 
  3926  011B                     	;# 
  3927  011B                     	;# 
  3928  011B                     	;# 
  3929  011B                     	;# 
  3930  011C                     	;# 
  3931  011C                     	;# 
  3932  011C                     	;# 
  3933  011D                     	;# 
  3934  011D                     	;# 
  3935  011D                     	;# 
  3936  011E                     	;# 
  3937  011E                     	;# 
  3938  011E                     	;# 
  3939  011F                     	;# 
  3940  011F                     	;# 
  3941  011F                     	;# 
  3942  011F                     	;# 
  3943  011F                     	;# 
  3944  018C                     	;# 
  3945  018D                     	;# 
  3946  018E                     	;# 
  3947  018F                     	;# 
  3948  0190                     	;# 
  3949  0191                     	;# 
  3950  0192                     	;# 
  3951  0196                     	;# 
  3952  0197                     	;# 
  3953  0198                     	;# 
  3954  0199                     	;# 
  3955  019A                     	;# 
  3956  019B                     	;# 
  3957  019C                     	;# 
  3958  020C                     	;# 
  3959  020D                     	;# 
  3960  020E                     	;# 
  3961  020E                     	;# 
  3962  020F                     	;# 
  3963  020F                     	;# 
  3964  0210                     	;# 
  3965  0210                     	;# 
  3966  0211                     	;# 
  3967  0211                     	;# 
  3968  0212                     	;# 
  3969  0213                     	;# 
  3970  0214                     	;# 
  3971  0214                     	;# 
  3972  0215                     	;# 
  3973  0215                     	;# 
  3974  0216                     	;# 
  3975  0216                     	;# 
  3976  0217                     	;# 
  3977  0217                     	;# 
  3978  0218                     	;# 
  3979  0219                     	;# 
  3980  021A                     	;# 
  3981  021A                     	;# 
  3982  021B                     	;# 
  3983  021B                     	;# 
  3984  021C                     	;# 
  3985  021C                     	;# 
  3986  021D                     	;# 
  3987  021D                     	;# 
  3988  021E                     	;# 
  3989  021F                     	;# 
  3990  028C                     	;# 
  3991  028C                     	;# 
  3992  028D                     	;# 
  3993  028D                     	;# 
  3994  028E                     	;# 
  3995  028F                     	;# 
  3996  0290                     	;# 
  3997  0291                     	;# 
  3998  0292                     	;# 
  3999  0292                     	;# 
  4000  0293                     	;# 
  4001  0293                     	;# 
  4002  0294                     	;# 
  4003  0295                     	;# 
  4004  0296                     	;# 
  4005  0297                     	;# 
  4006  0298                     	;# 
  4007  0298                     	;# 
  4008  0299                     	;# 
  4009  0299                     	;# 
  4010  029A                     	;# 
  4011  029B                     	;# 
  4012  029C                     	;# 
  4013  029D                     	;# 
  4014  029F                     	;# 
  4015  030C                     	;# 
  4016  030C                     	;# 
  4017  030D                     	;# 
  4018  030E                     	;# 
  4019  030F                     	;# 
  4020  0310                     	;# 
  4021  0310                     	;# 
  4022  0311                     	;# 
  4023  0312                     	;# 
  4024  0313                     	;# 
  4025  0314                     	;# 
  4026  0314                     	;# 
  4027  0315                     	;# 
  4028  0316                     	;# 
  4029  0317                     	;# 
  4030  0318                     	;# 
  4031  0318                     	;# 
  4032  0319                     	;# 
  4033  031A                     	;# 
  4034  031B                     	;# 
  4035  038C                     	;# 
  4036  038C                     	;# 
  4037  038D                     	;# 
  4038  038E                     	;# 
  4039  0390                     	;# 
  4040  0390                     	;# 
  4041  0391                     	;# 
  4042  0392                     	;# 
  4043  048C                     	;# 
  4044  048C                     	;# 
  4045  048D                     	;# 
  4046  048E                     	;# 
  4047  048F                     	;# 
  4048  048F                     	;# 
  4049  0490                     	;# 
  4050  0491                     	;# 
  4051  0492                     	;# 
  4052  0492                     	;# 
  4053  0493                     	;# 
  4054  0494                     	;# 
  4055  0495                     	;# 
  4056  0495                     	;# 
  4057  0496                     	;# 
  4058  0497                     	;# 
  4059  0498                     	;# 
  4060  0499                     	;# 
  4061  049A                     	;# 
  4062  049B                     	;# 
  4063  049C                     	;# 
  4064  049D                     	;# 
  4065  058C                     	;# 
  4066  058C                     	;# 
  4067  058D                     	;# 
  4068  058E                     	;# 
  4069  058F                     	;# 
  4070  058F                     	;# 
  4071  0590                     	;# 
  4072  0591                     	;# 
  4073  0592                     	;# 
  4074  0593                     	;# 
  4075  059C                     	;# 
  4076  059C                     	;# 
  4077  059D                     	;# 
  4078  059D                     	;# 
  4079  059E                     	;# 
  4080  059F                     	;# 
  4081  060C                     	;# 
  4082  060C                     	;# 
  4083  060D                     	;# 
  4084  060D                     	;# 
  4085  060E                     	;# 
  4086  060F                     	;# 
  4087  0610                     	;# 
  4088  0611                     	;# 
  4089  0612                     	;# 
  4090  0613                     	;# 
  4091  0614                     	;# 
  4092  0616                     	;# 
  4093  0616                     	;# 
  4094  0617                     	;# 
  4095  0617                     	;# 
  4096  0618                     	;# 
  4097  0619                     	;# 
  4098  061A                     	;# 
  4099  061B                     	;# 
  4100  061C                     	;# 
  4101  061D                     	;# 
  4102  061E                     	;# 
  4103  070C                     	;# 
  4104  070D                     	;# 
  4105  070E                     	;# 
  4106  070F                     	;# 
  4107  0710                     	;# 
  4108  0711                     	;# 
  4109  0712                     	;# 
  4110  0713                     	;# 
  4111  0714                     	;# 
  4112  0716                     	;# 
  4113  0717                     	;# 
  4114  0718                     	;# 
  4115  0719                     	;# 
  4116  071A                     	;# 
  4117  071B                     	;# 
  4118  071C                     	;# 
  4119  071D                     	;# 
  4120  071E                     	;# 
  4121  0796                     	;# 
  4122  0797                     	;# 
  4123  0798                     	;# 
  4124  0799                     	;# 
  4125  079A                     	;# 
  4126  079B                     	;# 
  4127  079C                     	;# 
  4128  079D                     	;# 
  4129  080C                     	;# 
  4130  080D                     	;# 
  4131  080E                     	;# 
  4132  080F                     	;# 
  4133  0810                     	;# 
  4134  0811                     	;# 
  4135  0813                     	;# 
  4136  0814                     	;# 
  4137  081A                     	;# 
  4138  081A                     	;# 
  4139  081B                     	;# 
  4140  081C                     	;# 
  4141  081C                     	;# 
  4142  081D                     	;# 
  4143  081E                     	;# 
  4144  081F                     	;# 
  4145  088C                     	;# 
  4146  088D                     	;# 
  4147  088E                     	;# 
  4148  088F                     	;# 
  4149  0890                     	;# 
  4150  0891                     	;# 
  4151  0892                     	;# 
  4152  0893                     	;# 
  4153  0895                     	;# 
  4154  0896                     	;# 
  4155  0897                     	;# 
  4156  0898                     	;# 
  4157  0899                     	;# 
  4158  089A                     	;# 
  4159  089B                     	;# 
  4160  090C                     	;# 
  4161  090E                     	;# 
  4162  090F                     	;# 
  4163  091F                     	;# 
  4164  098F                     	;# 
  4165  098F                     	;# 
  4166  0990                     	;# 
  4167  0991                     	;# 
  4168  0992                     	;# 
  4169  0993                     	;# 
  4170  0994                     	;# 
  4171  0995                     	;# 
  4172  0996                     	;# 
  4173  0997                     	;# 
  4174  1E0F                     	;# 
  4175  1E10                     	;# 
  4176  1E11                     	;# 
  4177  1E12                     	;# 
  4178  1E13                     	;# 
  4179  1E14                     	;# 
  4180  1E15                     	;# 
  4181  1E16                     	;# 
  4182  1E17                     	;# 
  4183  1E18                     	;# 
  4184  1E19                     	;# 
  4185  1E1A                     	;# 
  4186  1E1B                     	;# 
  4187  1E1C                     	;# 
  4188  1E1D                     	;# 
  4189  1E1E                     	;# 
  4190  1E1F                     	;# 
  4191  1E20                     	;# 
  4192  1E21                     	;# 
  4193  1E22                     	;# 
  4194  1E23                     	;# 
  4195  1E24                     	;# 
  4196  1E25                     	;# 
  4197  1E26                     	;# 
  4198  1E27                     	;# 
  4199  1E28                     	;# 
  4200  1E29                     	;# 
  4201  1E2A                     	;# 
  4202  1E2B                     	;# 
  4203  1E2C                     	;# 
  4204  1E2D                     	;# 
  4205  1E2E                     	;# 
  4206  1E2F                     	;# 
  4207  1E30                     	;# 
  4208  1E31                     	;# 
  4209  1E32                     	;# 
  4210  1E33                     	;# 
  4211  1E34                     	;# 
  4212  1E35                     	;# 
  4213  1E36                     	;# 
  4214  1E37                     	;# 
  4215  1E8F                     	;# 
  4216  1E90                     	;# 
  4217  1E91                     	;# 
  4218  1E92                     	;# 
  4219  1E93                     	;# 
  4220  1E94                     	;# 
  4221  1E95                     	;# 
  4222  1E96                     	;# 
  4223  1E97                     	;# 
  4224  1E9C                     	;# 
  4225  1E9D                     	;# 
  4226  1E9E                     	;# 
  4227  1EA1                     	;# 
  4228  1EA2                     	;# 
  4229  1EA3                     	;# 
  4230  1EA4                     	;# 
  4231  1EA9                     	;# 
  4232  1EAA                     	;# 
  4233  1EB1                     	;# 
  4234  1EB2                     	;# 
  4235  1EB8                     	;# 
  4236  1EB9                     	;# 
  4237  1EBA                     	;# 
  4238  1EBB                     	;# 
  4239  1EBC                     	;# 
  4240  1EBD                     	;# 
  4241  1EBE                     	;# 
  4242  1EC3                     	;# 
  4243  1EC5                     	;# 
  4244  1EC6                     	;# 
  4245  1EC7                     	;# 
  4246  1EC8                     	;# 
  4247  1EC9                     	;# 
  4248  1ECA                     	;# 
  4249  1ECB                     	;# 
  4250  1ECB                     	;# 
  4251  1ECB                     	;# 
  4252  1ECC                     	;# 
  4253  1ECC                     	;# 
  4254  1ECC                     	;# 
  4255  1F10                     	;# 
  4256  1F11                     	;# 
  4257  1F12                     	;# 
  4258  1F14                     	;# 
  4259  1F15                     	;# 
  4260  1F1C                     	;# 
  4261  1F1D                     	;# 
  4262  1F1E                     	;# 
  4263  1F1F                     	;# 
  4264  1F20                     	;# 
  4265  1F21                     	;# 
  4266  1F22                     	;# 
  4267  1F23                     	;# 
  4268  1F24                     	;# 
  4269  1F25                     	;# 
  4270  1F26                     	;# 
  4271  1F27                     	;# 
  4272  1F38                     	;# 
  4273  1F39                     	;# 
  4274  1F3A                     	;# 
  4275  1F3B                     	;# 
  4276  1F3C                     	;# 
  4277  1F3D                     	;# 
  4278  1F3E                     	;# 
  4279  1F3F                     	;# 
  4280  1F43                     	;# 
  4281  1F44                     	;# 
  4282  1F45                     	;# 
  4283  1F46                     	;# 
  4284  1F47                     	;# 
  4285  1F48                     	;# 
  4286  1F49                     	;# 
  4287  1F4A                     	;# 
  4288  1F4E                     	;# 
  4289  1F4F                     	;# 
  4290  1F50                     	;# 
  4291  1F51                     	;# 
  4292  1F52                     	;# 
  4293  1F53                     	;# 
  4294  1F54                     	;# 
  4295  1F55                     	;# 
  4296  1FE4                     	;# 
  4297  1FE5                     	;# 
  4298  1FE6                     	;# 
  4299  1FE7                     	;# 
  4300  1FE8                     	;# 
  4301  1FE8                     	;# 
  4302  1FE9                     	;# 
  4303  1FEA                     	;# 
  4304  1FEB                     	;# 
  4305  1FED                     	;# 
  4306  1FEE                     	;# 
  4307  1FEF                     	;# 
  4308  0000                     	;# 
  4309  0001                     	;# 
  4310  0002                     	;# 
  4311  0003                     	;# 
  4312  0004                     	;# 
  4313  0005                     	;# 
  4314  0006                     	;# 
  4315  0007                     	;# 
  4316  0008                     	;# 
  4317  0009                     	;# 
  4318  000A                     	;# 
  4319  000B                     	;# 
  4320  000C                     	;# 
  4321  000D                     	;# 
  4322  000E                     	;# 
  4323  0012                     	;# 
  4324  0013                     	;# 
  4325  0014                     	;# 
  4326  0018                     	;# 
  4327  0019                     	;# 
  4328  001A                     	;# 
  4329  008C                     	;# 
  4330  008C                     	;# 
  4331  008D                     	;# 
  4332  008E                     	;# 
  4333  008E                     	;# 
  4334  008F                     	;# 
  4335  0090                     	;# 
  4336  0090                     	;# 
  4337  0091                     	;# 
  4338  0092                     	;# 
  4339  0092                     	;# 
  4340  0093                     	;# 
  4341  0094                     	;# 
  4342  0094                     	;# 
  4343  0095                     	;# 
  4344  0096                     	;# 
  4345  0096                     	;# 
  4346  0097                     	;# 
  4347  0098                     	;# 
  4348  0099                     	;# 
  4349  009A                     	;# 
  4350  009B                     	;# 
  4351  009B                     	;# 
  4352  009C                     	;# 
  4353  009D                     	;# 
  4354  009D                     	;# 
  4355  009E                     	;# 
  4356  009F                     	;# 
  4357  010C                     	;# 
  4358  010C                     	;# 
  4359  010D                     	;# 
  4360  010E                     	;# 
  4361  010F                     	;# 
  4362  010F                     	;# 
  4363  0110                     	;# 
  4364  0111                     	;# 
  4365  0112                     	;# 
  4366  0113                     	;# 
  4367  0114                     	;# 
  4368  0115                     	;# 
  4369  0116                     	;# 
  4370  0117                     	;# 
  4371  0118                     	;# 
  4372  0119                     	;# 
  4373  0119                     	;# 
  4374  0119                     	;# 
  4375  011A                     	;# 
  4376  011A                     	;# 
  4377  011A                     	;# 
  4378  011B                     	;# 
  4379  011B                     	;# 
  4380  011B                     	;# 
  4381  011B                     	;# 
  4382  011B                     	;# 
  4383  011C                     	;# 
  4384  011C                     	;# 
  4385  011C                     	;# 
  4386  011D                     	;# 
  4387  011D                     	;# 
  4388  011D                     	;# 
  4389  011E                     	;# 
  4390  011E                     	;# 
  4391  011E                     	;# 
  4392  011F                     	;# 
  4393  011F                     	;# 
  4394  011F                     	;# 
  4395  011F                     	;# 
  4396  011F                     	;# 
  4397  018C                     	;# 
  4398  018D                     	;# 
  4399  018E                     	;# 
  4400  018F                     	;# 
  4401  0190                     	;# 
  4402  0191                     	;# 
  4403  0192                     	;# 
  4404  0196                     	;# 
  4405  0197                     	;# 
  4406  0198                     	;# 
  4407  0199                     	;# 
  4408  019A                     	;# 
  4409  019B                     	;# 
  4410  019C                     	;# 
  4411  020C                     	;# 
  4412  020D                     	;# 
  4413  020E                     	;# 
  4414  020E                     	;# 
  4415  020F                     	;# 
  4416  020F                     	;# 
  4417  0210                     	;# 
  4418  0210                     	;# 
  4419  0211                     	;# 
  4420  0211                     	;# 
  4421  0212                     	;# 
  4422  0213                     	;# 
  4423  0214                     	;# 
  4424  0214                     	;# 
  4425  0215                     	;# 
  4426  0215                     	;# 
  4427  0216                     	;# 
  4428  0216                     	;# 
  4429  0217                     	;# 
  4430  0217                     	;# 
  4431  0218                     	;# 
  4432  0219                     	;# 
  4433  021A                     	;# 
  4434  021A                     	;# 
  4435  021B                     	;# 
  4436  021B                     	;# 
  4437  021C                     	;# 
  4438  021C                     	;# 
  4439  021D                     	;# 
  4440  021D                     	;# 
  4441  021E                     	;# 
  4442  021F                     	;# 
  4443  028C                     	;# 
  4444  028C                     	;# 
  4445  028D                     	;# 
  4446  028D                     	;# 
  4447  028E                     	;# 
  4448  028F                     	;# 
  4449  0290                     	;# 
  4450  0291                     	;# 
  4451  0292                     	;# 
  4452  0292                     	;# 
  4453  0293                     	;# 
  4454  0293                     	;# 
  4455  0294                     	;# 
  4456  0295                     	;# 
  4457  0296                     	;# 
  4458  0297                     	;# 
  4459  0298                     	;# 
  4460  0298                     	;# 
  4461  0299                     	;# 
  4462  0299                     	;# 
  4463  029A                     	;# 
  4464  029B                     	;# 
  4465  029C                     	;# 
  4466  029D                     	;# 
  4467  029F                     	;# 
  4468  030C                     	;# 
  4469  030C                     	;# 
  4470  030D                     	;# 
  4471  030E                     	;# 
  4472  030F                     	;# 
  4473  0310                     	;# 
  4474  0310                     	;# 
  4475  0311                     	;# 
  4476  0312                     	;# 
  4477  0313                     	;# 
  4478  0314                     	;# 
  4479  0314                     	;# 
  4480  0315                     	;# 
  4481  0316                     	;# 
  4482  0317                     	;# 
  4483  0318                     	;# 
  4484  0318                     	;# 
  4485  0319                     	;# 
  4486  031A                     	;# 
  4487  031B                     	;# 
  4488  038C                     	;# 
  4489  038C                     	;# 
  4490  038D                     	;# 
  4491  038E                     	;# 
  4492  0390                     	;# 
  4493  0390                     	;# 
  4494  0391                     	;# 
  4495  0392                     	;# 
  4496  048C                     	;# 
  4497  048C                     	;# 
  4498  048D                     	;# 
  4499  048E                     	;# 
  4500  048F                     	;# 
  4501  048F                     	;# 
  4502  0490                     	;# 
  4503  0491                     	;# 
  4504  0492                     	;# 
  4505  0492                     	;# 
  4506  0493                     	;# 
  4507  0494                     	;# 
  4508  0495                     	;# 
  4509  0495                     	;# 
  4510  0496                     	;# 
  4511  0497                     	;# 
  4512  0498                     	;# 
  4513  0499                     	;# 
  4514  049A                     	;# 
  4515  049B                     	;# 
  4516  049C                     	;# 
  4517  049D                     	;# 
  4518  058C                     	;# 
  4519  058C                     	;# 
  4520  058D                     	;# 
  4521  058E                     	;# 
  4522  058F                     	;# 
  4523  058F                     	;# 
  4524  0590                     	;# 
  4525  0591                     	;# 
  4526  0592                     	;# 
  4527  0593                     	;# 
  4528  059C                     	;# 
  4529  059C                     	;# 
  4530  059D                     	;# 
  4531  059D                     	;# 
  4532  059E                     	;# 
  4533  059F                     	;# 
  4534  060C                     	;# 
  4535  060C                     	;# 
  4536  060D                     	;# 
  4537  060D                     	;# 
  4538  060E                     	;# 
  4539  060F                     	;# 
  4540  0610                     	;# 
  4541  0611                     	;# 
  4542  0612                     	;# 
  4543  0613                     	;# 
  4544  0614                     	;# 
  4545  0616                     	;# 
  4546  0616                     	;# 
  4547  0617                     	;# 
  4548  0617                     	;# 
  4549  0618                     	;# 
  4550  0619                     	;# 
  4551  061A                     	;# 
  4552  061B                     	;# 
  4553  061C                     	;# 
  4554  061D                     	;# 
  4555  061E                     	;# 
  4556  070C                     	;# 
  4557  070D                     	;# 
  4558  070E                     	;# 
  4559  070F                     	;# 
  4560  0710                     	;# 
  4561  0711                     	;# 
  4562  0712                     	;# 
  4563  0713                     	;# 
  4564  0714                     	;# 
  4565  0716                     	;# 
  4566  0717                     	;# 
  4567  0718                     	;# 
  4568  0719                     	;# 
  4569  071A                     	;# 
  4570  071B                     	;# 
  4571  071C                     	;# 
  4572  071D                     	;# 
  4573  071E                     	;# 
  4574  0796                     	;# 
  4575  0797                     	;# 
  4576  0798                     	;# 
  4577  0799                     	;# 
  4578  079A                     	;# 
  4579  079B                     	;# 
  4580  079C                     	;# 
  4581  079D                     	;# 
  4582  080C                     	;# 
  4583  080D                     	;# 
  4584  080E                     	;# 
  4585  080F                     	;# 
  4586  0810                     	;# 
  4587  0811                     	;# 
  4588  0813                     	;# 
  4589  0814                     	;# 
  4590  081A                     	;# 
  4591  081A                     	;# 
  4592  081B                     	;# 
  4593  081C                     	;# 
  4594  081C                     	;# 
  4595  081D                     	;# 
  4596  081E                     	;# 
  4597  081F                     	;# 
  4598  088C                     	;# 
  4599  088D                     	;# 
  4600  088E                     	;# 
  4601  088F                     	;# 
  4602  0890                     	;# 
  4603  0891                     	;# 
  4604  0892                     	;# 
  4605  0893                     	;# 
  4606  0895                     	;# 
  4607  0896                     	;# 
  4608  0897                     	;# 
  4609  0898                     	;# 
  4610  0899                     	;# 
  4611  089A                     	;# 
  4612  089B                     	;# 
  4613  090C                     	;# 
  4614  090E                     	;# 
  4615  090F                     	;# 
  4616  091F                     	;# 
  4617  098F                     	;# 
  4618  098F                     	;# 
  4619  0990                     	;# 
  4620  0991                     	;# 
  4621  0992                     	;# 
  4622  0993                     	;# 
  4623  0994                     	;# 
  4624  0995                     	;# 
  4625  0996                     	;# 
  4626  0997                     	;# 
  4627  1E0F                     	;# 
  4628  1E10                     	;# 
  4629  1E11                     	;# 
  4630  1E12                     	;# 
  4631  1E13                     	;# 
  4632  1E14                     	;# 
  4633  1E15                     	;# 
  4634  1E16                     	;# 
  4635  1E17                     	;# 
  4636  1E18                     	;# 
  4637  1E19                     	;# 
  4638  1E1A                     	;# 
  4639  1E1B                     	;# 
  4640  1E1C                     	;# 
  4641  1E1D                     	;# 
  4642  1E1E                     	;# 
  4643  1E1F                     	;# 
  4644  1E20                     	;# 
  4645  1E21                     	;# 
  4646  1E22                     	;# 
  4647  1E23                     	;# 
  4648  1E24                     	;# 
  4649  1E25                     	;# 
  4650  1E26                     	;# 
  4651  1E27                     	;# 
  4652  1E28                     	;# 
  4653  1E29                     	;# 
  4654  1E2A                     	;# 
  4655  1E2B                     	;# 
  4656  1E2C                     	;# 
  4657  1E2D                     	;# 
  4658  1E2E                     	;# 
  4659  1E2F                     	;# 
  4660  1E30                     	;# 
  4661  1E31                     	;# 
  4662  1E32                     	;# 
  4663  1E33                     	;# 
  4664  1E34                     	;# 
  4665  1E35                     	;# 
  4666  1E36                     	;# 
  4667  1E37                     	;# 
  4668  1E8F                     	;# 
  4669  1E90                     	;# 
  4670  1E91                     	;# 
  4671  1E92                     	;# 
  4672  1E93                     	;# 
  4673  1E94                     	;# 
  4674  1E95                     	;# 
  4675  1E96                     	;# 
  4676  1E97                     	;# 
  4677  1E9C                     	;# 
  4678  1E9D                     	;# 
  4679  1E9E                     	;# 
  4680  1EA1                     	;# 
  4681  1EA2                     	;# 
  4682  1EA3                     	;# 
  4683  1EA4                     	;# 
  4684  1EA9                     	;# 
  4685  1EAA                     	;# 
  4686  1EB1                     	;# 
  4687  1EB2                     	;# 
  4688  1EB8                     	;# 
  4689  1EB9                     	;# 
  4690  1EBA                     	;# 
  4691  1EBB                     	;# 
  4692  1EBC                     	;# 
  4693  1EBD                     	;# 
  4694  1EBE                     	;# 
  4695  1EC3                     	;# 
  4696  1EC5                     	;# 
  4697  1EC6                     	;# 
  4698  1EC7                     	;# 
  4699  1EC8                     	;# 
  4700  1EC9                     	;# 
  4701  1ECA                     	;# 
  4702  1ECB                     	;# 
  4703  1ECB                     	;# 
  4704  1ECB                     	;# 
  4705  1ECC                     	;# 
  4706  1ECC                     	;# 
  4707  1ECC                     	;# 
  4708  1F10                     	;# 
  4709  1F11                     	;# 
  4710  1F12                     	;# 
  4711  1F14                     	;# 
  4712  1F15                     	;# 
  4713  1F1C                     	;# 
  4714  1F1D                     	;# 
  4715  1F1E                     	;# 
  4716  1F1F                     	;# 
  4717  1F20                     	;# 
  4718  1F21                     	;# 
  4719  1F22                     	;# 
  4720  1F23                     	;# 
  4721  1F24                     	;# 
  4722  1F25                     	;# 
  4723  1F26                     	;# 
  4724  1F27                     	;# 
  4725  1F38                     	;# 
  4726  1F39                     	;# 
  4727  1F3A                     	;# 
  4728  1F3B                     	;# 
  4729  1F3C                     	;# 
  4730  1F3D                     	;# 
  4731  1F3E                     	;# 
  4732  1F3F                     	;# 
  4733  1F43                     	;# 
  4734  1F44                     	;# 
  4735  1F45                     	;# 
  4736  1F46                     	;# 
  4737  1F47                     	;# 
  4738  1F48                     	;# 
  4739  1F49                     	;# 
  4740  1F4A                     	;# 
  4741  1F4E                     	;# 
  4742  1F4F                     	;# 
  4743  1F50                     	;# 
  4744  1F51                     	;# 
  4745  1F52                     	;# 
  4746  1F53                     	;# 
  4747  1F54                     	;# 
  4748  1F55                     	;# 
  4749  1FE4                     	;# 
  4750  1FE5                     	;# 
  4751  1FE6                     	;# 
  4752  1FE7                     	;# 
  4753  1FE8                     	;# 
  4754  1FE8                     	;# 
  4755  1FE9                     	;# 
  4756  1FEA                     	;# 
  4757  1FEB                     	;# 
  4758  1FED                     	;# 
  4759  1FEE                     	;# 
  4760  1FEF                     	;# 
  4761  0000                     	;# 
  4762  0001                     	;# 
  4763  0002                     	;# 
  4764  0003                     	;# 
  4765  0004                     	;# 
  4766  0005                     	;# 
  4767  0006                     	;# 
  4768  0007                     	;# 
  4769  0008                     	;# 
  4770  0009                     	;# 
  4771  000A                     	;# 
  4772  000B                     	;# 
  4773  000C                     	;# 
  4774  000D                     	;# 
  4775  000E                     	;# 
  4776  0012                     	;# 
  4777  0013                     	;# 
  4778  0014                     	;# 
  4779  0018                     	;# 
  4780  0019                     	;# 
  4781  001A                     	;# 
  4782  008C                     	;# 
  4783  008C                     	;# 
  4784  008D                     	;# 
  4785  008E                     	;# 
  4786  008E                     	;# 
  4787  008F                     	;# 
  4788  0090                     	;# 
  4789  0090                     	;# 
  4790  0091                     	;# 
  4791  0092                     	;# 
  4792  0092                     	;# 
  4793  0093                     	;# 
  4794  0094                     	;# 
  4795  0094                     	;# 
  4796  0095                     	;# 
  4797  0096                     	;# 
  4798  0096                     	;# 
  4799  0097                     	;# 
  4800  0098                     	;# 
  4801  0099                     	;# 
  4802  009A                     	;# 
  4803  009B                     	;# 
  4804  009B                     	;# 
  4805  009C                     	;# 
  4806  009D                     	;# 
  4807  009D                     	;# 
  4808  009E                     	;# 
  4809  009F                     	;# 
  4810  010C                     	;# 
  4811  010C                     	;# 
  4812  010D                     	;# 
  4813  010E                     	;# 
  4814  010F                     	;# 
  4815  010F                     	;# 
  4816  0110                     	;# 
  4817  0111                     	;# 
  4818  0112                     	;# 
  4819  0113                     	;# 
  4820  0114                     	;# 
  4821  0115                     	;# 
  4822  0116                     	;# 
  4823  0117                     	;# 
  4824  0118                     	;# 
  4825  0119                     	;# 
  4826  0119                     	;# 
  4827  0119                     	;# 
  4828  011A                     	;# 
  4829  011A                     	;# 
  4830  011A                     	;# 
  4831  011B                     	;# 
  4832  011B                     	;# 
  4833  011B                     	;# 
  4834  011B                     	;# 
  4835  011B                     	;# 
  4836  011C                     	;# 
  4837  011C                     	;# 
  4838  011C                     	;# 
  4839  011D                     	;# 
  4840  011D                     	;# 
  4841  011D                     	;# 
  4842  011E                     	;# 
  4843  011E                     	;# 
  4844  011E                     	;# 
  4845  011F                     	;# 
  4846  011F                     	;# 
  4847  011F                     	;# 
  4848  011F                     	;# 
  4849  011F                     	;# 
  4850  018C                     	;# 
  4851  018D                     	;# 
  4852  018E                     	;# 
  4853  018F                     	;# 
  4854  0190                     	;# 
  4855  0191                     	;# 
  4856  0192                     	;# 
  4857  0196                     	;# 
  4858  0197                     	;# 
  4859  0198                     	;# 
  4860  0199                     	;# 
  4861  019A                     	;# 
  4862  019B                     	;# 
  4863  019C                     	;# 
  4864  020C                     	;# 
  4865  020D                     	;# 
  4866  020E                     	;# 
  4867  020E                     	;# 
  4868  020F                     	;# 
  4869  020F                     	;# 
  4870  0210                     	;# 
  4871  0210                     	;# 
  4872  0211                     	;# 
  4873  0211                     	;# 
  4874  0212                     	;# 
  4875  0213                     	;# 
  4876  0214                     	;# 
  4877  0214                     	;# 
  4878  0215                     	;# 
  4879  0215                     	;# 
  4880  0216                     	;# 
  4881  0216                     	;# 
  4882  0217                     	;# 
  4883  0217                     	;# 
  4884  0218                     	;# 
  4885  0219                     	;# 
  4886  021A                     	;# 
  4887  021A                     	;# 
  4888  021B                     	;# 
  4889  021B                     	;# 
  4890  021C                     	;# 
  4891  021C                     	;# 
  4892  021D                     	;# 
  4893  021D                     	;# 
  4894  021E                     	;# 
  4895  021F                     	;# 
  4896  028C                     	;# 
  4897  028C                     	;# 
  4898  028D                     	;# 
  4899  028D                     	;# 
  4900  028E                     	;# 
  4901  028F                     	;# 
  4902  0290                     	;# 
  4903  0291                     	;# 
  4904  0292                     	;# 
  4905  0292                     	;# 
  4906  0293                     	;# 
  4907  0293                     	;# 
  4908  0294                     	;# 
  4909  0295                     	;# 
  4910  0296                     	;# 
  4911  0297                     	;# 
  4912  0298                     	;# 
  4913  0298                     	;# 
  4914  0299                     	;# 
  4915  0299                     	;# 
  4916  029A                     	;# 
  4917  029B                     	;# 
  4918  029C                     	;# 
  4919  029D                     	;# 
  4920  029F                     	;# 
  4921  030C                     	;# 
  4922  030C                     	;# 
  4923  030D                     	;# 
  4924  030E                     	;# 
  4925  030F                     	;# 
  4926  0310                     	;# 
  4927  0310                     	;# 
  4928  0311                     	;# 
  4929  0312                     	;# 
  4930  0313                     	;# 
  4931  0314                     	;# 
  4932  0314                     	;# 
  4933  0315                     	;# 
  4934  0316                     	;# 
  4935  0317                     	;# 
  4936  0318                     	;# 
  4937  0318                     	;# 
  4938  0319                     	;# 
  4939  031A                     	;# 
  4940  031B                     	;# 
  4941  038C                     	;# 
  4942  038C                     	;# 
  4943  038D                     	;# 
  4944  038E                     	;# 
  4945  0390                     	;# 
  4946  0390                     	;# 
  4947  0391                     	;# 
  4948  0392                     	;# 
  4949  048C                     	;# 
  4950  048C                     	;# 
  4951  048D                     	;# 
  4952  048E                     	;# 
  4953  048F                     	;# 
  4954  048F                     	;# 
  4955  0490                     	;# 
  4956  0491                     	;# 
  4957  0492                     	;# 
  4958  0492                     	;# 
  4959  0493                     	;# 
  4960  0494                     	;# 
  4961  0495                     	;# 
  4962  0495                     	;# 
  4963  0496                     	;# 
  4964  0497                     	;# 
  4965  0498                     	;# 
  4966  0499                     	;# 
  4967  049A                     	;# 
  4968  049B                     	;# 
  4969  049C                     	;# 
  4970  049D                     	;# 
  4971  058C                     	;# 
  4972  058C                     	;# 
  4973  058D                     	;# 
  4974  058E                     	;# 
  4975  058F                     	;# 
  4976  058F                     	;# 
  4977  0590                     	;# 
  4978  0591                     	;# 
  4979  0592                     	;# 
  4980  0593                     	;# 
  4981  059C                     	;# 
  4982  059C                     	;# 
  4983  059D                     	;# 
  4984  059D                     	;# 
  4985  059E                     	;# 
  4986  059F                     	;# 
  4987  060C                     	;# 
  4988  060C                     	;# 
  4989  060D                     	;# 
  4990  060D                     	;# 
  4991  060E                     	;# 
  4992  060F                     	;# 
  4993  0610                     	;# 
  4994  0611                     	;# 
  4995  0612                     	;# 
  4996  0613                     	;# 
  4997  0614                     	;# 
  4998  0616                     	;# 
  4999  0616                     	;# 
  5000  0617                     	;# 
  5001  0617                     	;# 
  5002  0618                     	;# 
  5003  0619                     	;# 
  5004  061A                     	;# 
  5005  061B                     	;# 
  5006  061C                     	;# 
  5007  061D                     	;# 
  5008  061E                     	;# 
  5009  070C                     	;# 
  5010  070D                     	;# 
  5011  070E                     	;# 
  5012  070F                     	;# 
  5013  0710                     	;# 
  5014  0711                     	;# 
  5015  0712                     	;# 
  5016  0713                     	;# 
  5017  0714                     	;# 
  5018  0716                     	;# 
  5019  0717                     	;# 
  5020  0718                     	;# 
  5021  0719                     	;# 
  5022  071A                     	;# 
  5023  071B                     	;# 
  5024  071C                     	;# 
  5025  071D                     	;# 
  5026  071E                     	;# 
  5027  0796                     	;# 
  5028  0797                     	;# 
  5029  0798                     	;# 
  5030  0799                     	;# 
  5031  079A                     	;# 
  5032  079B                     	;# 
  5033  079C                     	;# 
  5034  079D                     	;# 
  5035  080C                     	;# 
  5036  080D                     	;# 
  5037  080E                     	;# 
  5038  080F                     	;# 
  5039  0810                     	;# 
  5040  0811                     	;# 
  5041  0813                     	;# 
  5042  0814                     	;# 
  5043  081A                     	;# 
  5044  081A                     	;# 
  5045  081B                     	;# 
  5046  081C                     	;# 
  5047  081C                     	;# 
  5048  081D                     	;# 
  5049  081E                     	;# 
  5050  081F                     	;# 
  5051  088C                     	;# 
  5052  088D                     	;# 
  5053  088E                     	;# 
  5054  088F                     	;# 
  5055  0890                     	;# 
  5056  0891                     	;# 
  5057  0892                     	;# 
  5058  0893                     	;# 
  5059  0895                     	;# 
  5060  0896                     	;# 
  5061  0897                     	;# 
  5062  0898                     	;# 
  5063  0899                     	;# 
  5064  089A                     	;# 
  5065  089B                     	;# 
  5066  090C                     	;# 
  5067  090E                     	;# 
  5068  090F                     	;# 
  5069  091F                     	;# 
  5070  098F                     	;# 
  5071  098F                     	;# 
  5072  0990                     	;# 
  5073  0991                     	;# 
  5074  0992                     	;# 
  5075  0993                     	;# 
  5076  0994                     	;# 
  5077  0995                     	;# 
  5078  0996                     	;# 
  5079  0997                     	;# 
  5080  1E0F                     	;# 
  5081  1E10                     	;# 
  5082  1E11                     	;# 
  5083  1E12                     	;# 
  5084  1E13                     	;# 
  5085  1E14                     	;# 
  5086  1E15                     	;# 
  5087  1E16                     	;# 
  5088  1E17                     	;# 
  5089  1E18                     	;# 
  5090  1E19                     	;# 
  5091  1E1A                     	;# 
  5092  1E1B                     	;# 
  5093  1E1C                     	;# 
  5094  1E1D                     	;# 
  5095  1E1E                     	;# 
  5096  1E1F                     	;# 
  5097  1E20                     	;# 
  5098  1E21                     	;# 
  5099  1E22                     	;# 
  5100  1E23                     	;# 
  5101  1E24                     	;# 
  5102  1E25                     	;# 
  5103  1E26                     	;# 
  5104  1E27                     	;# 
  5105  1E28                     	;# 
  5106  1E29                     	;# 
  5107  1E2A                     	;# 
  5108  1E2B                     	;# 
  5109  1E2C                     	;# 
  5110  1E2D                     	;# 
  5111  1E2E                     	;# 
  5112  1E2F                     	;# 
  5113  1E30                     	;# 
  5114  1E31                     	;# 
  5115  1E32                     	;# 
  5116  1E33                     	;# 
  5117  1E34                     	;# 
  5118  1E35                     	;# 
  5119  1E36                     	;# 
  5120  1E37                     	;# 
  5121  1E8F                     	;# 
  5122  1E90                     	;# 
  5123  1E91                     	;# 
  5124  1E92                     	;# 
  5125  1E93                     	;# 
  5126  1E94                     	;# 
  5127  1E95                     	;# 
  5128  1E96                     	;# 
  5129  1E97                     	;# 
  5130  1E9C                     	;# 
  5131  1E9D                     	;# 
  5132  1E9E                     	;# 
  5133  1EA1                     	;# 
  5134  1EA2                     	;# 
  5135  1EA3                     	;# 
  5136  1EA4                     	;# 
  5137  1EA9                     	;# 
  5138  1EAA                     	;# 
  5139  1EB1                     	;# 
  5140  1EB2                     	;# 
  5141  1EB8                     	;# 
  5142  1EB9                     	;# 
  5143  1EBA                     	;# 
  5144  1EBB                     	;# 
  5145  1EBC                     	;# 
  5146  1EBD                     	;# 
  5147  1EBE                     	;# 
  5148  1EC3                     	;# 
  5149  1EC5                     	;# 
  5150  1EC6                     	;# 
  5151  1EC7                     	;# 
  5152  1EC8                     	;# 
  5153  1EC9                     	;# 
  5154  1ECA                     	;# 
  5155  1ECB                     	;# 
  5156  1ECB                     	;# 
  5157  1ECB                     	;# 
  5158  1ECC                     	;# 
  5159  1ECC                     	;# 
  5160  1ECC                     	;# 
  5161  1F10                     	;# 
  5162  1F11                     	;# 
  5163  1F12                     	;# 
  5164  1F14                     	;# 
  5165  1F15                     	;# 
  5166  1F1C                     	;# 
  5167  1F1D                     	;# 
  5168  1F1E                     	;# 
  5169  1F1F                     	;# 
  5170  1F20                     	;# 
  5171  1F21                     	;# 
  5172  1F22                     	;# 
  5173  1F23                     	;# 
  5174  1F24                     	;# 
  5175  1F25                     	;# 
  5176  1F26                     	;# 
  5177  1F27                     	;# 
  5178  1F38                     	;# 
  5179  1F39                     	;# 
  5180  1F3A                     	;# 
  5181  1F3B                     	;# 
  5182  1F3C                     	;# 
  5183  1F3D                     	;# 
  5184  1F3E                     	;# 
  5185  1F3F                     	;# 
  5186  1F43                     	;# 
  5187  1F44                     	;# 
  5188  1F45                     	;# 
  5189  1F46                     	;# 
  5190  1F47                     	;# 
  5191  1F48                     	;# 
  5192  1F49                     	;# 
  5193  1F4A                     	;# 
  5194  1F4E                     	;# 
  5195  1F4F                     	;# 
  5196  1F50                     	;# 
  5197  1F51                     	;# 
  5198  1F52                     	;# 
  5199  1F53                     	;# 
  5200  1F54                     	;# 
  5201  1F55                     	;# 
  5202  1FE4                     	;# 
  5203  1FE5                     	;# 
  5204  1FE6                     	;# 
  5205  1FE7                     	;# 
  5206  1FE8                     	;# 
  5207  1FE8                     	;# 
  5208  1FE9                     	;# 
  5209  1FEA                     	;# 
  5210  1FEB                     	;# 
  5211  1FED                     	;# 
  5212  1FEE                     	;# 
  5213  1FEF                     	;# 
  5214  0000                     	;# 
  5215  0001                     	;# 
  5216  0002                     	;# 
  5217  0003                     	;# 
  5218  0004                     	;# 
  5219  0005                     	;# 
  5220  0006                     	;# 
  5221  0007                     	;# 
  5222  0008                     	;# 
  5223  0009                     	;# 
  5224  000A                     	;# 
  5225  000B                     	;# 
  5226  000C                     	;# 
  5227  000D                     	;# 
  5228  000E                     	;# 
  5229  0012                     	;# 
  5230  0013                     	;# 
  5231  0014                     	;# 
  5232  0018                     	;# 
  5233  0019                     	;# 
  5234  001A                     	;# 
  5235  008C                     	;# 
  5236  008C                     	;# 
  5237  008D                     	;# 
  5238  008E                     	;# 
  5239  008E                     	;# 
  5240  008F                     	;# 
  5241  0090                     	;# 
  5242  0090                     	;# 
  5243  0091                     	;# 
  5244  0092                     	;# 
  5245  0092                     	;# 
  5246  0093                     	;# 
  5247  0094                     	;# 
  5248  0094                     	;# 
  5249  0095                     	;# 
  5250  0096                     	;# 
  5251  0096                     	;# 
  5252  0097                     	;# 
  5253  0098                     	;# 
  5254  0099                     	;# 
  5255  009A                     	;# 
  5256  009B                     	;# 
  5257  009B                     	;# 
  5258  009C                     	;# 
  5259  009D                     	;# 
  5260  009D                     	;# 
  5261  009E                     	;# 
  5262  009F                     	;# 
  5263  010C                     	;# 
  5264  010C                     	;# 
  5265  010D                     	;# 
  5266  010E                     	;# 
  5267  010F                     	;# 
  5268  010F                     	;# 
  5269  0110                     	;# 
  5270  0111                     	;# 
  5271  0112                     	;# 
  5272  0113                     	;# 
  5273  0114                     	;# 
  5274  0115                     	;# 
  5275  0116                     	;# 
  5276  0117                     	;# 
  5277  0118                     	;# 
  5278  0119                     	;# 
  5279  0119                     	;# 
  5280  0119                     	;# 
  5281  011A                     	;# 
  5282  011A                     	;# 
  5283  011A                     	;# 
  5284  011B                     	;# 
  5285  011B                     	;# 
  5286  011B                     	;# 
  5287  011B                     	;# 
  5288  011B                     	;# 
  5289  011C                     	;# 
  5290  011C                     	;# 
  5291  011C                     	;# 
  5292  011D                     	;# 
  5293  011D                     	;# 
  5294  011D                     	;# 
  5295  011E                     	;# 
  5296  011E                     	;# 
  5297  011E                     	;# 
  5298  011F                     	;# 
  5299  011F                     	;# 
  5300  011F                     	;# 
  5301  011F                     	;# 
  5302  011F                     	;# 
  5303  018C                     	;# 
  5304  018D                     	;# 
  5305  018E                     	;# 
  5306  018F                     	;# 
  5307  0190                     	;# 
  5308  0191                     	;# 
  5309  0192                     	;# 
  5310  0196                     	;# 
  5311  0197                     	;# 
  5312  0198                     	;# 
  5313  0199                     	;# 
  5314  019A                     	;# 
  5315  019B                     	;# 
  5316  019C                     	;# 
  5317  020C                     	;# 
  5318  020D                     	;# 
  5319  020E                     	;# 
  5320  020E                     	;# 
  5321  020F                     	;# 
  5322  020F                     	;# 
  5323  0210                     	;# 
  5324  0210                     	;# 
  5325  0211                     	;# 
  5326  0211                     	;# 
  5327  0212                     	;# 
  5328  0213                     	;# 
  5329  0214                     	;# 
  5330  0214                     	;# 
  5331  0215                     	;# 
  5332  0215                     	;# 
  5333  0216                     	;# 
  5334  0216                     	;# 
  5335  0217                     	;# 
  5336  0217                     	;# 
  5337  0218                     	;# 
  5338  0219                     	;# 
  5339  021A                     	;# 
  5340  021A                     	;# 
  5341  021B                     	;# 
  5342  021B                     	;# 
  5343  021C                     	;# 
  5344  021C                     	;# 
  5345  021D                     	;# 
  5346  021D                     	;# 
  5347  021E                     	;# 
  5348  021F                     	;# 
  5349  028C                     	;# 
  5350  028C                     	;# 
  5351  028D                     	;# 
  5352  028D                     	;# 
  5353  028E                     	;# 
  5354  028F                     	;# 
  5355  0290                     	;# 
  5356  0291                     	;# 
  5357  0292                     	;# 
  5358  0292                     	;# 
  5359  0293                     	;# 
  5360  0293                     	;# 
  5361  0294                     	;# 
  5362  0295                     	;# 
  5363  0296                     	;# 
  5364  0297                     	;# 
  5365  0298                     	;# 
  5366  0298                     	;# 
  5367  0299                     	;# 
  5368  0299                     	;# 
  5369  029A                     	;# 
  5370  029B                     	;# 
  5371  029C                     	;# 
  5372  029D                     	;# 
  5373  029F                     	;# 
  5374  030C                     	;# 
  5375  030C                     	;# 
  5376  030D                     	;# 
  5377  030E                     	;# 
  5378  030F                     	;# 
  5379  0310                     	;# 
  5380  0310                     	;# 
  5381  0311                     	;# 
  5382  0312                     	;# 
  5383  0313                     	;# 
  5384  0314                     	;# 
  5385  0314                     	;# 
  5386  0315                     	;# 
  5387  0316                     	;# 
  5388  0317                     	;# 
  5389  0318                     	;# 
  5390  0318                     	;# 
  5391  0319                     	;# 
  5392  031A                     	;# 
  5393  031B                     	;# 
  5394  038C                     	;# 
  5395  038C                     	;# 
  5396  038D                     	;# 
  5397  038E                     	;# 
  5398  0390                     	;# 
  5399  0390                     	;# 
  5400  0391                     	;# 
  5401  0392                     	;# 
  5402  048C                     	;# 
  5403  048C                     	;# 
  5404  048D                     	;# 
  5405  048E                     	;# 
  5406  048F                     	;# 
  5407  048F                     	;# 
  5408  0490                     	;# 
  5409  0491                     	;# 
  5410  0492                     	;# 
  5411  0492                     	;# 
  5412  0493                     	;# 
  5413  0494                     	;# 
  5414  0495                     	;# 
  5415  0495                     	;# 
  5416  0496                     	;# 
  5417  0497                     	;# 
  5418  0498                     	;# 
  5419  0499                     	;# 
  5420  049A                     	;# 
  5421  049B                     	;# 
  5422  049C                     	;# 
  5423  049D                     	;# 
  5424  058C                     	;# 
  5425  058C                     	;# 
  5426  058D                     	;# 
  5427  058E                     	;# 
  5428  058F                     	;# 
  5429  058F                     	;# 
  5430  0590                     	;# 
  5431  0591                     	;# 
  5432  0592                     	;# 
  5433  0593                     	;# 
  5434  059C                     	;# 
  5435  059C                     	;# 
  5436  059D                     	;# 
  5437  059D                     	;# 
  5438  059E                     	;# 
  5439  059F                     	;# 
  5440  060C                     	;# 
  5441  060C                     	;# 
  5442  060D                     	;# 
  5443  060D                     	;# 
  5444  060E                     	;# 
  5445  060F                     	;# 
  5446  0610                     	;# 
  5447  0611                     	;# 
  5448  0612                     	;# 
  5449  0613                     	;# 
  5450  0614                     	;# 
  5451  0616                     	;# 
  5452  0616                     	;# 
  5453  0617                     	;# 
  5454  0617                     	;# 
  5455  0618                     	;# 
  5456  0619                     	;# 
  5457  061A                     	;# 
  5458  061B                     	;# 
  5459  061C                     	;# 
  5460  061D                     	;# 
  5461  061E                     	;# 
  5462  070C                     	;# 
  5463  070D                     	;# 
  5464  070E                     	;# 
  5465  070F                     	;# 
  5466  0710                     	;# 
  5467  0711                     	;# 
  5468  0712                     	;# 
  5469  0713                     	;# 
  5470  0714                     	;# 
  5471  0716                     	;# 
  5472  0717                     	;# 
  5473  0718                     	;# 
  5474  0719                     	;# 
  5475  071A                     	;# 
  5476  071B                     	;# 
  5477  071C                     	;# 
  5478  071D                     	;# 
  5479  071E                     	;# 
  5480  0796                     	;# 
  5481  0797                     	;# 
  5482  0798                     	;# 
  5483  0799                     	;# 
  5484  079A                     	;# 
  5485  079B                     	;# 
  5486  079C                     	;# 
  5487  079D                     	;# 
  5488  080C                     	;# 
  5489  080D                     	;# 
  5490  080E                     	;# 
  5491  080F                     	;# 
  5492  0810                     	;# 
  5493  0811                     	;# 
  5494  0813                     	;# 
  5495  0814                     	;# 
  5496  081A                     	;# 
  5497  081A                     	;# 
  5498  081B                     	;# 
  5499  081C                     	;# 
  5500  081C                     	;# 
  5501  081D                     	;# 
  5502  081E                     	;# 
  5503  081F                     	;# 
  5504  088C                     	;# 
  5505  088D                     	;# 
  5506  088E                     	;# 
  5507  088F                     	;# 
  5508  0890                     	;# 
  5509  0891                     	;# 
  5510  0892                     	;# 
  5511  0893                     	;# 
  5512  0895                     	;# 
  5513  0896                     	;# 
  5514  0897                     	;# 
  5515  0898                     	;# 
  5516  0899                     	;# 
  5517  089A                     	;# 
  5518  089B                     	;# 
  5519  090C                     	;# 
  5520  090E                     	;# 
  5521  090F                     	;# 
  5522  091F                     	;# 
  5523  098F                     	;# 
  5524  098F                     	;# 
  5525  0990                     	;# 
  5526  0991                     	;# 
  5527  0992                     	;# 
  5528  0993                     	;# 
  5529  0994                     	;# 
  5530  0995                     	;# 
  5531  0996                     	;# 
  5532  0997                     	;# 
  5533  1E0F                     	;# 
  5534  1E10                     	;# 
  5535  1E11                     	;# 
  5536  1E12                     	;# 
  5537  1E13                     	;# 
  5538  1E14                     	;# 
  5539  1E15                     	;# 
  5540  1E16                     	;# 
  5541  1E17                     	;# 
  5542  1E18                     	;# 
  5543  1E19                     	;# 
  5544  1E1A                     	;# 
  5545  1E1B                     	;# 
  5546  1E1C                     	;# 
  5547  1E1D                     	;# 
  5548  1E1E                     	;# 
  5549  1E1F                     	;# 
  5550  1E20                     	;# 
  5551  1E21                     	;# 
  5552  1E22                     	;# 
  5553  1E23                     	;# 
  5554  1E24                     	;# 
  5555  1E25                     	;# 
  5556  1E26                     	;# 
  5557  1E27                     	;# 
  5558  1E28                     	;# 
  5559  1E29                     	;# 
  5560  1E2A                     	;# 
  5561  1E2B                     	;# 
  5562  1E2C                     	;# 
  5563  1E2D                     	;# 
  5564  1E2E                     	;# 
  5565  1E2F                     	;# 
  5566  1E30                     	;# 
  5567  1E31                     	;# 
  5568  1E32                     	;# 
  5569  1E33                     	;# 
  5570  1E34                     	;# 
  5571  1E35                     	;# 
  5572  1E36                     	;# 
  5573  1E37                     	;# 
  5574  1E8F                     	;# 
  5575  1E90                     	;# 
  5576  1E91                     	;# 
  5577  1E92                     	;# 
  5578  1E93                     	;# 
  5579  1E94                     	;# 
  5580  1E95                     	;# 
  5581  1E96                     	;# 
  5582  1E97                     	;# 
  5583  1E9C                     	;# 
  5584  1E9D                     	;# 
  5585  1E9E                     	;# 
  5586  1EA1                     	;# 
  5587  1EA2                     	;# 
  5588  1EA3                     	;# 
  5589  1EA4                     	;# 
  5590  1EA9                     	;# 
  5591  1EAA                     	;# 
  5592  1EB1                     	;# 
  5593  1EB2                     	;# 
  5594  1EB8                     	;# 
  5595  1EB9                     	;# 
  5596  1EBA                     	;# 
  5597  1EBB                     	;# 
  5598  1EBC                     	;# 
  5599  1EBD                     	;# 
  5600  1EBE                     	;# 
  5601  1EC3                     	;# 
  5602  1EC5                     	;# 
  5603  1EC6                     	;# 
  5604  1EC7                     	;# 
  5605  1EC8                     	;# 
  5606  1EC9                     	;# 
  5607  1ECA                     	;# 
  5608  1ECB                     	;# 
  5609  1ECB                     	;# 
  5610  1ECB                     	;# 
  5611  1ECC                     	;# 
  5612  1ECC                     	;# 
  5613  1ECC                     	;# 
  5614  1F10                     	;# 
  5615  1F11                     	;# 
  5616  1F12                     	;# 
  5617  1F14                     	;# 
  5618  1F15                     	;# 
  5619  1F1C                     	;# 
  5620  1F1D                     	;# 
  5621  1F1E                     	;# 
  5622  1F1F                     	;# 
  5623  1F20                     	;# 
  5624  1F21                     	;# 
  5625  1F22                     	;# 
  5626  1F23                     	;# 
  5627  1F24                     	;# 
  5628  1F25                     	;# 
  5629  1F26                     	;# 
  5630  1F27                     	;# 
  5631  1F38                     	;# 
  5632  1F39                     	;# 
  5633  1F3A                     	;# 
  5634  1F3B                     	;# 
  5635  1F3C                     	;# 
  5636  1F3D                     	;# 
  5637  1F3E                     	;# 
  5638  1F3F                     	;# 
  5639  1F43                     	;# 
  5640  1F44                     	;# 
  5641  1F45                     	;# 
  5642  1F46                     	;# 
  5643  1F47                     	;# 
  5644  1F48                     	;# 
  5645  1F49                     	;# 
  5646  1F4A                     	;# 
  5647  1F4E                     	;# 
  5648  1F4F                     	;# 
  5649  1F50                     	;# 
  5650  1F51                     	;# 
  5651  1F52                     	;# 
  5652  1F53                     	;# 
  5653  1F54                     	;# 
  5654  1F55                     	;# 
  5655  1FE4                     	;# 
  5656  1FE5                     	;# 
  5657  1FE6                     	;# 
  5658  1FE7                     	;# 
  5659  1FE8                     	;# 
  5660  1FE8                     	;# 
  5661  1FE9                     	;# 
  5662  1FEA                     	;# 
  5663  1FEB                     	;# 
  5664  1FED                     	;# 
  5665  1FEE                     	;# 
  5666  1FEF                     	;# 
  5667  0000                     	;# 
  5668  0001                     	;# 
  5669  0002                     	;# 
  5670  0003                     	;# 
  5671  0004                     	;# 
  5672  0005                     	;# 
  5673  0006                     	;# 
  5674  0007                     	;# 
  5675  0008                     	;# 
  5676  0009                     	;# 
  5677  000A                     	;# 
  5678  000B                     	;# 
  5679  000C                     	;# 
  5680  000D                     	;# 
  5681  000E                     	;# 
  5682  0012                     	;# 
  5683  0013                     	;# 
  5684  0014                     	;# 
  5685  0018                     	;# 
  5686  0019                     	;# 
  5687  001A                     	;# 
  5688  008C                     	;# 
  5689  008C                     	;# 
  5690  008D                     	;# 
  5691  008E                     	;# 
  5692  008E                     	;# 
  5693  008F                     	;# 
  5694  0090                     	;# 
  5695  0090                     	;# 
  5696  0091                     	;# 
  5697  0092                     	;# 
  5698  0092                     	;# 
  5699  0093                     	;# 
  5700  0094                     	;# 
  5701  0094                     	;# 
  5702  0095                     	;# 
  5703  0096                     	;# 
  5704  0096                     	;# 
  5705  0097                     	;# 
  5706  0098                     	;# 
  5707  0099                     	;# 
  5708  009A                     	;# 
  5709  009B                     	;# 
  5710  009B                     	;# 
  5711  009C                     	;# 
  5712  009D                     	;# 
  5713  009D                     	;# 
  5714  009E                     	;# 
  5715  009F                     	;# 
  5716  010C                     	;# 
  5717  010C                     	;# 
  5718  010D                     	;# 
  5719  010E                     	;# 
  5720  010F                     	;# 
  5721  010F                     	;# 
  5722  0110                     	;# 
  5723  0111                     	;# 
  5724  0112                     	;# 
  5725  0113                     	;# 
  5726  0114                     	;# 
  5727  0115                     	;# 
  5728  0116                     	;# 
  5729  0117                     	;# 
  5730  0118                     	;# 
  5731  0119                     	;# 
  5732  0119                     	;# 
  5733  0119                     	;# 
  5734  011A                     	;# 
  5735  011A                     	;# 
  5736  011A                     	;# 
  5737  011B                     	;# 
  5738  011B                     	;# 
  5739  011B                     	;# 
  5740  011B                     	;# 
  5741  011B                     	;# 
  5742  011C                     	;# 
  5743  011C                     	;# 
  5744  011C                     	;# 
  5745  011D                     	;# 
  5746  011D                     	;# 
  5747  011D                     	;# 
  5748  011E                     	;# 
  5749  011E                     	;# 
  5750  011E                     	;# 
  5751  011F                     	;# 
  5752  011F                     	;# 
  5753  011F                     	;# 
  5754  011F                     	;# 
  5755  011F                     	;# 
  5756  018C                     	;# 
  5757  018D                     	;# 
  5758  018E                     	;# 
  5759  018F                     	;# 
  5760  0190                     	;# 
  5761  0191                     	;# 
  5762  0192                     	;# 
  5763  0196                     	;# 
  5764  0197                     	;# 
  5765  0198                     	;# 
  5766  0199                     	;# 
  5767  019A                     	;# 
  5768  019B                     	;# 
  5769  019C                     	;# 
  5770  020C                     	;# 
  5771  020D                     	;# 
  5772  020E                     	;# 
  5773  020E                     	;# 
  5774  020F                     	;# 
  5775  020F                     	;# 
  5776  0210                     	;# 
  5777  0210                     	;# 
  5778  0211                     	;# 
  5779  0211                     	;# 
  5780  0212                     	;# 
  5781  0213                     	;# 
  5782  0214                     	;# 
  5783  0214                     	;# 
  5784  0215                     	;# 
  5785  0215                     	;# 
  5786  0216                     	;# 
  5787  0216                     	;# 
  5788  0217                     	;# 
  5789  0217                     	;# 
  5790  0218                     	;# 
  5791  0219                     	;# 
  5792  021A                     	;# 
  5793  021A                     	;# 
  5794  021B                     	;# 
  5795  021B                     	;# 
  5796  021C                     	;# 
  5797  021C                     	;# 
  5798  021D                     	;# 
  5799  021D                     	;# 
  5800  021E                     	;# 
  5801  021F                     	;# 
  5802  028C                     	;# 
  5803  028C                     	;# 
  5804  028D                     	;# 
  5805  028D                     	;# 
  5806  028E                     	;# 
  5807  028F                     	;# 
  5808  0290                     	;# 
  5809  0291                     	;# 
  5810  0292                     	;# 
  5811  0292                     	;# 
  5812  0293                     	;# 
  5813  0293                     	;# 
  5814  0294                     	;# 
  5815  0295                     	;# 
  5816  0296                     	;# 
  5817  0297                     	;# 
  5818  0298                     	;# 
  5819  0298                     	;# 
  5820  0299                     	;# 
  5821  0299                     	;# 
  5822  029A                     	;# 
  5823  029B                     	;# 
  5824  029C                     	;# 
  5825  029D                     	;# 
  5826  029F                     	;# 
  5827  030C                     	;# 
  5828  030C                     	;# 
  5829  030D                     	;# 
  5830  030E                     	;# 
  5831  030F                     	;# 
  5832  0310                     	;# 
  5833  0310                     	;# 
  5834  0311                     	;# 
  5835  0312                     	;# 
  5836  0313                     	;# 
  5837  0314                     	;# 
  5838  0314                     	;# 
  5839  0315                     	;# 
  5840  0316                     	;# 
  5841  0317                     	;# 
  5842  0318                     	;# 
  5843  0318                     	;# 
  5844  0319                     	;# 
  5845  031A                     	;# 
  5846  031B                     	;# 
  5847  038C                     	;# 
  5848  038C                     	;# 
  5849  038D                     	;# 
  5850  038E                     	;# 
  5851  0390                     	;# 
  5852  0390                     	;# 
  5853  0391                     	;# 
  5854  0392                     	;# 
  5855  048C                     	;# 
  5856  048C                     	;# 
  5857  048D                     	;# 
  5858  048E                     	;# 
  5859  048F                     	;# 
  5860  048F                     	;# 
  5861  0490                     	;# 
  5862  0491                     	;# 
  5863  0492                     	;# 
  5864  0492                     	;# 
  5865  0493                     	;# 
  5866  0494                     	;# 
  5867  0495                     	;# 
  5868  0495                     	;# 
  5869  0496                     	;# 
  5870  0497                     	;# 
  5871  0498                     	;# 
  5872  0499                     	;# 
  5873  049A                     	;# 
  5874  049B                     	;# 
  5875  049C                     	;# 
  5876  049D                     	;# 
  5877  058C                     	;# 
  5878  058C                     	;# 
  5879  058D                     	;# 
  5880  058E                     	;# 
  5881  058F                     	;# 
  5882  058F                     	;# 
  5883  0590                     	;# 
  5884  0591                     	;# 
  5885  0592                     	;# 
  5886  0593                     	;# 
  5887  059C                     	;# 
  5888  059C                     	;# 
  5889  059D                     	;# 
  5890  059D                     	;# 
  5891  059E                     	;# 
  5892  059F                     	;# 
  5893  060C                     	;# 
  5894  060C                     	;# 
  5895  060D                     	;# 
  5896  060D                     	;# 
  5897  060E                     	;# 
  5898  060F                     	;# 
  5899  0610                     	;# 
  5900  0611                     	;# 
  5901  0612                     	;# 
  5902  0613                     	;# 
  5903  0614                     	;# 
  5904  0616                     	;# 
  5905  0616                     	;# 
  5906  0617                     	;# 
  5907  0617                     	;# 
  5908  0618                     	;# 
  5909  0619                     	;# 
  5910  061A                     	;# 
  5911  061B                     	;# 
  5912  061C                     	;# 
  5913  061D                     	;# 
  5914  061E                     	;# 
  5915  070C                     	;# 
  5916  070D                     	;# 
  5917  070E                     	;# 
  5918  070F                     	;# 
  5919  0710                     	;# 
  5920  0711                     	;# 
  5921  0712                     	;# 
  5922  0713                     	;# 
  5923  0714                     	;# 
  5924  0716                     	;# 
  5925  0717                     	;# 
  5926  0718                     	;# 
  5927  0719                     	;# 
  5928  071A                     	;# 
  5929  071B                     	;# 
  5930  071C                     	;# 
  5931  071D                     	;# 
  5932  071E                     	;# 
  5933  0796                     	;# 
  5934  0797                     	;# 
  5935  0798                     	;# 
  5936  0799                     	;# 
  5937  079A                     	;# 
  5938  079B                     	;# 
  5939  079C                     	;# 
  5940  079D                     	;# 
  5941  080C                     	;# 
  5942  080D                     	;# 
  5943  080E                     	;# 
  5944  080F                     	;# 
  5945  0810                     	;# 
  5946  0811                     	;# 
  5947  0813                     	;# 
  5948  0814                     	;# 
  5949  081A                     	;# 
  5950  081A                     	;# 
  5951  081B                     	;# 
  5952  081C                     	;# 
  5953  081C                     	;# 
  5954  081D                     	;# 
  5955  081E                     	;# 
  5956  081F                     	;# 
  5957  088C                     	;# 
  5958  088D                     	;# 
  5959  088E                     	;# 
  5960  088F                     	;# 
  5961  0890                     	;# 
  5962  0891                     	;# 
  5963  0892                     	;# 
  5964  0893                     	;# 
  5965  0895                     	;# 
  5966  0896                     	;# 
  5967  0897                     	;# 
  5968  0898                     	;# 
  5969  0899                     	;# 
  5970  089A                     	;# 
  5971  089B                     	;# 
  5972  090C                     	;# 
  5973  090E                     	;# 
  5974  090F                     	;# 
  5975  091F                     	;# 
  5976  098F                     	;# 
  5977  098F                     	;# 
  5978  0990                     	;# 
  5979  0991                     	;# 
  5980  0992                     	;# 
  5981  0993                     	;# 
  5982  0994                     	;# 
  5983  0995                     	;# 
  5984  0996                     	;# 
  5985  0997                     	;# 
  5986  1E0F                     	;# 
  5987  1E10                     	;# 
  5988  1E11                     	;# 
  5989  1E12                     	;# 
  5990  1E13                     	;# 
  5991  1E14                     	;# 
  5992  1E15                     	;# 
  5993  1E16                     	;# 
  5994  1E17                     	;# 
  5995  1E18                     	;# 
  5996  1E19                     	;# 
  5997  1E1A                     	;# 
  5998  1E1B                     	;# 
  5999  1E1C                     	;# 
  6000  1E1D                     	;# 
  6001  1E1E                     	;# 
  6002  1E1F                     	;# 
  6003  1E20                     	;# 
  6004  1E21                     	;# 
  6005  1E22                     	;# 
  6006  1E23                     	;# 
  6007  1E24                     	;# 
  6008  1E25                     	;# 
  6009  1E26                     	;# 
  6010  1E27                     	;# 
  6011  1E28                     	;# 
  6012  1E29                     	;# 
  6013  1E2A                     	;# 
  6014  1E2B                     	;# 
  6015  1E2C                     	;# 
  6016  1E2D                     	;# 
  6017  1E2E                     	;# 
  6018  1E2F                     	;# 
  6019  1E30                     	;# 
  6020  1E31                     	;# 
  6021  1E32                     	;# 
  6022  1E33                     	;# 
  6023  1E34                     	;# 
  6024  1E35                     	;# 
  6025  1E36                     	;# 
  6026  1E37                     	;# 
  6027  1E8F                     	;# 
  6028  1E90                     	;# 
  6029  1E91                     	;# 
  6030  1E92                     	;# 
  6031  1E93                     	;# 
  6032  1E94                     	;# 
  6033  1E95                     	;# 
  6034  1E96                     	;# 
  6035  1E97                     	;# 
  6036  1E9C                     	;# 
  6037  1E9D                     	;# 
  6038  1E9E                     	;# 
  6039  1EA1                     	;# 
  6040  1EA2                     	;# 
  6041  1EA3                     	;# 
  6042  1EA4                     	;# 
  6043  1EA9                     	;# 
  6044  1EAA                     	;# 
  6045  1EB1                     	;# 
  6046  1EB2                     	;# 
  6047  1EB8                     	;# 
  6048  1EB9                     	;# 
  6049  1EBA                     	;# 
  6050  1EBB                     	;# 
  6051  1EBC                     	;# 
  6052  1EBD                     	;# 
  6053  1EBE                     	;# 
  6054  1EC3                     	;# 
  6055  1EC5                     	;# 
  6056  1EC6                     	;# 
  6057  1EC7                     	;# 
  6058  1EC8                     	;# 
  6059  1EC9                     	;# 
  6060  1ECA                     	;# 
  6061  1ECB                     	;# 
  6062  1ECB                     	;# 
  6063  1ECB                     	;# 
  6064  1ECC                     	;# 
  6065  1ECC                     	;# 
  6066  1ECC                     	;# 
  6067  1F10                     	;# 
  6068  1F11                     	;# 
  6069  1F12                     	;# 
  6070  1F14                     	;# 
  6071  1F15                     	;# 
  6072  1F1C                     	;# 
  6073  1F1D                     	;# 
  6074  1F1E                     	;# 
  6075  1F1F                     	;# 
  6076  1F20                     	;# 
  6077  1F21                     	;# 
  6078  1F22                     	;# 
  6079  1F23                     	;# 
  6080  1F24                     	;# 
  6081  1F25                     	;# 
  6082  1F26                     	;# 
  6083  1F27                     	;# 
  6084  1F38                     	;# 
  6085  1F39                     	;# 
  6086  1F3A                     	;# 
  6087  1F3B                     	;# 
  6088  1F3C                     	;# 
  6089  1F3D                     	;# 
  6090  1F3E                     	;# 
  6091  1F3F                     	;# 
  6092  1F43                     	;# 
  6093  1F44                     	;# 
  6094  1F45                     	;# 
  6095  1F46                     	;# 
  6096  1F47                     	;# 
  6097  1F48                     	;# 
  6098  1F49                     	;# 
  6099  1F4A                     	;# 
  6100  1F4E                     	;# 
  6101  1F4F                     	;# 
  6102  1F50                     	;# 
  6103  1F51                     	;# 
  6104  1F52                     	;# 
  6105  1F53                     	;# 
  6106  1F54                     	;# 
  6107  1F55                     	;# 
  6108  1FE4                     	;# 
  6109  1FE5                     	;# 
  6110  1FE6                     	;# 
  6111  1FE7                     	;# 
  6112  1FE8                     	;# 
  6113  1FE8                     	;# 
  6114  1FE9                     	;# 
  6115  1FEA                     	;# 
  6116  1FEB                     	;# 
  6117  1FED                     	;# 
  6118  1FEE                     	;# 
  6119  1FEF                     	;# 
  6120  0000                     	;# 
  6121  0001                     	;# 
  6122  0002                     	;# 
  6123  0003                     	;# 
  6124  0004                     	;# 
  6125  0005                     	;# 
  6126  0006                     	;# 
  6127  0007                     	;# 
  6128  0008                     	;# 
  6129  0009                     	;# 
  6130  000A                     	;# 
  6131  000B                     	;# 
  6132  000C                     	;# 
  6133  000D                     	;# 
  6134  000E                     	;# 
  6135  0012                     	;# 
  6136  0013                     	;# 
  6137  0014                     	;# 
  6138  0018                     	;# 
  6139  0019                     	;# 
  6140  001A                     	;# 
  6141  008C                     	;# 
  6142  008C                     	;# 
  6143  008D                     	;# 
  6144  008E                     	;# 
  6145  008E                     	;# 
  6146  008F                     	;# 
  6147  0090                     	;# 
  6148  0090                     	;# 
  6149  0091                     	;# 
  6150  0092                     	;# 
  6151  0092                     	;# 
  6152  0093                     	;# 
  6153  0094                     	;# 
  6154  0094                     	;# 
  6155  0095                     	;# 
  6156  0096                     	;# 
  6157  0096                     	;# 
  6158  0097                     	;# 
  6159  0098                     	;# 
  6160  0099                     	;# 
  6161  009A                     	;# 
  6162  009B                     	;# 
  6163  009B                     	;# 
  6164  009C                     	;# 
  6165  009D                     	;# 
  6166  009D                     	;# 
  6167  009E                     	;# 
  6168  009F                     	;# 
  6169  010C                     	;# 
  6170  010C                     	;# 
  6171  010D                     	;# 
  6172  010E                     	;# 
  6173  010F                     	;# 
  6174  010F                     	;# 
  6175  0110                     	;# 
  6176  0111                     	;# 
  6177  0112                     	;# 
  6178  0113                     	;# 
  6179  0114                     	;# 
  6180  0115                     	;# 
  6181  0116                     	;# 
  6182  0117                     	;# 
  6183  0118                     	;# 
  6184  0119                     	;# 
  6185  0119                     	;# 
  6186  0119                     	;# 
  6187  011A                     	;# 
  6188  011A                     	;# 
  6189  011A                     	;# 
  6190  011B                     	;# 
  6191  011B                     	;# 
  6192  011B                     	;# 
  6193  011B                     	;# 
  6194  011B                     	;# 
  6195  011C                     	;# 
  6196  011C                     	;# 
  6197  011C                     	;# 
  6198  011D                     	;# 
  6199  011D                     	;# 
  6200  011D                     	;# 
  6201  011E                     	;# 
  6202  011E                     	;# 
  6203  011E                     	;# 
  6204  011F                     	;# 
  6205  011F                     	;# 
  6206  011F                     	;# 
  6207  011F                     	;# 
  6208  011F                     	;# 
  6209  018C                     	;# 
  6210  018D                     	;# 
  6211  018E                     	;# 
  6212  018F                     	;# 
  6213  0190                     	;# 
  6214  0191                     	;# 
  6215  0192                     	;# 
  6216  0196                     	;# 
  6217  0197                     	;# 
  6218  0198                     	;# 
  6219  0199                     	;# 
  6220  019A                     	;# 
  6221  019B                     	;# 
  6222  019C                     	;# 
  6223  020C                     	;# 
  6224  020D                     	;# 
  6225  020E                     	;# 
  6226  020E                     	;# 
  6227  020F                     	;# 
  6228  020F                     	;# 
  6229  0210                     	;# 
  6230  0210                     	;# 
  6231  0211                     	;# 
  6232  0211                     	;# 
  6233  0212                     	;# 
  6234  0213                     	;# 
  6235  0214                     	;# 
  6236  0214                     	;# 
  6237  0215                     	;# 
  6238  0215                     	;# 
  6239  0216                     	;# 
  6240  0216                     	;# 
  6241  0217                     	;# 
  6242  0217                     	;# 
  6243  0218                     	;# 
  6244  0219                     	;# 
  6245  021A                     	;# 
  6246  021A                     	;# 
  6247  021B                     	;# 
  6248  021B                     	;# 
  6249  021C                     	;# 
  6250  021C                     	;# 
  6251  021D                     	;# 
  6252  021D                     	;# 
  6253  021E                     	;# 
  6254  021F                     	;# 
  6255  028C                     	;# 
  6256  028C                     	;# 
  6257  028D                     	;# 
  6258  028D                     	;# 
  6259  028E                     	;# 
  6260  028F                     	;# 
  6261  0290                     	;# 
  6262  0291                     	;# 
  6263  0292                     	;# 
  6264  0292                     	;# 
  6265  0293                     	;# 
  6266  0293                     	;# 
  6267  0294                     	;# 
  6268  0295                     	;# 
  6269  0296                     	;# 
  6270  0297                     	;# 
  6271  0298                     	;# 
  6272  0298                     	;# 
  6273  0299                     	;# 
  6274  0299                     	;# 
  6275  029A                     	;# 
  6276  029B                     	;# 
  6277  029C                     	;# 
  6278  029D                     	;# 
  6279  029F                     	;# 
  6280  030C                     	;# 
  6281  030C                     	;# 
  6282  030D                     	;# 
  6283  030E                     	;# 
  6284  030F                     	;# 
  6285  0310                     	;# 
  6286  0310                     	;# 
  6287  0311                     	;# 
  6288  0312                     	;# 
  6289  0313                     	;# 
  6290  0314                     	;# 
  6291  0314                     	;# 
  6292  0315                     	;# 
  6293  0316                     	;# 
  6294  0317                     	;# 
  6295  0318                     	;# 
  6296  0318                     	;# 
  6297  0319                     	;# 
  6298  031A                     	;# 
  6299  031B                     	;# 
  6300  038C                     	;# 
  6301  038C                     	;# 
  6302  038D                     	;# 
  6303  038E                     	;# 
  6304  0390                     	;# 
  6305  0390                     	;# 
  6306  0391                     	;# 
  6307  0392                     	;# 
  6308  048C                     	;# 
  6309  048C                     	;# 
  6310  048D                     	;# 
  6311  048E                     	;# 
  6312  048F                     	;# 
  6313  048F                     	;# 
  6314  0490                     	;# 
  6315  0491                     	;# 
  6316  0492                     	;# 
  6317  0492                     	;# 
  6318  0493                     	;# 
  6319  0494                     	;# 
  6320  0495                     	;# 
  6321  0495                     	;# 
  6322  0496                     	;# 
  6323  0497                     	;# 
  6324  0498                     	;# 
  6325  0499                     	;# 
  6326  049A                     	;# 
  6327  049B                     	;# 
  6328  049C                     	;# 
  6329  049D                     	;# 
  6330  058C                     	;# 
  6331  058C                     	;# 
  6332  058D                     	;# 
  6333  058E                     	;# 
  6334  058F                     	;# 
  6335  058F                     	;# 
  6336  0590                     	;# 
  6337  0591                     	;# 
  6338  0592                     	;# 
  6339  0593                     	;# 
  6340  059C                     	;# 
  6341  059C                     	;# 
  6342  059D                     	;# 
  6343  059D                     	;# 
  6344  059E                     	;# 
  6345  059F                     	;# 
  6346  060C                     	;# 
  6347  060C                     	;# 
  6348  060D                     	;# 
  6349  060D                     	;# 
  6350  060E                     	;# 
  6351  060F                     	;# 
  6352  0610                     	;# 
  6353  0611                     	;# 
  6354  0612                     	;# 
  6355  0613                     	;# 
  6356  0614                     	;# 
  6357  0616                     	;# 
  6358  0616                     	;# 
  6359  0617                     	;# 
  6360  0617                     	;# 
  6361  0618                     	;# 
  6362  0619                     	;# 
  6363  061A                     	;# 
  6364  061B                     	;# 
  6365  061C                     	;# 
  6366  061D                     	;# 
  6367  061E                     	;# 
  6368  070C                     	;# 
  6369  070D                     	;# 
  6370  070E                     	;# 
  6371  070F                     	;# 
  6372  0710                     	;# 
  6373  0711                     	;# 
  6374  0712                     	;# 
  6375  0713                     	;# 
  6376  0714                     	;# 
  6377  0716                     	;# 
  6378  0717                     	;# 
  6379  0718                     	;# 
  6380  0719                     	;# 
  6381  071A                     	;# 
  6382  071B                     	;# 
  6383  071C                     	;# 
  6384  071D                     	;# 
  6385  071E                     	;# 
  6386  0796                     	;# 
  6387  0797                     	;# 
  6388  0798                     	;# 
  6389  0799                     	;# 
  6390  079A                     	;# 
  6391  079B                     	;# 
  6392  079C                     	;# 
  6393  079D                     	;# 
  6394  080C                     	;# 
  6395  080D                     	;# 
  6396  080E                     	;# 
  6397  080F                     	;# 
  6398  0810                     	;# 
  6399  0811                     	;# 
  6400  0813                     	;# 
  6401  0814                     	;# 
  6402  081A                     	;# 
  6403  081A                     	;# 
  6404  081B                     	;# 
  6405  081C                     	;# 
  6406  081C                     	;# 
  6407  081D                     	;# 
  6408  081E                     	;# 
  6409  081F                     	;# 
  6410  088C                     	;# 
  6411  088D                     	;# 
  6412  088E                     	;# 
  6413  088F                     	;# 
  6414  0890                     	;# 
  6415  0891                     	;# 
  6416  0892                     	;# 
  6417  0893                     	;# 
  6418  0895                     	;# 
  6419  0896                     	;# 
  6420  0897                     	;# 
  6421  0898                     	;# 
  6422  0899                     	;# 
  6423  089A                     	;# 
  6424  089B                     	;# 
  6425  090C                     	;# 
  6426  090E                     	;# 
  6427  090F                     	;# 
  6428  091F                     	;# 
  6429  098F                     	;# 
  6430  098F                     	;# 
  6431  0990                     	;# 
  6432  0991                     	;# 
  6433  0992                     	;# 
  6434  0993                     	;# 
  6435  0994                     	;# 
  6436  0995                     	;# 
  6437  0996                     	;# 
  6438  0997                     	;# 
  6439  1E0F                     	;# 
  6440  1E10                     	;# 
  6441  1E11                     	;# 
  6442  1E12                     	;# 
  6443  1E13                     	;# 
  6444  1E14                     	;# 
  6445  1E15                     	;# 
  6446  1E16                     	;# 
  6447  1E17                     	;# 
  6448  1E18                     	;# 
  6449  1E19                     	;# 
  6450  1E1A                     	;# 
  6451  1E1B                     	;# 
  6452  1E1C                     	;# 
  6453  1E1D                     	;# 
  6454  1E1E                     	;# 
  6455  1E1F                     	;# 
  6456  1E20                     	;# 
  6457  1E21                     	;# 
  6458  1E22                     	;# 
  6459  1E23                     	;# 
  6460  1E24                     	;# 
  6461  1E25                     	;# 
  6462  1E26                     	;# 
  6463  1E27                     	;# 
  6464  1E28                     	;# 
  6465  1E29                     	;# 
  6466  1E2A                     	;# 
  6467  1E2B                     	;# 
  6468  1E2C                     	;# 
  6469  1E2D                     	;# 
  6470  1E2E                     	;# 
  6471  1E2F                     	;# 
  6472  1E30                     	;# 
  6473  1E31                     	;# 
  6474  1E32                     	;# 
  6475  1E33                     	;# 
  6476  1E34                     	;# 
  6477  1E35                     	;# 
  6478  1E36                     	;# 
  6479  1E37                     	;# 
  6480  1E8F                     	;# 
  6481  1E90                     	;# 
  6482  1E91                     	;# 
  6483  1E92                     	;# 
  6484  1E93                     	;# 
  6485  1E94                     	;# 
  6486  1E95                     	;# 
  6487  1E96                     	;# 
  6488  1E97                     	;# 
  6489  1E9C                     	;# 
  6490  1E9D                     	;# 
  6491  1E9E                     	;# 
  6492  1EA1                     	;# 
  6493  1EA2                     	;# 
  6494  1EA3                     	;# 
  6495  1EA4                     	;# 
  6496  1EA9                     	;# 
  6497  1EAA                     	;# 
  6498  1EB1                     	;# 
  6499  1EB2                     	;# 
  6500  1EB8                     	;# 
  6501  1EB9                     	;# 
  6502  1EBA                     	;# 
  6503  1EBB                     	;# 
  6504  1EBC                     	;# 
  6505  1EBD                     	;# 
  6506  1EBE                     	;# 
  6507  1EC3                     	;# 
  6508  1EC5                     	;# 
  6509  1EC6                     	;# 
  6510  1EC7                     	;# 
  6511  1EC8                     	;# 
  6512  1EC9                     	;# 
  6513  1ECA                     	;# 
  6514  1ECB                     	;# 
  6515  1ECB                     	;# 
  6516  1ECB                     	;# 
  6517  1ECC                     	;# 
  6518  1ECC                     	;# 
  6519  1ECC                     	;# 
  6520  1F10                     	;# 
  6521  1F11                     	;# 
  6522  1F12                     	;# 
  6523  1F14                     	;# 
  6524  1F15                     	;# 
  6525  1F1C                     	;# 
  6526  1F1D                     	;# 
  6527  1F1E                     	;# 
  6528  1F1F                     	;# 
  6529  1F20                     	;# 
  6530  1F21                     	;# 
  6531  1F22                     	;# 
  6532  1F23                     	;# 
  6533  1F24                     	;# 
  6534  1F25                     	;# 
  6535  1F26                     	;# 
  6536  1F27                     	;# 
  6537  1F38                     	;# 
  6538  1F39                     	;# 
  6539  1F3A                     	;# 
  6540  1F3B                     	;# 
  6541  1F3C                     	;# 
  6542  1F3D                     	;# 
  6543  1F3E                     	;# 
  6544  1F3F                     	;# 
  6545  1F43                     	;# 
  6546  1F44                     	;# 
  6547  1F45                     	;# 
  6548  1F46                     	;# 
  6549  1F47                     	;# 
  6550  1F48                     	;# 
  6551  1F49                     	;# 
  6552  1F4A                     	;# 
  6553  1F4E                     	;# 
  6554  1F4F                     	;# 
  6555  1F50                     	;# 
  6556  1F51                     	;# 
  6557  1F52                     	;# 
  6558  1F53                     	;# 
  6559  1F54                     	;# 
  6560  1F55                     	;# 
  6561  1FE4                     	;# 
  6562  1FE5                     	;# 
  6563  1FE6                     	;# 
  6564  1FE7                     	;# 
  6565  1FE8                     	;# 
  6566  1FE8                     	;# 
  6567  1FE9                     	;# 
  6568  1FEA                     	;# 
  6569  1FEB                     	;# 
  6570  1FED                     	;# 
  6571  1FEE                     	;# 
  6572  1FEF                     	;# 
  6573  0000                     	;# 
  6574  0001                     	;# 
  6575  0002                     	;# 
  6576  0003                     	;# 
  6577  0004                     	;# 
  6578  0005                     	;# 
  6579  0006                     	;# 
  6580  0007                     	;# 
  6581  0008                     	;# 
  6582  0009                     	;# 
  6583  000A                     	;# 
  6584  000B                     	;# 
  6585  000C                     	;# 
  6586  000D                     	;# 
  6587  000E                     	;# 
  6588  0012                     	;# 
  6589  0013                     	;# 
  6590  0014                     	;# 
  6591  0018                     	;# 
  6592  0019                     	;# 
  6593  001A                     	;# 
  6594  008C                     	;# 
  6595  008C                     	;# 
  6596  008D                     	;# 
  6597  008E                     	;# 
  6598  008E                     	;# 
  6599  008F                     	;# 
  6600  0090                     	;# 
  6601  0090                     	;# 
  6602  0091                     	;# 
  6603  0092                     	;# 
  6604  0092                     	;# 
  6605  0093                     	;# 
  6606  0094                     	;# 
  6607  0094                     	;# 
  6608  0095                     	;# 
  6609  0096                     	;# 
  6610  0096                     	;# 
  6611  0097                     	;# 
  6612  0098                     	;# 
  6613  0099                     	;# 
  6614  009A                     	;# 
  6615  009B                     	;# 
  6616  009B                     	;# 
  6617  009C                     	;# 
  6618  009D                     	;# 
  6619  009D                     	;# 
  6620  009E                     	;# 
  6621  009F                     	;# 
  6622  010C                     	;# 
  6623  010C                     	;# 
  6624  010D                     	;# 
  6625  010E                     	;# 
  6626  010F                     	;# 
  6627  010F                     	;# 
  6628  0110                     	;# 
  6629  0111                     	;# 
  6630  0112                     	;# 
  6631  0113                     	;# 
  6632  0114                     	;# 
  6633  0115                     	;# 
  6634  0116                     	;# 
  6635  0117                     	;# 
  6636  0118                     	;# 
  6637  0119                     	;# 
  6638  0119                     	;# 
  6639  0119                     	;# 
  6640  011A                     	;# 
  6641  011A                     	;# 
  6642  011A                     	;# 
  6643  011B                     	;# 
  6644  011B                     	;# 
  6645  011B                     	;# 
  6646  011B                     	;# 
  6647  011B                     	;# 
  6648  011C                     	;# 
  6649  011C                     	;# 
  6650  011C                     	;# 
  6651  011D                     	;# 
  6652  011D                     	;# 
  6653  011D                     	;# 
  6654  011E                     	;# 
  6655  011E                     	;# 
  6656  011E                     	;# 
  6657  011F                     	;# 
  6658  011F                     	;# 
  6659  011F                     	;# 
  6660  011F                     	;# 
  6661  011F                     	;# 
  6662  018C                     	;# 
  6663  018D                     	;# 
  6664  018E                     	;# 
  6665  018F                     	;# 
  6666  0190                     	;# 
  6667  0191                     	;# 
  6668  0192                     	;# 
  6669  0196                     	;# 
  6670  0197                     	;# 
  6671  0198                     	;# 
  6672  0199                     	;# 
  6673  019A                     	;# 
  6674  019B                     	;# 
  6675  019C                     	;# 
  6676  020C                     	;# 
  6677  020D                     	;# 
  6678  020E                     	;# 
  6679  020E                     	;# 
  6680  020F                     	;# 
  6681  020F                     	;# 
  6682  0210                     	;# 
  6683  0210                     	;# 
  6684  0211                     	;# 
  6685  0211                     	;# 
  6686  0212                     	;# 
  6687  0213                     	;# 
  6688  0214                     	;# 
  6689  0214                     	;# 
  6690  0215                     	;# 
  6691  0215                     	;# 
  6692  0216                     	;# 
  6693  0216                     	;# 
  6694  0217                     	;# 
  6695  0217                     	;# 
  6696  0218                     	;# 
  6697  0219                     	;# 
  6698  021A                     	;# 
  6699  021A                     	;# 
  6700  021B                     	;# 
  6701  021B                     	;# 
  6702  021C                     	;# 
  6703  021C                     	;# 
  6704  021D                     	;# 
  6705  021D                     	;# 
  6706  021E                     	;# 
  6707  021F                     	;# 
  6708  028C                     	;# 
  6709  028C                     	;# 
  6710  028D                     	;# 
  6711  028D                     	;# 
  6712  028E                     	;# 
  6713  028F                     	;# 
  6714  0290                     	;# 
  6715  0291                     	;# 
  6716  0292                     	;# 
  6717  0292                     	;# 
  6718  0293                     	;# 
  6719  0293                     	;# 
  6720  0294                     	;# 
  6721  0295                     	;# 
  6722  0296                     	;# 
  6723  0297                     	;# 
  6724  0298                     	;# 
  6725  0298                     	;# 
  6726  0299                     	;# 
  6727  0299                     	;# 
  6728  029A                     	;# 
  6729  029B                     	;# 
  6730  029C                     	;# 
  6731  029D                     	;# 
  6732  029F                     	;# 
  6733  030C                     	;# 
  6734  030C                     	;# 
  6735  030D                     	;# 
  6736  030E                     	;# 
  6737  030F                     	;# 
  6738  0310                     	;# 
  6739  0310                     	;# 
  6740  0311                     	;# 
  6741  0312                     	;# 
  6742  0313                     	;# 
  6743  0314                     	;# 
  6744  0314                     	;# 
  6745  0315                     	;# 
  6746  0316                     	;# 
  6747  0317                     	;# 
  6748  0318                     	;# 
  6749  0318                     	;# 
  6750  0319                     	;# 
  6751  031A                     	;# 
  6752  031B                     	;# 
  6753  038C                     	;# 
  6754  038C                     	;# 
  6755  038D                     	;# 
  6756  038E                     	;# 
  6757  0390                     	;# 
  6758  0390                     	;# 
  6759  0391                     	;# 
  6760  0392                     	;# 
  6761  048C                     	;# 
  6762  048C                     	;# 
  6763  048D                     	;# 
  6764  048E                     	;# 
  6765  048F                     	;# 
  6766  048F                     	;# 
  6767  0490                     	;# 
  6768  0491                     	;# 
  6769  0492                     	;# 
  6770  0492                     	;# 
  6771  0493                     	;# 
  6772  0494                     	;# 
  6773  0495                     	;# 
  6774  0495                     	;# 
  6775  0496                     	;# 
  6776  0497                     	;# 
  6777  0498                     	;# 
  6778  0499                     	;# 
  6779  049A                     	;# 
  6780  049B                     	;# 
  6781  049C                     	;# 
  6782  049D                     	;# 
  6783  058C                     	;# 
  6784  058C                     	;# 
  6785  058D                     	;# 
  6786  058E                     	;# 
  6787  058F                     	;# 
  6788  058F                     	;# 
  6789  0590                     	;# 
  6790  0591                     	;# 
  6791  0592                     	;# 
  6792  0593                     	;# 
  6793  059C                     	;# 
  6794  059C                     	;# 
  6795  059D                     	;# 
  6796  059D                     	;# 
  6797  059E                     	;# 
  6798  059F                     	;# 
  6799  060C                     	;# 
  6800  060C                     	;# 
  6801  060D                     	;# 
  6802  060D                     	;# 
  6803  060E                     	;# 
  6804  060F                     	;# 
  6805  0610                     	;# 
  6806  0611                     	;# 
  6807  0612                     	;# 
  6808  0613                     	;# 
  6809  0614                     	;# 
  6810  0616                     	;# 
  6811  0616                     	;# 
  6812  0617                     	;# 
  6813  0617                     	;# 
  6814  0618                     	;# 
  6815  0619                     	;# 
  6816  061A                     	;# 
  6817  061B                     	;# 
  6818  061C                     	;# 
  6819  061D                     	;# 
  6820  061E                     	;# 
  6821  070C                     	;# 
  6822  070D                     	;# 
  6823  070E                     	;# 
  6824  070F                     	;# 
  6825  0710                     	;# 
  6826  0711                     	;# 
  6827  0712                     	;# 
  6828  0713                     	;# 
  6829  0714                     	;# 
  6830  0716                     	;# 
  6831  0717                     	;# 
  6832  0718                     	;# 
  6833  0719                     	;# 
  6834  071A                     	;# 
  6835  071B                     	;# 
  6836  071C                     	;# 
  6837  071D                     	;# 
  6838  071E                     	;# 
  6839  0796                     	;# 
  6840  0797                     	;# 
  6841  0798                     	;# 
  6842  0799                     	;# 
  6843  079A                     	;# 
  6844  079B                     	;# 
  6845  079C                     	;# 
  6846  079D                     	;# 
  6847  080C                     	;# 
  6848  080D                     	;# 
  6849  080E                     	;# 
  6850  080F                     	;# 
  6851  0810                     	;# 
  6852  0811                     	;# 
  6853  0813                     	;# 
  6854  0814                     	;# 
  6855  081A                     	;# 
  6856  081A                     	;# 
  6857  081B                     	;# 
  6858  081C                     	;# 
  6859  081C                     	;# 
  6860  081D                     	;# 
  6861  081E                     	;# 
  6862  081F                     	;# 
  6863  088C                     	;# 
  6864  088D                     	;# 
  6865  088E                     	;# 
  6866  088F                     	;# 
  6867  0890                     	;# 
  6868  0891                     	;# 
  6869  0892                     	;# 
  6870  0893                     	;# 
  6871  0895                     	;# 
  6872  0896                     	;# 
  6873  0897                     	;# 
  6874  0898                     	;# 
  6875  0899                     	;# 
  6876  089A                     	;# 
  6877  089B                     	;# 
  6878  090C                     	;# 
  6879  090E                     	;# 
  6880  090F                     	;# 
  6881  091F                     	;# 
  6882  098F                     	;# 
  6883  098F                     	;# 
  6884  0990                     	;# 
  6885  0991                     	;# 
  6886  0992                     	;# 
  6887  0993                     	;# 
  6888  0994                     	;# 
  6889  0995                     	;# 
  6890  0996                     	;# 
  6891  0997                     	;# 
  6892  1E0F                     	;# 
  6893  1E10                     	;# 
  6894  1E11                     	;# 
  6895  1E12                     	;# 
  6896  1E13                     	;# 
  6897  1E14                     	;# 
  6898  1E15                     	;# 
  6899  1E16                     	;# 
  6900  1E17                     	;# 
  6901  1E18                     	;# 
  6902  1E19                     	;# 
  6903  1E1A                     	;# 
  6904  1E1B                     	;# 
  6905  1E1C                     	;# 
  6906  1E1D                     	;# 
  6907  1E1E                     	;# 
  6908  1E1F                     	;# 
  6909  1E20                     	;# 
  6910  1E21                     	;# 
  6911  1E22                     	;# 
  6912  1E23                     	;# 
  6913  1E24                     	;# 
  6914  1E25                     	;# 
  6915  1E26                     	;# 
  6916  1E27                     	;# 
  6917  1E28                     	;# 
  6918  1E29                     	;# 
  6919  1E2A                     	;# 
  6920  1E2B                     	;# 
  6921  1E2C                     	;# 
  6922  1E2D                     	;# 
  6923  1E2E                     	;# 
  6924  1E2F                     	;# 
  6925  1E30                     	;# 
  6926  1E31                     	;# 
  6927  1E32                     	;# 
  6928  1E33                     	;# 
  6929  1E34                     	;# 
  6930  1E35                     	;# 
  6931  1E36                     	;# 
  6932  1E37                     	;# 
  6933  1E8F                     	;# 
  6934  1E90                     	;# 
  6935  1E91                     	;# 
  6936  1E92                     	;# 
  6937  1E93                     	;# 
  6938  1E94                     	;# 
  6939  1E95                     	;# 
  6940  1E96                     	;# 
  6941  1E97                     	;# 
  6942  1E9C                     	;# 
  6943  1E9D                     	;# 
  6944  1E9E                     	;# 
  6945  1EA1                     	;# 
  6946  1EA2                     	;# 
  6947  1EA3                     	;# 
  6948  1EA4                     	;# 
  6949  1EA9                     	;# 
  6950  1EAA                     	;# 
  6951  1EB1                     	;# 
  6952  1EB2                     	;# 
  6953  1EB8                     	;# 
  6954  1EB9                     	;# 
  6955  1EBA                     	;# 
  6956  1EBB                     	;# 
  6957  1EBC                     	;# 
  6958  1EBD                     	;# 
  6959  1EBE                     	;# 
  6960  1EC3                     	;# 
  6961  1EC5                     	;# 
  6962  1EC6                     	;# 
  6963  1EC7                     	;# 
  6964  1EC8                     	;# 
  6965  1EC9                     	;# 
  6966  1ECA                     	;# 
  6967  1ECB                     	;# 
  6968  1ECB                     	;# 
  6969  1ECB                     	;# 
  6970  1ECC                     	;# 
  6971  1ECC                     	;# 
  6972  1ECC                     	;# 
  6973  1F10                     	;# 
  6974  1F11                     	;# 
  6975  1F12                     	;# 
  6976  1F14                     	;# 
  6977  1F15                     	;# 
  6978  1F1C                     	;# 
  6979  1F1D                     	;# 
  6980  1F1E                     	;# 
  6981  1F1F                     	;# 
  6982  1F20                     	;# 
  6983  1F21                     	;# 
  6984  1F22                     	;# 
  6985  1F23                     	;# 
  6986  1F24                     	;# 
  6987  1F25                     	;# 
  6988  1F26                     	;# 
  6989  1F27                     	;# 
  6990  1F38                     	;# 
  6991  1F39                     	;# 
  6992  1F3A                     	;# 
  6993  1F3B                     	;# 
  6994  1F3C                     	;# 
  6995  1F3D                     	;# 
  6996  1F3E                     	;# 
  6997  1F3F                     	;# 
  6998  1F43                     	;# 
  6999  1F44                     	;# 
  7000  1F45                     	;# 
  7001  1F46                     	;# 
  7002  1F47                     	;# 
  7003  1F48                     	;# 
  7004  1F49                     	;# 
  7005  1F4A                     	;# 
  7006  1F4E                     	;# 
  7007  1F4F                     	;# 
  7008  1F50                     	;# 
  7009  1F51                     	;# 
  7010  1F52                     	;# 
  7011  1F53                     	;# 
  7012  1F54                     	;# 
  7013  1F55                     	;# 
  7014  1FE4                     	;# 
  7015  1FE5                     	;# 
  7016  1FE6                     	;# 
  7017  1FE7                     	;# 
  7018  1FE8                     	;# 
  7019  1FE8                     	;# 
  7020  1FE9                     	;# 
  7021  1FEA                     	;# 
  7022  1FEB                     	;# 
  7023  1FED                     	;# 
  7024  1FEE                     	;# 
  7025  1FEF                     	;# 
  7026                           
  7027                           	psect	idataBANK1
  7028  1B59                     __pidataBANK1:
  7029                           
  7030                           ;initializer for _accelLimitSweepFP
  7031  1B59  3428               	retlw	40
  7032  1B5A  3400               	retlw	0
  7033                           
  7034                           ;initializer for _accelLimitYawStopFP
  7035  1B5B  3499               	retlw	153
  7036  1B5C  3401               	retlw	1
  7037                           
  7038                           ;initializer for _accelLimitYawFP
  7039  1B5D  34A0               	retlw	160
  7040  1B5E  3400               	retlw	0
  7041                           
  7042                           ;initializer for _accelLimitAxialStopFP
  7043  1B5F  34CC               	retlw	204
  7044  1B60  3400               	retlw	0
  7045                           
  7046                           ;initializer for _accelLimitAxialFP
  7047  1B61  3478               	retlw	120
  7048  1B62  3400               	retlw	0
  7049                           
  7050                           ;initializer for _yawCenter
  7051  1B63  3400               	retlw	0
  7052  1B64  3408               	retlw	8
  7053                           
  7054                           ;initializer for _axialCenter
  7055  1B65  3400               	retlw	0
  7056  1B66  3408               	retlw	8
  7057                           
  7058                           	psect	idataBANK2
  7059  07F8                     __pidataBANK2:
  7060                           
  7061                           ;initializer for _estopBuffer
  7062  07F8  342F               	retlw	47
  7063  07F9  3400               	retlw	0
  7064  07FA  3400               	retlw	0
  7065  07FB  34FF               	retlw	255
  7066  07FC  3400               	retlw	0
  7067  07FD  3400               	retlw	0
  7068  07FE  3400               	retlw	0
  7069  07FF  340A               	retlw	10
  7070                           
  7071                           	psect	nvBANK0
  7072  0055                     __pnvBANK0:
  7073  0055                     _eusart1TxBufferRemaining:
  7074  0055                     	ds	1
  7075                           
  7076                           	psect	nvBANK1
  7077  00CA                     __pnvBANK1:
  7078  00CA                     _TMR3_InterruptHandler:
  7079  00CA                     	ds	2
  7080  00CC                     _timer3ReloadVal:
  7081  00CC                     	ds	2
  7082  00CE                     _IOCCF2_InterruptHandler:
  7083  00CE                     	ds	2
  7084  00D0                     _IOCCF0_InterruptHandler:
  7085  00D0                     	ds	2
  7086  00D2                     _EUSART1_TxDefaultInterruptHandler:
  7087  00D2                     	ds	2
  7088  00D4                     _TMR2_InterruptHandler:
  7089  00D4                     	ds	2
  7090  00D6                     _TMR1_InterruptHandler:
  7091  00D6                     	ds	2
  7092  00D8                     _timer1ReloadVal:
  7093  00D8                     	ds	2
  7094                           
  7095                           	psect	nvBANK2
  7096  015C                     __pnvBANK2:
  7097  015C                     _EUSART1_ErrorHandler:
  7098  015C                     	ds	2
  7099  015E                     _EUSART1_OverrunErrorHandler:
  7100  015E                     	ds	2
  7101  0160                     _EUSART1_FramingErrorHandler:
  7102  0160                     	ds	2
  7103  0162                     _EUSART1_RxDefaultInterruptHandler:
  7104  0162                     	ds	2
  7105  0003                     _STATUSbits	set	3
  7106  000D                     _PORTBbits	set	13
  7107  0019                     _LATBbits	set	25
  7108  0018                     _LATAbits	set	24
  7109  001A                     _LATCbits	set	26
  7110  000C                     _PORTAbits	set	12
  7111  000E                     _PORTCbits	set	14
  7112  000B                     _INTCONbits	set	11
  7113  0014                     _TRISC	set	20
  7114  0013                     _TRISB	set	19
  7115  0012                     _TRISA	set	18
  7116  001A                     _LATC	set	26
  7117  0019                     _LATB	set	25
  7118  0018                     _LATA	set	24
  7119  0090                     _ADERRL	set	144
  7120  0091                     _ADERRH	set	145
  7121  009B                     _ADPREVL	set	155
  7122  009C                     _ADPREVH	set	156
  7123  0094                     _ADFLTRL	set	148
  7124  0095                     _ADFLTRH	set	149
  7125  0096                     _ADACCL	set	150
  7126  0097                     _ADACCH	set	151
  7127  0099                     _ADCNT	set	153
  7128  009D                     _ADRESL	set	157
  7129  009E                     _ADRESH	set	158
  7130  009F                     _ADPCH	set	159
  7131  009A                     _ADRPT	set	154
  7132  0098                     _ADACCU	set	152
  7133  0093                     _ADSTPTH	set	147
  7134  0092                     _ADSTPTL	set	146
  7135  008F                     _ADUTHH	set	143
  7136  008E                     _ADUTHL	set	142
  7137  008D                     _ADLTHH	set	141
  7138  008C                     _ADLTHL	set	140
  7139  0112                     _ADCON1bits	set	274
  7140  0115                     _ADSTATbits	set	277
  7141  0113                     _ADCON2bits	set	275
  7142  0114                     _ADCON3bits	set	276
  7143  0111                     _ADCON0bits	set	273
  7144  0111                     _ADCON0	set	273
  7145  0118                     _ADCLK	set	280
  7146  0117                     _ADACT	set	279
  7147  0116                     _ADREF	set	278
  7148  0115                     _ADSTAT	set	277
  7149  0114                     _ADCON3	set	276
  7150  0113                     _ADCON2	set	275
  7151  0112                     _ADCON1	set	274
  7152  0110                     _ADPREH	set	272
  7153  010F                     _ADPREL	set	271
  7154  010E                     _ADCAP	set	270
  7155  010D                     _ADACQH	set	269
  7156  010C                     _ADACQL	set	268
  7157  0119                     _RC1REG	set	281
  7158  011D                     _RC1STAbits	set	285
  7159  011A                     _TX1REG	set	282
  7160  011E                     _TX1STAbits	set	286
  7161  011C                     _SP1BRGH	set	284
  7162  011B                     _SP1BRGL	set	283
  7163  011E                     _TX1STA	set	286
  7164  011D                     _RC1STA	set	285
  7165  011F                     _BAUD1CON	set	287
  7166  0215                     _T3GCONbits	set	533
  7167  0214                     _T3CONbits	set	532
  7168  0214                     _T3CON	set	532
  7169  0212                     _TMR3L	set	530
  7170  0213                     _TMR3H	set	531
  7171  0217                     _T3CLK	set	535
  7172  0216                     _T3GATE	set	534
  7173  0215                     _T3GCON	set	533
  7174  020F                     _T1GCONbits	set	527
  7175  020E                     _T1CONbits	set	526
  7176  020E                     _T1CON	set	526
  7177  020C                     _TMR1L	set	524
  7178  020D                     _TMR1H	set	525
  7179  0211                     _T1CLK	set	529
  7180  0210                     _T1GATE	set	528
  7181  020F                     _T1GCON	set	527
  7182  028D                     _PR2	set	653
  7183  028C                     _TMR2	set	652
  7184  028E                     _T2CONbits	set	654
  7185  0291                     _T2RSTbits	set	657
  7186  028F                     _T2HLTbits	set	655
  7187  028E                     _T2CON	set	654
  7188  028C                     _T2TMR	set	652
  7189  028D                     _T2PR	set	653
  7190  0291                     _T2RST	set	657
  7191  028F                     _T2HLT	set	655
  7192  0290                     _T2CLKCON	set	656
  7193  070F                     _PIR3bits	set	1807
  7194  070C                     _PIR0bits	set	1804
  7195  0716                     _PIE0bits	set	1814
  7196  0719                     _PIE3bits	set	1817
  7197  071A                     _PIE4bits	set	1818
  7198  0710                     _PIR4bits	set	1808
  7199  079D                     _PMD7	set	1949
  7200  079C                     _PMD6	set	1948
  7201  079B                     _PMD5	set	1947
  7202  079A                     _PMD4	set	1946
  7203  0799                     _PMD3	set	1945
  7204  0798                     _PMD2	set	1944
  7205  0797                     _PMD1	set	1943
  7206  0796                     _PMD0	set	1942
  7207  081F                     _NVMCON2	set	2079
  7208  081D                     _NVMDATH	set	2077
  7209  081C                     _NVMDATL	set	2076
  7210  081B                     _NVMADRH	set	2075
  7211  081A                     _NVMADRL	set	2074
  7212  081E                     _NVMCON1bits	set	2078
  7213  0892                     _OSCTUNE	set	2194
  7214  0893                     _OSCFRQ	set	2195
  7215  0891                     _OSCEN	set	2193
  7216  088F                     _OSCCON3	set	2191
  7217  088D                     _OSCCON1	set	2189
  7218  1ECB                     _RX1DTPPS	set	7883
  7219  1F26                     _RC6PPS	set	7974
  7220  1F24                     _RC4PPS	set	7972
  7221  1F53                     _IOCCPbits	set	8019
  7222  1F54                     _IOCCNbits	set	8020
  7223  1F55                     _IOCCFbits	set	8021
  7224  1F52                     _INLVLC	set	8018
  7225  1F47                     _INLVLB	set	8007
  7226  1F3C                     _INLVLA	set	7996
  7227  1F51                     _SLRCONC	set	8017
  7228  1F46                     _SLRCONB	set	8006
  7229  1F3B                     _SLRCONA	set	7995
  7230  1F50                     _ODCONC	set	8016
  7231  1F45                     _ODCONB	set	8005
  7232  1F3A                     _ODCONA	set	7994
  7233  1F4F                     _WPUC	set	8015
  7234  1F39                     _WPUA	set	7993
  7235  1F44                     _WPUB	set	8004
  7236  1F38                     _ANSELA	set	7992
  7237  1F43                     _ANSELB	set	8003
  7238  1F4E                     _ANSELC	set	8014
  7239                           
  7240                           	psect	stringtext1
  7241  2000                     __pstringtext1:
  7242  2000                     STR_23:
  7243  2000  3441               	retlw	65	;'A'
  7244  2001  3454               	retlw	84	;'T'
  7245  2002  342B               	retlw	43	;'+'
  7246  2003  3442               	retlw	66	;'B'
  7247  2004  3441               	retlw	65	;'A'
  7248  2005  3455               	retlw	85	;'U'
  7249  2006  3444               	retlw	68	;'D'
  7250  2007  3430               	retlw	48	;'0'
  7251  2008  3400               	retlw	0
  7252                           
  7253                           	psect	stringtext2
  7254  2009                     __pstringtext2:
  7255  2009                     STR_13:
  7256  2009  3441               	retlw	65	;'A'
  7257  200A  3454               	retlw	84	;'T'
  7258  200B  342B               	retlw	43	;'+'
  7259  200C  3452               	retlw	82	;'R'
  7260  200D  344F               	retlw	79	;'O'
  7261  200E  344C               	retlw	76	;'L'
  7262  200F  3445               	retlw	69	;'E'
  7263  2010  3430               	retlw	48	;'0'
  7264  2011  3400               	retlw	0
  7265                           
  7266                           	psect	stringtext3
  7267  2012                     __pstringtext3:
  7268  2012                     STR_12:
  7269  2012  3441               	retlw	65	;'A'
  7270  2013  3454               	retlw	84	;'T'
  7271  2014  342B               	retlw	43	;'+'
  7272  2015  3452               	retlw	82	;'R'
  7273  2016  344F               	retlw	79	;'O'
  7274  2017  344C               	retlw	76	;'L'
  7275  2018  3445               	retlw	69	;'E'
  7276  2019  3431               	retlw	49	;'1'
  7277  201A  3400               	retlw	0
  7278                           
  7279                           	psect	stringtext4
  7280  201B                     __pstringtext4:
  7281  201B                     STR_8:
  7282  201B  3441               	retlw	65	;'A'
  7283  201C  3454               	retlw	84	;'T'
  7284  201D  342B               	retlw	43	;'+'
  7285  201E  3442               	retlw	66	;'B'
  7286  201F  3441               	retlw	65	;'A'
  7287  2020  3455               	retlw	85	;'U'
  7288  2021  3444               	retlw	68	;'D'
  7289  2022  3432               	retlw	50	;'2'
  7290  2023  3400               	retlw	0
  7291                           
  7292                           	psect	stringtext5
  7293  2024                     __pstringtext5:
  7294  2024                     STR_15:
  7295  2024  3441               	retlw	65	;'A'
  7296  2025  3454               	retlw	84	;'T'
  7297  2026  342B               	retlw	43	;'+'
  7298  2027  3441               	retlw	65	;'A'
  7299  2028  3444               	retlw	68	;'D'
  7300  2029  3444               	retlw	68	;'D'
  7301  202A  3452               	retlw	82	;'R'
  7302  202B  343F               	retlw	63	;'?'
  7303  202C  3400               	retlw	0
  7304                           
  7305                           	psect	stringtext6
  7306  202D                     __pstringtext6:
  7307  202D                     STR_22:
  7308  202D  3441               	retlw	65	;'A'
  7309  202E  3454               	retlw	84	;'T'
  7310  202F  342B               	retlw	43	;'+'
  7311  2030  3443               	retlw	67	;'C'
  7312  2031  344C               	retlw	76	;'L'
  7313  2032  3445               	retlw	69	;'E'
  7314  2033  3441               	retlw	65	;'A'
  7315  2034  3452               	retlw	82	;'R'
  7316  2035  3400               	retlw	0
  7317                           
  7318                           	psect	stringtext7
  7319  2036                     __pstringtext7:
  7320  2036                     STR_10:
  7321  2036  3441               	retlw	65	;'A'
  7322  2037  3454               	retlw	84	;'T'
  7323  2038  342B               	retlw	43	;'+'
  7324  2039  3452               	retlw	82	;'R'
  7325  203A  3445               	retlw	69	;'E'
  7326  203B  3453               	retlw	83	;'S'
  7327  203C  3445               	retlw	69	;'E'
  7328  203D  3454               	retlw	84	;'T'
  7329  203E  3400               	retlw	0
  7330                           
  7331                           	psect	stringtext8
  7332  203F                     __pstringtext8:
  7333  203F                     STR_25:
  7334  203F  3441               	retlw	65	;'A'
  7335  2040  3454               	retlw	84	;'T'
  7336  2041  342B               	retlw	43	;'+'
  7337  2042  3452               	retlw	82	;'R'
  7338  2043  3445               	retlw	69	;'E'
  7339  2044  344E               	retlw	78	;'N'
  7340  2045  3445               	retlw	69	;'E'
  7341  2046  3457               	retlw	87	;'W'
  7342  2047  3400               	retlw	0
  7343                           
  7344                           	psect	stringtext9
  7345  2048                     __pstringtext9:
  7346  2048                     STR_19:
  7347  2048  3441               	retlw	65	;'A'
  7348  2049  3454               	retlw	84	;'T'
  7349  204A  342B               	retlw	43	;'+'
  7350  204B  3443               	retlw	67	;'C'
  7351  204C  344F               	retlw	79	;'O'
  7352  204D  344E               	retlw	78	;'N'
  7353  204E  3400               	retlw	0
  7354                           
  7355                           	psect	stringtext10
  7356  204F                     __pstringtext10:
  7357  204F                     STR_4:
  7358  204F  3448               	retlw	72	;'H'
  7359  2050  3455               	retlw	85	;'U'
  7360  2051  3447               	retlw	71	;'G'
  7361  2052  3453               	retlw	83	;'S'
  7362  2053  340A               	retlw	10
  7363  2054  3400               	retlw	0
  7364                           
  7365                           	psect	stringtext11
  7366  2055                     __pstringtext11:
  7367  2055                     STR_16:
  7368  2055  3441               	retlw	65	;'A'
  7369  2056  3444               	retlw	68	;'D'
  7370  2057  3444               	retlw	68	;'D'
  7371  2058  3452               	retlw	82	;'R'
  7372  2059  343A               	retlw	58	;':'
  7373  205A  3400               	retlw	0
  7374                           
  7375                           	psect	stringtext12
  7376  205B                     __pstringtext12:
  7377  205B                     STR_14:
  7378  205B  344F               	retlw	79	;'O'
  7379  205C  344B               	retlw	75	;'K'
  7380  205D  3400               	retlw	0
  7381                           
  7382                           	psect	stringtext13
  7383  205E                     __pstringtext13:
  7384  205E                     STR_7:
  7385  205E  3441               	retlw	65	;'A'
  7386  205F  3454               	retlw	84	;'T'
  7387  2060  3400               	retlw	0
  7388                           
  7389                           	psect	stringtext14
  7390  2061                     __pstringtext14:
  7391  2061                     STR_1:
  7392  2061  343E               	retlw	62	;'>'
  7393  2062  3420               	retlw	32	;' '
  7394  2063  3400               	retlw	0
  7395                           
  7396                           	psect	stringtext15
  7397  2064                     __pstringtext15:
  7398  2064                     STR_2:
  7399  2064  342C               	retlw	44	;','
  7400  2065  3400               	retlw	0
  7401                           
  7402                           	psect	stringtext16
  7403  0000                     __pstringtext16:
  7404  2053                     
  7405                           	psect	cinit
  7406  005D                     start_initialization:	
  7407                           ; #config settings
  7408                           
  7409  005D                     __initialization:
  7410                           
  7411                           ; Initialize objects allocated to BANK1
  7412  005D  3059               	movlw	low __pidataBANK1
  7413  005E  0084               	movwf	4
  7414  005F  309B               	movlw	(high __pidataBANK1)| (0+128)
  7415  0060  0085               	movwf	5
  7416  0061  30DA               	movlw	low __pdataBANK1
  7417  0062  0086               	movwf	6
  7418  0063  3000               	movlw	high __pdataBANK1
  7419  0064  0087               	movwf	7
  7420  0065  300E               	movlw	14
  7421  0066  319A  222B  3180   	fcall	init_ram
  7422                           
  7423                           ; Initialize objects allocated to BANK2
  7424  0069  30F8               	movlw	low __pidataBANK2
  7425  006A  0084               	movwf	4
  7426  006B  3087               	movlw	(high __pidataBANK2)| (0+128)
  7427  006C  0085               	movwf	5
  7428  006D  3064               	movlw	low __pdataBANK2
  7429  006E  0086               	movwf	6
  7430  006F  3001               	movlw	high __pdataBANK2
  7431  0070  0087               	movwf	7
  7432  0071  3008               	movlw	8
  7433  0072  319A  222B  3180   	fcall	init_ram
  7434                           
  7435                           ; Clear objects allocated to BANK0
  7436  0075  303B               	movlw	low __pbssBANK0
  7437  0076  0084               	movwf	4
  7438  0077  3000               	movlw	high __pbssBANK0
  7439  0078  0085               	movwf	5
  7440  0079  301A               	movlw	26
  7441  007A  319A  2225  3180   	fcall	clear_ram0
  7442                           
  7443                           ; Clear objects allocated to BANK1
  7444  007D  30A0               	movlw	low __pbssBANK1
  7445  007E  0084               	movwf	4
  7446  007F  3000               	movlw	high __pbssBANK1
  7447  0080  0085               	movwf	5
  7448  0081  302A               	movlw	42
  7449  0082  319A  2225  3180   	fcall	clear_ram0
  7450                           
  7451                           ; Clear objects allocated to BANK2
  7452  0085  3020               	movlw	low __pbssBANK2
  7453  0086  0084               	movwf	4
  7454  0087  3001               	movlw	high __pbssBANK2
  7455  0088  0085               	movwf	5
  7456  0089  303C               	movlw	60
  7457  008A  319A  2225  3180   	fcall	clear_ram0
  7458                           
  7459                           ; Clear objects allocated to BANK3
  7460  008D  30A0               	movlw	low __pbssBANK3
  7461  008E  0084               	movwf	4
  7462  008F  3001               	movlw	high __pbssBANK3
  7463  0090  0085               	movwf	5
  7464  0091  3048               	movlw	72
  7465  0092  319A  2225  3180   	fcall	clear_ram0
  7466                           
  7467                           ; Clear objects allocated to BANK4
  7468  0095  3020               	movlw	low __pbssBANK4
  7469  0096  0084               	movwf	4
  7470  0097  3002               	movlw	high __pbssBANK4
  7471  0098  0085               	movwf	5
  7472  0099  3040               	movlw	64
  7473  009A  319A  2225  3180   	fcall	clear_ram0
  7474  009D                     end_of_initialization:	
  7475                           ;End of C runtime variable initialization code
  7476                           
  7477  009D                     __end_of__initialization:
  7478  009D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7479  009E  0140               	movlb	0
  7480  009F  3195  2DBF         	ljmp	_main	;jump to C main() function
  7481                           
  7482                           	psect	bssEEDATA
  7483  0000                     __pbssEEDATA:
  7484  0000                     _EEPROM_uiBrakeMode:
  7485  0000  0000               	db	0
  7486  0001                     _EEPROM_uiSpeedMode:
  7487  0001  0000               	db	0
  7488                           
  7489                           	psect	bssBANK0
  7490  003B                     __pbssBANK0:
  7491  003B                     _systemTime:
  7492  003B                     	ds	4
  7493  003F                     _limitedAxialFP:
  7494  003F                     	ds	2
  7495  0041                     _targetAxialFP:
  7496  0041                     	ds	2
  7497  0043                     _uiState:
  7498  0043                     	ds	1
  7499  0044                     _dutyCycle:
  7500  0044                     	ds	1
  7501  0045                     _B_LED:
  7502  0045                     	ds	1
  7503  0046                     _G_LED:
  7504  0046                     	ds	1
  7505  0047                     _R_LED:
  7506  0047                     	ds	1
  7507  0048                     _uiType:
  7508  0048                     	ds	1
  7509  0049                     _uiSpeedMode:
  7510  0049                     	ds	1
  7511  004A                     _powerOn:
  7512  004A                     	ds	1
  7513  004B                     _oneSecBlink:
  7514  004B                     	ds	1
  7515  004C                     _estopActive:
  7516  004C                     	ds	1
  7517  004D                     _estopPending:
  7518  004D                     	ds	1
  7519  004E                     _joystickType:
  7520  004E                     	ds	1
  7521  004F                     _eusart1RxLastError:
  7522  004F                     	ds	1
  7523  0050                     _eusart1RxCount:
  7524  0050                     	ds	1
  7525  0051                     _eusart1RxTail:
  7526  0051                     	ds	1
  7527  0052                     _eusart1RxHead:
  7528  0052                     	ds	1
  7529  0053                     _eusart1TxTail:
  7530  0053                     	ds	1
  7531  0054                     _eusart1TxHead:
  7532  0054                     	ds	1
  7533                           
  7534                           	psect	bssBANK1
  7535  00A0                     __pbssBANK1:
  7536  00A0                     _uiStateTime:
  7537  00A0                     	ds	4
  7538  00A4                     _BTTimeout:
  7539  00A4                     	ds	4
  7540  00A8                     _lastBTTime:
  7541  00A8                     	ds	4
  7542  00AC                     _yawCenterSum:
  7543  00AC                     	ds	4
  7544  00B0                     _axialCenterSum:
  7545  00B0                     	ds	4
  7546  00B4                     _estopTimer:
  7547  00B4                     	ds	4
  7548  00B8                     _topSweepSpeedFP:
  7549  00B8                     	ds	2
  7550  00BA                     _topYawSpeedFP:
  7551  00BA                     	ds	2
  7552  00BC                     _topAxialSpeedFP:
  7553  00BC                     	ds	2
  7554  00BE                     _accelYawFP:
  7555  00BE                     	ds	2
  7556  00C0                     _accelAxialFP:
  7557  00C0                     	ds	2
  7558  00C2                     _limitedYawFP:
  7559  00C2                     	ds	2
  7560  00C4                     _targetYawFP:
  7561  00C4                     	ds	2
  7562  00C6                     _timeoutSequence:
  7563  00C6                     	ds	1
  7564  00C7                     _charsRead:
  7565  00C7                     	ds	1
  7566  00C8                     _sendDebugText:
  7567  00C8                     	ds	1
  7568  00C9                     _joystickEnabled:
  7569  00C9                     	ds	1
  7570                           
  7571                           	psect	dataBANK1
  7572  00DA                     __pdataBANK1:
  7573  00DA                     _accelLimitSweepFP:
  7574  00DA                     	ds	2
  7575  00DC                     _accelLimitYawStopFP:
  7576  00DC                     	ds	2
  7577  00DE                     _accelLimitYawFP:
  7578  00DE                     	ds	2
  7579  00E0                     _accelLimitAxialStopFP:
  7580  00E0                     	ds	2
  7581  00E2                     _accelLimitAxialFP:
  7582  00E2                     	ds	2
  7583  00E4                     _yawCenter:
  7584  00E4                     	ds	2
  7585  00E6                     _axialCenter:
  7586  00E6                     	ds	2
  7587                           
  7588                           	psect	bssBANK2
  7589  0120                     __pbssBANK2:
  7590  0120                     _replyBuffer:
  7591  0120                     	ds	8
  7592  0128                     _debugBuffer:
  7593  0128                     	ds	16
  7594  0138                     _masterMAC:
  7595  0138                     	ds	12
  7596  0144                     _slaveMAC:
  7597  0144                     	ds	12
  7598  0150                     _speedBuffer:
  7599  0150                     	ds	12
  7600                           
  7601                           	psect	dataBANK2
  7602  0164                     __pdataBANK2:
  7603  0164                     _estopBuffer:
  7604  0164                     	ds	8
  7605                           
  7606                           	psect	bssBANK3
  7607  01A0                     __pbssBANK3:
  7608  01A0                     _eusart1RxStatusBuffer:
  7609  01A0                     	ds	32
  7610  01C0                     _RX_Buffer:
  7611  01C0                     	ds	40
  7612                           
  7613                           	psect	bssBANK4
  7614  0220                     __pbssBANK4:
  7615  0220                     _eusart1RxBuffer:
  7616  0220                     	ds	32
  7617  0240                     _eusart1TxBuffer:
  7618  0240                     	ds	32
  7619                           
  7620                           	psect	inittext
  7621  1A2B                     init_ram:
  7622  1A2B  00FE               	movwf	btemp
  7623  1A2C                     initloop:
  7624  1A2C  0012               	moviw fsr0++
  7625  1A2D  001E               	movwi fsr1++
  7626  1A2E  0BFE               	decfsz	btemp,f
  7627  1A2F  2A2C               	goto	initloop
  7628  1A30  3400               	retlw	0
  7629                           
  7630                           	psect	clrtext
  7631  1A25                     clear_ram0:	
  7632                           ;	Called with FSR0 containing the base address, and
  7633                           ;	WREG with the size to clear
  7634                           
  7635  1A25  0064               	clrwdt	;clear the watchdog before getting into this loop
  7636  1A26                     clrloop0:
  7637  1A26  0180               	clrf	0	;clear RAM location pointed to by FSR
  7638  1A27  3101               	addfsr 0,1
  7639  1A28  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7640  1A29  2A26               	goto	clrloop0	;have we reached the end yet?
  7641  1A2A  3400               	retlw	0	;all done for this memory range, return
  7642                           
  7643                           	psect	cstackBANK4
  7644  0260                     __pcstackBANK4:
  7645  0260                     ??_setJoystickType:
  7646  0260                     ?_pulseLEDColor:	
  7647                           ; 1 bytes @ 0x0
  7648                           
  7649  0260                     int16cat@suppress:	
  7650                           ; 1 bytes @ 0x0
  7651                           
  7652  0260                     pulseLEDColor@RGB:	
  7653                           ; 1 bytes @ 0x0
  7654                           
  7655  0260                     receiveBTBuffer@startTime:	
  7656                           ; 2 bytes @ 0x0
  7657                           
  7658                           
  7659                           ; 4 bytes @ 0x0
  7660  0260                     	ds	1
  7661  0261                     int16cat@digit:
  7662                           
  7663                           ; 2 bytes @ 0x1
  7664  0261                     	ds	1
  7665  0262                     pulseLEDColor@onTimeMS:
  7666                           
  7667                           ; 2 bytes @ 0x2
  7668  0262                     	ds	1
  7669  0263                     int16cat@divider:
  7670                           
  7671                           ; 2 bytes @ 0x3
  7672  0263                     	ds	1
  7673  0264                     receiveBTBuffer@charsRead:
  7674  0264                     pulseLEDColor@offTimeMS:	
  7675                           ; 1 bytes @ 0x4
  7676                           
  7677                           
  7678                           ; 2 bytes @ 0x4
  7679  0264                     	ds	1
  7680  0265                     receiveBTBuffer@buffer:
  7681  0265                     int16cat@bufP:	
  7682                           ; 1 bytes @ 0x5
  7683                           
  7684                           
  7685                           ; 1 bytes @ 0x5
  7686  0265                     	ds	1
  7687  0266                     ?_sendBTSpeedCmd:
  7688  0266                     ??_getBTAddress:	
  7689                           ; 1 bytes @ 0x6
  7690                           
  7691  0266                     ??_setBTConnection:	
  7692                           ; 1 bytes @ 0x6
  7693                           
  7694  0266                     ??_doFactoryReset:	
  7695                           ; 1 bytes @ 0x6
  7696                           
  7697  0266                     blinkLEDColor@blink:	
  7698                           ; 1 bytes @ 0x6
  7699                           
  7700  0266                     sendBTSpeedCmd@axial:	
  7701                           ; 1 bytes @ 0x6
  7702                           
  7703                           
  7704                           ; 2 bytes @ 0x6
  7705  0266                     	ds	1
  7706  0267                     ??_bumpUISpeedMode:
  7707  0267                     ??_bumpUIType:	
  7708                           ; 1 bytes @ 0x7
  7709                           
  7710                           
  7711                           ; 1 bytes @ 0x7
  7712  0267                     	ds	1
  7713  0268                     sendBTSpeedCmd@yaw:
  7714  0268                     _getBTAddress$2248:	
  7715                           ; 2 bytes @ 0x8
  7716                           
  7717  0268                     _setBTConnection$2256:	
  7718                           ; 2 bytes @ 0x8
  7719                           
  7720  0268                     _doFactoryReset$2267:	
  7721                           ; 2 bytes @ 0x8
  7722                           
  7723                           
  7724                           ; 2 bytes @ 0x8
  7725  0268                     	ds	2
  7726  026A                     sendBTSpeedCmd@blockIfBusy:
  7727  026A                     getBTAddress@MAC:	
  7728                           ; 1 bytes @ 0xA
  7729                           
  7730  026A                     _setBTConnection$2259:	
  7731                           ; 1 bytes @ 0xA
  7732                           
  7733                           
  7734                           ; 2 bytes @ 0xA
  7735  026A                     	ds	1
  7736  026B                     getBTAddress@addrPointer:
  7737                           
  7738                           ; 1 bytes @ 0xB
  7739  026B                     	ds	1
  7740  026C                     setBTConnection@MAC:
  7741                           
  7742                           ; 1 bytes @ 0xC
  7743  026C                     	ds	1
  7744  026D                     ??_pairBluetoothDevices:
  7745                           
  7746                           ; 1 bytes @ 0xD
  7747  026D                     	ds	1
  7748  026E                     ??_runUI:
  7749                           
  7750                           ; 1 bytes @ 0xE
  7751  026E                     	ds	2
  7752                           
  7753                           	psect	cstackBANK3
  7754  01E8                     __pcstackBANK3:
  7755  01E8                     ??_strstr:
  7756  01E8                     ??_receiveBTBuffer:	
  7757                           ; 1 bytes @ 0x0
  7758                           
  7759  01E8                     ___awdiv@counter:	
  7760                           ; 1 bytes @ 0x0
  7761                           
  7762  01E8                     strcpy@s:	
  7763                           ; 1 bytes @ 0x0
  7764                           
  7765  01E8                     sleep@start:	
  7766                           ; 2 bytes @ 0x0
  7767                           
  7768                           
  7769                           ; 4 bytes @ 0x0
  7770  01E8                     	ds	1
  7771  01E9                     ___awdiv@sign:
  7772                           
  7773                           ; 1 bytes @ 0x1
  7774  01E9                     	ds	1
  7775  01EA                     strcpy@d:
  7776  01EA                     ___awdiv@quotient:	
  7777                           ; 1 bytes @ 0x2
  7778                           
  7779                           
  7780                           ; 2 bytes @ 0x2
  7781  01EA                     	ds	1
  7782  01EB                     strcpy@dest:
  7783  01EB                     strstr@nl:	
  7784                           ; 1 bytes @ 0x3
  7785                           
  7786                           
  7787                           ; 2 bytes @ 0x3
  7788  01EB                     	ds	1
  7789  01EC                     ??_showStartup:
  7790  01EC                     ??_showShutdown:	
  7791                           ; 1 bytes @ 0x4
  7792                           
  7793  01EC                     ??_strcat:	
  7794                           ; 1 bytes @ 0x4
  7795                           
  7796  01EC                     ?_int16cat:	
  7797                           ; 1 bytes @ 0x4
  7798                           
  7799  01EC                     ?_setSerialBaud:	
  7800                           ; 1 bytes @ 0x4
  7801                           
  7802  01EC                     ?_blinkLEDColor:	
  7803                           ; 1 bytes @ 0x4
  7804                           
  7805  01EC                     ?_sendBTString:	
  7806                           ; 1 bytes @ 0x4
  7807                           
  7808  01EC                     setJoystickType@jsType:	
  7809                           ; 1 bytes @ 0x4
  7810                           
  7811  01EC                     sendBTString@buffer:	
  7812                           ; 1 bytes @ 0x4
  7813                           
  7814  01EC                     int16cat@num:	
  7815                           ; 2 bytes @ 0x4
  7816                           
  7817  01EC                     setSerialBaud@baud:	
  7818                           ; 2 bytes @ 0x4
  7819                           
  7820  01EC                     blinkLEDColor@RGB:	
  7821                           ; 2 bytes @ 0x4
  7822                           
  7823                           
  7824                           ; 2 bytes @ 0x4
  7825  01EC                     	ds	1
  7826  01ED                     showStartup@ramp:
  7827  01ED                     showShutdown@ramp:	
  7828                           ; 1 bytes @ 0x5
  7829                           
  7830  01ED                     strstr@h:	
  7831                           ; 1 bytes @ 0x5
  7832                           
  7833  01ED                     setJoystickType@i:	
  7834                           ; 1 bytes @ 0x5
  7835                           
  7836                           
  7837                           ; 2 bytes @ 0x5
  7838  01ED                     	ds	1
  7839  01EE                     ??_sendBTSpeedCmd:
  7840  01EE                     ??_sendBTString:	
  7841                           ; 1 bytes @ 0x6
  7842                           
  7843  01EE                     blinkLEDColor@blinks:	
  7844                           ; 1 bytes @ 0x6
  7845                           
  7846                           
  7847                           ; 1 bytes @ 0x6
  7848  01EE                     	ds	1
  7849  01EF                     ?_getBTAddress:
  7850  01EF                     ?_setBTConnection:	
  7851                           ; 1 bytes @ 0x7
  7852                           
  7853  01EF                     ??_blinkLEDColor:	
  7854                           ; 1 bytes @ 0x7
  7855                           
  7856  01EF                     getBTAddress@isMaster:	
  7857                           ; 1 bytes @ 0x7
  7858                           
  7859  01EF                     setBTConnection@isMaster:	
  7860                           ; 1 bytes @ 0x7
  7861                           
  7862                           
  7863                           ; 1 bytes @ 0x7
  7864  01EF                     	ds	1
  7865                           
  7866                           	psect	cstackBANK2
  7867  016C                     __pcstackBANK2:
  7868  016C                     ??_initUI:
  7869  016C                     ?_sleep:	
  7870                           ; 1 bytes @ 0x0
  7871                           
  7872  016C                     ?_sendBTBuffer:	
  7873                           ; 1 bytes @ 0x0
  7874                           
  7875  016C                     ??_strcpy:	
  7876                           ; 1 bytes @ 0x0
  7877                           
  7878  016C                     ?_receiveBTBuffer:	
  7879                           ; 1 bytes @ 0x0
  7880                           
  7881  016C                     ?___awdiv:	
  7882                           ; 1 bytes @ 0x0
  7883                           
  7884  016C                     receiveBTBuffer@maxChars:	
  7885                           ; 2 bytes @ 0x0
  7886                           
  7887  016C                     memset@dest:	
  7888                           ; 1 bytes @ 0x0
  7889                           
  7890  016C                     strncmp@_l:	
  7891                           ; 1 bytes @ 0x0
  7892                           
  7893  016C                     sendBTBuffer@buffer:	
  7894                           ; 1 bytes @ 0x0
  7895                           
  7896  016C                     ___awdiv@divisor:	
  7897                           ; 2 bytes @ 0x0
  7898                           
  7899  016C                     sleep@delay:	
  7900                           ; 2 bytes @ 0x0
  7901                           
  7902  016C                     BTTimeRemaining@elapsed:	
  7903                           ; 4 bytes @ 0x0
  7904                           
  7905                           
  7906                           ; 4 bytes @ 0x0
  7907  016C                     	ds	1
  7908  016D                     receiveBTBuffer@timeoutMS:
  7909  016D                     memset@k:	
  7910                           ; 2 bytes @ 0x1
  7911                           
  7912  016D                     strncmp@r:	
  7913                           ; 2 bytes @ 0x1
  7914                           
  7915                           
  7916                           ; 2 bytes @ 0x1
  7917  016D                     	ds	1
  7918  016E                     ?_strcat:
  7919  016E                     sendBTBuffer@length:	
  7920                           ; 1 bytes @ 0x2
  7921                           
  7922  016E                     ___awdiv@dividend:	
  7923                           ; 1 bytes @ 0x2
  7924                           
  7925  016E                     strcat@src:	
  7926                           ; 2 bytes @ 0x2
  7927                           
  7928                           
  7929                           ; 2 bytes @ 0x2
  7930  016E                     	ds	1
  7931  016F                     sendBTBuffer@blockIfBusy:
  7932  016F                     memset@s:	
  7933                           ; 1 bytes @ 0x3
  7934                           
  7935  016F                     strncmp@l:	
  7936                           ; 1 bytes @ 0x3
  7937                           
  7938                           
  7939                           ; 1 bytes @ 0x3
  7940  016F                     	ds	1
  7941                           
  7942                           	psect	cstackBANK1
  7943  00E8                     __pcstackBANK1:
  7944  00E8                     ?_TMR1_SetInterruptHandler:
  7945  00E8                     ?_TMR2_SetInterruptHandler:	
  7946                           ; 1 bytes @ 0x0
  7947                           
  7948  00E8                     ?_EUSART1_SetRxInterruptHandler:	
  7949                           ; 1 bytes @ 0x0
  7950                           
  7951  00E8                     ?_EUSART1_SetTxInterruptHandler:	
  7952                           ; 1 bytes @ 0x0
  7953                           
  7954  00E8                     ?_EUSART1_SetFramingErrorHandler:	
  7955                           ; 1 bytes @ 0x0
  7956                           
  7957  00E8                     ?_EUSART1_SetOverrunErrorHandler:	
  7958                           ; 1 bytes @ 0x0
  7959                           
  7960  00E8                     ?_EUSART1_SetErrorHandler:	
  7961                           ; 1 bytes @ 0x0
  7962                           
  7963  00E8                     ??_PMD_Initialize:	
  7964                           ; 1 bytes @ 0x0
  7965                           
  7966  00E8                     ??_OSCILLATOR_Initialize:	
  7967                           ; 1 bytes @ 0x0
  7968                           
  7969  00E8                     ??_ADCC_Initialize:	
  7970                           ; 1 bytes @ 0x0
  7971                           
  7972  00E8                     ?_IOCCF0_SetInterruptHandler:	
  7973                           ; 1 bytes @ 0x0
  7974                           
  7975  00E8                     ?_IOCCF2_SetInterruptHandler:	
  7976                           ; 1 bytes @ 0x0
  7977                           
  7978  00E8                     ?_TMR3_SetInterruptHandler:	
  7979                           ; 1 bytes @ 0x0
  7980                           
  7981  00E8                     ??_turnPowerOn:	
  7982                           ; 1 bytes @ 0x0
  7983                           
  7984  00E8                     ??_enableJoystick:	
  7985                           ; 1 bytes @ 0x0
  7986                           
  7987  00E8                     ??_powerIsOn:	
  7988                           ; 1 bytes @ 0x0
  7989                           
  7990  00E8                     ??_resetBTTimer:	
  7991                           ; 1 bytes @ 0x0
  7992                           
  7993  00E8                     ??_getUIType:	
  7994                           ; 1 bytes @ 0x0
  7995                           
  7996  00E8                     ??_getUISpeedMode:	
  7997                           ; 1 bytes @ 0x0
  7998                           
  7999  00E8                     ?_setBTTimeout:	
  8000                           ; 1 bytes @ 0x0
  8001                           
  8002  00E8                     ?_memset:	
  8003                           ; 1 bytes @ 0x0
  8004                           
  8005  00E8                     ?_int16ToBytes:	
  8006                           ; 1 bytes @ 0x0
  8007                           
  8008  00E8                     ??_calcCRC:	
  8009                           ; 1 bytes @ 0x0
  8010                           
  8011  00E8                     ??_SetSlaveTXRX:	
  8012                           ; 1 bytes @ 0x0
  8013                           
  8014  00E8                     ??_USER1_pressed:	
  8015                           ; 1 bytes @ 0x0
  8016                           
  8017  00E8                     ??_USER2_pressed:	
  8018                           ; 1 bytes @ 0x0
  8019                           
  8020  00E8                     ?_memcpy:	
  8021                           ; 1 bytes @ 0x0
  8022                           
  8023  00E8                     ?_strchr:	
  8024                           ; 1 bytes @ 0x0
  8025                           
  8026  00E8                     ??_TMR1_StartTimer:	
  8027                           ; 1 bytes @ 0x0
  8028                           
  8029  00E8                     ??_TMR1_StopTimer:	
  8030                           ; 1 bytes @ 0x0
  8031                           
  8032  00E8                     ??_EUSART1_is_tx_ready:	
  8033                           ; 1 bytes @ 0x0
  8034                           
  8035  00E8                     ??_EUSART1_is_rx_ready:	
  8036                           ; 1 bytes @ 0x0
  8037                           
  8038  00E8                     ??_EUSART1_Read:	
  8039                           ; 1 bytes @ 0x0
  8040                           
  8041  00E8                     ??_EUSART1_Write:	
  8042                           ; 1 bytes @ 0x0
  8043                           
  8044  00E8                     ??_disableJoystick:	
  8045                           ; 1 bytes @ 0x0
  8046                           
  8047  00E8                     ??_oneSec:	
  8048                           ; 1 bytes @ 0x0
  8049                           
  8050  00E8                     ?_setLEDColor:	
  8051                           ; 1 bytes @ 0x0
  8052                           
  8053  00E8                     ?___eecpymem:	
  8054                           ; 1 bytes @ 0x0
  8055                           
  8056  00E8                     ?___memcpyee:	
  8057                           ; 1 bytes @ 0x0
  8058                           
  8059  00E8                     ?_clampInt:	
  8060                           ; 1 bytes @ 0x0
  8061                           
  8062  00E8                     ?_strlen:	
  8063                           ; 2 bytes @ 0x0
  8064                           
  8065  00E8                     ?_strncmp:	
  8066                           ; 2 bytes @ 0x0
  8067                           
  8068  00E8                     ?_ADCC_GetSingleConversion:	
  8069                           ; 2 bytes @ 0x0
  8070                           
  8071  00E8                     ?___wmul:	
  8072                           ; 2 bytes @ 0x0
  8073                           
  8074  00E8                     ?___awmod:	
  8075                           ; 2 bytes @ 0x0
  8076                           
  8077  00E8                     ?_BTTimeRemaining:	
  8078                           ; 2 bytes @ 0x0
  8079                           
  8080  00E8                     ?_getTicksSince:	
  8081                           ; 4 bytes @ 0x0
  8082                           
  8083  00E8                     ?_getTicks:	
  8084                           ; 4 bytes @ 0x0
  8085                           
  8086  00E8                     ?_BTTimeWaiting:	
  8087                           ; 4 bytes @ 0x0
  8088                           
  8089  00E8                     ___eecpymem@from:	
  8090                           ; 4 bytes @ 0x0
  8091                           
  8092  00E8                     ___memcpyee@from:	
  8093                           ; 1 bytes @ 0x0
  8094                           
  8095  00E8                     memcpy@s1:	
  8096                           ; 1 bytes @ 0x0
  8097                           
  8098  00E8                     TMR1_SetInterruptHandler@InterruptHandler:	
  8099                           ; 1 bytes @ 0x0
  8100                           
  8101  00E8                     TMR2_SetInterruptHandler@InterruptHandler:	
  8102                           ; 2 bytes @ 0x0
  8103                           
  8104  00E8                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  8105                           ; 2 bytes @ 0x0
  8106                           
  8107  00E8                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  8108                           ; 2 bytes @ 0x0
  8109                           
  8110  00E8                     EUSART1_SetErrorHandler@interruptHandler:	
  8111                           ; 2 bytes @ 0x0
  8112                           
  8113  00E8                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  8114                           ; 2 bytes @ 0x0
  8115                           
  8116  00E8                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  8117                           ; 2 bytes @ 0x0
  8118                           
  8119  00E8                     IOCCF0_SetInterruptHandler@InterruptHandler:	
  8120                           ; 2 bytes @ 0x0
  8121                           
  8122  00E8                     IOCCF2_SetInterruptHandler@InterruptHandler:	
  8123                           ; 2 bytes @ 0x0
  8124                           
  8125  00E8                     TMR3_SetInterruptHandler@InterruptHandler:	
  8126                           ; 2 bytes @ 0x0
  8127                           
  8128  00E8                     int16ToBytes@num:	
  8129                           ; 2 bytes @ 0x0
  8130                           
  8131  00E8                     clampInt@num:	
  8132                           ; 2 bytes @ 0x0
  8133                           
  8134  00E8                     setLEDColor@RGB:	
  8135                           ; 2 bytes @ 0x0
  8136                           
  8137  00E8                     ___wmul@multiplier:	
  8138                           ; 2 bytes @ 0x0
  8139                           
  8140  00E8                     ___awmod@divisor:	
  8141                           ; 2 bytes @ 0x0
  8142                           
  8143  00E8                     memset@c:	
  8144                           ; 2 bytes @ 0x0
  8145                           
  8146  00E8                     strlen@s:	
  8147                           ; 2 bytes @ 0x0
  8148                           
  8149  00E8                     strchr@c:	
  8150                           ; 2 bytes @ 0x0
  8151                           
  8152  00E8                     strncmp@_r:	
  8153                           ; 2 bytes @ 0x0
  8154                           
  8155  00E8                     getTicksSince@from:	
  8156                           ; 2 bytes @ 0x0
  8157                           
  8158  00E8                     setBTTimeout@timeout:	
  8159                           ; 4 bytes @ 0x0
  8160                           
  8161                           
  8162                           ; 4 bytes @ 0x0
  8163  00E8                     	ds	1
  8164  00E9                     EUSART1_Read@readValue:
  8165  00E9                     EUSART1_Write@txData:	
  8166                           ; 1 bytes @ 0x1
  8167                           
  8168  00E9                     ___eecpymem@size:	
  8169                           ; 1 bytes @ 0x1
  8170                           
  8171  00E9                     ___memcpyee@size:	
  8172                           ; 1 bytes @ 0x1
  8173                           
  8174  00E9                     memcpy@n:	
  8175                           ; 1 bytes @ 0x1
  8176                           
  8177                           
  8178                           ; 2 bytes @ 0x1
  8179  00E9                     	ds	1
  8180  00EA                     ??_TMR1_SetInterruptHandler:
  8181  00EA                     ??_TMR2_SetInterruptHandler:	
  8182                           ; 1 bytes @ 0x2
  8183                           
  8184  00EA                     ??_EUSART1_SetRxInterruptHandler:	
  8185                           ; 1 bytes @ 0x2
  8186                           
  8187  00EA                     ??_EUSART1_SetTxInterruptHandler:	
  8188                           ; 1 bytes @ 0x2
  8189                           
  8190  00EA                     ??_EUSART1_SetFramingErrorHandler:	
  8191                           ; 1 bytes @ 0x2
  8192                           
  8193  00EA                     ??_EUSART1_SetOverrunErrorHandler:	
  8194                           ; 1 bytes @ 0x2
  8195                           
  8196  00EA                     ??_EUSART1_SetErrorHandler:	
  8197                           ; 1 bytes @ 0x2
  8198                           
  8199  00EA                     ??_PIN_MANAGER_Initialize:	
  8200                           ; 1 bytes @ 0x2
  8201                           
  8202  00EA                     ??_TMR3_Initialize:	
  8203                           ; 1 bytes @ 0x2
  8204                           
  8205  00EA                     ??_IOCCF0_SetInterruptHandler:	
  8206                           ; 1 bytes @ 0x2
  8207                           
  8208  00EA                     ??_IOCCF2_SetInterruptHandler:	
  8209                           ; 1 bytes @ 0x2
  8210                           
  8211  00EA                     ??_TMR3_SetInterruptHandler:	
  8212                           ; 1 bytes @ 0x2
  8213                           
  8214  00EA                     ??_initTimers:	
  8215                           ; 1 bytes @ 0x2
  8216                           
  8217  00EA                     ??_strlen:	
  8218                           ; 1 bytes @ 0x2
  8219                           
  8220  00EA                     ??_strchr:	
  8221                           ; 1 bytes @ 0x2
  8222                           
  8223  00EA                     ??_TMR1_Initialize:	
  8224                           ; 1 bytes @ 0x2
  8225                           
  8226  00EA                     ??_TMR2_Initialize:	
  8227                           ; 1 bytes @ 0x2
  8228                           
  8229  00EA                     ??_EUSART1_Initialize:	
  8230                           ; 1 bytes @ 0x2
  8231                           
  8232  00EA                     ??_setLEDColor:	
  8233                           ; 1 bytes @ 0x2
  8234                           
  8235  00EA                     ??___eecpymem:	
  8236                           ; 1 bytes @ 0x2
  8237                           
  8238  00EA                     ??___memcpyee:	
  8239                           ; 1 bytes @ 0x2
  8240                           
  8241  00EA                     int16ToBytes@ndata:	
  8242                           ; 1 bytes @ 0x2
  8243                           
  8244  00EA                     strchr@s:	
  8245                           ; 1 bytes @ 0x2
  8246                           
  8247  00EA                     clampInt@limit:	
  8248                           ; 1 bytes @ 0x2
  8249                           
  8250  00EA                     ___wmul@multiplicand:	
  8251                           ; 2 bytes @ 0x2
  8252                           
  8253  00EA                     ___awmod@dividend:	
  8254                           ; 2 bytes @ 0x2
  8255                           
  8256  00EA                     memset@n:	
  8257                           ; 2 bytes @ 0x2
  8258                           
  8259  00EA                     strncmp@n:	
  8260                           ; 2 bytes @ 0x2
  8261                           
  8262                           
  8263                           ; 2 bytes @ 0x2
  8264  00EA                     	ds	1
  8265  00EB                     ??_int16ToBytes:
  8266  00EB                     ??_memcpy:	
  8267                           ; 1 bytes @ 0x3
  8268                           
  8269  00EB                     ??_SYSTEM_Initialize:	
  8270                           ; 1 bytes @ 0x3
  8271                           
  8272  00EB                     ??_ADCC_GetSingleConversion:	
  8273                           ; 1 bytes @ 0x3
  8274                           
  8275  00EB                     ADCC_GetSingleConversion@channel:	
  8276                           ; 1 bytes @ 0x3
  8277                           
  8278  00EB                     calcCRC@i:	
  8279                           ; 1 bytes @ 0x3
  8280                           
  8281  00EB                     ___eecpymem@cp:	
  8282                           ; 1 bytes @ 0x3
  8283                           
  8284  00EB                     ___memcpyee@ptr:	
  8285                           ; 1 bytes @ 0x3
  8286                           
  8287  00EB                     strlen@a:	
  8288                           ; 1 bytes @ 0x3
  8289                           
  8290                           
  8291                           ; 2 bytes @ 0x3
  8292  00EB                     	ds	1
  8293  00EC                     ??_BTTimeRemaining:
  8294  00EC                     ??_getTicksSince:	
  8295                           ; 1 bytes @ 0x4
  8296                           
  8297  00EC                     ??_getTicks:	
  8298                           ; 1 bytes @ 0x4
  8299                           
  8300  00EC                     ??_setBTTimeout:	
  8301                           ; 1 bytes @ 0x4
  8302                           
  8303  00EC                     ??_memset:	
  8304                           ; 1 bytes @ 0x4
  8305                           
  8306  00EC                     ??_clampInt:	
  8307                           ; 1 bytes @ 0x4
  8308                           
  8309  00EC                     ??_strncmp:	
  8310                           ; 1 bytes @ 0x4
  8311                           
  8312  00EC                     ??_BTTimeWaiting:	
  8313                           ; 1 bytes @ 0x4
  8314                           
  8315  00EC                     ??___wmul:	
  8316                           ; 1 bytes @ 0x4
  8317                           
  8318  00EC                     ??___awmod:	
  8319                           ; 1 bytes @ 0x4
  8320                           
  8321  00EC                     calcCRC@count:	
  8322                           ; 1 bytes @ 0x4
  8323                           
  8324  00EC                     ___eecpymem@to:	
  8325                           ; 1 bytes @ 0x4
  8326                           
  8327  00EC                     ___memcpyee@to:	
  8328                           ; 1 bytes @ 0x4
  8329                           
  8330  00EC                     memcpy@tmp:	
  8331                           ; 1 bytes @ 0x4
  8332                           
  8333  00EC                     ___wmul@product:	
  8334                           ; 1 bytes @ 0x4
  8335                           
  8336                           
  8337                           ; 2 bytes @ 0x4
  8338  00EC                     	ds	1
  8339  00ED                     ??_sendBTBuffer:
  8340  00ED                     ?_strstr:	
  8341                           ; 1 bytes @ 0x5
  8342                           
  8343  00ED                     ?_strcpy:	
  8344                           ; 1 bytes @ 0x5
  8345                           
  8346  00ED                     ??___eetoc:	
  8347                           ; 1 bytes @ 0x5
  8348                           
  8349  00ED                     ?___ctoee:	
  8350                           ; 1 bytes @ 0x5
  8351                           
  8352  00ED                     calcCRC@ptr:	
  8353                           ; 1 bytes @ 0x5
  8354                           
  8355  00ED                     ___ctoee@data:	
  8356                           ; 1 bytes @ 0x5
  8357                           
  8358  00ED                     ___awmod@counter:	
  8359                           ; 1 bytes @ 0x5
  8360                           
  8361  00ED                     memcpy@d1:	
  8362                           ; 1 bytes @ 0x5
  8363                           
  8364  00ED                     strcpy@src:	
  8365                           ; 1 bytes @ 0x5
  8366                           
  8367  00ED                     strstr@n:	
  8368                           ; 2 bytes @ 0x5
  8369                           
  8370                           
  8371                           ; 2 bytes @ 0x5
  8372  00ED                     	ds	1
  8373  00EE                     ??_initSerial:
  8374  00EE                     ??___ctoee:	
  8375                           ; 1 bytes @ 0x6
  8376                           
  8377  00EE                     ??___awdiv:	
  8378                           ; 1 bytes @ 0x6
  8379                           
  8380  00EE                     ___eetoc@addr:	
  8381                           ; 1 bytes @ 0x6
  8382                           
  8383  00EE                     ___awmod@sign:	
  8384                           ; 1 bytes @ 0x6
  8385                           
  8386  00EE                     memcpy@d:	
  8387                           ; 1 bytes @ 0x6
  8388                           
  8389  00EE                     calcCRC@crc:	
  8390                           ; 1 bytes @ 0x6
  8391                           
  8392  00EE                     int16ToBytes@i:	
  8393                           ; 2 bytes @ 0x6
  8394                           
  8395                           
  8396                           ; 2 bytes @ 0x6
  8397  00EE                     	ds	1
  8398  00EF                     ??_setJoystickSpeed:
  8399  00EF                     ??_int16cat:	
  8400                           ; 1 bytes @ 0x7
  8401                           
  8402  00EF                     setJoystickSpeed@jsSpeedMode:	
  8403                           ; 1 bytes @ 0x7
  8404                           
  8405  00EF                     ___eetoc@data:	
  8406                           ; 1 bytes @ 0x7
  8407                           
  8408  00EF                     ___ctoee@addr:	
  8409                           ; 1 bytes @ 0x7
  8410                           
  8411  00EF                     memcpy@s:	
  8412                           ; 1 bytes @ 0x7
  8413                           
  8414  00EF                     strcat@dest:	
  8415                           ; 1 bytes @ 0x7
  8416                           
  8417                           
  8418                           ; 1 bytes @ 0x7
  8419  00EF                     	ds	1
  8420  00F0                     ??_initJoystick:
  8421  00F0                     ??_initConfiguration:	
  8422                           ; 1 bytes @ 0x8
  8423                           
  8424  00F0                     ??_sleep:	
  8425                           ; 1 bytes @ 0x8
  8426                           
  8427  00F0                     ??_turnPowerOff:	
  8428                           ; 1 bytes @ 0x8
  8429                           
  8430  00F0                     ??_stopMotion:	
  8431                           ; 1 bytes @ 0x8
  8432                           
  8433  00F0                     ??_flushBTRXbuffer:	
  8434                           ; 1 bytes @ 0x8
  8435                           
  8436  00F0                     ??_setSerialBaud:	
  8437                           ; 1 bytes @ 0x8
  8438                           
  8439  00F0                     ??_setBTBaudRatesTo38400:	
  8440                           ; 1 bytes @ 0x8
  8441                           
  8442  00F0                     ??_pulseLEDColor:	
  8443                           ; 1 bytes @ 0x8
  8444                           
  8445  00F0                     ??_main:	
  8446                           ; 1 bytes @ 0x8
  8447                           
  8448  00F0                     ??_SetPowerdownTXRX:	
  8449                           ; 1 bytes @ 0x8
  8450                           
  8451  00F0                     ??_SetDualReceive:	
  8452                           ; 1 bytes @ 0x8
  8453                           
  8454  00F0                     ??_SetMasterTXRX:	
  8455                           ; 1 bytes @ 0x8
  8456                           
  8457  00F0                     ??_SetSlaveTXMasterRX:	
  8458                           ; 1 bytes @ 0x8
  8459                           
  8460                           
  8461                           	psect	cstackCOMMON
  8462  0070                     __pcstackCOMMON:	
  8463                           ; 1 bytes @ 0x8
  8464                           
  8465  0070                     ?_TMR1_DefaultInterruptHandler:
  8466  0070                     ??_TMR1_DefaultInterruptHandler:	
  8467                           ; 1 bytes @ 0x0
  8468                           
  8469  0070                     ?_TMR1_CallBack:	
  8470                           ; 1 bytes @ 0x0
  8471                           
  8472  0070                     ?_TMR2_DefaultInterruptHandler:	
  8473                           ; 1 bytes @ 0x0
  8474                           
  8475  0070                     ??_TMR2_DefaultInterruptHandler:	
  8476                           ; 1 bytes @ 0x0
  8477                           
  8478  0070                     ?_TMR2_CallBack:	
  8479                           ; 1 bytes @ 0x0
  8480                           
  8481  0070                     ?_EUSART1_Receive_ISR:	
  8482                           ; 1 bytes @ 0x0
  8483                           
  8484  0070                     ?_EUSART1_Transmit_ISR:	
  8485                           ; 1 bytes @ 0x0
  8486                           
  8487  0070                     ??_EUSART1_Transmit_ISR:	
  8488                           ; 1 bytes @ 0x0
  8489                           
  8490  0070                     ?_EUSART1_DefaultFramingErrorHandler:	
  8491                           ; 1 bytes @ 0x0
  8492                           
  8493  0070                     ??_EUSART1_DefaultFramingErrorHandler:	
  8494                           ; 1 bytes @ 0x0
  8495                           
  8496  0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
  8497                           ; 1 bytes @ 0x0
  8498                           
  8499  0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
  8500                           ; 1 bytes @ 0x0
  8501                           
  8502  0070                     ?_EUSART1_DefaultErrorHandler:	
  8503                           ; 1 bytes @ 0x0
  8504                           
  8505  0070                     ?_EUSART1_RxDataHandler:	
  8506                           ; 1 bytes @ 0x0
  8507                           
  8508  0070                     ??_EUSART1_RxDataHandler:	
  8509                           ; 1 bytes @ 0x0
  8510                           
  8511  0070                     ?_PMD_Initialize:	
  8512                           ; 1 bytes @ 0x0
  8513                           
  8514  0070                     ?_PIN_MANAGER_Initialize:	
  8515                           ; 1 bytes @ 0x0
  8516                           
  8517  0070                     ?_OSCILLATOR_Initialize:	
  8518                           ; 1 bytes @ 0x0
  8519                           
  8520  0070                     ?_ADCC_Initialize:	
  8521                           ; 1 bytes @ 0x0
  8522                           
  8523  0070                     ?_TMR3_Initialize:	
  8524                           ; 1 bytes @ 0x0
  8525                           
  8526  0070                     ?_IOCCF0_DefaultInterruptHandler:	
  8527                           ; 1 bytes @ 0x0
  8528                           
  8529  0070                     ??_IOCCF0_DefaultInterruptHandler:	
  8530                           ; 1 bytes @ 0x0
  8531                           
  8532  0070                     ?_IOCCF2_DefaultInterruptHandler:	
  8533                           ; 1 bytes @ 0x0
  8534                           
  8535  0070                     ??_IOCCF2_DefaultInterruptHandler:	
  8536                           ; 1 bytes @ 0x0
  8537                           
  8538  0070                     ?_IOCCF0_ISR:	
  8539                           ; 1 bytes @ 0x0
  8540                           
  8541  0070                     ??_IOCCF0_ISR:	
  8542                           ; 1 bytes @ 0x0
  8543                           
  8544  0070                     ?_IOCCF2_ISR:	
  8545                           ; 1 bytes @ 0x0
  8546                           
  8547  0070                     ??_IOCCF2_ISR:	
  8548                           ; 1 bytes @ 0x0
  8549                           
  8550  0070                     ?_TMR3_DefaultInterruptHandler:	
  8551                           ; 1 bytes @ 0x0
  8552                           
  8553  0070                     ??_TMR3_DefaultInterruptHandler:	
  8554                           ; 1 bytes @ 0x0
  8555                           
  8556  0070                     ?_TMR3_CallBack:	
  8557                           ; 1 bytes @ 0x0
  8558                           
  8559  0070                     ?_initTimers:	
  8560                           ; 1 bytes @ 0x0
  8561                           
  8562  0070                     ?_initSerial:	
  8563                           ; 1 bytes @ 0x0
  8564                           
  8565  0070                     ?_initUI:	
  8566                           ; 1 bytes @ 0x0
  8567                           
  8568  0070                     ?_initJoystick:	
  8569                           ; 1 bytes @ 0x0
  8570                           
  8571  0070                     ?_initConfiguration:	
  8572                           ; 1 bytes @ 0x0
  8573                           
  8574  0070                     ?_turnPowerOn:	
  8575                           ; 1 bytes @ 0x0
  8576                           
  8577  0070                     ?_showStartup:	
  8578                           ; 1 bytes @ 0x0
  8579                           
  8580  0070                     ?_enableJoystick:	
  8581                           ; 1 bytes @ 0x0
  8582                           
  8583  0070                     ?_runUI:	
  8584                           ; 1 bytes @ 0x0
  8585                           
  8586  0070                     ?_turnPowerOff:	
  8587                           ; 1 bytes @ 0x0
  8588                           
  8589  0070                     ?_showShutdown:	
  8590                           ; 1 bytes @ 0x0
  8591                           
  8592  0070                     ?_powerIsOn:	
  8593                           ; 1 bytes @ 0x0
  8594                           
  8595  0070                     ?_resetBTTimer:	
  8596                           ; 1 bytes @ 0x0
  8597                           
  8598  0070                     ?_setJoystickType:	
  8599                           ; 1 bytes @ 0x0
  8600                           
  8601  0070                     ?_getUIType:	
  8602                           ; 1 bytes @ 0x0
  8603                           
  8604  0070                     ?_setJoystickSpeed:	
  8605                           ; 1 bytes @ 0x0
  8606                           
  8607  0070                     ?_getUISpeedMode:	
  8608                           ; 1 bytes @ 0x0
  8609                           
  8610  0070                     ?_readJoystick:	
  8611                           ; 1 bytes @ 0x0
  8612                           
  8613  0070                     ?_stopMotion:	
  8614                           ; 1 bytes @ 0x0
  8615                           
  8616  0070                     ?_sendBTEstopCmd:	
  8617                           ; 1 bytes @ 0x0
  8618                           
  8619  0070                     ?_readButtonJoystick:	
  8620                           ; 1 bytes @ 0x0
  8621                           
  8622  0070                     ?_readPotJoystick:	
  8623                           ; 1 bytes @ 0x0
  8624                           
  8625  0070                     ?_calculateMotion:	
  8626                           ; 1 bytes @ 0x0
  8627                           
  8628  0070                     ?_flushBTRXbuffer:	
  8629                           ; 1 bytes @ 0x0
  8630                           
  8631  0070                     ?_timeKeeper:	
  8632                           ; 1 bytes @ 0x0
  8633                           
  8634  0070                     ??_timeKeeper:	
  8635                           ; 1 bytes @ 0x0
  8636                           
  8637  0070                     ?_SetSlaveTXRX:	
  8638                           ; 1 bytes @ 0x0
  8639                           
  8640  0070                     ?_setBTBaudRatesTo38400:	
  8641                           ; 1 bytes @ 0x0
  8642                           
  8643  0070                     ?_USER1_pressed:	
  8644                           ; 1 bytes @ 0x0
  8645                           
  8646  0070                     ?_USER2_pressed:	
  8647                           ; 1 bytes @ 0x0
  8648                           
  8649  0070                     ?_UI_PWM_handler:	
  8650                           ; 1 bytes @ 0x0
  8651                           
  8652  0070                     ??_UI_PWM_handler:	
  8653                           ; 1 bytes @ 0x0
  8654                           
  8655  0070                     ?_bumpUISpeedMode:	
  8656                           ; 1 bytes @ 0x0
  8657                           
  8658  0070                     ?_bumpUIType:	
  8659                           ; 1 bytes @ 0x0
  8660                           
  8661  0070                     ?_TMR1_Initialize:	
  8662                           ; 1 bytes @ 0x0
  8663                           
  8664  0070                     ?_TMR1_StartTimer:	
  8665                           ; 1 bytes @ 0x0
  8666                           
  8667  0070                     ?_TMR1_StopTimer:	
  8668                           ; 1 bytes @ 0x0
  8669                           
  8670  0070                     ?_TMR1_WriteTimer:	
  8671                           ; 1 bytes @ 0x0
  8672                           
  8673  0070                     ?_TMR1_ISR:	
  8674                           ; 1 bytes @ 0x0
  8675                           
  8676  0070                     ?_TMR2_Initialize:	
  8677                           ; 1 bytes @ 0x0
  8678                           
  8679  0070                     ?_TMR2_ISR:	
  8680                           ; 1 bytes @ 0x0
  8681                           
  8682  0070                     ?_EUSART1_Initialize:	
  8683                           ; 1 bytes @ 0x0
  8684                           
  8685  0070                     ?_EUSART1_is_tx_ready:	
  8686                           ; 1 bytes @ 0x0
  8687                           
  8688  0070                     ?_EUSART1_is_rx_ready:	
  8689                           ; 1 bytes @ 0x0
  8690                           
  8691  0070                     ?_EUSART1_Read:	
  8692                           ; 1 bytes @ 0x0
  8693                           
  8694  0070                     ?_EUSART1_Write:	
  8695                           ; 1 bytes @ 0x0
  8696                           
  8697  0070                     ?_SYSTEM_Initialize:	
  8698                           ; 1 bytes @ 0x0
  8699                           
  8700  0070                     ?_PIN_MANAGER_IOC:	
  8701                           ; 1 bytes @ 0x0
  8702                           
  8703  0070                     ??_PIN_MANAGER_IOC:	
  8704                           ; 1 bytes @ 0x0
  8705                           
  8706  0070                     ?_TMR3_WriteTimer:	
  8707                           ; 1 bytes @ 0x0
  8708                           
  8709  0070                     ?_TMR3_ISR:	
  8710                           ; 1 bytes @ 0x0
  8711                           
  8712  0070                     ?_INTERRUPT_InterruptManager:	
  8713                           ; 1 bytes @ 0x0
  8714                           
  8715  0070                     ?_main:	
  8716                           ; 1 bytes @ 0x0
  8717                           
  8718  0070                     ?_disableJoystick:	
  8719                           ; 1 bytes @ 0x0
  8720                           
  8721  0070                     ?_oneSec:	
  8722                           ; 1 bytes @ 0x0
  8723                           
  8724  0070                     ?_SetPowerdownTXRX:	
  8725                           ; 1 bytes @ 0x0
  8726                           
  8727  0070                     ?_SetDualReceive:	
  8728                           ; 1 bytes @ 0x0
  8729                           
  8730  0070                     ?_SetMasterTXRX:	
  8731                           ; 1 bytes @ 0x0
  8732                           
  8733  0070                     ?_SetSlaveTXMasterRX:	
  8734                           ; 1 bytes @ 0x0
  8735                           
  8736  0070                     ?_pairBluetoothDevices:	
  8737                           ; 1 bytes @ 0x0
  8738                           
  8739  0070                     ?_doFactoryReset:	
  8740                           ; 1 bytes @ 0x0
  8741                           
  8742  0070                     ?___eetoc:	
  8743                           ; 1 bytes @ 0x0
  8744                           
  8745  0070                     ?i1_EUSART1_is_tx_ready:	
  8746                           ; 1 bytes @ 0x0
  8747                           
  8748  0070                     ??i1_EUSART1_is_tx_ready:	
  8749                           ; 1 bytes @ 0x0
  8750                           
  8751  0070                     ?i1_EUSART1_is_rx_ready:	
  8752                           ; 1 bytes @ 0x0
  8753                           
  8754  0070                     ??i1_EUSART1_is_rx_ready:	
  8755                           ; 1 bytes @ 0x0
  8756                           
  8757  0070                     ?i1_EUSART1_Read:	
  8758                           ; 1 bytes @ 0x0
  8759                           
  8760  0070                     ??i1_EUSART1_Read:	
  8761                           ; 1 bytes @ 0x0
  8762                           
  8763  0070                     ?i1_EUSART1_Write:	
  8764                           ; 1 bytes @ 0x0
  8765                           
  8766  0070                     ??i1_EUSART1_Write:	
  8767                           ; 1 bytes @ 0x0
  8768                           
  8769  0070                     ?i1_stopMotion:	
  8770                           ; 1 bytes @ 0x0
  8771                           
  8772  0070                     ??i1_calcCRC:	
  8773                           ; 1 bytes @ 0x0
  8774                           
  8775  0070                     ?i1_int16ToBytes:	
  8776                           ; 1 bytes @ 0x0
  8777                           
  8778  0070                     ?i1_resetBTTimer:	
  8779                           ; 1 bytes @ 0x0
  8780                           
  8781  0070                     ??i1_resetBTTimer:	
  8782                           ; 1 bytes @ 0x0
  8783                           
  8784  0070                     ?i1_setBTTimeout:	
  8785                           ; 1 bytes @ 0x0
  8786                           
  8787  0070                     ?i1_SetSlaveTXRX:	
  8788                           ; 1 bytes @ 0x0
  8789                           
  8790  0070                     ??i1_SetSlaveTXRX:	
  8791                           ; 1 bytes @ 0x0
  8792                           
  8793  0070                     ?i1_turnPowerOn:	
  8794                           ; 1 bytes @ 0x0
  8795                           
  8796  0070                     ??i1_turnPowerOn:	
  8797                           ; 1 bytes @ 0x0
  8798                           
  8799  0070                     ?_limitSpeed:	
  8800                           ; 1 bytes @ 0x0
  8801                           
  8802  0070                     ?_calcCRC:	
  8803                           ; 2 bytes @ 0x0
  8804                           
  8805  0070                     ?i1_ADCC_GetSingleConversion:	
  8806                           ; 2 bytes @ 0x0
  8807                           
  8808  0070                     ?i1_calcCRC:	
  8809                           ; 2 bytes @ 0x0
  8810                           
  8811  0070                     ?i1_clampInt:	
  8812                           ; 2 bytes @ 0x0
  8813                           
  8814  0070                     ?i1___wmul:	
  8815                           ; 2 bytes @ 0x0
  8816                           
  8817  0070                     ?i1___awdiv:	
  8818                           ; 2 bytes @ 0x0
  8819                           
  8820  0070                     ?i1_strlen:	
  8821                           ; 2 bytes @ 0x0
  8822                           
  8823  0070                     ?___lmul:	
  8824                           ; 2 bytes @ 0x0
  8825                           
  8826  0070                     ?___aldiv:	
  8827                           ; 4 bytes @ 0x0
  8828                           
  8829  0070                     ?i1_getTicks:	
  8830                           ; 4 bytes @ 0x0
  8831                           
  8832  0070                     ?i1_getTicksSince:	
  8833                           ; 4 bytes @ 0x0
  8834                           
  8835  0070                     TMR1_WriteTimer@timerVal:	
  8836                           ; 4 bytes @ 0x0
  8837                           
  8838  0070                     TMR3_WriteTimer@timerVal:	
  8839                           ; 2 bytes @ 0x0
  8840                           
  8841  0070                     limitSpeed@targetFP:	
  8842                           ; 2 bytes @ 0x0
  8843                           
  8844  0070                     i1int16ToBytes@num:	
  8845                           ; 2 bytes @ 0x0
  8846                           
  8847  0070                     i1clampInt@num:	
  8848                           ; 2 bytes @ 0x0
  8849                           
  8850  0070                     i1___wmul@multiplier:	
  8851                           ; 2 bytes @ 0x0
  8852                           
  8853  0070                     i1___awdiv@divisor:	
  8854                           ; 2 bytes @ 0x0
  8855                           
  8856  0070                     i1strlen@s:	
  8857                           ; 2 bytes @ 0x0
  8858                           
  8859  0070                     ___lmul@multiplier:	
  8860                           ; 2 bytes @ 0x0
  8861                           
  8862  0070                     ___aldiv@divisor:	
  8863                           ; 4 bytes @ 0x0
  8864                           
  8865  0070                     i1getTicksSince@from:	
  8866                           ; 4 bytes @ 0x0
  8867                           
  8868  0070                     i1setBTTimeout@timeout:	
  8869                           ; 4 bytes @ 0x0
  8870                           
  8871                           
  8872                           ; 4 bytes @ 0x0
  8873  0070                     	ds	1
  8874  0071                     ??_EUSART1_Receive_ISR:
  8875  0071                     ??_EUSART1_DefaultErrorHandler:	
  8876                           ; 1 bytes @ 0x1
  8877                           
  8878  0071                     ??_TMR3_CallBack:	
  8879                           ; 1 bytes @ 0x1
  8880                           
  8881  0071                     i1EUSART1_Read@readValue:	
  8882                           ; 1 bytes @ 0x1
  8883                           
  8884  0071                     i1EUSART1_Write@txData:	
  8885                           ; 1 bytes @ 0x1
  8886                           
  8887                           
  8888                           ; 1 bytes @ 0x1
  8889  0071                     	ds	1
  8890  0072                     ??_TMR1_WriteTimer:
  8891  0072                     ??_TMR3_WriteTimer:	
  8892                           ; 1 bytes @ 0x2
  8893                           
  8894  0072                     ??_TMR3_ISR:	
  8895                           ; 1 bytes @ 0x2
  8896                           
  8897  0072                     ??i1_strlen:	
  8898                           ; 1 bytes @ 0x2
  8899                           
  8900  0072                     i1int16ToBytes@ndata:	
  8901                           ; 1 bytes @ 0x2
  8902                           
  8903  0072                     limitSpeed@limitedFP:	
  8904                           ; 1 bytes @ 0x2
  8905                           
  8906  0072                     i1clampInt@limit:	
  8907                           ; 2 bytes @ 0x2
  8908                           
  8909  0072                     i1___wmul@multiplicand:	
  8910                           ; 2 bytes @ 0x2
  8911                           
  8912  0072                     i1___awdiv@dividend:	
  8913                           ; 2 bytes @ 0x2
  8914                           
  8915                           
  8916                           ; 2 bytes @ 0x2
  8917  0072                     	ds	1
  8918  0073                     ??i1_ADCC_GetSingleConversion:
  8919  0073                     ??i1_int16ToBytes:	
  8920                           ; 1 bytes @ 0x3
  8921                           
  8922  0073                     i1ADCC_GetSingleConversion@channel:	
  8923                           ; 1 bytes @ 0x3
  8924                           
  8925  0073                     i1calcCRC@i:	
  8926                           ; 1 bytes @ 0x3
  8927                           
  8928  0073                     i1strlen@a:	
  8929                           ; 1 bytes @ 0x3
  8930                           
  8931                           
  8932                           ; 2 bytes @ 0x3
  8933  0073                     	ds	1
  8934  0074                     ??_TMR2_CallBack:
  8935  0074                     ??_TMR2_ISR:	
  8936                           ; 1 bytes @ 0x4
  8937                           
  8938  0074                     ??i1_clampInt:	
  8939                           ; 1 bytes @ 0x4
  8940                           
  8941  0074                     ??i1_getTicks:	
  8942                           ; 1 bytes @ 0x4
  8943                           
  8944  0074                     ??i1_getTicksSince:	
  8945                           ; 1 bytes @ 0x4
  8946                           
  8947  0074                     ??i1_setBTTimeout:	
  8948                           ; 1 bytes @ 0x4
  8949                           
  8950  0074                     ??i1___wmul:	
  8951                           ; 1 bytes @ 0x4
  8952                           
  8953  0074                     ??i1___awdiv:	
  8954                           ; 1 bytes @ 0x4
  8955                           
  8956  0074                     i1calcCRC@count:	
  8957                           ; 1 bytes @ 0x4
  8958                           
  8959  0074                     limitSpeed@accelFP:	
  8960                           ; 1 bytes @ 0x4
  8961                           
  8962  0074                     i1___wmul@product:	
  8963                           ; 2 bytes @ 0x4
  8964                           
  8965  0074                     ___lmul@multiplicand:	
  8966                           ; 2 bytes @ 0x4
  8967                           
  8968  0074                     ___aldiv@dividend:	
  8969                           ; 4 bytes @ 0x4
  8970                           
  8971                           
  8972                           ; 4 bytes @ 0x4
  8973  0074                     	ds	1
  8974  0075                     ?i1_sendBTBuffer:
  8975  0075                     ?i1_strcpy:	
  8976                           ; 1 bytes @ 0x5
  8977                           
  8978  0075                     i1calcCRC@ptr:	
  8979                           ; 1 bytes @ 0x5
  8980                           
  8981  0075                     i1___awdiv@counter:	
  8982                           ; 1 bytes @ 0x5
  8983                           
  8984  0075                     i1sendBTBuffer@buffer:	
  8985                           ; 1 bytes @ 0x5
  8986                           
  8987  0075                     i1strcpy@src:	
  8988                           ; 2 bytes @ 0x5
  8989                           
  8990                           
  8991                           ; 2 bytes @ 0x5
  8992  0075                     	ds	1
  8993  0076                     ??_limitSpeed:
  8994  0076                     i1___awdiv@sign:	
  8995                           ; 1 bytes @ 0x6
  8996                           
  8997  0076                     i1calcCRC@crc:	
  8998                           ; 1 bytes @ 0x6
  8999                           
  9000  0076                     i1int16ToBytes@i:	
  9001                           ; 2 bytes @ 0x6
  9002                           
  9003                           
  9004                           ; 2 bytes @ 0x6
  9005  0076                     	ds	1
  9006  0077                     ??i1_strcpy:
  9007  0077                     i1sendBTBuffer@length:	
  9008                           ; 1 bytes @ 0x7
  9009                           
  9010  0077                     i1___awdiv@quotient:	
  9011                           ; 1 bytes @ 0x7
  9012                           
  9013                           
  9014                           ; 2 bytes @ 0x7
  9015  0077                     	ds	1
  9016  0078                     ??___lmul:
  9017  0078                     ??___aldiv:	
  9018                           ; 1 bytes @ 0x8
  9019                           
  9020  0078                     i1sendBTBuffer@blockIfBusy:	
  9021                           ; 1 bytes @ 0x8
  9022                           
  9023  0078                     ___lmul@product:	
  9024                           ; 1 bytes @ 0x8
  9025                           
  9026                           
  9027                           ; 4 bytes @ 0x8
  9028  0078                     	ds	1
  9029  0079                     ??_sendBTEstopCmd:
  9030  0079                     ??i1_sendBTBuffer:	
  9031                           ; 1 bytes @ 0x9
  9032                           
  9033  0079                     ?i1_int16cat:	
  9034                           ; 1 bytes @ 0x9
  9035                           
  9036  0079                     limitSpeed@speedFP:	
  9037                           ; 1 bytes @ 0x9
  9038                           
  9039  0079                     i1int16cat@num:	
  9040                           ; 2 bytes @ 0x9
  9041                           
  9042  0079                     i1strcpy@s:	
  9043                           ; 2 bytes @ 0x9
  9044                           
  9045                           
  9046                           ; 2 bytes @ 0x9
  9047  0079                     	ds	2
  9048  007B                     ??i1_int16cat:
  9049  007B                     i1strcpy@dest:	
  9050                           ; 1 bytes @ 0xB
  9051                           
  9052  007B                     limitSpeed@diffFP:	
  9053                           ; 1 bytes @ 0xB
  9054                           
  9055                           
  9056                           ; 2 bytes @ 0xB
  9057  007B                     	ds	1
  9058  007C                     i1strcpy@d:
  9059                           
  9060                           ; 1 bytes @ 0xC
  9061  007C                     	ds	1
  9062  007D                     ??_calculateMotion:
  9063  007D                     i1strcat@dest:	
  9064                           ; 1 bytes @ 0xD
  9065                           
  9066                           
  9067                           ; 1 bytes @ 0xD
  9068  007D                     	ds	1
  9069  007E                     ??_TMR1_CallBack:
  9070  007E                     ??_TMR1_ISR:	
  9071                           ; 1 bytes @ 0xE
  9072                           
  9073  007E                     ??_INTERRUPT_InterruptManager:	
  9074                           ; 1 bytes @ 0xE
  9075                           
  9076  007E                     ??i1_stopMotion:	
  9077                           ; 1 bytes @ 0xE
  9078                           
  9079                           
  9080                           	psect	cstackBANK0
  9081  0020                     __pcstackBANK0:	
  9082                           ; 1 bytes @ 0xE
  9083                           
  9084  0020                     ?i1_strcat:
  9085  0020                     ___aldiv@counter:	
  9086                           ; 1 bytes @ 0x0
  9087                           
  9088  0020                     i1int16cat@suppress:	
  9089                           ; 1 bytes @ 0x0
  9090                           
  9091  0020                     i1strcat@src:	
  9092                           ; 1 bytes @ 0x0
  9093                           
  9094                           
  9095                           ; 2 bytes @ 0x0
  9096  0020                     	ds	1
  9097  0021                     ___aldiv@sign:
  9098  0021                     i1int16cat@digit:	
  9099                           ; 1 bytes @ 0x1
  9100                           
  9101                           
  9102                           ; 2 bytes @ 0x1
  9103  0021                     	ds	1
  9104  0022                     ??i1_strcat:
  9105  0022                     ___aldiv@quotient:	
  9106                           ; 1 bytes @ 0x2
  9107                           
  9108                           
  9109                           ; 4 bytes @ 0x2
  9110  0022                     	ds	1
  9111  0023                     i1int16cat@divider:
  9112                           
  9113                           ; 2 bytes @ 0x3
  9114  0023                     	ds	2
  9115  0025                     i1int16cat@bufP:
  9116                           
  9117                           ; 1 bytes @ 0x5
  9118  0025                     	ds	1
  9119  0026                     ?i1_sendBTSpeedCmd:
  9120  0026                     ?_deadband:	
  9121                           ; 1 bytes @ 0x6
  9122                           
  9123  0026                     deadband@jsValue:	
  9124                           ; 2 bytes @ 0x6
  9125                           
  9126  0026                     i1sendBTSpeedCmd@axial:	
  9127                           ; 2 bytes @ 0x6
  9128                           
  9129                           
  9130                           ; 2 bytes @ 0x6
  9131  0026                     	ds	2
  9132  0028                     deadband@center:
  9133  0028                     i1sendBTSpeedCmd@yaw:	
  9134                           ; 2 bytes @ 0x8
  9135                           
  9136                           
  9137                           ; 2 bytes @ 0x8
  9138  0028                     	ds	2
  9139  002A                     ??_deadband:
  9140  002A                     i1sendBTSpeedCmd@blockIfBusy:	
  9141                           ; 1 bytes @ 0xA
  9142                           
  9143                           
  9144                           ; 1 bytes @ 0xA
  9145  002A                     	ds	1
  9146  002B                     ??i1_sendBTSpeedCmd:
  9147                           
  9148                           ; 1 bytes @ 0xB
  9149  002B                     	ds	2
  9150  002D                     ??_readButtonJoystick:
  9151                           
  9152                           ; 1 bytes @ 0xD
  9153  002D                     	ds	3
  9154  0030                     ??_readPotJoystick:
  9155                           
  9156                           ; 1 bytes @ 0x10
  9157  0030                     	ds	5
  9158  0035                     readPotJoystick@axial:
  9159                           
  9160                           ; 2 bytes @ 0x15
  9161  0035                     	ds	2
  9162  0037                     readPotJoystick@yaw:
  9163                           
  9164                           ; 2 bytes @ 0x17
  9165  0037                     	ds	2
  9166  0039                     ??_readJoystick:
  9167                           
  9168                           ; 1 bytes @ 0x19
  9169  0039                     	ds	2
  9170                           
  9171                           	psect	maintext
  9172  15BF                     __pmaintext:	
  9173 ;;
  9174 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  9175 ;;
  9176 ;; *************** function _main *****************
  9177 ;; Defined at:
  9178 ;;		line 20 in file "main.c"
  9179 ;; Parameters:    Size  Location     Type
  9180 ;;		None
  9181 ;; Auto vars:     Size  Location     Type
  9182 ;;		None
  9183 ;; Return value:  Size  Location     Type
  9184 ;;                  1    wreg      void 
  9185 ;; Registers used:
  9186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9187 ;; Tracked objects:
  9188 ;;		On entry : B3F/0
  9189 ;;		On exit  : 0/0
  9190 ;;		Unchanged: 0/0
  9191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9196 ;;Total ram usage:        0 bytes
  9197 ;; Hardware stack levels required when called:   15
  9198 ;; This function calls:
  9199 ;;		_BTTimeRemaining
  9200 ;;		_SYSTEM_Initialize
  9201 ;;		_enableJoystick
  9202 ;;		_initConfiguration
  9203 ;;		_initJoystick
  9204 ;;		_initSerial
  9205 ;;		_initTimers
  9206 ;;		_initUI
  9207 ;;		_powerIsOn
  9208 ;;		_resetBTTimer
  9209 ;;		_runUI
  9210 ;;		_showShutdown
  9211 ;;		_showStartup
  9212 ;;		_sleep
  9213 ;;		_turnPowerOff
  9214 ;;		_turnPowerOn
  9215 ;; This function is called by:
  9216 ;;		Startup code after reset
  9217 ;; This function uses a non-reentrant model
  9218 ;;
  9219                           
  9220                           
  9221                           ;psect for function _main
  9222  15BF                     _main:
  9223  15BF                     l7790:	
  9224                           ;incstack = 0
  9225                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9226                           
  9227                           
  9228                           ;main.c: 23:     SYSTEM_Initialize();
  9229  15BF  319C  24DC  3195   	fcall	_SYSTEM_Initialize
  9230                           
  9231                           ;main.c: 24:     initTimers();
  9232  15C2  319D  25B4  3195   	fcall	_initTimers
  9233  15C5                     l7792:
  9234                           
  9235                           ;main.c: 25:     initSerial();
  9236  15C5  319F  27D9  3195   	fcall	_initSerial
  9237  15C8                     l7794:
  9238                           
  9239                           ;main.c: 26:     initUI();
  9240  15C8  3193  23FC  3195   	fcall	_initUI
  9241  15CB                     l7796:
  9242                           
  9243                           ;main.c: 27:     initJoystick();
  9244  15CB  319D  250F  3195   	fcall	_initJoystick
  9245  15CE                     l7798:
  9246                           
  9247                           ;main.c: 30:     (INTCONbits.GIE = 1);
  9248  15CE  178B               	bsf	11,7	;volatile
  9249  15CF                     l7800:
  9250                           
  9251                           ;main.c: 33:     (INTCONbits.PEIE = 1);
  9252  15CF  170B               	bsf	11,6	;volatile
  9253  15D0                     l7802:
  9254                           
  9255                           ;main.c: 35:     initConfiguration();
  9256  15D0  319A  22FD  3195   	fcall	_initConfiguration
  9257  15D3                     l7804:
  9258                           
  9259                           ;main.c: 37:     turnPowerOn();
  9260  15D3  319B  2394  3195   	fcall	_turnPowerOn
  9261  15D6                     l7806:
  9262                           
  9263                           ;main.c: 38:     showStartup();
  9264  15D6  3189  2102  3195   	fcall	_showStartup
  9265  15D9                     l7808:
  9266                           
  9267                           ;main.c: 40:     sleep(1000);
  9268  15D9  3000               	movlw	0
  9269  15DA  0142               	movlb	2	; select bank2
  9270  15DB  00EF               	movwf	(sleep@delay+3)^(0+256)
  9271  15DC  3000               	movlw	0
  9272  15DD  00EE               	movwf	(sleep@delay+2)^(0+256)
  9273  15DE  3003               	movlw	3
  9274  15DF  00ED               	movwf	(sleep@delay+1)^(0+256)
  9275  15E0  30E8               	movlw	232
  9276  15E1  00EC               	movwf	sleep@delay^(0+256)
  9277  15E2  3193  23BB  3195   	fcall	_sleep
  9278  15E5                     l7810:
  9279                           
  9280                           ;main.c: 41:     enableJoystick();
  9281  15E5  319A  22D2  3195   	fcall	_enableJoystick
  9282  15E8                     l761:	
  9283                           ;main.c: 43:     while (1) {
  9284                           
  9285                           
  9286                           ;main.c: 44:         runUI();
  9287  15E8  3180  20A1  3195   	fcall	_runUI
  9288  15EB                     l7812:
  9289                           
  9290                           ;main.c: 47:         if (BTTimeRemaining() == 0) {
  9291  15EB  3197  279C  3195   	fcall	_BTTimeRemaining
  9292  15EE  0141               	movlb	1	; select bank1
  9293  15EF  086B               	movf	(?_BTTimeRemaining+3)^(0+128),w
  9294  15F0  046A               	iorwf	(?_BTTimeRemaining+2)^(0+128),w
  9295  15F1  0469               	iorwf	(?_BTTimeRemaining+1)^(0+128),w
  9296  15F2  0468               	iorwf	?_BTTimeRemaining^(0+128),w
  9297  15F3  1D03               	skipz
  9298  15F4  2DF6               	goto	u6531
  9299  15F5  2DF7               	goto	u6530
  9300  15F6                     u6531:
  9301  15F6  2E0D               	goto	l762
  9302  15F7                     u6530:
  9303  15F7                     l7814:
  9304                           
  9305                           ;main.c: 48:             turnPowerOff();
  9306  15F7  319A  22AB  3195   	fcall	_turnPowerOff
  9307                           
  9308                           ;main.c: 49:             showShutdown();
  9309  15FA  319E  26A9  3195   	fcall	_showShutdown
  9310  15FD  0063               	sleep	;# 
  9311  15FE                     l7816:
  9312                           
  9313                           ;main.c: 52:             __nop();
  9314  15FE  0000               	nop
  9315  15FF                     l7818:	
  9316                           ;main.c: 54:             while (!powerIsOn()) ;
  9317                           
  9318  15FF  3199  21EA  3195   	fcall	_powerIsOn
  9319  1602  3A00               	xorlw	0
  9320  1603  1903               	skipnz
  9321  1604  2E06               	goto	u6541
  9322  1605  2E07               	goto	u6540
  9323  1606                     u6541:
  9324  1606  2DFF               	goto	l7818
  9325  1607                     u6540:
  9326  1607                     l7820:
  9327                           
  9328                           ;main.c: 56:             showStartup();
  9329  1607  3189  2102  3195   	fcall	_showStartup
  9330                           
  9331                           ;main.c: 57:             resetBTTimer();
  9332  160A  319B  23F9  3195   	fcall	_resetBTTimer
  9333  160D                     l762:	
  9334                           ;main.c: 58:         }
  9335                           
  9336                           
  9337                           ;main.c: 60:         sleep(50);
  9338  160D  3000               	movlw	0
  9339  160E  0142               	movlb	2	; select bank2
  9340  160F  00EF               	movwf	(sleep@delay+3)^(0+256)
  9341  1610  3000               	movlw	0
  9342  1611  00EE               	movwf	(sleep@delay+2)^(0+256)
  9343  1612  3000               	movlw	0
  9344  1613  00ED               	movwf	(sleep@delay+1)^(0+256)
  9345  1614  3032               	movlw	50
  9346  1615  00EC               	movwf	sleep@delay^(0+256)
  9347  1616  3193  23BB  3195   	fcall	_sleep
  9348  1619  2DE8               	goto	l761
  9349  161A  3180  285B         	ljmp	start
  9350  161C                     __end_of_main:
  9351                           
  9352                           	psect	text1
  9353  1B94                     __ptext1:	
  9354 ;; *************** function _turnPowerOn *****************
  9355 ;; Defined at:
  9356 ;;		line 57 in file "configure.c"
  9357 ;; Parameters:    Size  Location     Type
  9358 ;;		None
  9359 ;; Auto vars:     Size  Location     Type
  9360 ;;		None
  9361 ;; Return value:  Size  Location     Type
  9362 ;;                  1    wreg      void 
  9363 ;; Registers used:
  9364 ;;		wreg, status,2, status,0, pclath, cstack
  9365 ;; Tracked objects:
  9366 ;;		On entry : 0/0
  9367 ;;		On exit  : 0/0
  9368 ;;		Unchanged: 0/0
  9369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9374 ;;Total ram usage:        0 bytes
  9375 ;; Hardware stack levels used:    1
  9376 ;; Hardware stack levels required when called:    9
  9377 ;; This function calls:
  9378 ;;		_SetSlaveTXRX
  9379 ;; This function is called by:
  9380 ;;		_main
  9381 ;;		_initUI
  9382 ;;		_IOCCF0_ISR
  9383 ;;		_IOCCF2_ISR
  9384 ;; This function uses a non-reentrant model
  9385 ;;
  9386                           
  9387                           
  9388                           ;psect for function _turnPowerOn
  9389  1B94                     _turnPowerOn:
  9390                           
  9391                           ;Skip over the trampoline to the duplicate function for level 1
  9392  1B94  1C7E               	btfss	int$flags,0
  9393  1B95  2B98               	goto	_turnPowerOn$intlevel0
  9394  1B96  319A  2AF1         	ljmp	i1_turnPowerOn
  9395  1B98                     _turnPowerOn$intlevel0:
  9396  1B98                     l1207:	
  9397                           ;incstack = 0
  9398                           ; Regs used in _turnPowerOn: [wreg+status,2+status,0+pclath+cstack]
  9399                           ;configure.c: 58:     do { LATCbits.LATC7 = 1; } while(0);
  9400                           
  9401  1B98  0140               	movlb	0	; select bank0
  9402  1B99  179A               	bsf	26,7	;volatile
  9403  1B9A                     l1209:	
  9404                           ;configure.c: 59:     do { LATAbits.LATA5 = 0; } while(0);
  9405                           
  9406  1B9A  1298               	bcf	24,5	;volatile
  9407  1B9B                     l7576:
  9408                           
  9409                           ;configure.c: 60:     TRISC = 0x2F;
  9410  1B9B  302F               	movlw	47
  9411  1B9C  0094               	movwf	20	;volatile
  9412  1B9D                     l7578:
  9413                           
  9414                           ;configure.c: 61:     SetSlaveTXRX();
  9415  1B9D  319A  2287  319B   	fcall	_SetSlaveTXRX
  9416  1BA0                     l7580:
  9417                           
  9418                           ;configure.c: 62:     powerOn = 1;
  9419  1BA0  0140               	movlb	0	; select bank0
  9420  1BA1  01CA               	clrf	_powerOn
  9421  1BA2  0ACA               	incf	_powerOn,f
  9422  1BA3                     l1211:
  9423  1BA3  0008               	return
  9424  1BA4                     __end_of_turnPowerOn:
  9425                           
  9426                           	psect	text2
  9427  1AAB                     __ptext2:	
  9428 ;; *************** function _turnPowerOff *****************
  9429 ;; Defined at:
  9430 ;;		line 65 in file "configure.c"
  9431 ;; Parameters:    Size  Location     Type
  9432 ;;		None
  9433 ;; Auto vars:     Size  Location     Type
  9434 ;;		None
  9435 ;; Return value:  Size  Location     Type
  9436 ;;                  1    wreg      void 
  9437 ;; Registers used:
  9438 ;;		wreg, status,2, status,0, pclath, cstack
  9439 ;; Tracked objects:
  9440 ;;		On entry : 0/0
  9441 ;;		On exit  : 0/0
  9442 ;;		Unchanged: 0/0
  9443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9448 ;;Total ram usage:        0 bytes
  9449 ;; Hardware stack levels used:    1
  9450 ;; Hardware stack levels required when called:   11
  9451 ;; This function calls:
  9452 ;;		_SetPowerdownTXRX
  9453 ;; This function is called by:
  9454 ;;		_main
  9455 ;; This function uses a non-reentrant model
  9456 ;;
  9457                           
  9458                           
  9459                           ;psect for function _turnPowerOff
  9460  1AAB                     _turnPowerOff:
  9461  1AAB                     l1214:	
  9462                           ;incstack = 0
  9463                           ; Regs used in _turnPowerOff: [wreg+status,2+status,0+pclath+cstack]
  9464                           ;configure.c: 66:     do { LATAbits.LATA5 = 1; } while(0);
  9465                           
  9466  1AAB  0140               	movlb	0	; select bank0
  9467  1AAC  1698               	bsf	24,5	;volatile
  9468  1AAD                     l1216:	
  9469                           ;configure.c: 67:     do { LATCbits.LATC7 = 0; } while(0);
  9470                           
  9471  1AAD  139A               	bcf	26,7	;volatile
  9472  1AAE                     l7738:
  9473                           
  9474                           ;configure.c: 68:     SetPowerdownTXRX();
  9475  1AAE  319C  247F  319A   	fcall	_SetPowerdownTXRX
  9476  1AB1                     l7740:
  9477                           
  9478                           ;configure.c: 69:     powerOn = 0;
  9479  1AB1  0140               	movlb	0	; select bank0
  9480  1AB2  01CA               	clrf	_powerOn
  9481  1AB3                     l1218:
  9482  1AB3  0008               	return
  9483  1AB4                     __end_of_turnPowerOff:
  9484                           
  9485                           	psect	text3
  9486  1C7F                     __ptext3:	
  9487 ;; *************** function _SetPowerdownTXRX *****************
  9488 ;; Defined at:
  9489 ;;		line 28 in file "configure.c"
  9490 ;; Parameters:    Size  Location     Type
  9491 ;;		None
  9492 ;; Auto vars:     Size  Location     Type
  9493 ;;		None
  9494 ;; Return value:  Size  Location     Type
  9495 ;;                  1    wreg      void 
  9496 ;; Registers used:
  9497 ;;		wreg, status,2, status,0, pclath, cstack
  9498 ;; Tracked objects:
  9499 ;;		On entry : 0/0
  9500 ;;		On exit  : 0/0
  9501 ;;		Unchanged: 0/0
  9502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9507 ;;Total ram usage:        0 bytes
  9508 ;; Hardware stack levels used:    1
  9509 ;; Hardware stack levels required when called:   10
  9510 ;; This function calls:
  9511 ;;		_sleep
  9512 ;; This function is called by:
  9513 ;;		_turnPowerOff
  9514 ;; This function uses a non-reentrant model
  9515 ;;
  9516                           
  9517                           
  9518                           ;psect for function _SetPowerdownTXRX
  9519  1C7F                     _SetPowerdownTXRX:
  9520  1C7F                     l7418:	
  9521                           ;incstack = 0
  9522                           ; Regs used in _SetPowerdownTXRX: [wreg+status,2+status,0+pclath+cstack]
  9523                           
  9524                           
  9525                           ;configure.c: 29:     RX1DTPPS = 0x15;
  9526  1C7F  3015               	movlw	21
  9527  1C80  017D               	movlb	61	; select bank61
  9528  1C81  00CB               	movwf	75	;volatile
  9529                           
  9530                           ;configure.c: 30:     RC4PPS = 0x14;
  9531  1C82  3014               	movlw	20
  9532  1C83  017E               	movlb	62	; select bank62
  9533  1C84  00A4               	movwf	36	;volatile
  9534                           
  9535                           ;configure.c: 31:     RC6PPS = 0x16;
  9536  1C85  3016               	movlw	22
  9537  1C86  00A6               	movwf	38	;volatile
  9538  1C87                     l7420:
  9539                           
  9540                           ;configure.c: 32:     sleep(5);
  9541  1C87  3000               	movlw	0
  9542  1C88  0142               	movlb	2	; select bank2
  9543  1C89  00EF               	movwf	(sleep@delay+3)^(0+256)
  9544  1C8A  3000               	movlw	0
  9545  1C8B  00EE               	movwf	(sleep@delay+2)^(0+256)
  9546  1C8C  3000               	movlw	0
  9547  1C8D  00ED               	movwf	(sleep@delay+1)^(0+256)
  9548  1C8E  3005               	movlw	5
  9549  1C8F  00EC               	movwf	sleep@delay^(0+256)
  9550  1C90  3193  23BB  319C   	fcall	_sleep
  9551  1C93                     l1195:
  9552  1C93  0008               	return
  9553  1C94                     __end_of_SetPowerdownTXRX:
  9554                           
  9555                           	psect	text4
  9556  0902                     __ptext4:	
  9557 ;; *************** function _showStartup *****************
  9558 ;; Defined at:
  9559 ;;		line 187 in file "ui.c"
  9560 ;; Parameters:    Size  Location     Type
  9561 ;;		None
  9562 ;; Auto vars:     Size  Location     Type
  9563 ;;  ramp            1    5[BANK3 ] char 
  9564 ;; Return value:  Size  Location     Type
  9565 ;;                  1    wreg      void 
  9566 ;; Registers used:
  9567 ;;		wreg, status,2, status,0, pclath, cstack
  9568 ;; Tracked objects:
  9569 ;;		On entry : 0/0
  9570 ;;		On exit  : 0/0
  9571 ;;		Unchanged: 0/0
  9572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9574 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9575 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9576 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9577 ;;Total ram usage:        2 bytes
  9578 ;; Hardware stack levels used:    1
  9579 ;; Hardware stack levels required when called:   10
  9580 ;; This function calls:
  9581 ;;		_setBTTimeout
  9582 ;;		_sleep
  9583 ;; This function is called by:
  9584 ;;		_main
  9585 ;; This function uses a non-reentrant model
  9586 ;;
  9587                           
  9588                           
  9589                           ;psect for function _showStartup
  9590  0902                     _showStartup:
  9591  0902                     l7582:	
  9592                           ;incstack = 0
  9593                           ; Regs used in _showStartup: [wreg+status,2+status,0+pclath+cstack]
  9594                           
  9595                           
  9596                           ;ui.c: 188:     int8_t ramp = 0;
  9597  0902  0143               	movlb	3	; select bank3
  9598  0903  01ED               	clrf	showStartup@ramp^(0+384)
  9599                           
  9600                           ;ui.c: 190:     for (ramp = 0 ; ramp < 7; ramp++) {
  9601  0904  01ED               	clrf	showStartup@ramp^(0+384)
  9602  0905                     l7588:
  9603                           
  9604                           ;ui.c: 191:         R_LED = ramp;
  9605  0905  086D               	movf	showStartup@ramp^(0+384),w
  9606  0906  00EC               	movwf	??_showStartup^(0+384)
  9607  0907  086C               	movf	??_showStartup^(0+384),w
  9608  0908  0140               	movlb	0	; select bank0
  9609  0909  00C7               	movwf	_R_LED
  9610  090A                     l7590:
  9611                           
  9612                           ;ui.c: 192:         sleep(40);
  9613  090A  3000               	movlw	0
  9614  090B  0142               	movlb	2	; select bank2
  9615  090C  00EF               	movwf	(sleep@delay+3)^(0+256)
  9616  090D  3000               	movlw	0
  9617  090E  00EE               	movwf	(sleep@delay+2)^(0+256)
  9618  090F  3000               	movlw	0
  9619  0910  00ED               	movwf	(sleep@delay+1)^(0+256)
  9620  0911  3028               	movlw	40
  9621  0912  00EC               	movwf	sleep@delay^(0+256)
  9622  0913  3193  23BB  3189   	fcall	_sleep
  9623  0916                     l7592:
  9624                           
  9625                           ;ui.c: 193:     }
  9626  0916  3001               	movlw	1
  9627  0917  0143               	movlb	3	; select bank3
  9628  0918  00EC               	movwf	??_showStartup^(0+384)
  9629  0919  086C               	movf	??_showStartup^(0+384),w
  9630  091A  07ED               	addwf	showStartup@ramp^(0+384),f
  9631  091B                     l7594:
  9632  091B  086D               	movf	showStartup@ramp^(0+384),w
  9633  091C  3A80               	xorlw	128
  9634  091D  3E79               	addlw	-135
  9635  091E  1C03               	skipc
  9636  091F  2921               	goto	u6181
  9637  0920  2922               	goto	u6180
  9638  0921                     u6181:
  9639  0921  2905               	goto	l7588
  9640  0922                     u6180:
  9641  0922                     l7596:
  9642                           
  9643                           ;ui.c: 194:     R_LED = 0;
  9644  0922  0140               	movlb	0	; select bank0
  9645  0923  01C7               	clrf	_R_LED
  9646                           
  9647                           ;ui.c: 195:     for (ramp = 0 ; ramp < 7; ramp++) {
  9648  0924  0143               	movlb	3	; select bank3
  9649  0925  01ED               	clrf	showStartup@ramp^(0+384)
  9650  0926                     l7602:
  9651                           
  9652                           ;ui.c: 196:         G_LED = ramp;
  9653  0926  086D               	movf	showStartup@ramp^(0+384),w
  9654  0927  00EC               	movwf	??_showStartup^(0+384)
  9655  0928  086C               	movf	??_showStartup^(0+384),w
  9656  0929  0140               	movlb	0	; select bank0
  9657  092A  00C6               	movwf	_G_LED
  9658  092B                     l7604:
  9659                           
  9660                           ;ui.c: 197:         sleep(40);
  9661  092B  3000               	movlw	0
  9662  092C  0142               	movlb	2	; select bank2
  9663  092D  00EF               	movwf	(sleep@delay+3)^(0+256)
  9664  092E  3000               	movlw	0
  9665  092F  00EE               	movwf	(sleep@delay+2)^(0+256)
  9666  0930  3000               	movlw	0
  9667  0931  00ED               	movwf	(sleep@delay+1)^(0+256)
  9668  0932  3028               	movlw	40
  9669  0933  00EC               	movwf	sleep@delay^(0+256)
  9670  0934  3193  23BB  3189   	fcall	_sleep
  9671  0937                     l7606:
  9672                           
  9673                           ;ui.c: 198:     }
  9674  0937  3001               	movlw	1
  9675  0938  0143               	movlb	3	; select bank3
  9676  0939  00EC               	movwf	??_showStartup^(0+384)
  9677  093A  086C               	movf	??_showStartup^(0+384),w
  9678  093B  07ED               	addwf	showStartup@ramp^(0+384),f
  9679  093C                     l7608:
  9680  093C  086D               	movf	showStartup@ramp^(0+384),w
  9681  093D  3A80               	xorlw	128
  9682  093E  3E79               	addlw	-135
  9683  093F  1C03               	skipc
  9684  0940  2942               	goto	u6191
  9685  0941  2943               	goto	u6190
  9686  0942                     u6191:
  9687  0942  2926               	goto	l7602
  9688  0943                     u6190:
  9689  0943                     l7610:
  9690                           
  9691                           ;ui.c: 199:     G_LED = 0;
  9692  0943  0140               	movlb	0	; select bank0
  9693  0944  01C6               	clrf	_G_LED
  9694                           
  9695                           ;ui.c: 201:     for (ramp = 0 ; ramp < 7; ramp++) {
  9696  0945  0143               	movlb	3	; select bank3
  9697  0946  01ED               	clrf	showStartup@ramp^(0+384)
  9698  0947                     l7616:
  9699                           
  9700                           ;ui.c: 202:         B_LED = ramp;
  9701  0947  086D               	movf	showStartup@ramp^(0+384),w
  9702  0948  00EC               	movwf	??_showStartup^(0+384)
  9703  0949  086C               	movf	??_showStartup^(0+384),w
  9704  094A  0140               	movlb	0	; select bank0
  9705  094B  00C5               	movwf	_B_LED
  9706  094C                     l7618:
  9707                           
  9708                           ;ui.c: 203:         sleep(40);
  9709  094C  3000               	movlw	0
  9710  094D  0142               	movlb	2	; select bank2
  9711  094E  00EF               	movwf	(sleep@delay+3)^(0+256)
  9712  094F  3000               	movlw	0
  9713  0950  00EE               	movwf	(sleep@delay+2)^(0+256)
  9714  0951  3000               	movlw	0
  9715  0952  00ED               	movwf	(sleep@delay+1)^(0+256)
  9716  0953  3028               	movlw	40
  9717  0954  00EC               	movwf	sleep@delay^(0+256)
  9718  0955  3193  23BB  3189   	fcall	_sleep
  9719  0958                     l7620:
  9720                           
  9721                           ;ui.c: 204:     }
  9722  0958  3001               	movlw	1
  9723  0959  0143               	movlb	3	; select bank3
  9724  095A  00EC               	movwf	??_showStartup^(0+384)
  9725  095B  086C               	movf	??_showStartup^(0+384),w
  9726  095C  07ED               	addwf	showStartup@ramp^(0+384),f
  9727  095D                     l7622:
  9728  095D  086D               	movf	showStartup@ramp^(0+384),w
  9729  095E  3A80               	xorlw	128
  9730  095F  3E79               	addlw	-135
  9731  0960  1C03               	skipc
  9732  0961  2963               	goto	u6201
  9733  0962  2964               	goto	u6200
  9734  0963                     u6201:
  9735  0963  2947               	goto	l7616
  9736  0964                     u6200:
  9737  0964                     l7624:
  9738                           
  9739                           ;ui.c: 205:     B_LED = 0;
  9740  0964  0140               	movlb	0	; select bank0
  9741  0965  01C5               	clrf	_B_LED
  9742  0966                     l7626:
  9743                           
  9744                           ;ui.c: 206:     setBTTimeout(10000);
  9745  0966  3000               	movlw	0
  9746  0967  0141               	movlb	1	; select bank1
  9747  0968  00EB               	movwf	(setBTTimeout@timeout+3)^(0+128)
  9748  0969  3000               	movlw	0
  9749  096A  00EA               	movwf	(setBTTimeout@timeout+2)^(0+128)
  9750  096B  3027               	movlw	39
  9751  096C  00E9               	movwf	(setBTTimeout@timeout+1)^(0+128)
  9752  096D  3010               	movlw	16
  9753  096E  00E8               	movwf	setBTTimeout@timeout^(0+128)
  9754  096F  319A  22DC  3189   	fcall	_setBTTimeout
  9755  0972                     l1415:
  9756  0972  0008               	return
  9757  0973                     __end_of_showStartup:
  9758                           
  9759                           	psect	text5
  9760  1ADC                     __ptext5:	
  9761 ;; *************** function _setBTTimeout *****************
  9762 ;; Defined at:
  9763 ;;		line 53 in file "timers.c"
  9764 ;; Parameters:    Size  Location     Type
  9765 ;;  timeout         4    0[BANK1 ] unsigned long 
  9766 ;; Auto vars:     Size  Location     Type
  9767 ;;		None
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  1    wreg      void 
  9770 ;; Registers used:
  9771 ;;		wreg
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9777 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9780 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9781 ;;Total ram usage:        4 bytes
  9782 ;; Hardware stack levels used:    1
  9783 ;; Hardware stack levels required when called:    8
  9784 ;; This function calls:
  9785 ;;		Nothing
  9786 ;; This function is called by:
  9787 ;;		_showStartup
  9788 ;; This function uses a non-reentrant model
  9789 ;;
  9790                           
  9791                           
  9792                           ;psect for function _setBTTimeout
  9793  1ADC                     _setBTTimeout:
  9794  1ADC                     l7352:	
  9795                           ;incstack = 0
  9796                           ; Regs used in _setBTTimeout: [wreg]
  9797                           
  9798                           
  9799                           ;timers.c: 54:     BTTimeout = timeout;
  9800  1ADC  0141               	movlb	1	; select bank1
  9801  1ADD  086B               	movf	(setBTTimeout@timeout+3)^(0+128),w
  9802  1ADE  00A7               	movwf	(_BTTimeout+3)^(0+128)
  9803  1ADF  086A               	movf	(setBTTimeout@timeout+2)^(0+128),w
  9804  1AE0  00A6               	movwf	(_BTTimeout+2)^(0+128)
  9805  1AE1  0869               	movf	(setBTTimeout@timeout+1)^(0+128),w
  9806  1AE2  00A5               	movwf	(_BTTimeout+1)^(0+128)
  9807  1AE3  0868               	movf	setBTTimeout@timeout^(0+128),w
  9808  1AE4  00A4               	movwf	_BTTimeout^(0+128)
  9809  1AE5                     l1124:
  9810  1AE5  0008               	return
  9811  1AE6                     __end_of_setBTTimeout:
  9812                           
  9813                           	psect	text6
  9814  1EA9                     __ptext6:	
  9815 ;; *************** function _showShutdown *****************
  9816 ;; Defined at:
  9817 ;;		line 209 in file "ui.c"
  9818 ;; Parameters:    Size  Location     Type
  9819 ;;		None
  9820 ;; Auto vars:     Size  Location     Type
  9821 ;;  ramp            1    5[BANK3 ] char 
  9822 ;; Return value:  Size  Location     Type
  9823 ;;                  1    wreg      void 
  9824 ;; Registers used:
  9825 ;;		wreg, status,2, status,0, pclath, cstack
  9826 ;; Tracked objects:
  9827 ;;		On entry : 0/0
  9828 ;;		On exit  : 0/0
  9829 ;;		Unchanged: 0/0
  9830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9832 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9833 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9834 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9835 ;;Total ram usage:        2 bytes
  9836 ;; Hardware stack levels used:    1
  9837 ;; Hardware stack levels required when called:   10
  9838 ;; This function calls:
  9839 ;;		_sleep
  9840 ;; This function is called by:
  9841 ;;		_main
  9842 ;; This function uses a non-reentrant model
  9843 ;;
  9844                           
  9845                           
  9846                           ;psect for function _showShutdown
  9847  1EA9                     _showShutdown:
  9848  1EA9                     l7742:	
  9849                           ;incstack = 0
  9850                           ; Regs used in _showShutdown: [wreg+status,2+status,0+pclath+cstack]
  9851                           
  9852  1EA9                     l7744:
  9853                           
  9854                           ;ui.c: 212:     for (ramp = 7 ; ramp >= 0; ramp--) {
  9855  1EA9  3007               	movlw	7
  9856  1EAA  0143               	movlb	3	; select bank3
  9857  1EAB  00EC               	movwf	??_showShutdown^(0+384)
  9858  1EAC  086C               	movf	??_showShutdown^(0+384),w
  9859  1EAD  00ED               	movwf	showShutdown@ramp^(0+384)
  9860  1EAE                     l7750:
  9861                           
  9862                           ;ui.c: 213:         R_LED = ramp;
  9863  1EAE  086D               	movf	showShutdown@ramp^(0+384),w
  9864  1EAF  00EC               	movwf	??_showShutdown^(0+384)
  9865  1EB0  086C               	movf	??_showShutdown^(0+384),w
  9866  1EB1  0140               	movlb	0	; select bank0
  9867  1EB2  00C7               	movwf	_R_LED
  9868  1EB3                     l7752:
  9869                           
  9870                           ;ui.c: 214:         sleep(40);
  9871  1EB3  3000               	movlw	0
  9872  1EB4  0142               	movlb	2	; select bank2
  9873  1EB5  00EF               	movwf	(sleep@delay+3)^(0+256)
  9874  1EB6  3000               	movlw	0
  9875  1EB7  00EE               	movwf	(sleep@delay+2)^(0+256)
  9876  1EB8  3000               	movlw	0
  9877  1EB9  00ED               	movwf	(sleep@delay+1)^(0+256)
  9878  1EBA  3028               	movlw	40
  9879  1EBB  00EC               	movwf	sleep@delay^(0+256)
  9880  1EBC  3193  23BB  319E   	fcall	_sleep
  9881  1EBF                     l7754:
  9882                           
  9883                           ;ui.c: 215:     }
  9884  1EBF  30FF               	movlw	255
  9885  1EC0  0143               	movlb	3	; select bank3
  9886  1EC1  00EC               	movwf	??_showShutdown^(0+384)
  9887  1EC2  086C               	movf	??_showShutdown^(0+384),w
  9888  1EC3  07ED               	addwf	showShutdown@ramp^(0+384),f
  9889  1EC4                     l7756:
  9890  1EC4  1FED               	btfss	showShutdown@ramp^(0+384),7
  9891  1EC5  2EC7               	goto	u6391
  9892  1EC6  2EC8               	goto	u6390
  9893  1EC7                     u6391:
  9894  1EC7  2EAE               	goto	l7750
  9895  1EC8                     u6390:
  9896  1EC8                     l1420:
  9897  1EC8  0008               	return
  9898  1EC9                     __end_of_showShutdown:
  9899                           
  9900                           	psect	text7
  9901  00A1                     __ptext7:	
  9902 ;; *************** function _runUI *****************
  9903 ;; Defined at:
  9904 ;;		line 66 in file "ui.c"
  9905 ;; Parameters:    Size  Location     Type
  9906 ;;		None
  9907 ;; Auto vars:     Size  Location     Type
  9908 ;;		None
  9909 ;; Return value:  Size  Location     Type
  9910 ;;                  1    wreg      void 
  9911 ;; Registers used:
  9912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9913 ;; Tracked objects:
  9914 ;;		On entry : 0/0
  9915 ;;		On exit  : 0/0
  9916 ;;		Unchanged: 0/0
  9917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9920 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9921 ;;      Totals:         0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9922 ;;Total ram usage:        2 bytes
  9923 ;; Hardware stack levels used:    1
  9924 ;; Hardware stack levels required when called:   14
  9925 ;; This function calls:
  9926 ;;		_BTTimeRemaining
  9927 ;;		_BTTimeWaiting
  9928 ;;		_USER1_pressed
  9929 ;;		_USER2_pressed
  9930 ;;		_bumpUISpeedMode
  9931 ;;		_bumpUIType
  9932 ;;		_disableJoystick
  9933 ;;		_doFactoryReset
  9934 ;;		_enableJoystick
  9935 ;;		_getTicks
  9936 ;;		_getTicksSince
  9937 ;;		_oneSec
  9938 ;;		_pairBluetoothDevices
  9939 ;;		_pulseLEDColor
  9940 ;; This function is called by:
  9941 ;;		_main
  9942 ;; This function uses a non-reentrant model
  9943 ;;
  9944                           
  9945                           
  9946                           ;psect for function _runUI
  9947  00A1                     _runUI:
  9948  00A1                     l7628:	
  9949                           ;incstack = 0
  9950                           ; Regs used in _runUI: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9951                           
  9952                           
  9953                           ;ui.c: 68:     switch (uiState) {
  9954  00A1  29F8               	goto	l7718
  9955  00A2                     l7630:
  9956                           
  9957                           ;ui.c: 70:             if (USER1_pressed()) {
  9958  00A2  319A  2231  3180   	fcall	_USER1_pressed
  9959  00A5  3A00               	xorlw	0
  9960  00A6  1903               	skipnz
  9961  00A7  28A9               	goto	u6211
  9962  00A8  28AA               	goto	u6210
  9963  00A9                     u6211:
  9964  00A9  28BD               	goto	l7636
  9965  00AA                     u6210:
  9966  00AA                     l7632:
  9967                           
  9968                           ;ui.c: 71:                 uiStateTime = getTicks();
  9969  00AA  319B  23E8  3180   	fcall	_getTicks
  9970  00AD  0141               	movlb	1	; select bank1
  9971  00AE  086B               	movf	(?_getTicks+3)^(0+128),w
  9972  00AF  00A3               	movwf	(_uiStateTime+3)^(0+128)
  9973  00B0  086A               	movf	(?_getTicks+2)^(0+128),w
  9974  00B1  00A2               	movwf	(_uiStateTime+2)^(0+128)
  9975  00B2  0869               	movf	(?_getTicks+1)^(0+128),w
  9976  00B3  00A1               	movwf	(_uiStateTime+1)^(0+128)
  9977  00B4  0868               	movf	?_getTicks^(0+128),w
  9978  00B5  00A0               	movwf	_uiStateTime^(0+128)
  9979  00B6                     l7634:
  9980                           
  9981                           ;ui.c: 72:                 uiState = 2;
  9982  00B6  3002               	movlw	2
  9983  00B7  0144               	movlb	4	; select bank4
  9984  00B8  00EE               	movwf	??_runUI^(0+512)
  9985  00B9  086E               	movf	??_runUI^(0+512),w
  9986  00BA  0140               	movlb	0	; select bank0
  9987  00BB  00C3               	movwf	_uiState
  9988                           
  9989                           ;ui.c: 73:             } else if (USER2_pressed()) {
  9990  00BC  2A19               	goto	l7720
  9991  00BD                     l7636:
  9992  00BD  319A  2238  3180   	fcall	_USER2_pressed
  9993  00C0  3A00               	xorlw	0
  9994  00C1  1903               	skipnz
  9995  00C2  28C4               	goto	u6221
  9996  00C3  28C5               	goto	u6220
  9997  00C4                     u6221:
  9998  00C4  2A19               	goto	l7720
  9999  00C5                     u6220:
 10000  00C5                     l7638:
 10001                           
 10002                           ;ui.c: 74:                 uiStateTime = getTicks();
 10003  00C5  319B  23E8  3180   	fcall	_getTicks
 10004  00C8  0141               	movlb	1	; select bank1
 10005  00C9  086B               	movf	(?_getTicks+3)^(0+128),w
 10006  00CA  00A3               	movwf	(_uiStateTime+3)^(0+128)
 10007  00CB  086A               	movf	(?_getTicks+2)^(0+128),w
 10008  00CC  00A2               	movwf	(_uiStateTime+2)^(0+128)
 10009  00CD  0869               	movf	(?_getTicks+1)^(0+128),w
 10010  00CE  00A1               	movwf	(_uiStateTime+1)^(0+128)
 10011  00CF  0868               	movf	?_getTicks^(0+128),w
 10012  00D0  00A0               	movwf	_uiStateTime^(0+128)
 10013  00D1                     l7640:
 10014                           
 10015                           ;ui.c: 75:                 uiState = 4;
 10016  00D1  3004               	movlw	4
 10017  00D2  0144               	movlb	4	; select bank4
 10018  00D3  00EE               	movwf	??_runUI^(0+512)
 10019  00D4  086E               	movf	??_runUI^(0+512),w
 10020  00D5  0140               	movlb	0	; select bank0
 10021  00D6  00C3               	movwf	_uiState
 10022  00D7  2A19               	goto	l7720
 10023  00D8                     l7642:
 10024                           
 10025                           ;ui.c: 80:             if (USER1_pressed()){
 10026  00D8  319A  2231  3180   	fcall	_USER1_pressed
 10027  00DB  3A00               	xorlw	0
 10028  00DC  1903               	skipnz
 10029  00DD  28DF               	goto	u6231
 10030  00DE  28E0               	goto	u6230
 10031  00DF                     u6231:
 10032  00DF  2912               	goto	l7650
 10033  00E0                     u6230:
 10034  00E0                     l7644:
 10035                           
 10036                           ;ui.c: 81:                 if (getTicksSince(uiStateTime) > 100) {
 10037  00E0  0141               	movlb	1	; select bank1
 10038  00E1  0823               	movf	(_uiStateTime+3)^(0+128),w
 10039  00E2  00EB               	movwf	(getTicksSince@from+3)^(0+128)
 10040  00E3  0822               	movf	(_uiStateTime+2)^(0+128),w
 10041  00E4  00EA               	movwf	(getTicksSince@from+2)^(0+128)
 10042  00E5  0821               	movf	(_uiStateTime+1)^(0+128),w
 10043  00E6  00E9               	movwf	(getTicksSince@from+1)^(0+128)
 10044  00E7  0820               	movf	_uiStateTime^(0+128),w
 10045  00E8  00E8               	movwf	getTicksSince@from^(0+128)
 10046  00E9  319D  25D1  3180   	fcall	_getTicksSince
 10047  00EC  0141               	movlb	1	; select bank1
 10048  00ED  1BEB               	btfsc	(?_getTicksSince+3)^(0+128),7
 10049  00EE  28FD               	goto	u6241
 10050  00EF  086B               	movf	(?_getTicksSince+3)^(0+128),w
 10051  00F0  1D03               	btfss	3,2
 10052  00F1  28FE               	goto	u6240
 10053  00F2  086A               	movf	(?_getTicksSince+2)^(0+128),w
 10054  00F3  1D03               	btfss	3,2
 10055  00F4  28FE               	goto	u6240
 10056  00F5  0869               	movf	(?_getTicksSince+1)^(0+128),w
 10057  00F6  1D03               	btfss	3,2
 10058  00F7  28FE               	goto	u6240
 10059  00F8  3065               	movlw	101
 10060  00F9  0268               	subwf	?_getTicksSince^(0+128),w
 10061  00FA  1C03               	btfss	3,0
 10062  00FB  28FD               	goto	u6241
 10063  00FC  28FE               	goto	u6240
 10064  00FD                     u6241:
 10065  00FD  2A19               	goto	l7720
 10066  00FE                     u6240:
 10067  00FE                     l7646:
 10068                           
 10069                           ;ui.c: 82:                     pulseLEDColor(0x300, 20, 100);
 10070  00FE  3000               	movlw	0
 10071  00FF  0144               	movlb	4	; select bank4
 10072  0100  00E0               	movwf	pulseLEDColor@RGB^(0+512)
 10073  0101  3003               	movlw	3
 10074  0102  00E1               	movwf	(pulseLEDColor@RGB^(0+512)+1)
 10075  0103  3014               	movlw	20
 10076  0104  00E2               	movwf	pulseLEDColor@onTimeMS^(0+512)
 10077  0105  3000               	movlw	0
 10078  0106  00E3               	movwf	(pulseLEDColor@onTimeMS^(0+512)+1)
 10079  0107  3064               	movlw	100
 10080  0108  00E4               	movwf	pulseLEDColor@offTimeMS^(0+512)
 10081  0109  3000               	movlw	0
 10082  010A  00E5               	movwf	(pulseLEDColor@offTimeMS^(0+512)+1)
 10083  010B  3190  20EE  3180   	fcall	_pulseLEDColor
 10084  010E                     l7648:
 10085                           
 10086                           ;ui.c: 83:                     uiState = 1;
 10087  010E  0140               	movlb	0	; select bank0
 10088  010F  01C3               	clrf	_uiState
 10089  0110  0AC3               	incf	_uiState,f
 10090  0111  2A19               	goto	l7720
 10091  0112                     l7650:
 10092                           
 10093                           ;ui.c: 87:                 uiState = 0;
 10094  0112  0140               	movlb	0	; select bank0
 10095  0113  01C3               	clrf	_uiState
 10096  0114  2A19               	goto	l7720
 10097  0115                     l7652:
 10098                           
 10099                           ;ui.c: 92:             if (USER2_pressed()){
 10100  0115  319A  2238  3180   	fcall	_USER2_pressed
 10101  0118  3A00               	xorlw	0
 10102  0119  1903               	skipnz
 10103  011A  291C               	goto	u6251
 10104  011B  291D               	goto	u6250
 10105  011C                     u6251:
 10106  011C  2912               	goto	l7650
 10107  011D                     u6250:
 10108  011D                     l7654:
 10109                           
 10110                           ;ui.c: 93:                 if (getTicksSince(uiStateTime) > 100) {
 10111  011D  0141               	movlb	1	; select bank1
 10112  011E  0823               	movf	(_uiStateTime+3)^(0+128),w
 10113  011F  00EB               	movwf	(getTicksSince@from+3)^(0+128)
 10114  0120  0822               	movf	(_uiStateTime+2)^(0+128),w
 10115  0121  00EA               	movwf	(getTicksSince@from+2)^(0+128)
 10116  0122  0821               	movf	(_uiStateTime+1)^(0+128),w
 10117  0123  00E9               	movwf	(getTicksSince@from+1)^(0+128)
 10118  0124  0820               	movf	_uiStateTime^(0+128),w
 10119  0125  00E8               	movwf	getTicksSince@from^(0+128)
 10120  0126  319D  25D1  3180   	fcall	_getTicksSince
 10121  0129  0141               	movlb	1	; select bank1
 10122  012A  1BEB               	btfsc	(?_getTicksSince+3)^(0+128),7
 10123  012B  293A               	goto	u6261
 10124  012C  086B               	movf	(?_getTicksSince+3)^(0+128),w
 10125  012D  1D03               	btfss	3,2
 10126  012E  293B               	goto	u6260
 10127  012F  086A               	movf	(?_getTicksSince+2)^(0+128),w
 10128  0130  1D03               	btfss	3,2
 10129  0131  293B               	goto	u6260
 10130  0132  0869               	movf	(?_getTicksSince+1)^(0+128),w
 10131  0133  1D03               	btfss	3,2
 10132  0134  293B               	goto	u6260
 10133  0135  3065               	movlw	101
 10134  0136  0268               	subwf	?_getTicksSince^(0+128),w
 10135  0137  1C03               	btfss	3,0
 10136  0138  293A               	goto	u6261
 10137  0139  293B               	goto	u6260
 10138  013A                     u6261:
 10139  013A  2A19               	goto	l7720
 10140  013B                     u6260:
 10141  013B                     l7656:
 10142                           
 10143                           ;ui.c: 94:                     pulseLEDColor(0x030, 20, 100);
 10144  013B  3030               	movlw	48
 10145  013C  0144               	movlb	4	; select bank4
 10146  013D  00E0               	movwf	pulseLEDColor@RGB^(0+512)
 10147  013E  3000               	movlw	0
 10148  013F  00E1               	movwf	(pulseLEDColor@RGB^(0+512)+1)
 10149  0140  3014               	movlw	20
 10150  0141  00E2               	movwf	pulseLEDColor@onTimeMS^(0+512)
 10151  0142  3000               	movlw	0
 10152  0143  00E3               	movwf	(pulseLEDColor@onTimeMS^(0+512)+1)
 10153  0144  3064               	movlw	100
 10154  0145  00E4               	movwf	pulseLEDColor@offTimeMS^(0+512)
 10155  0146  3000               	movlw	0
 10156  0147  00E5               	movwf	(pulseLEDColor@offTimeMS^(0+512)+1)
 10157  0148  3190  20EE  3180   	fcall	_pulseLEDColor
 10158  014B                     l7658:
 10159                           
 10160                           ;ui.c: 95:                     uiState = 3;
 10161  014B  3003               	movlw	3
 10162  014C  0144               	movlb	4	; select bank4
 10163  014D  00EE               	movwf	??_runUI^(0+512)
 10164  014E  086E               	movf	??_runUI^(0+512),w
 10165  014F  0140               	movlb	0	; select bank0
 10166  0150  00C3               	movwf	_uiState
 10167  0151  2A19               	goto	l7720
 10168  0152                     l7662:
 10169                           
 10170                           ;ui.c: 104:             if (!USER1_pressed()){
 10171  0152  319A  2231  3180   	fcall	_USER1_pressed
 10172  0155  3A00               	xorlw	0
 10173  0156  1D03               	skipz
 10174  0157  2959               	goto	u6271
 10175  0158  295A               	goto	u6270
 10176  0159                     u6271:
 10177  0159  295F               	goto	l7668
 10178  015A                     u6270:
 10179  015A                     l7664:
 10180                           
 10181                           ;ui.c: 105:                 bumpUISpeedMode();
 10182  015A  3193  2307  3180   	fcall	_bumpUISpeedMode
 10183  015D                     l7666:
 10184                           
 10185                           ;ui.c: 106:                 uiState = 0;
 10186  015D  0140               	movlb	0	; select bank0
 10187  015E  01C3               	clrf	_uiState
 10188  015F                     l7668:
 10189                           
 10190                           ;ui.c: 108:             if (USER2_pressed()){
 10191  015F  319A  2238  3180   	fcall	_USER2_pressed
 10192  0162  3A00               	xorlw	0
 10193  0163  1903               	skipnz
 10194  0164  2966               	goto	u6281
 10195  0165  2967               	goto	u6280
 10196  0166                     u6281:
 10197  0166  2A19               	goto	l7720
 10198  0167                     u6280:
 10199  0167                     l7670:
 10200                           
 10201                           ;ui.c: 109:                 pulseLEDColor(0x003, 50, 100);
 10202  0167  3003               	movlw	3
 10203  0168  0144               	movlb	4	; select bank4
 10204  0169  00E0               	movwf	pulseLEDColor@RGB^(0+512)
 10205  016A  3000               	movlw	0
 10206  016B  00E1               	movwf	(pulseLEDColor@RGB^(0+512)+1)
 10207  016C  3032               	movlw	50
 10208  016D  00E2               	movwf	pulseLEDColor@onTimeMS^(0+512)
 10209  016E  3000               	movlw	0
 10210  016F  00E3               	movwf	(pulseLEDColor@onTimeMS^(0+512)+1)
 10211  0170  3064               	movlw	100
 10212  0171  00E4               	movwf	pulseLEDColor@offTimeMS^(0+512)
 10213  0172  3000               	movlw	0
 10214  0173  00E5               	movwf	(pulseLEDColor@offTimeMS^(0+512)+1)
 10215  0174  3190  20EE  3180   	fcall	_pulseLEDColor
 10216  0177                     l7672:
 10217                           
 10218                           ;ui.c: 110:                 uiState = 5;
 10219  0177  3005               	movlw	5
 10220  0178  0144               	movlb	4	; select bank4
 10221  0179  00EE               	movwf	??_runUI^(0+512)
 10222  017A  086E               	movf	??_runUI^(0+512),w
 10223  017B  0140               	movlb	0	; select bank0
 10224  017C  00C3               	movwf	_uiState
 10225  017D  2A19               	goto	l7720
 10226  017E                     l7674:
 10227                           
 10228                           ;ui.c: 115:             if (!USER2_pressed()){
 10229  017E  319A  2238  3180   	fcall	_USER2_pressed
 10230  0181  3A00               	xorlw	0
 10231  0182  1D03               	skipz
 10232  0183  2985               	goto	u6291
 10233  0184  2986               	goto	u6290
 10234  0185                     u6291:
 10235  0185  298B               	goto	l7680
 10236  0186                     u6290:
 10237  0186                     l7676:
 10238                           
 10239                           ;ui.c: 116:                 bumpUIType();
 10240  0186  3190  2016  3180   	fcall	_bumpUIType
 10241  0189                     l7678:
 10242                           
 10243                           ;ui.c: 117:                 uiState = 0;
 10244  0189  0140               	movlb	0	; select bank0
 10245  018A  01C3               	clrf	_uiState
 10246  018B                     l7680:
 10247                           
 10248                           ;ui.c: 119:             if (USER1_pressed()){
 10249  018B  319A  2231  3180   	fcall	_USER1_pressed
 10250  018E  3A00               	xorlw	0
 10251  018F  1903               	skipnz
 10252  0190  2992               	goto	u6301
 10253  0191  2993               	goto	u6300
 10254  0192                     u6301:
 10255  0192  2A19               	goto	l7720
 10256  0193                     u6300:
 10257  0193  2967               	goto	l7670
 10258  0194                     l7686:
 10259                           
 10260                           ;ui.c: 126:             if (getTicksSince(uiStateTime) > 4000) {
 10261  0194  0141               	movlb	1	; select bank1
 10262  0195  0823               	movf	(_uiStateTime+3)^(0+128),w
 10263  0196  00EB               	movwf	(getTicksSince@from+3)^(0+128)
 10264  0197  0822               	movf	(_uiStateTime+2)^(0+128),w
 10265  0198  00EA               	movwf	(getTicksSince@from+2)^(0+128)
 10266  0199  0821               	movf	(_uiStateTime+1)^(0+128),w
 10267  019A  00E9               	movwf	(getTicksSince@from+1)^(0+128)
 10268  019B  0820               	movf	_uiStateTime^(0+128),w
 10269  019C  00E8               	movwf	getTicksSince@from^(0+128)
 10270  019D  319D  25D1  3180   	fcall	_getTicksSince
 10271  01A0  0141               	movlb	1	; select bank1
 10272  01A1  1BEB               	btfsc	(?_getTicksSince+3)^(0+128),7
 10273  01A2  29B0               	goto	u6311
 10274  01A3  086B               	movf	(?_getTicksSince+3)^(0+128),w
 10275  01A4  1D03               	btfss	3,2
 10276  01A5  29B1               	goto	u6310
 10277  01A6  086A               	movf	(?_getTicksSince+2)^(0+128),w
 10278  01A7  1D03               	btfss	3,2
 10279  01A8  29B1               	goto	u6310
 10280  01A9  30A1               	movlw	161
 10281  01AA  0268               	subwf	?_getTicksSince^(0+128),w
 10282  01AB  300F               	movlw	15
 10283  01AC  3B69               	subwfb	(?_getTicksSince+1)^(0+128),w
 10284  01AD  1C03               	btfss	3,0
 10285  01AE  29B0               	goto	u6311
 10286  01AF  29B1               	goto	u6310
 10287  01B0                     u6311:
 10288  01B0  29C7               	goto	l7692
 10289  01B1                     u6310:
 10290  01B1                     l7688:
 10291                           
 10292                           ;ui.c: 127:                 pulseLEDColor(0x333, 500, 500);
 10293  01B1  3033               	movlw	51
 10294  01B2  0144               	movlb	4	; select bank4
 10295  01B3  00E0               	movwf	pulseLEDColor@RGB^(0+512)
 10296  01B4  3003               	movlw	3
 10297  01B5  00E1               	movwf	(pulseLEDColor@RGB^(0+512)+1)
 10298  01B6  30F4               	movlw	244
 10299  01B7  00E2               	movwf	pulseLEDColor@onTimeMS^(0+512)
 10300  01B8  3001               	movlw	1
 10301  01B9  00E3               	movwf	(pulseLEDColor@onTimeMS^(0+512)+1)
 10302  01BA  30F4               	movlw	244
 10303  01BB  00E4               	movwf	pulseLEDColor@offTimeMS^(0+512)
 10304  01BC  3001               	movlw	1
 10305  01BD  00E5               	movwf	(pulseLEDColor@offTimeMS^(0+512)+1)
 10306  01BE  3190  20EE  3180   	fcall	_pulseLEDColor
 10307  01C1                     l7690:
 10308                           
 10309                           ;ui.c: 128:                 uiState = 6;
 10310  01C1  3006               	movlw	6
 10311  01C2  0144               	movlb	4	; select bank4
 10312  01C3  00EE               	movwf	??_runUI^(0+512)
 10313  01C4  086E               	movf	??_runUI^(0+512),w
 10314  01C5  0140               	movlb	0	; select bank0
 10315  01C6  00C3               	movwf	_uiState
 10316  01C7                     l7692:
 10317                           
 10318                           ;ui.c: 131:             if (!USER1_pressed() && !USER2_pressed()) {
 10319  01C7  319A  2231  3180   	fcall	_USER1_pressed
 10320  01CA  3A00               	xorlw	0
 10321  01CB  1D03               	skipz
 10322  01CC  29CE               	goto	u6321
 10323  01CD  29CF               	goto	u6320
 10324  01CE                     u6321:
 10325  01CE  2A19               	goto	l7720
 10326  01CF                     u6320:
 10327  01CF                     l7694:
 10328  01CF  319A  2238  3180   	fcall	_USER2_pressed
 10329  01D2  3A00               	xorlw	0
 10330  01D3  1D03               	skipz
 10331  01D4  29D6               	goto	u6331
 10332  01D5  29D7               	goto	u6330
 10333  01D6                     u6331:
 10334  01D6  2A19               	goto	l7720
 10335  01D7                     u6330:
 10336  01D7                     l7696:
 10337                           
 10338                           ;ui.c: 132:                 disableJoystick();
 10339  01D7  319A  2299  3180   	fcall	_disableJoystick
 10340  01DA                     l7698:
 10341                           
 10342                           ;ui.c: 133:                 pairBluetoothDevices();
 10343  01DA  318D  2532  3180   	fcall	_pairBluetoothDevices
 10344  01DD                     l7700:
 10345                           
 10346                           ;ui.c: 134:                 enableJoystick();
 10347  01DD  319A  22D2  3180   	fcall	_enableJoystick
 10348  01E0  2912               	goto	l7650
 10349  01E1                     l7704:
 10350                           
 10351                           ;ui.c: 140:             if (!USER1_pressed() && !USER2_pressed()) {
 10352  01E1  319A  2231  3180   	fcall	_USER1_pressed
 10353  01E4  3A00               	xorlw	0
 10354  01E5  1D03               	skipz
 10355  01E6  29E8               	goto	u6341
 10356  01E7  29E9               	goto	u6340
 10357  01E8                     u6341:
 10358  01E8  2A19               	goto	l7720
 10359  01E9                     u6340:
 10360  01E9                     l7706:
 10361  01E9  319A  2238  3180   	fcall	_USER2_pressed
 10362  01EC  3A00               	xorlw	0
 10363  01ED  1D03               	skipz
 10364  01EE  29F0               	goto	u6351
 10365  01EF  29F1               	goto	u6350
 10366  01F0                     u6351:
 10367  01F0  2A19               	goto	l7720
 10368  01F1                     u6350:
 10369  01F1                     l7708:
 10370                           
 10371                           ;ui.c: 141:                 disableJoystick();
 10372  01F1  319A  2299  3180   	fcall	_disableJoystick
 10373  01F4                     l7710:
 10374                           
 10375                           ;ui.c: 143:                 doFactoryReset();
 10376  01F4  3183  2363  3180   	fcall	_doFactoryReset
 10377  01F7  29DD               	goto	l7700
 10378  01F8                     l7718:
 10379  01F8  0140               	movlb	0	; select bank0
 10380  01F9  0843               	movf	_uiState,w
 10381  01FA  0144               	movlb	4	; select bank4
 10382  01FB  00EE               	movwf	??_runUI^(0+512)
 10383  01FC  01EF               	clrf	(??_runUI^(0+512)+1)
 10384                           
 10385                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10386                           ; Switch size 1, requested type "simple"
 10387                           ; Number of cases is 1, Range of values is 0 to 0
 10388                           ; switch strategies available:
 10389                           ; Name         Instructions Cycles
 10390                           ; simple_byte            4     3 (average)
 10391                           ; direct_byte            8     6 (fixed)
 10392                           ; jumptable            260     6 (fixed)
 10393                           ;	Chosen strategy is simple_byte
 10394  01FD  086F               	movf	(??_runUI+1)^(0+512),w
 10395  01FE  3A00               	xorlw	0	; case 0
 10396  01FF  1903               	skipnz
 10397  0200  2A02               	goto	l7902
 10398  0201  2A19               	goto	l7720
 10399  0202                     l7902:
 10400                           
 10401                           ; Switch size 1, requested type "simple"
 10402                           ; Number of cases is 7, Range of values is 0 to 6
 10403                           ; switch strategies available:
 10404                           ; Name         Instructions Cycles
 10405                           ; direct_byte           20     6 (fixed)
 10406                           ; simple_byte           22    12 (average)
 10407                           ; jumptable            260     6 (fixed)
 10408                           ;	Chosen strategy is simple_byte
 10409  0202  086E               	movf	??_runUI^(0+512),w
 10410  0203  3A00               	xorlw	0	; case 0
 10411  0204  1903               	skipnz
 10412  0205  28A2               	goto	l7630
 10413  0206  3A01               	xorlw	1	; case 1
 10414  0207  1903               	skipnz
 10415  0208  2952               	goto	l7662
 10416  0209  3A03               	xorlw	3	; case 2
 10417  020A  1903               	skipnz
 10418  020B  28D8               	goto	l7642
 10419  020C  3A01               	xorlw	1	; case 3
 10420  020D  1903               	skipnz
 10421  020E  297E               	goto	l7674
 10422  020F  3A07               	xorlw	7	; case 4
 10423  0210  1903               	skipnz
 10424  0211  2915               	goto	l7652
 10425  0212  3A01               	xorlw	1	; case 5
 10426  0213  1903               	skipnz
 10427  0214  2994               	goto	l7686
 10428  0215  3A03               	xorlw	3	; case 6
 10429  0216  1903               	skipnz
 10430  0217  29E1               	goto	l7704
 10431  0218  2A19               	goto	l7720
 10432  0219                     l7720:
 10433                           
 10434                           ;ui.c: 154:     if (oneSec()) {
 10435  0219  319A  22E6  3180   	fcall	_oneSec
 10436  021C  3A00               	xorlw	0
 10437  021D  1903               	skipnz
 10438  021E  2A20               	goto	u6361
 10439  021F  2A21               	goto	u6360
 10440  0220                     u6361:
 10441  0220  2A7C               	goto	l1394
 10442  0221                     u6360:
 10443  0221                     l7722:
 10444                           
 10445                           ;ui.c: 155:         if (BTTimeRemaining() < 5000) {
 10446  0221  3197  279C  3180   	fcall	_BTTimeRemaining
 10447  0224  0141               	movlb	1	; select bank1
 10448  0225  1BEB               	btfsc	(?_BTTimeRemaining+3)^(0+128),7
 10449  0226  2A35               	goto	u6370
 10450  0227  086B               	movf	(?_BTTimeRemaining+3)^(0+128),w
 10451  0228  1D03               	btfss	3,2
 10452  0229  2A34               	goto	u6371
 10453  022A  086A               	movf	(?_BTTimeRemaining+2)^(0+128),w
 10454  022B  1D03               	btfss	3,2
 10455  022C  2A34               	goto	u6371
 10456  022D  3088               	movlw	136
 10457  022E  0268               	subwf	?_BTTimeRemaining^(0+128),w
 10458  022F  3013               	movlw	19
 10459  0230  3B69               	subwfb	(?_BTTimeRemaining+1)^(0+128),w
 10460  0231  1803               	btfsc	3,0
 10461  0232  2A34               	goto	u6371
 10462  0233  2A35               	goto	u6370
 10463  0234                     u6371:
 10464  0234  2A46               	goto	l7726
 10465  0235                     u6370:
 10466  0235                     l7724:
 10467                           
 10468                           ;ui.c: 156:             pulseLEDColor(0x200, 2, 1);
 10469  0235  3000               	movlw	0
 10470  0236  0144               	movlb	4	; select bank4
 10471  0237  00E0               	movwf	pulseLEDColor@RGB^(0+512)
 10472  0238  3002               	movlw	2
 10473  0239  00E1               	movwf	(pulseLEDColor@RGB^(0+512)+1)
 10474  023A  3002               	movlw	2
 10475  023B  00E2               	movwf	pulseLEDColor@onTimeMS^(0+512)
 10476  023C  3000               	movlw	0
 10477  023D  00E3               	movwf	(pulseLEDColor@onTimeMS^(0+512)+1)
 10478  023E  3001               	movlw	1
 10479  023F  00E4               	movwf	pulseLEDColor@offTimeMS^(0+512)
 10480  0240  3000               	movlw	0
 10481  0241  00E5               	movwf	(pulseLEDColor@offTimeMS^(0+512)+1)
 10482  0242  3190  20EE  3180   	fcall	_pulseLEDColor
 10483                           
 10484                           ;ui.c: 157:         } else if (BTTimeWaiting() > 250) {
 10485  0245  2A7C               	goto	l1394
 10486  0246                     l7726:
 10487  0246  319E  260D  3180   	fcall	_BTTimeWaiting
 10488  0249  0141               	movlb	1	; select bank1
 10489  024A  1BEB               	btfsc	(?_BTTimeWaiting+3)^(0+128),7
 10490  024B  2A5A               	goto	u6381
 10491  024C  086B               	movf	(?_BTTimeWaiting+3)^(0+128),w
 10492  024D  1D03               	btfss	3,2
 10493  024E  2A5B               	goto	u6380
 10494  024F  086A               	movf	(?_BTTimeWaiting+2)^(0+128),w
 10495  0250  1D03               	btfss	3,2
 10496  0251  2A5B               	goto	u6380
 10497  0252  0869               	movf	(?_BTTimeWaiting+1)^(0+128),w
 10498  0253  1D03               	btfss	3,2
 10499  0254  2A5B               	goto	u6380
 10500  0255  30FB               	movlw	251
 10501  0256  0268               	subwf	?_BTTimeWaiting^(0+128),w
 10502  0257  1C03               	btfss	3,0
 10503  0258  2A5A               	goto	u6381
 10504  0259  2A5B               	goto	u6380
 10505  025A                     u6381:
 10506  025A  2A6C               	goto	l7730
 10507  025B                     u6380:
 10508  025B                     l7728:
 10509                           
 10510                           ;ui.c: 158:             pulseLEDColor(0x110, 2, 1);
 10511  025B  3010               	movlw	16
 10512  025C  0144               	movlb	4	; select bank4
 10513  025D  00E0               	movwf	pulseLEDColor@RGB^(0+512)
 10514  025E  3001               	movlw	1
 10515  025F  00E1               	movwf	(pulseLEDColor@RGB^(0+512)+1)
 10516  0260  3002               	movlw	2
 10517  0261  00E2               	movwf	pulseLEDColor@onTimeMS^(0+512)
 10518  0262  3000               	movlw	0
 10519  0263  00E3               	movwf	(pulseLEDColor@onTimeMS^(0+512)+1)
 10520  0264  3001               	movlw	1
 10521  0265  00E4               	movwf	pulseLEDColor@offTimeMS^(0+512)
 10522  0266  3000               	movlw	0
 10523  0267  00E5               	movwf	(pulseLEDColor@offTimeMS^(0+512)+1)
 10524  0268  3190  20EE  3180   	fcall	_pulseLEDColor
 10525                           
 10526                           ;ui.c: 159:         } else {
 10527  026B  2A7C               	goto	l1394
 10528  026C                     l7730:
 10529                           
 10530                           ;ui.c: 160:             pulseLEDColor(0x010, 2, 1);
 10531  026C  3010               	movlw	16
 10532  026D  0144               	movlb	4	; select bank4
 10533  026E  00E0               	movwf	pulseLEDColor@RGB^(0+512)
 10534  026F  3000               	movlw	0
 10535  0270  00E1               	movwf	(pulseLEDColor@RGB^(0+512)+1)
 10536  0271  3002               	movlw	2
 10537  0272  00E2               	movwf	pulseLEDColor@onTimeMS^(0+512)
 10538  0273  3000               	movlw	0
 10539  0274  00E3               	movwf	(pulseLEDColor@onTimeMS^(0+512)+1)
 10540  0275  3001               	movlw	1
 10541  0276  00E4               	movwf	pulseLEDColor@offTimeMS^(0+512)
 10542  0277  3000               	movlw	0
 10543  0278  00E5               	movwf	(pulseLEDColor@offTimeMS^(0+512)+1)
 10544  0279  3190  20EE  3180   	fcall	_pulseLEDColor
 10545  027C                     l1394:
 10546  027C  0008               	return
 10547  027D                     __end_of_runUI:
 10548                           
 10549                           	psect	text8
 10550  0D32                     __ptext8:	
 10551 ;; *************** function _pairBluetoothDevices *****************
 10552 ;; Defined at:
 10553 ;;		line 90 in file "configure.c"
 10554 ;; Parameters:    Size  Location     Type
 10555 ;;		None
 10556 ;; Auto vars:     Size  Location     Type
 10557 ;;		None
 10558 ;; Return value:  Size  Location     Type
 10559 ;;                  1    wreg      void 
 10560 ;; Registers used:
 10561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10562 ;; Tracked objects:
 10563 ;;		On entry : 0/0
 10564 ;;		On exit  : 0/0
 10565 ;;		Unchanged: 0/0
 10566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10569 ;;      Temps:          0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10570 ;;      Totals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10571 ;;Total ram usage:        1 bytes
 10572 ;; Hardware stack levels used:    1
 10573 ;; Hardware stack levels required when called:   13
 10574 ;; This function calls:
 10575 ;;		_SetSlaveTXMasterRX
 10576 ;;		_SetSlaveTXRX
 10577 ;;		_USER1_pressed
 10578 ;;		_USER2_pressed
 10579 ;;		_getBTAddress
 10580 ;;		_pulseLEDColor
 10581 ;;		_receiveBTBuffer
 10582 ;;		_sendBTString
 10583 ;;		_setBTBaudRatesTo38400
 10584 ;;		_setBTConnection
 10585 ;;		_sleep
 10586 ;;		_strstr
 10587 ;; This function is called by:
 10588 ;;		_runUI
 10589 ;; This function uses a non-reentrant model
 10590 ;;
 10591                           
 10592                           
 10593                           ;psect for function _pairBluetoothDevices
 10594  0D32                     _pairBluetoothDevices:
 10595  0D32                     l7422:	
 10596                           ;incstack = 0
 10597                           ; Regs used in _pairBluetoothDevices: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10598                           
 10599                           
 10600                           ;configure.c: 91:     setBTBaudRatesTo38400();
 10601  0D32  3188  2031  318D   	fcall	_setBTBaudRatesTo38400
 10602                           
 10603                           ;configure.c: 94:     getBTAddress(slaveMAC, 0);
 10604  0D35  0143               	movlb	3	; select bank3
 10605  0D36  01EF               	clrf	getBTAddress@isMaster^(0+384)
 10606  0D37  3044               	movlw	(low (_slaveMAC| (0+256)))& (0+255)
 10607  0D38  3182  227D  318D   	fcall	_getBTAddress
 10608                           
 10609                           ;configure.c: 95:     getBTAddress(masterMAC, 1);
 10610  0D3B  0143               	movlb	3	; select bank3
 10611  0D3C  01EF               	clrf	getBTAddress@isMaster^(0+384)
 10612  0D3D  0AEF               	incf	getBTAddress@isMaster^(0+384),f
 10613  0D3E  3038               	movlw	(low (_masterMAC| (0+256)))& (0+255)
 10614  0D3F  3182  227D  318D   	fcall	_getBTAddress
 10615                           
 10616                           ;configure.c: 98:     setBTConnection(slaveMAC, 1);
 10617  0D42  0143               	movlb	3	; select bank3
 10618  0D43  01EF               	clrf	setBTConnection@isMaster^(0+384)
 10619  0D44  0AEF               	incf	setBTConnection@isMaster^(0+384),f
 10620  0D45  3044               	movlw	(low (_slaveMAC| (0+256)))& (0+255)
 10621  0D46  3186  269F  318D   	fcall	_setBTConnection
 10622                           
 10623                           ;configure.c: 99:     setBTConnection(masterMAC, 0);
 10624  0D49  0143               	movlb	3	; select bank3
 10625  0D4A  01EF               	clrf	setBTConnection@isMaster^(0+384)
 10626  0D4B  3038               	movlw	(low (_masterMAC| (0+256)))& (0+255)
 10627  0D4C  3186  269F  318D   	fcall	_setBTConnection
 10628  0D4F                     l7424:
 10629                           
 10630                           ;configure.c: 102:     SetSlaveTXMasterRX();
 10631  0D4F  319C  2455  318D   	fcall	_SetSlaveTXMasterRX
 10632                           
 10633                           ;configure.c: 104:     while (!USER1_pressed() && !USER2_pressed()) {
 10634  0D52  2DBA               	goto	l7438
 10635  0D53                     l7426:
 10636                           
 10637                           ;configure.c: 105:         sendBTString("HUGS\n");
 10638  0D53  304F               	movlw	low (STR_4| (0+32768))
 10639  0D54  0143               	movlb	3	; select bank3
 10640  0D55  00EC               	movwf	sendBTString@buffer^(0+384)
 10641  0D56  30A0               	movlw	high (STR_4| (0+32768))
 10642  0D57  00ED               	movwf	(sendBTString@buffer^(0+384)+1)
 10643  0D58  319F  2791  318D   	fcall	_sendBTString
 10644  0D5B                     l7428:
 10645                           
 10646                           ;configure.c: 106:         if (receiveBTBuffer(RX_Buffer, 5, 1000) == 5){
 10647  0D5B  3005               	movlw	5
 10648  0D5C  0144               	movlb	4	; select bank4
 10649  0D5D  00ED               	movwf	??_pairBluetoothDevices^(0+512)
 10650  0D5E  086D               	movf	??_pairBluetoothDevices^(0+512),w
 10651  0D5F  0142               	movlb	2	; select bank2
 10652  0D60  00EC               	movwf	receiveBTBuffer@maxChars^(0+256)
 10653  0D61  30E8               	movlw	232
 10654  0D62  00ED               	movwf	receiveBTBuffer@timeoutMS^(0+256)
 10655  0D63  3003               	movlw	3
 10656  0D64  00EE               	movwf	(receiveBTBuffer@timeoutMS^(0+256)+1)
 10657  0D65  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
 10658  0D66  3189  21E7  318D   	fcall	_receiveBTBuffer
 10659  0D69  3A05               	xorlw	5
 10660  0D6A  1D03               	skipz
 10661  0D6B  2D6D               	goto	u6111
 10662  0D6C  2D6E               	goto	u6110
 10663  0D6D                     u6111:
 10664  0D6D  2D9E               	goto	l7436
 10665  0D6E                     u6110:
 10666  0D6E                     l7430:
 10667                           
 10668                           ;configure.c: 107:             if (strstr((char *)RX_Buffer, "HUGS\n"))
 10669  0D6E  304F               	movlw	low (STR_4| (0+32768))
 10670  0D6F  0141               	movlb	1	; select bank1
 10671  0D70  00ED               	movwf	strstr@n^(0+128)
 10672  0D71  30A0               	movlw	high (STR_4| (0+32768))
 10673  0D72  00EE               	movwf	(strstr@n^(0+128)+1)
 10674  0D73  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
 10675  0D74  3196  261C  318D   	fcall	_strstr
 10676  0D77  3A00               	xorlw	0
 10677  0D78  1903               	skipnz
 10678  0D79  2D7B               	goto	u6121
 10679  0D7A  2D7C               	goto	u6120
 10680  0D7B                     u6121:
 10681  0D7B  2D8D               	goto	l7434
 10682  0D7C                     u6120:
 10683  0D7C                     l7432:
 10684                           
 10685                           ;configure.c: 108:                 pulseLEDColor( 0x033, 4, 1);
 10686  0D7C  3033               	movlw	51
 10687  0D7D  0144               	movlb	4	; select bank4
 10688  0D7E  00E0               	movwf	pulseLEDColor@RGB^(0+512)
 10689  0D7F  3000               	movlw	0
 10690  0D80  00E1               	movwf	(pulseLEDColor@RGB^(0+512)+1)
 10691  0D81  3004               	movlw	4
 10692  0D82  00E2               	movwf	pulseLEDColor@onTimeMS^(0+512)
 10693  0D83  3000               	movlw	0
 10694  0D84  00E3               	movwf	(pulseLEDColor@onTimeMS^(0+512)+1)
 10695  0D85  3001               	movlw	1
 10696  0D86  00E4               	movwf	pulseLEDColor@offTimeMS^(0+512)
 10697  0D87  3000               	movlw	0
 10698  0D88  00E5               	movwf	(pulseLEDColor@offTimeMS^(0+512)+1)
 10699  0D89  3190  20EE  318D   	fcall	_pulseLEDColor
 10700  0D8C  2DAE               	goto	l1234
 10701  0D8D                     l7434:
 10702                           
 10703                           ;configure.c: 110:                 pulseLEDColor( 0x300, 4, 1);
 10704  0D8D  3000               	movlw	0
 10705  0D8E  0144               	movlb	4	; select bank4
 10706  0D8F  00E0               	movwf	pulseLEDColor@RGB^(0+512)
 10707  0D90  3003               	movlw	3
 10708  0D91  00E1               	movwf	(pulseLEDColor@RGB^(0+512)+1)
 10709  0D92  3004               	movlw	4
 10710  0D93  00E2               	movwf	pulseLEDColor@onTimeMS^(0+512)
 10711  0D94  3000               	movlw	0
 10712  0D95  00E3               	movwf	(pulseLEDColor@onTimeMS^(0+512)+1)
 10713  0D96  3001               	movlw	1
 10714  0D97  00E4               	movwf	pulseLEDColor@offTimeMS^(0+512)
 10715  0D98  3000               	movlw	0
 10716  0D99  00E5               	movwf	(pulseLEDColor@offTimeMS^(0+512)+1)
 10717  0D9A  3190  20EE  318D   	fcall	_pulseLEDColor
 10718  0D9D  2DAE               	goto	l1234
 10719  0D9E                     l7436:
 10720                           
 10721                           ;configure.c: 112:             pulseLEDColor( 0x330, 4, 1);
 10722  0D9E  3030               	movlw	48
 10723  0D9F  0144               	movlb	4	; select bank4
 10724  0DA0  00E0               	movwf	pulseLEDColor@RGB^(0+512)
 10725  0DA1  3003               	movlw	3
 10726  0DA2  00E1               	movwf	(pulseLEDColor@RGB^(0+512)+1)
 10727  0DA3  3004               	movlw	4
 10728  0DA4  00E2               	movwf	pulseLEDColor@onTimeMS^(0+512)
 10729  0DA5  3000               	movlw	0
 10730  0DA6  00E3               	movwf	(pulseLEDColor@onTimeMS^(0+512)+1)
 10731  0DA7  3001               	movlw	1
 10732  0DA8  00E4               	movwf	pulseLEDColor@offTimeMS^(0+512)
 10733  0DA9  3000               	movlw	0
 10734  0DAA  00E5               	movwf	(pulseLEDColor@offTimeMS^(0+512)+1)
 10735  0DAB  3190  20EE  318D   	fcall	_pulseLEDColor
 10736  0DAE                     l1234:	
 10737                           ;configure.c: 113:         }
 10738                           
 10739                           
 10740                           ;configure.c: 114:         sleep(50);
 10741  0DAE  3000               	movlw	0
 10742  0DAF  0142               	movlb	2	; select bank2
 10743  0DB0  00EF               	movwf	(sleep@delay+3)^(0+256)
 10744  0DB1  3000               	movlw	0
 10745  0DB2  00EE               	movwf	(sleep@delay+2)^(0+256)
 10746  0DB3  3000               	movlw	0
 10747  0DB4  00ED               	movwf	(sleep@delay+1)^(0+256)
 10748  0DB5  3032               	movlw	50
 10749  0DB6  00EC               	movwf	sleep@delay^(0+256)
 10750  0DB7  3193  23BB  318D   	fcall	_sleep
 10751  0DBA                     l7438:
 10752                           
 10753                           ;configure.c: 104:     while (!USER1_pressed() && !USER2_pressed()) {
 10754  0DBA  319A  2231  318D   	fcall	_USER1_pressed
 10755  0DBD  3A00               	xorlw	0
 10756  0DBE  1D03               	skipz
 10757  0DBF  2DC1               	goto	u6131
 10758  0DC0  2DC2               	goto	u6130
 10759  0DC1                     u6131:
 10760  0DC1  2DCA               	goto	l7442
 10761  0DC2                     u6130:
 10762  0DC2                     l7440:
 10763  0DC2  319A  2238  318D   	fcall	_USER2_pressed
 10764  0DC5  3A00               	xorlw	0
 10765  0DC6  1903               	skipnz
 10766  0DC7  2DC9               	goto	u6141
 10767  0DC8  2DCA               	goto	u6140
 10768  0DC9                     u6141:
 10769  0DC9  2D53               	goto	l7426
 10770  0DCA                     u6140:
 10771  0DCA                     l7442:
 10772                           
 10773                           ;configure.c: 118:     SetSlaveTXRX();
 10774  0DCA  319A  2287  318D   	fcall	_SetSlaveTXRX
 10775                           
 10776                           ;configure.c: 119:     sleep(1000);
 10777  0DCD  3000               	movlw	0
 10778  0DCE  0142               	movlb	2	; select bank2
 10779  0DCF  00EF               	movwf	(sleep@delay+3)^(0+256)
 10780  0DD0  3000               	movlw	0
 10781  0DD1  00EE               	movwf	(sleep@delay+2)^(0+256)
 10782  0DD2  3003               	movlw	3
 10783  0DD3  00ED               	movwf	(sleep@delay+1)^(0+256)
 10784  0DD4  30E8               	movlw	232
 10785  0DD5  00EC               	movwf	sleep@delay^(0+256)
 10786  0DD6  3193  23BB  318D   	fcall	_sleep
 10787  0DD9                     l1238:
 10788  0DD9  0008               	return
 10789  0DDA                     __end_of_pairBluetoothDevices:
 10790                           
 10791                           	psect	text9
 10792  069F                     __ptext9:	
 10793 ;; *************** function _setBTConnection *****************
 10794 ;; Defined at:
 10795 ;;		line 175 in file "configure.c"
 10796 ;; Parameters:    Size  Location     Type
 10797 ;;  MAC             1    wreg     PTR unsigned char 
 10798 ;;		 -> masterMAC(12), slaveMAC(12), 
 10799 ;;  isMaster        1    7[BANK3 ] _Bool 
 10800 ;; Auto vars:     Size  Location     Type
 10801 ;;  MAC             1   12[BANK4 ] PTR unsigned char 
 10802 ;;		 -> masterMAC(12), slaveMAC(12), 
 10803 ;; Return value:  Size  Location     Type
 10804 ;;                  1    wreg      void 
 10805 ;; Registers used:
 10806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10807 ;; Tracked objects:
 10808 ;;		On entry : 0/0
 10809 ;;		On exit  : 0/0
 10810 ;;		Unchanged: 0/0
 10811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10812 ;;      Params:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10813 ;;      Locals:         0       0       0       0       0       5       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10814 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10815 ;;      Totals:         0       0       0       0       1       7       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10816 ;;Total ram usage:        8 bytes
 10817 ;; Hardware stack levels used:    1
 10818 ;; Hardware stack levels required when called:   12
 10819 ;; This function calls:
 10820 ;;		_SetMasterTXRX
 10821 ;;		_SetSlaveTXRX
 10822 ;;		_pulseLEDColor
 10823 ;;		_receiveBTBuffer
 10824 ;;		_sendBTBuffer
 10825 ;;		_sendBTString
 10826 ;;		_sleep
 10827 ;;		_strstr
 10828 ;; This function is called by:
 10829 ;;		_pairBluetoothDevices
 10830 ;; This function uses a non-reentrant model
 10831 ;;
 10832                           
 10833                           
 10834                           ;psect for function _setBTConnection
 10835  069F                     _setBTConnection:
 10836                           
 10837                           ;incstack = 0
 10838                           ; Regs used in _setBTConnection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10839                           ;setBTConnection@MAC stored from wreg
 10840  069F  0144               	movlb	4	; select bank4
 10841  06A0  00EC               	movwf	setBTConnection@MAC^(0+512)
 10842  06A1                     l7030:
 10843                           
 10844                           ;configure.c: 177:     if (isMaster)
 10845  06A1  0143               	movlb	3	; select bank3
 10846  06A2  086F               	movf	setBTConnection@isMaster^(0+384),w
 10847  06A3  1903               	btfsc	3,2
 10848  06A4  2EA6               	goto	u5851
 10849  06A5  2EA7               	goto	u5850
 10850  06A6                     u5851:
 10851  06A6  2EAB               	goto	l7034
 10852  06A7                     u5850:
 10853  06A7                     l7032:
 10854                           
 10855                           ;configure.c: 178:         SetMasterTXRX();
 10856  06A7  319C  246A  3186   	fcall	_SetMasterTXRX
 10857  06AA  2EAE               	goto	l1258
 10858  06AB                     l7034:
 10859                           
 10860                           ;configure.c: 180:         SetSlaveTXRX();
 10861  06AB  319A  2287  3186   	fcall	_SetSlaveTXRX
 10862  06AE                     l1258:
 10863                           
 10864                           ;configure.c: 182:     sleep(1000);
 10865  06AE  3000               	movlw	0
 10866  06AF  0142               	movlb	2	; select bank2
 10867  06B0  00EF               	movwf	(sleep@delay+3)^(0+256)
 10868  06B1  3000               	movlw	0
 10869  06B2  00EE               	movwf	(sleep@delay+2)^(0+256)
 10870  06B3  3003               	movlw	3
 10871  06B4  00ED               	movwf	(sleep@delay+1)^(0+256)
 10872  06B5  30E8               	movlw	232
 10873  06B6  00EC               	movwf	sleep@delay^(0+256)
 10874  06B7  3193  23BB  3186   	fcall	_sleep
 10875  06BA                     l7036:
 10876                           
 10877                           ;configure.c: 183:     sendBTString("AT");
 10878  06BA  305E               	movlw	low (STR_7| (0+32768))
 10879  06BB  0143               	movlb	3	; select bank3
 10880  06BC  00EC               	movwf	sendBTString@buffer^(0+384)
 10881  06BD  30A0               	movlw	high (STR_7| (0+32768))
 10882  06BE  00ED               	movwf	(sendBTString@buffer^(0+384)+1)
 10883  06BF  319F  2791  3186   	fcall	_sendBTString
 10884  06C2                     l7038:
 10885                           
 10886                           ;configure.c: 184:     charsRead = receiveBTBuffer(RX_Buffer, 9, 100);
 10887  06C2  3009               	movlw	9
 10888  06C3  0144               	movlb	4	; select bank4
 10889  06C4  00E6               	movwf	??_setBTConnection^(0+512)
 10890  06C5  0866               	movf	??_setBTConnection^(0+512),w
 10891  06C6  0142               	movlb	2	; select bank2
 10892  06C7  00EC               	movwf	receiveBTBuffer@maxChars^(0+256)
 10893  06C8  3064               	movlw	100
 10894  06C9  00ED               	movwf	receiveBTBuffer@timeoutMS^(0+256)
 10895  06CA  3000               	movlw	0
 10896  06CB  00EE               	movwf	(receiveBTBuffer@timeoutMS^(0+256)+1)
 10897  06CC  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
 10898  06CD  3189  21E7  3186   	fcall	_receiveBTBuffer
 10899  06D0  0144               	movlb	4	; select bank4
 10900  06D1  00E7               	movwf	(??_setBTConnection+1)^(0+512)
 10901  06D2  0867               	movf	(??_setBTConnection+1)^(0+512),w
 10902  06D3  0141               	movlb	1	; select bank1
 10903  06D4  00C7               	movwf	_charsRead^(0+128)
 10904  06D5                     l7040:
 10905                           
 10906                           ;configure.c: 185:     pulseLEDColor((strstr((void *)RX_Buffer, "OK") != ((void*)0)) ? 0
      +                          x030 : 0x330, 100, 200);
 10907  06D5  305B               	movlw	low (STR_14| (0+32768))
 10908  06D6  00ED               	movwf	strstr@n^(0+128)
 10909  06D7  30A0               	movlw	high (STR_14| (0+32768))
 10910  06D8  00EE               	movwf	(strstr@n^(0+128)+1)
 10911  06D9  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
 10912  06DA  3196  261C  3186   	fcall	_strstr
 10913  06DD  3A00               	xorlw	0
 10914  06DE  1D03               	skipz
 10915  06DF  2EE1               	goto	u5861
 10916  06E0  2EE2               	goto	u5860
 10917  06E1                     u5861:
 10918  06E1  2EE8               	goto	l7044
 10919  06E2                     u5860:
 10920  06E2                     l7042:
 10921  06E2  3030               	movlw	48
 10922  06E3  0144               	movlb	4	; select bank4
 10923  06E4  00E8               	movwf	_setBTConnection$2256^(0+512)
 10924  06E5  3003               	movlw	3
 10925  06E6  00E9               	movwf	(_setBTConnection$2256^(0+512)+1)
 10926  06E7  2EED               	goto	l7046
 10927  06E8                     l7044:
 10928  06E8  3030               	movlw	48
 10929  06E9  0144               	movlb	4	; select bank4
 10930  06EA  00E8               	movwf	_setBTConnection$2256^(0+512)
 10931  06EB  3000               	movlw	0
 10932  06EC  00E9               	movwf	(_setBTConnection$2256^(0+512)+1)
 10933  06ED                     l7046:
 10934  06ED  0869               	movf	(_setBTConnection$2256+1)^(0+512),w
 10935  06EE  00E1               	movwf	(pulseLEDColor@RGB+1)^(0+512)
 10936  06EF  0868               	movf	_setBTConnection$2256^(0+512),w
 10937  06F0  00E0               	movwf	pulseLEDColor@RGB^(0+512)
 10938  06F1  3064               	movlw	100
 10939  06F2  00E2               	movwf	pulseLEDColor@onTimeMS^(0+512)
 10940  06F3  3000               	movlw	0
 10941  06F4  00E3               	movwf	(pulseLEDColor@onTimeMS^(0+512)+1)
 10942  06F5  30C8               	movlw	200
 10943  06F6  00E4               	movwf	pulseLEDColor@offTimeMS^(0+512)
 10944  06F7  3000               	movlw	0
 10945  06F8  00E5               	movwf	(pulseLEDColor@offTimeMS^(0+512)+1)
 10946  06F9  3190  20EE  3186   	fcall	_pulseLEDColor
 10947  06FC                     l7048:
 10948                           
 10949                           ;configure.c: 187:     sleep(10);
 10950  06FC  3000               	movlw	0
 10951  06FD  0142               	movlb	2	; select bank2
 10952  06FE  00EF               	movwf	(sleep@delay+3)^(0+256)
 10953  06FF  3000               	movlw	0
 10954  0700  00EE               	movwf	(sleep@delay+2)^(0+256)
 10955  0701  3000               	movlw	0
 10956  0702  00ED               	movwf	(sleep@delay+1)^(0+256)
 10957  0703  300A               	movlw	10
 10958  0704  00EC               	movwf	sleep@delay^(0+256)
 10959  0705  3193  23BB  3186   	fcall	_sleep
 10960  0708                     l7050:
 10961                           
 10962                           ;configure.c: 188:     if (*MAC != 0) {
 10963  0708  0144               	movlb	4	; select bank4
 10964  0709  086C               	movf	setBTConnection@MAC^(0+512),w
 10965  070A  0086               	movwf	6
 10966  070B  3001               	movlw	1	; select bank2/3
 10967  070C  0087               	movwf	7
 10968  070D  0801               	movf	1,w
 10969  070E  1903               	btfsc	3,2
 10970  070F  2F11               	goto	u5871
 10971  0710  2F12               	goto	u5870
 10972  0711                     u5871:
 10973  0711  2F65               	goto	l1268
 10974  0712                     u5870:
 10975  0712                     l7052:
 10976                           
 10977                           ;configure.c: 189:         sendBTString("AT+CON");
 10978  0712  3048               	movlw	low (STR_19| (0+32768))
 10979  0713  0143               	movlb	3	; select bank3
 10980  0714  00EC               	movwf	sendBTString@buffer^(0+384)
 10981  0715  30A0               	movlw	high (STR_19| (0+32768))
 10982  0716  00ED               	movwf	(sendBTString@buffer^(0+384)+1)
 10983  0717  319F  2791  3186   	fcall	_sendBTString
 10984                           
 10985                           ;configure.c: 190:         sendBTBuffer(MAC, 12, 1);
 10986  071A  0144               	movlb	4	; select bank4
 10987  071B  086C               	movf	setBTConnection@MAC^(0+512),w
 10988  071C  0142               	movlb	2	; select bank2
 10989  071D  00EC               	movwf	sendBTBuffer@buffer^(0+256)
 10990  071E  3001               	movlw	1
 10991  071F  00ED               	movwf	(sendBTBuffer@buffer+1)^(0+256)
 10992  0720  300C               	movlw	12
 10993  0721  0144               	movlb	4	; select bank4
 10994  0722  00E6               	movwf	??_setBTConnection^(0+512)
 10995  0723  0866               	movf	??_setBTConnection^(0+512),w
 10996  0724  0142               	movlb	2	; select bank2
 10997  0725  00EE               	movwf	sendBTBuffer@length^(0+256)
 10998  0726  01EF               	clrf	sendBTBuffer@blockIfBusy^(0+256)
 10999  0727  0AEF               	incf	sendBTBuffer@blockIfBusy^(0+256),f
 11000  0728  3191  21D7  3186   	fcall	_sendBTBuffer
 11001  072B                     l7054:
 11002                           
 11003                           ;configure.c: 191:         charsRead = receiveBTBuffer(RX_Buffer, 28, 1000);
 11004  072B  301C               	movlw	28
 11005  072C  0144               	movlb	4	; select bank4
 11006  072D  00E6               	movwf	??_setBTConnection^(0+512)
 11007  072E  0866               	movf	??_setBTConnection^(0+512),w
 11008  072F  0142               	movlb	2	; select bank2
 11009  0730  00EC               	movwf	receiveBTBuffer@maxChars^(0+256)
 11010  0731  30E8               	movlw	232
 11011  0732  00ED               	movwf	receiveBTBuffer@timeoutMS^(0+256)
 11012  0733  3003               	movlw	3
 11013  0734  00EE               	movwf	(receiveBTBuffer@timeoutMS^(0+256)+1)
 11014  0735  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
 11015  0736  3189  21E7  3186   	fcall	_receiveBTBuffer
 11016  0739  0144               	movlb	4	; select bank4
 11017  073A  00E7               	movwf	(??_setBTConnection+1)^(0+512)
 11018  073B  0867               	movf	(??_setBTConnection+1)^(0+512),w
 11019  073C  0141               	movlb	1	; select bank1
 11020  073D  00C7               	movwf	_charsRead^(0+128)
 11021  073E                     l7056:
 11022                           
 11023                           ;configure.c: 192:         pulseLEDColor((strstr((void *)RX_Buffer, "OK") != ((void*)0))
      +                           ? 0x030 : 0x300, 100, 200);
 11024  073E  305B               	movlw	low (STR_14| (0+32768))
 11025  073F  00ED               	movwf	strstr@n^(0+128)
 11026  0740  30A0               	movlw	high (STR_14| (0+32768))
 11027  0741  00EE               	movwf	(strstr@n^(0+128)+1)
 11028  0742  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
 11029  0743  3196  261C  3186   	fcall	_strstr
 11030  0746  3A00               	xorlw	0
 11031  0747  1D03               	skipz
 11032  0748  2F4A               	goto	u5881
 11033  0749  2F4B               	goto	u5880
 11034  074A                     u5881:
 11035  074A  2F51               	goto	l7060
 11036  074B                     u5880:
 11037  074B                     l7058:
 11038  074B  3000               	movlw	0
 11039  074C  0144               	movlb	4	; select bank4
 11040  074D  00EA               	movwf	_setBTConnection$2259^(0+512)
 11041  074E  3003               	movlw	3
 11042  074F  00EB               	movwf	(_setBTConnection$2259^(0+512)+1)
 11043  0750  2F56               	goto	l7062
 11044  0751                     l7060:
 11045  0751  3030               	movlw	48
 11046  0752  0144               	movlb	4	; select bank4
 11047  0753  00EA               	movwf	_setBTConnection$2259^(0+512)
 11048  0754  3000               	movlw	0
 11049  0755  00EB               	movwf	(_setBTConnection$2259^(0+512)+1)
 11050  0756                     l7062:
 11051  0756  086B               	movf	(_setBTConnection$2259+1)^(0+512),w
 11052  0757  00E1               	movwf	(pulseLEDColor@RGB+1)^(0+512)
 11053  0758  086A               	movf	_setBTConnection$2259^(0+512),w
 11054  0759  00E0               	movwf	pulseLEDColor@RGB^(0+512)
 11055  075A  3064               	movlw	100
 11056  075B  00E2               	movwf	pulseLEDColor@onTimeMS^(0+512)
 11057  075C  3000               	movlw	0
 11058  075D  00E3               	movwf	(pulseLEDColor@onTimeMS^(0+512)+1)
 11059  075E  30C8               	movlw	200
 11060  075F  00E4               	movwf	pulseLEDColor@offTimeMS^(0+512)
 11061  0760  3000               	movlw	0
 11062  0761  00E5               	movwf	(pulseLEDColor@offTimeMS^(0+512)+1)
 11063  0762  3190  20EE  3186   	fcall	_pulseLEDColor
 11064  0765                     l1268:
 11065  0765  0008               	return
 11066  0766                     __end_of_setBTConnection:
 11067                           
 11068                           	psect	text10
 11069  0831                     __ptext10:	
 11070 ;; *************** function _setBTBaudRatesTo38400 *****************
 11071 ;; Defined at:
 11072 ;;		line 122 in file "configure.c"
 11073 ;; Parameters:    Size  Location     Type
 11074 ;;		None
 11075 ;; Auto vars:     Size  Location     Type
 11076 ;;		None
 11077 ;; Return value:  Size  Location     Type
 11078 ;;                  1    wreg      void 
 11079 ;; Registers used:
 11080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11081 ;; Tracked objects:
 11082 ;;		On entry : 0/0
 11083 ;;		On exit  : 0/0
 11084 ;;		Unchanged: 0/0
 11085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11090 ;;Total ram usage:        0 bytes
 11091 ;; Hardware stack levels used:    1
 11092 ;; Hardware stack levels required when called:   12
 11093 ;; This function calls:
 11094 ;;		_SetDualReceive
 11095 ;;		_sendBTString
 11096 ;;		_setSerialBaud
 11097 ;;		_sleep
 11098 ;; This function is called by:
 11099 ;;		_pairBluetoothDevices
 11100 ;; This function uses a non-reentrant model
 11101 ;;
 11102                           
 11103                           
 11104                           ;psect for function _setBTBaudRatesTo38400
 11105  0831                     _setBTBaudRatesTo38400:
 11106  0831                     l6964:	
 11107                           ;incstack = 0
 11108                           ; Regs used in _setBTBaudRatesTo38400: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11109                           
 11110                           
 11111                           ;configure.c: 125:     SetDualReceive();
 11112  0831  319C  2440  3188   	fcall	_SetDualReceive
 11113                           
 11114                           ;configure.c: 126:     setSerialBaud(9600);
 11115  0834  3080               	movlw	128
 11116  0835  0143               	movlb	3	; select bank3
 11117  0836  00EC               	movwf	setSerialBaud@baud^(0+384)
 11118  0837  3025               	movlw	37
 11119  0838  00ED               	movwf	(setSerialBaud@baud^(0+384)+1)
 11120  0839  319D  25EF  3188   	fcall	_setSerialBaud
 11121  083C                     l6966:
 11122                           
 11123                           ;configure.c: 128:     sendBTString("AT");
 11124  083C  305E               	movlw	low (STR_7| (0+32768))
 11125  083D  0143               	movlb	3	; select bank3
 11126  083E  00EC               	movwf	sendBTString@buffer^(0+384)
 11127  083F  30A0               	movlw	high (STR_7| (0+32768))
 11128  0840  00ED               	movwf	(sendBTString@buffer^(0+384)+1)
 11129  0841  319F  2791  3188   	fcall	_sendBTString
 11130  0844                     l6968:
 11131                           
 11132                           ;configure.c: 129:     sleep(100);
 11133  0844  3000               	movlw	0
 11134  0845  0142               	movlb	2	; select bank2
 11135  0846  00EF               	movwf	(sleep@delay+3)^(0+256)
 11136  0847  3000               	movlw	0
 11137  0848  00EE               	movwf	(sleep@delay+2)^(0+256)
 11138  0849  3000               	movlw	0
 11139  084A  00ED               	movwf	(sleep@delay+1)^(0+256)
 11140  084B  3064               	movlw	100
 11141  084C  00EC               	movwf	sleep@delay^(0+256)
 11142  084D  3193  23BB  3188   	fcall	_sleep
 11143                           
 11144                           ;configure.c: 130:     sendBTString("AT+BAUD2");
 11145  0850  301B               	movlw	low (STR_8| (0+32768))
 11146  0851  0143               	movlb	3	; select bank3
 11147  0852  00EC               	movwf	sendBTString@buffer^(0+384)
 11148  0853  30A0               	movlw	high (STR_8| (0+32768))
 11149  0854  00ED               	movwf	(sendBTString@buffer^(0+384)+1)
 11150  0855  319F  2791  3188   	fcall	_sendBTString
 11151  0858                     l6970:
 11152                           
 11153                           ;configure.c: 131:     sleep(250);
 11154  0858  3000               	movlw	0
 11155  0859  0142               	movlb	2	; select bank2
 11156  085A  00EF               	movwf	(sleep@delay+3)^(0+256)
 11157  085B  3000               	movlw	0
 11158  085C  00EE               	movwf	(sleep@delay+2)^(0+256)
 11159  085D  3000               	movlw	0
 11160  085E  00ED               	movwf	(sleep@delay+1)^(0+256)
 11161  085F  30FA               	movlw	250
 11162  0860  00EC               	movwf	sleep@delay^(0+256)
 11163  0861  3193  23BB  3188   	fcall	_sleep
 11164  0864                     l6972:
 11165                           
 11166                           ;configure.c: 132:     sendBTString("AT");
 11167  0864  305E               	movlw	low (STR_7| (0+32768))
 11168  0865  0143               	movlb	3	; select bank3
 11169  0866  00EC               	movwf	sendBTString@buffer^(0+384)
 11170  0867  30A0               	movlw	high (STR_7| (0+32768))
 11171  0868  00ED               	movwf	(sendBTString@buffer^(0+384)+1)
 11172  0869  319F  2791  3188   	fcall	_sendBTString
 11173                           
 11174                           ;configure.c: 133:     sleep(500);
 11175  086C  3000               	movlw	0
 11176  086D  0142               	movlb	2	; select bank2
 11177  086E  00EF               	movwf	(sleep@delay+3)^(0+256)
 11178  086F  3000               	movlw	0
 11179  0870  00EE               	movwf	(sleep@delay+2)^(0+256)
 11180  0871  3001               	movlw	1
 11181  0872  00ED               	movwf	(sleep@delay+1)^(0+256)
 11182  0873  30F4               	movlw	244
 11183  0874  00EC               	movwf	sleep@delay^(0+256)
 11184  0875  3193  23BB  3188   	fcall	_sleep
 11185  0878                     l6974:
 11186                           
 11187                           ;configure.c: 134:     sendBTString("AT+RESET");
 11188  0878  3036               	movlw	low (STR_10| (0+32768))
 11189  0879  0143               	movlb	3	; select bank3
 11190  087A  00EC               	movwf	sendBTString@buffer^(0+384)
 11191  087B  30A0               	movlw	high (STR_10| (0+32768))
 11192  087C  00ED               	movwf	(sendBTString@buffer^(0+384)+1)
 11193  087D  319F  2791  3188   	fcall	_sendBTString
 11194  0880                     l6976:
 11195                           
 11196                           ;configure.c: 135:     sleep(500);
 11197  0880  3000               	movlw	0
 11198  0881  0142               	movlb	2	; select bank2
 11199  0882  00EF               	movwf	(sleep@delay+3)^(0+256)
 11200  0883  3000               	movlw	0
 11201  0884  00EE               	movwf	(sleep@delay+2)^(0+256)
 11202  0885  3001               	movlw	1
 11203  0886  00ED               	movwf	(sleep@delay+1)^(0+256)
 11204  0887  30F4               	movlw	244
 11205  0888  00EC               	movwf	sleep@delay^(0+256)
 11206  0889  3193  23BB  3188   	fcall	_sleep
 11207  088C                     l6978:
 11208                           
 11209                           ;configure.c: 136:     setSerialBaud(38400);
 11210  088C  3000               	movlw	0
 11211  088D  0143               	movlb	3	; select bank3
 11212  088E  00EC               	movwf	setSerialBaud@baud^(0+384)
 11213  088F  3096               	movlw	150
 11214  0890  00ED               	movwf	(setSerialBaud@baud^(0+384)+1)
 11215  0891  319D  25EF  3188   	fcall	_setSerialBaud
 11216  0894                     l1241:
 11217  0894  0008               	return
 11218  0895                     __end_of_setBTBaudRatesTo38400:
 11219                           
 11220                           	psect	text11
 11221  027D                     __ptext11:	
 11222 ;; *************** function _getBTAddress *****************
 11223 ;; Defined at:
 11224 ;;		line 139 in file "configure.c"
 11225 ;; Parameters:    Size  Location     Type
 11226 ;;  MAC             1    wreg     PTR unsigned char 
 11227 ;;		 -> masterMAC(12), slaveMAC(12), 
 11228 ;;  isMaster        1    7[BANK3 ] _Bool 
 11229 ;; Auto vars:     Size  Location     Type
 11230 ;;  MAC             1   10[BANK4 ] PTR unsigned char 
 11231 ;;		 -> masterMAC(12), slaveMAC(12), 
 11232 ;;  addrPointer     1   11[BANK4 ] PTR unsigned char 
 11233 ;;		 -> NULL(0), RX_Buffer(40), 
 11234 ;; Return value:  Size  Location     Type
 11235 ;;                  1    wreg      _Bool 
 11236 ;; Registers used:
 11237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11238 ;; Tracked objects:
 11239 ;;		On entry : 0/0
 11240 ;;		On exit  : 0/0
 11241 ;;		Unchanged: 0/0
 11242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11243 ;;      Params:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11244 ;;      Locals:         0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11245 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11246 ;;      Totals:         0       0       0       0       1       6       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11247 ;;Total ram usage:        7 bytes
 11248 ;; Hardware stack levels used:    1
 11249 ;; Hardware stack levels required when called:   12
 11250 ;; This function calls:
 11251 ;;		_SetMasterTXRX
 11252 ;;		_SetSlaveTXRX
 11253 ;;		_memcpy
 11254 ;;		_pulseLEDColor
 11255 ;;		_receiveBTBuffer
 11256 ;;		_sendBTString
 11257 ;;		_sleep
 11258 ;;		_strstr
 11259 ;; This function is called by:
 11260 ;;		_pairBluetoothDevices
 11261 ;; This function uses a non-reentrant model
 11262 ;;
 11263                           
 11264                           
 11265                           ;psect for function _getBTAddress
 11266  027D                     _getBTAddress:
 11267                           
 11268                           ;incstack = 0
 11269                           ; Regs used in _getBTAddress: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11270                           ;getBTAddress@MAC stored from wreg
 11271  027D  0144               	movlb	4	; select bank4
 11272  027E  00EA               	movwf	getBTAddress@MAC^(0+512)
 11273  027F                     l6980:
 11274                           
 11275                           ;configure.c: 141:     uint8_t * addrPointer ;;configure.c: 143:     if (isMaster)
 11276  027F  0143               	movlb	3	; select bank3
 11277  0280  086F               	movf	getBTAddress@isMaster^(0+384),w
 11278  0281  1903               	btfsc	3,2
 11279  0282  2A84               	goto	u5811
 11280  0283  2A85               	goto	u5810
 11281  0284                     u5811:
 11282  0284  2A89               	goto	l6984
 11283  0285                     u5810:
 11284  0285                     l6982:
 11285                           
 11286                           ;configure.c: 144:         SetMasterTXRX();
 11287  0285  319C  246A  3182   	fcall	_SetMasterTXRX
 11288  0288  2A8C               	goto	l6986
 11289  0289                     l6984:
 11290                           
 11291                           ;configure.c: 146:         SetSlaveTXRX();
 11292  0289  319A  2287  3182   	fcall	_SetSlaveTXRX
 11293  028C                     l6986:
 11294                           
 11295                           ;configure.c: 148:     sendBTString("AT");
 11296  028C  305E               	movlw	low (STR_7| (0+32768))
 11297  028D  0143               	movlb	3	; select bank3
 11298  028E  00EC               	movwf	sendBTString@buffer^(0+384)
 11299  028F  30A0               	movlw	high (STR_7| (0+32768))
 11300  0290  00ED               	movwf	(sendBTString@buffer^(0+384)+1)
 11301  0291  319F  2791  3182   	fcall	_sendBTString
 11302  0294                     l6988:
 11303                           
 11304                           ;configure.c: 149:     sleep(300);
 11305  0294  3000               	movlw	0
 11306  0295  0142               	movlb	2	; select bank2
 11307  0296  00EF               	movwf	(sleep@delay+3)^(0+256)
 11308  0297  3000               	movlw	0
 11309  0298  00EE               	movwf	(sleep@delay+2)^(0+256)
 11310  0299  3001               	movlw	1
 11311  029A  00ED               	movwf	(sleep@delay+1)^(0+256)
 11312  029B  302C               	movlw	44
 11313  029C  00EC               	movwf	sleep@delay^(0+256)
 11314  029D  3193  23BB  3182   	fcall	_sleep
 11315  02A0                     l6990:
 11316                           
 11317                           ;configure.c: 150:     sleep(10);
 11318  02A0  3000               	movlw	0
 11319  02A1  0142               	movlb	2	; select bank2
 11320  02A2  00EF               	movwf	(sleep@delay+3)^(0+256)
 11321  02A3  3000               	movlw	0
 11322  02A4  00EE               	movwf	(sleep@delay+2)^(0+256)
 11323  02A5  3000               	movlw	0
 11324  02A6  00ED               	movwf	(sleep@delay+1)^(0+256)
 11325  02A7  300A               	movlw	10
 11326  02A8  00EC               	movwf	sleep@delay^(0+256)
 11327  02A9  3193  23BB  3182   	fcall	_sleep
 11328  02AC                     l6992:
 11329                           
 11330                           ;configure.c: 151:     if (isMaster)
 11331  02AC  0143               	movlb	3	; select bank3
 11332  02AD  086F               	movf	getBTAddress@isMaster^(0+384),w
 11333  02AE  1903               	btfsc	3,2
 11334  02AF  2AB1               	goto	u5821
 11335  02B0  2AB2               	goto	u5820
 11336  02B1                     u5821:
 11337  02B1  2ABA               	goto	l6996
 11338  02B2                     u5820:
 11339  02B2                     l6994:
 11340                           
 11341                           ;configure.c: 152:         sendBTString("AT+ROLE1");
 11342  02B2  3012               	movlw	low (STR_12| (0+32768))
 11343  02B3  00EC               	movwf	sendBTString@buffer^(0+384)
 11344  02B4  30A0               	movlw	high (STR_12| (0+32768))
 11345  02B5  00ED               	movwf	(sendBTString@buffer^(0+384)+1)
 11346  02B6  319F  2791  3182   	fcall	_sendBTString
 11347  02B9  2AC1               	goto	l6998
 11348  02BA                     l6996:
 11349                           
 11350                           ;configure.c: 154:         sendBTString("AT+ROLE0");
 11351  02BA  3009               	movlw	low (STR_13| (0+32768))
 11352  02BB  00EC               	movwf	sendBTString@buffer^(0+384)
 11353  02BC  30A0               	movlw	high (STR_13| (0+32768))
 11354  02BD  00ED               	movwf	(sendBTString@buffer^(0+384)+1)
 11355  02BE  319F  2791  3182   	fcall	_sendBTString
 11356  02C1                     l6998:
 11357                           
 11358                           ;configure.c: 156:     charsRead = receiveBTBuffer(RX_Buffer, 20, 400);
 11359  02C1  3014               	movlw	20
 11360  02C2  0144               	movlb	4	; select bank4
 11361  02C3  00E6               	movwf	??_getBTAddress^(0+512)
 11362  02C4  0866               	movf	??_getBTAddress^(0+512),w
 11363  02C5  0142               	movlb	2	; select bank2
 11364  02C6  00EC               	movwf	receiveBTBuffer@maxChars^(0+256)
 11365  02C7  3090               	movlw	144
 11366  02C8  00ED               	movwf	receiveBTBuffer@timeoutMS^(0+256)
 11367  02C9  3001               	movlw	1
 11368  02CA  00EE               	movwf	(receiveBTBuffer@timeoutMS^(0+256)+1)
 11369  02CB  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
 11370  02CC  3189  21E7  3182   	fcall	_receiveBTBuffer
 11371  02CF  0144               	movlb	4	; select bank4
 11372  02D0  00E7               	movwf	(??_getBTAddress+1)^(0+512)
 11373  02D1  0867               	movf	(??_getBTAddress+1)^(0+512),w
 11374  02D2  0141               	movlb	1	; select bank1
 11375  02D3  00C7               	movwf	_charsRead^(0+128)
 11376  02D4                     l7000:
 11377                           
 11378                           ;configure.c: 157:     pulseLEDColor((strstr((void *)RX_Buffer, "OK") != ((void*)0)) ? 0
      +                          x030 : 0x330, 100, 200);
 11379  02D4  305B               	movlw	low (STR_14| (0+32768))
 11380  02D5  00ED               	movwf	strstr@n^(0+128)
 11381  02D6  30A0               	movlw	high (STR_14| (0+32768))
 11382  02D7  00EE               	movwf	(strstr@n^(0+128)+1)
 11383  02D8  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
 11384  02D9  3196  261C  3182   	fcall	_strstr
 11385  02DC  3A00               	xorlw	0
 11386  02DD  1D03               	skipz
 11387  02DE  2AE0               	goto	u5831
 11388  02DF  2AE1               	goto	u5830
 11389  02E0                     u5831:
 11390  02E0  2AE7               	goto	l7004
 11391  02E1                     u5830:
 11392  02E1                     l7002:
 11393  02E1  3030               	movlw	48
 11394  02E2  0144               	movlb	4	; select bank4
 11395  02E3  00E8               	movwf	_getBTAddress$2248^(0+512)
 11396  02E4  3003               	movlw	3
 11397  02E5  00E9               	movwf	(_getBTAddress$2248^(0+512)+1)
 11398  02E6  2AEC               	goto	l7006
 11399  02E7                     l7004:
 11400  02E7  3030               	movlw	48
 11401  02E8  0144               	movlb	4	; select bank4
 11402  02E9  00E8               	movwf	_getBTAddress$2248^(0+512)
 11403  02EA  3000               	movlw	0
 11404  02EB  00E9               	movwf	(_getBTAddress$2248^(0+512)+1)
 11405  02EC                     l7006:
 11406  02EC  0869               	movf	(_getBTAddress$2248+1)^(0+512),w
 11407  02ED  00E1               	movwf	(pulseLEDColor@RGB+1)^(0+512)
 11408  02EE  0868               	movf	_getBTAddress$2248^(0+512),w
 11409  02EF  00E0               	movwf	pulseLEDColor@RGB^(0+512)
 11410  02F0  3064               	movlw	100
 11411  02F1  00E2               	movwf	pulseLEDColor@onTimeMS^(0+512)
 11412  02F2  3000               	movlw	0
 11413  02F3  00E3               	movwf	(pulseLEDColor@onTimeMS^(0+512)+1)
 11414  02F4  30C8               	movlw	200
 11415  02F5  00E4               	movwf	pulseLEDColor@offTimeMS^(0+512)
 11416  02F6  3000               	movlw	0
 11417  02F7  00E5               	movwf	(pulseLEDColor@offTimeMS^(0+512)+1)
 11418  02F8  3190  20EE  3182   	fcall	_pulseLEDColor
 11419  02FB                     l7008:
 11420                           
 11421                           ;configure.c: 160:     sleep(10);
 11422  02FB  3000               	movlw	0
 11423  02FC  0142               	movlb	2	; select bank2
 11424  02FD  00EF               	movwf	(sleep@delay+3)^(0+256)
 11425  02FE  3000               	movlw	0
 11426  02FF  00EE               	movwf	(sleep@delay+2)^(0+256)
 11427  0300  3000               	movlw	0
 11428  0301  00ED               	movwf	(sleep@delay+1)^(0+256)
 11429  0302  300A               	movlw	10
 11430  0303  00EC               	movwf	sleep@delay^(0+256)
 11431  0304  3193  23BB  3182   	fcall	_sleep
 11432  0307                     l7010:
 11433                           
 11434                           ;configure.c: 161:     sendBTString("AT+ADDR?");
 11435  0307  3024               	movlw	low (STR_15| (0+32768))
 11436  0308  0143               	movlb	3	; select bank3
 11437  0309  00EC               	movwf	sendBTString@buffer^(0+384)
 11438  030A  30A0               	movlw	high (STR_15| (0+32768))
 11439  030B  00ED               	movwf	(sendBTString@buffer^(0+384)+1)
 11440  030C  319F  2791  3182   	fcall	_sendBTString
 11441  030F                     l7012:
 11442                           
 11443                           ;configure.c: 162:     charsRead = receiveBTBuffer(RX_Buffer, 30, 400);
 11444  030F  301E               	movlw	30
 11445  0310  0144               	movlb	4	; select bank4
 11446  0311  00E6               	movwf	??_getBTAddress^(0+512)
 11447  0312  0866               	movf	??_getBTAddress^(0+512),w
 11448  0313  0142               	movlb	2	; select bank2
 11449  0314  00EC               	movwf	receiveBTBuffer@maxChars^(0+256)
 11450  0315  3090               	movlw	144
 11451  0316  00ED               	movwf	receiveBTBuffer@timeoutMS^(0+256)
 11452  0317  3001               	movlw	1
 11453  0318  00EE               	movwf	(receiveBTBuffer@timeoutMS^(0+256)+1)
 11454  0319  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
 11455  031A  3189  21E7  3182   	fcall	_receiveBTBuffer
 11456  031D  0144               	movlb	4	; select bank4
 11457  031E  00E7               	movwf	(??_getBTAddress+1)^(0+512)
 11458  031F  0867               	movf	(??_getBTAddress+1)^(0+512),w
 11459  0320  0141               	movlb	1	; select bank1
 11460  0321  00C7               	movwf	_charsRead^(0+128)
 11461  0322                     l7014:
 11462                           
 11463                           ;configure.c: 163:     addrPointer = (void *)strstr((void *)RX_Buffer, "ADDR:");
 11464  0322  3055               	movlw	low (STR_16| (0+32768))
 11465  0323  00ED               	movwf	strstr@n^(0+128)
 11466  0324  30A0               	movlw	high (STR_16| (0+32768))
 11467  0325  00EE               	movwf	(strstr@n^(0+128)+1)
 11468  0326  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
 11469  0327  3196  261C  3182   	fcall	_strstr
 11470  032A  0144               	movlb	4	; select bank4
 11471  032B  00E6               	movwf	??_getBTAddress^(0+512)
 11472  032C  0866               	movf	??_getBTAddress^(0+512),w
 11473  032D  00EB               	movwf	getBTAddress@addrPointer^(0+512)
 11474  032E                     l7016:
 11475                           
 11476                           ;configure.c: 165:     if (addrPointer != 0) {
 11477  032E  086B               	movf	getBTAddress@addrPointer^(0+512),w
 11478  032F  1903               	btfsc	3,2
 11479  0330  2B32               	goto	u5841
 11480  0331  2B33               	goto	u5840
 11481  0332                     u5841:
 11482  0332  2B53               	goto	l7026
 11483  0333                     u5840:
 11484  0333                     l7018:
 11485                           
 11486                           ;configure.c: 166:         memcpy(MAC, addrPointer + 5, 12);
 11487  0333  086B               	movf	getBTAddress@addrPointer^(0+512),w
 11488  0334  3E05               	addlw	5
 11489  0335  00E6               	movwf	??_getBTAddress^(0+512)
 11490  0336  0866               	movf	??_getBTAddress^(0+512),w
 11491  0337  0141               	movlb	1	; select bank1
 11492  0338  00E8               	movwf	memcpy@s1^(0+128)
 11493  0339  300C               	movlw	12
 11494  033A  00E9               	movwf	memcpy@n^(0+128)
 11495  033B  3000               	movlw	0
 11496  033C  00EA               	movwf	(memcpy@n^(0+128)+1)
 11497  033D  0144               	movlb	4	; select bank4
 11498  033E  086A               	movf	getBTAddress@MAC^(0+512),w
 11499  033F  3192  2207  3182   	fcall	_memcpy
 11500  0342                     l7020:
 11501                           
 11502                           ;configure.c: 167:         pulseLEDColor( 0x030, 100, 200);
 11503  0342  3030               	movlw	48
 11504  0343  0144               	movlb	4	; select bank4
 11505  0344  00E0               	movwf	pulseLEDColor@RGB^(0+512)
 11506  0345  3000               	movlw	0
 11507  0346  00E1               	movwf	(pulseLEDColor@RGB^(0+512)+1)
 11508  0347  3064               	movlw	100
 11509  0348  00E2               	movwf	pulseLEDColor@onTimeMS^(0+512)
 11510  0349  3000               	movlw	0
 11511  034A  00E3               	movwf	(pulseLEDColor@onTimeMS^(0+512)+1)
 11512  034B  30C8               	movlw	200
 11513  034C  00E4               	movwf	pulseLEDColor@offTimeMS^(0+512)
 11514  034D  3000               	movlw	0
 11515  034E  00E5               	movwf	(pulseLEDColor@offTimeMS^(0+512)+1)
 11516  034F  3190  20EE  3182   	fcall	_pulseLEDColor
 11517  0352  2B62               	goto	l1253
 11518  0353                     l7026:
 11519                           
 11520                           ;configure.c: 170:         pulseLEDColor( 0x300, 100, 200);
 11521  0353  3000               	movlw	0
 11522  0354  00E0               	movwf	pulseLEDColor@RGB^(0+512)
 11523  0355  3003               	movlw	3
 11524  0356  00E1               	movwf	(pulseLEDColor@RGB^(0+512)+1)
 11525  0357  3064               	movlw	100
 11526  0358  00E2               	movwf	pulseLEDColor@onTimeMS^(0+512)
 11527  0359  3000               	movlw	0
 11528  035A  00E3               	movwf	(pulseLEDColor@onTimeMS^(0+512)+1)
 11529  035B  30C8               	movlw	200
 11530  035C  00E4               	movwf	pulseLEDColor@offTimeMS^(0+512)
 11531  035D  3000               	movlw	0
 11532  035E  00E5               	movwf	(pulseLEDColor@offTimeMS^(0+512)+1)
 11533  035F  3190  20EE  3182   	fcall	_pulseLEDColor
 11534  0362                     l1253:
 11535  0362  0008               	return
 11536  0363                     __end_of_getBTAddress:
 11537                           
 11538                           	psect	text12
 11539  1207                     __ptext12:	
 11540 ;; *************** function _memcpy *****************
 11541 ;; Defined at:
 11542 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\memcpy.c"
 11543 ;; Parameters:    Size  Location     Type
 11544 ;;  d1              1    wreg     PTR void 
 11545 ;;		 -> masterMAC(12), slaveMAC(12), 
 11546 ;;  s1              1    0[BANK1 ] PTR const void 
 11547 ;;		 -> NULL(0), RX_Buffer(40), 
 11548 ;;  n               2    1[BANK1 ] unsigned int 
 11549 ;; Auto vars:     Size  Location     Type
 11550 ;;  d1              1    5[BANK1 ] PTR void 
 11551 ;;		 -> masterMAC(12), slaveMAC(12), 
 11552 ;;  s               1    7[BANK1 ] PTR const unsigned char 
 11553 ;;		 -> NULL(0), RX_Buffer(40), 
 11554 ;;  d               1    6[BANK1 ] PTR unsigned char 
 11555 ;;		 -> masterMAC(12), slaveMAC(12), 
 11556 ;;  tmp             1    4[BANK1 ] unsigned char 
 11557 ;; Return value:  Size  Location     Type
 11558 ;;                  1    wreg      PTR void 
 11559 ;; Registers used:
 11560 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11561 ;; Tracked objects:
 11562 ;;		On entry : 0/0
 11563 ;;		On exit  : 0/0
 11564 ;;		Unchanged: 0/0
 11565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11566 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11567 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11568 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11569 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11570 ;;Total ram usage:        8 bytes
 11571 ;; Hardware stack levels used:    1
 11572 ;; Hardware stack levels required when called:    8
 11573 ;; This function calls:
 11574 ;;		Nothing
 11575 ;; This function is called by:
 11576 ;;		_getBTAddress
 11577 ;; This function uses a non-reentrant model
 11578 ;;
 11579                           
 11580                           
 11581                           ;psect for function _memcpy
 11582  1207                     _memcpy:
 11583                           
 11584                           ;incstack = 0
 11585                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
 11586                           ;memcpy@d1 stored from wreg
 11587  1207  0141               	movlb	1	; select bank1
 11588  1208  00ED               	movwf	memcpy@d1^(0+128)
 11589  1209                     l6832:
 11590  1209  0868               	movf	memcpy@s1^(0+128),w
 11591  120A  00EB               	movwf	??_memcpy^(0+128)
 11592  120B  086B               	movf	??_memcpy^(0+128),w
 11593  120C  00EF               	movwf	memcpy@s^(0+128)
 11594  120D  086D               	movf	memcpy@d1^(0+128),w
 11595  120E  00EB               	movwf	??_memcpy^(0+128)
 11596  120F  086B               	movf	??_memcpy^(0+128),w
 11597  1210  00EE               	movwf	memcpy@d^(0+128)
 11598  1211  2A2A               	goto	l2081
 11599  1212                     l6834:
 11600  1212  086F               	movf	memcpy@s^(0+128),w
 11601  1213  0086               	movwf	6
 11602  1214  3001               	movlw	1	; select bank2/3
 11603  1215  0087               	movwf	7
 11604  1216  0801               	movf	1,w
 11605  1217  00EB               	movwf	??_memcpy^(0+128)
 11606  1218  086B               	movf	??_memcpy^(0+128),w
 11607  1219  00EC               	movwf	memcpy@tmp^(0+128)
 11608  121A                     l6836:
 11609  121A  3001               	movlw	1
 11610  121B  00EB               	movwf	??_memcpy^(0+128)
 11611  121C  086B               	movf	??_memcpy^(0+128),w
 11612  121D  07EF               	addwf	memcpy@s^(0+128),f
 11613  121E                     l6838:
 11614  121E  086C               	movf	memcpy@tmp^(0+128),w
 11615  121F  00EB               	movwf	??_memcpy^(0+128)
 11616  1220  086E               	movf	memcpy@d^(0+128),w
 11617  1221  0086               	movwf	6
 11618  1222  3001               	movlw	1	; select bank2/3
 11619  1223  0087               	movwf	7
 11620  1224  086B               	movf	??_memcpy^(0+128),w
 11621  1225  0081               	movwf	1
 11622  1226  3001               	movlw	1
 11623  1227  00EB               	movwf	??_memcpy^(0+128)
 11624  1228  086B               	movf	??_memcpy^(0+128),w
 11625  1229  07EE               	addwf	memcpy@d^(0+128),f
 11626  122A                     l2081:
 11627  122A  3001               	movlw	1
 11628  122B  02E9               	subwf	memcpy@n^(0+128),f
 11629  122C  3000               	movlw	0
 11630  122D  3BEA               	subwfb	(memcpy@n+1)^(0+128),f
 11631  122E  0A69               	incf	memcpy@n^(0+128),w
 11632  122F  1D03               	skipz
 11633  1230  2A35               	goto	u5671
 11634  1231  0A6A               	incf	(memcpy@n+1)^(0+128),w
 11635  1232  1D03               	btfss	3,2
 11636  1233  2A35               	goto	u5671
 11637  1234  2A36               	goto	u5670
 11638  1235                     u5671:
 11639  1235  2A12               	goto	l6834
 11640  1236                     u5670:
 11641  1236                     l2084:
 11642  1236  0008               	return
 11643  1237                     __end_of_memcpy:
 11644                           
 11645                           	psect	text13
 11646  1C6A                     __ptext13:	
 11647 ;; *************** function _SetMasterTXRX *****************
 11648 ;; Defined at:
 11649 ;;		line 42 in file "configure.c"
 11650 ;; Parameters:    Size  Location     Type
 11651 ;;		None
 11652 ;; Auto vars:     Size  Location     Type
 11653 ;;		None
 11654 ;; Return value:  Size  Location     Type
 11655 ;;                  1    wreg      void 
 11656 ;; Registers used:
 11657 ;;		wreg, status,2, status,0, pclath, cstack
 11658 ;; Tracked objects:
 11659 ;;		On entry : 0/0
 11660 ;;		On exit  : 0/0
 11661 ;;		Unchanged: 0/0
 11662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11667 ;;Total ram usage:        0 bytes
 11668 ;; Hardware stack levels used:    1
 11669 ;; Hardware stack levels required when called:   10
 11670 ;; This function calls:
 11671 ;;		_sleep
 11672 ;; This function is called by:
 11673 ;;		_getBTAddress
 11674 ;;		_setBTConnection
 11675 ;; This function uses a non-reentrant model
 11676 ;;
 11677                           
 11678                           
 11679                           ;psect for function _SetMasterTXRX
 11680  1C6A                     _SetMasterTXRX:
 11681  1C6A                     l6806:	
 11682                           ;incstack = 0
 11683                           ; Regs used in _SetMasterTXRX: [wreg+status,2+status,0+pclath+cstack]
 11684                           
 11685                           
 11686                           ;configure.c: 43:     RX1DTPPS = 0x13;
 11687  1C6A  3013               	movlw	19
 11688  1C6B  017D               	movlb	61	; select bank61
 11689  1C6C  00CB               	movwf	75	;volatile
 11690                           
 11691                           ;configure.c: 44:     RC6PPS = 0x0F;
 11692  1C6D  300F               	movlw	15
 11693  1C6E  017E               	movlb	62	; select bank62
 11694  1C6F  00A6               	movwf	38	;volatile
 11695                           
 11696                           ;configure.c: 45:     RC4PPS = 0x14;
 11697  1C70  3014               	movlw	20
 11698  1C71  00A4               	movwf	36	;volatile
 11699  1C72                     l6808:
 11700                           
 11701                           ;configure.c: 46:     sleep(5);
 11702  1C72  3000               	movlw	0
 11703  1C73  0142               	movlb	2	; select bank2
 11704  1C74  00EF               	movwf	(sleep@delay+3)^(0+256)
 11705  1C75  3000               	movlw	0
 11706  1C76  00EE               	movwf	(sleep@delay+2)^(0+256)
 11707  1C77  3000               	movlw	0
 11708  1C78  00ED               	movwf	(sleep@delay+1)^(0+256)
 11709  1C79  3005               	movlw	5
 11710  1C7A  00EC               	movwf	sleep@delay^(0+256)
 11711  1C7B  3193  23BB  319C   	fcall	_sleep
 11712  1C7E                     l1201:
 11713  1C7E  0008               	return
 11714  1C7F                     __end_of_SetMasterTXRX:
 11715                           
 11716                           	psect	text14
 11717  1A38                     __ptext14:	
 11718 ;; *************** function _USER2_pressed *****************
 11719 ;; Defined at:
 11720 ;;		line 281 in file "ui.c"
 11721 ;; Parameters:    Size  Location     Type
 11722 ;;		None
 11723 ;; Auto vars:     Size  Location     Type
 11724 ;;		None
 11725 ;; Return value:  Size  Location     Type
 11726 ;;                  1    wreg      _Bool 
 11727 ;; Registers used:
 11728 ;;		wreg, status,0
 11729 ;; Tracked objects:
 11730 ;;		On entry : 0/0
 11731 ;;		On exit  : 0/0
 11732 ;;		Unchanged: 0/0
 11733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11738 ;;Total ram usage:        0 bytes
 11739 ;; Hardware stack levels used:    1
 11740 ;; Hardware stack levels required when called:    8
 11741 ;; This function calls:
 11742 ;;		Nothing
 11743 ;; This function is called by:
 11744 ;;		_pairBluetoothDevices
 11745 ;;		_runUI
 11746 ;; This function uses a non-reentrant model
 11747 ;;
 11748                           
 11749                           
 11750                           ;psect for function _USER2_pressed
 11751  1A38                     _USER2_pressed:
 11752  1A38                     l7068:	
 11753                           ;incstack = 0
 11754                           ; Regs used in _USER2_pressed: [wreg+status,0]
 11755                           
 11756                           
 11757                           ;ui.c: 282:     return PORTAbits.RA4 == 0;
 11758  1A38  1003               	clrc
 11759  1A39  0140               	movlb	0	; select bank0
 11760  1A3A  1E0C               	btfss	12,4	;volatile
 11761  1A3B  1403               	setc
 11762  1A3C  3000               	movlw	0
 11763  1A3D  3D09               	addwfc	9,w
 11764  1A3E                     l1470:
 11765  1A3E  0008               	return
 11766  1A3F                     __end_of_USER2_pressed:
 11767                           
 11768                           	psect	text15
 11769  1A31                     __ptext15:	
 11770 ;; *************** function _USER1_pressed *****************
 11771 ;; Defined at:
 11772 ;;		line 277 in file "ui.c"
 11773 ;; Parameters:    Size  Location     Type
 11774 ;;		None
 11775 ;; Auto vars:     Size  Location     Type
 11776 ;;		None
 11777 ;; Return value:  Size  Location     Type
 11778 ;;                  1    wreg      _Bool 
 11779 ;; Registers used:
 11780 ;;		wreg, status,0
 11781 ;; Tracked objects:
 11782 ;;		On entry : 0/0
 11783 ;;		On exit  : 0/0
 11784 ;;		Unchanged: 0/0
 11785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11790 ;;Total ram usage:        0 bytes
 11791 ;; Hardware stack levels used:    1
 11792 ;; Hardware stack levels required when called:    8
 11793 ;; This function calls:
 11794 ;;		Nothing
 11795 ;; This function is called by:
 11796 ;;		_pairBluetoothDevices
 11797 ;;		_runUI
 11798 ;; This function uses a non-reentrant model
 11799 ;;
 11800                           
 11801                           
 11802                           ;psect for function _USER1_pressed
 11803  1A31                     _USER1_pressed:
 11804  1A31                     l7064:	
 11805                           ;incstack = 0
 11806                           ; Regs used in _USER1_pressed: [wreg+status,0]
 11807                           
 11808                           
 11809                           ;ui.c: 278:     return PORTBbits.RB7 == 0;
 11810  1A31  1003               	clrc
 11811  1A32  0140               	movlb	0	; select bank0
 11812  1A33  1F8D               	btfss	13,7	;volatile
 11813  1A34  1403               	setc
 11814  1A35  3000               	movlw	0
 11815  1A36  3D09               	addwfc	9,w
 11816  1A37                     l1467:
 11817  1A37  0008               	return
 11818  1A38                     __end_of_USER1_pressed:
 11819                           
 11820                           	psect	text16
 11821  1C55                     __ptext16:	
 11822 ;; *************** function _SetSlaveTXMasterRX *****************
 11823 ;; Defined at:
 11824 ;;		line 49 in file "configure.c"
 11825 ;; Parameters:    Size  Location     Type
 11826 ;;		None
 11827 ;; Auto vars:     Size  Location     Type
 11828 ;;		None
 11829 ;; Return value:  Size  Location     Type
 11830 ;;                  1    wreg      void 
 11831 ;; Registers used:
 11832 ;;		wreg, status,2, status,0, pclath, cstack
 11833 ;; Tracked objects:
 11834 ;;		On entry : 0/0
 11835 ;;		On exit  : 0/0
 11836 ;;		Unchanged: 0/0
 11837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11842 ;;Total ram usage:        0 bytes
 11843 ;; Hardware stack levels used:    1
 11844 ;; Hardware stack levels required when called:   10
 11845 ;; This function calls:
 11846 ;;		_sleep
 11847 ;; This function is called by:
 11848 ;;		_pairBluetoothDevices
 11849 ;; This function uses a non-reentrant model
 11850 ;;
 11851                           
 11852                           
 11853                           ;psect for function _SetSlaveTXMasterRX
 11854  1C55                     _SetSlaveTXMasterRX:
 11855  1C55                     l6960:	
 11856                           ;incstack = 0
 11857                           ; Regs used in _SetSlaveTXMasterRX: [wreg+status,2+status,0+pclath+cstack]
 11858                           
 11859                           
 11860                           ;configure.c: 50:     RX1DTPPS = 0x13;
 11861  1C55  3013               	movlw	19
 11862  1C56  017D               	movlb	61	; select bank61
 11863  1C57  00CB               	movwf	75	;volatile
 11864                           
 11865                           ;configure.c: 52:     RC4PPS = 0x0F;
 11866  1C58  300F               	movlw	15
 11867  1C59  017E               	movlb	62	; select bank62
 11868  1C5A  00A4               	movwf	36	;volatile
 11869                           
 11870                           ;configure.c: 53:     RC6PPS = 0x16;
 11871  1C5B  3016               	movlw	22
 11872  1C5C  00A6               	movwf	38	;volatile
 11873  1C5D                     l6962:
 11874                           
 11875                           ;configure.c: 54:     sleep(5);
 11876  1C5D  3000               	movlw	0
 11877  1C5E  0142               	movlb	2	; select bank2
 11878  1C5F  00EF               	movwf	(sleep@delay+3)^(0+256)
 11879  1C60  3000               	movlw	0
 11880  1C61  00EE               	movwf	(sleep@delay+2)^(0+256)
 11881  1C62  3000               	movlw	0
 11882  1C63  00ED               	movwf	(sleep@delay+1)^(0+256)
 11883  1C64  3005               	movlw	5
 11884  1C65  00EC               	movwf	sleep@delay^(0+256)
 11885  1C66  3193  23BB  319C   	fcall	_sleep
 11886  1C69                     l1204:
 11887  1C69  0008               	return
 11888  1C6A                     __end_of_SetSlaveTXMasterRX:
 11889                           
 11890                           	psect	text17
 11891  1AE6                     __ptext17:	
 11892 ;; *************** function _oneSec *****************
 11893 ;; Defined at:
 11894 ;;		line 26 in file "timers.c"
 11895 ;; Parameters:    Size  Location     Type
 11896 ;;		None
 11897 ;; Auto vars:     Size  Location     Type
 11898 ;;		None
 11899 ;; Return value:  Size  Location     Type
 11900 ;;                  1    wreg      _Bool 
 11901 ;; Registers used:
 11902 ;;		wreg, status,2, status,0
 11903 ;; Tracked objects:
 11904 ;;		On entry : 0/0
 11905 ;;		On exit  : 0/0
 11906 ;;		Unchanged: 0/0
 11907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11912 ;;Total ram usage:        0 bytes
 11913 ;; Hardware stack levels used:    1
 11914 ;; Hardware stack levels required when called:    8
 11915 ;; This function calls:
 11916 ;;		Nothing
 11917 ;; This function is called by:
 11918 ;;		_runUI
 11919 ;; This function uses a non-reentrant model
 11920 ;;
 11921                           
 11922                           
 11923                           ;psect for function _oneSec
 11924  1AE6                     _oneSec:
 11925  1AE6                     l7400:	
 11926                           ;incstack = 0
 11927                           ; Regs used in _oneSec: [wreg+status,2+status,0]
 11928                           
 11929                           
 11930                           ;timers.c: 27:     if (oneSecBlink) {
 11931  1AE6  0140               	movlb	0	; select bank0
 11932  1AE7  084B               	movf	_oneSecBlink,w
 11933  1AE8  1903               	btfsc	3,2
 11934  1AE9  2AEB               	goto	u6101
 11935  1AEA  2AEC               	goto	u6100
 11936  1AEB                     u6101:
 11937  1AEB  2AEF               	goto	l7410
 11938  1AEC                     u6100:
 11939  1AEC                     l7402:
 11940                           
 11941                           ;timers.c: 28:         oneSecBlink = 0;
 11942  1AEC  01CB               	clrf	_oneSecBlink
 11943  1AED                     l7404:
 11944                           
 11945                           ;timers.c: 29:         return 1;
 11946  1AED  3001               	movlw	1
 11947  1AEE  2AF0               	goto	l1105
 11948  1AEF                     l7410:
 11949                           
 11950                           ;timers.c: 31:         return 0;
 11951  1AEF  3000               	movlw	0
 11952  1AF0                     l1105:
 11953  1AF0  0008               	return
 11954  1AF1                     __end_of_oneSec:
 11955                           
 11956                           	psect	text18
 11957  1AD2                     __ptext18:	
 11958 ;; *************** function _enableJoystick *****************
 11959 ;; Defined at:
 11960 ;;		line 82 in file "joystick.c"
 11961 ;; Parameters:    Size  Location     Type
 11962 ;;		None
 11963 ;; Auto vars:     Size  Location     Type
 11964 ;;		None
 11965 ;; Return value:  Size  Location     Type
 11966 ;;                  1    wreg      void 
 11967 ;; Registers used:
 11968 ;;		wreg, status,2, status,0, pclath, cstack
 11969 ;; Tracked objects:
 11970 ;;		On entry : 0/0
 11971 ;;		On exit  : 0/0
 11972 ;;		Unchanged: 0/0
 11973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11978 ;;Total ram usage:        0 bytes
 11979 ;; Hardware stack levels used:    1
 11980 ;; Hardware stack levels required when called:    9
 11981 ;; This function calls:
 11982 ;;		_TMR1_StartTimer
 11983 ;;		_resetBTTimer
 11984 ;; This function is called by:
 11985 ;;		_main
 11986 ;;		_runUI
 11987 ;; This function uses a non-reentrant model
 11988 ;;
 11989                           
 11990                           
 11991                           ;psect for function _enableJoystick
 11992  1AD2                     _enableJoystick:
 11993  1AD2                     l7314:	
 11994                           ;incstack = 0
 11995                           ; Regs used in _enableJoystick: [wreg+status,2+status,0+pclath+cstack]
 11996                           
 11997                           
 11998                           ;joystick.c: 83:     joystickEnabled = 1;
 11999  1AD2  0141               	movlb	1	; select bank1
 12000  1AD3  01C9               	clrf	_joystickEnabled^(0+128)
 12001  1AD4  0AC9               	incf	_joystickEnabled^(0+128),f
 12002  1AD5                     l7316:
 12003                           
 12004                           ;joystick.c: 84:     resetBTTimer();
 12005  1AD5  319B  23F9  319A   	fcall	_resetBTTimer
 12006  1AD8                     l7318:
 12007                           
 12008                           ;joystick.c: 85:     TMR1_StartTimer();
 12009  1AD8  3199  21F0  319A   	fcall	_TMR1_StartTimer
 12010  1ADB                     l883:
 12011  1ADB  0008               	return
 12012  1ADC                     __end_of_enableJoystick:
 12013                           
 12014                           	psect	text19
 12015  1BF9                     __ptext19:	
 12016 ;; *************** function _resetBTTimer *****************
 12017 ;; Defined at:
 12018 ;;		line 49 in file "timers.c"
 12019 ;; Parameters:    Size  Location     Type
 12020 ;;		None
 12021 ;; Auto vars:     Size  Location     Type
 12022 ;;		None
 12023 ;; Return value:  Size  Location     Type
 12024 ;;                  1    wreg      void 
 12025 ;; Registers used:
 12026 ;;		wreg
 12027 ;; Tracked objects:
 12028 ;;		On entry : 0/0
 12029 ;;		On exit  : 0/0
 12030 ;;		Unchanged: 0/0
 12031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12036 ;;Total ram usage:        0 bytes
 12037 ;; Hardware stack levels used:    1
 12038 ;; Hardware stack levels required when called:    8
 12039 ;; This function calls:
 12040 ;;		Nothing
 12041 ;; This function is called by:
 12042 ;;		_main
 12043 ;;		_enableJoystick
 12044 ;; This function uses a non-reentrant model
 12045 ;;
 12046                           
 12047                           
 12048                           ;psect for function _resetBTTimer
 12049  1BF9                     _resetBTTimer:
 12050  1BF9                     l6892:	
 12051                           ;incstack = 0
 12052                           ; Regs used in _resetBTTimer: [wreg]
 12053                           
 12054                           
 12055                           ;timers.c: 50:     lastBTTime = systemTime;
 12056  1BF9  0140               	movlb	0	; select bank0
 12057  1BFA  083E               	movf	_systemTime+3,w
 12058  1BFB  0141               	movlb	1	; select bank1
 12059  1BFC  00AB               	movwf	(_lastBTTime+3)^(0+128)
 12060  1BFD  0140               	movlb	0	; select bank0
 12061  1BFE  083D               	movf	_systemTime+2,w
 12062  1BFF  0141               	movlb	1	; select bank1
 12063  1C00  00AA               	movwf	(_lastBTTime+2)^(0+128)
 12064  1C01  0140               	movlb	0	; select bank0
 12065  1C02  083C               	movf	_systemTime+1,w
 12066  1C03  0141               	movlb	1	; select bank1
 12067  1C04  00A9               	movwf	(_lastBTTime+1)^(0+128)
 12068  1C05  0140               	movlb	0	; select bank0
 12069  1C06  083B               	movf	_systemTime,w
 12070  1C07  0141               	movlb	1	; select bank1
 12071  1C08  00A8               	movwf	_lastBTTime^(0+128)
 12072  1C09                     l1121:
 12073  1C09  0008               	return
 12074  1C0A                     __end_of_resetBTTimer:
 12075                           
 12076                           	psect	text20
 12077  19F0                     __ptext20:	
 12078 ;; *************** function _TMR1_StartTimer *****************
 12079 ;; Defined at:
 12080 ;;		line 99 in file "mcc_generated_files/tmr1.c"
 12081 ;; Parameters:    Size  Location     Type
 12082 ;;		None
 12083 ;; Auto vars:     Size  Location     Type
 12084 ;;		None
 12085 ;; Return value:  Size  Location     Type
 12086 ;;                  1    wreg      void 
 12087 ;; Registers used:
 12088 ;;		None
 12089 ;; Tracked objects:
 12090 ;;		On entry : 0/0
 12091 ;;		On exit  : 0/0
 12092 ;;		Unchanged: 0/0
 12093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12098 ;;Total ram usage:        0 bytes
 12099 ;; Hardware stack levels used:    1
 12100 ;; Hardware stack levels required when called:    8
 12101 ;; This function calls:
 12102 ;;		Nothing
 12103 ;; This function is called by:
 12104 ;;		_enableJoystick
 12105 ;; This function uses a non-reentrant model
 12106 ;;
 12107                           
 12108                           
 12109                           ;psect for function _TMR1_StartTimer
 12110  19F0                     _TMR1_StartTimer:
 12111  19F0                     l6870:	
 12112                           ;incstack = 0
 12113                           ; Regs used in _TMR1_StartTimer: []
 12114                           
 12115                           
 12116                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 1;
 12117  19F0  0144               	movlb	4	; select bank4
 12118  19F1  140E               	bsf	14,0	;volatile
 12119  19F2                     l36:
 12120  19F2  0008               	return
 12121  19F3                     __end_of_TMR1_StartTimer:
 12122                           
 12123                           	psect	text21
 12124  0363                     __ptext21:	
 12125 ;; *************** function _doFactoryReset *****************
 12126 ;; Defined at:
 12127 ;;		line 196 in file "configure.c"
 12128 ;; Parameters:    Size  Location     Type
 12129 ;;		None
 12130 ;; Auto vars:     Size  Location     Type
 12131 ;;		None
 12132 ;; Return value:  Size  Location     Type
 12133 ;;                  1    wreg      void 
 12134 ;; Registers used:
 12135 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12136 ;; Tracked objects:
 12137 ;;		On entry : 0/0
 12138 ;;		On exit  : 0/0
 12139 ;;		Unchanged: 0/0
 12140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12142 ;;      Locals:         0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12143 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12144 ;;      Totals:         0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12145 ;;Total ram usage:        4 bytes
 12146 ;; Hardware stack levels used:    1
 12147 ;; Hardware stack levels required when called:   12
 12148 ;; This function calls:
 12149 ;;		_SetDualReceive
 12150 ;;		_SetSlaveTXRX
 12151 ;;		_pulseLEDColor
 12152 ;;		_receiveBTBuffer
 12153 ;;		_sendBTString
 12154 ;;		_setSerialBaud
 12155 ;;		_sleep
 12156 ;;		_strstr
 12157 ;; This function is called by:
 12158 ;;		_runUI
 12159 ;; This function uses a non-reentrant model
 12160 ;;
 12161                           
 12162                           
 12163                           ;psect for function _doFactoryReset
 12164  0363                     _doFactoryReset:
 12165  0363                     l7444:	
 12166                           ;incstack = 0
 12167                           ; Regs used in _doFactoryReset: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12168                           
 12169                           
 12170                           ;configure.c: 199:     pulseLEDColor(0x003, 1000, 200);
 12171  0363  3003               	movlw	3
 12172  0364  0144               	movlb	4	; select bank4
 12173  0365  00E0               	movwf	pulseLEDColor@RGB^(0+512)
 12174  0366  3000               	movlw	0
 12175  0367  00E1               	movwf	(pulseLEDColor@RGB^(0+512)+1)
 12176  0368  30E8               	movlw	232
 12177  0369  00E2               	movwf	pulseLEDColor@onTimeMS^(0+512)
 12178  036A  3003               	movlw	3
 12179  036B  00E3               	movwf	(pulseLEDColor@onTimeMS^(0+512)+1)
 12180  036C  30C8               	movlw	200
 12181  036D  00E4               	movwf	pulseLEDColor@offTimeMS^(0+512)
 12182  036E  3000               	movlw	0
 12183  036F  00E5               	movwf	(pulseLEDColor@offTimeMS^(0+512)+1)
 12184  0370  3190  20EE  3183   	fcall	_pulseLEDColor
 12185                           
 12186                           ;configure.c: 201:     SetDualReceive();
 12187  0373  319C  2440  3183   	fcall	_SetDualReceive
 12188                           
 12189                           ;configure.c: 202:     setSerialBaud(38400);
 12190  0376  3000               	movlw	0
 12191  0377  0143               	movlb	3	; select bank3
 12192  0378  00EC               	movwf	setSerialBaud@baud^(0+384)
 12193  0379  3096               	movlw	150
 12194  037A  00ED               	movwf	(setSerialBaud@baud^(0+384)+1)
 12195  037B  319D  25EF  3183   	fcall	_setSerialBaud
 12196                           
 12197                           ;configure.c: 203:     sleep(500);
 12198  037E  3000               	movlw	0
 12199  037F  0142               	movlb	2	; select bank2
 12200  0380  00EF               	movwf	(sleep@delay+3)^(0+256)
 12201  0381  3000               	movlw	0
 12202  0382  00EE               	movwf	(sleep@delay+2)^(0+256)
 12203  0383  3001               	movlw	1
 12204  0384  00ED               	movwf	(sleep@delay+1)^(0+256)
 12205  0385  30F4               	movlw	244
 12206  0386  00EC               	movwf	sleep@delay^(0+256)
 12207  0387  3193  23BB  3183   	fcall	_sleep
 12208  038A                     l7446:
 12209                           
 12210                           ;configure.c: 205:     sendBTString("AT");
 12211  038A  305E               	movlw	low (STR_7| (0+32768))
 12212  038B  0143               	movlb	3	; select bank3
 12213  038C  00EC               	movwf	sendBTString@buffer^(0+384)
 12214  038D  30A0               	movlw	high (STR_7| (0+32768))
 12215  038E  00ED               	movwf	(sendBTString@buffer^(0+384)+1)
 12216  038F  319F  2791  3183   	fcall	_sendBTString
 12217  0392                     l7448:
 12218                           
 12219                           ;configure.c: 206:     sleep(100);
 12220  0392  3000               	movlw	0
 12221  0393  0142               	movlb	2	; select bank2
 12222  0394  00EF               	movwf	(sleep@delay+3)^(0+256)
 12223  0395  3000               	movlw	0
 12224  0396  00EE               	movwf	(sleep@delay+2)^(0+256)
 12225  0397  3000               	movlw	0
 12226  0398  00ED               	movwf	(sleep@delay+1)^(0+256)
 12227  0399  3064               	movlw	100
 12228  039A  00EC               	movwf	sleep@delay^(0+256)
 12229  039B  3193  23BB  3183   	fcall	_sleep
 12230                           
 12231                           ;configure.c: 207:     sendBTString("AT+CLEAR");
 12232  039E  302D               	movlw	low (STR_22| (0+32768))
 12233  039F  0143               	movlb	3	; select bank3
 12234  03A0  00EC               	movwf	sendBTString@buffer^(0+384)
 12235  03A1  30A0               	movlw	high (STR_22| (0+32768))
 12236  03A2  00ED               	movwf	(sendBTString@buffer^(0+384)+1)
 12237  03A3  319F  2791  3183   	fcall	_sendBTString
 12238  03A6                     l7450:
 12239                           
 12240                           ;configure.c: 208:     sleep(100);
 12241  03A6  3000               	movlw	0
 12242  03A7  0142               	movlb	2	; select bank2
 12243  03A8  00EF               	movwf	(sleep@delay+3)^(0+256)
 12244  03A9  3000               	movlw	0
 12245  03AA  00EE               	movwf	(sleep@delay+2)^(0+256)
 12246  03AB  3000               	movlw	0
 12247  03AC  00ED               	movwf	(sleep@delay+1)^(0+256)
 12248  03AD  3064               	movlw	100
 12249  03AE  00EC               	movwf	sleep@delay^(0+256)
 12250  03AF  3193  23BB  3183   	fcall	_sleep
 12251  03B2                     l7452:
 12252                           
 12253                           ;configure.c: 209:     sendBTString("AT+BAUD0");
 12254  03B2  3000               	movlw	low (STR_23| (0+32768))
 12255  03B3  0143               	movlb	3	; select bank3
 12256  03B4  00EC               	movwf	sendBTString@buffer^(0+384)
 12257  03B5  30A0               	movlw	high (STR_23| (0+32768))
 12258  03B6  00ED               	movwf	(sendBTString@buffer^(0+384)+1)
 12259  03B7  319F  2791  3183   	fcall	_sendBTString
 12260                           
 12261                           ;configure.c: 210:     sleep(500);
 12262  03BA  3000               	movlw	0
 12263  03BB  0142               	movlb	2	; select bank2
 12264  03BC  00EF               	movwf	(sleep@delay+3)^(0+256)
 12265  03BD  3000               	movlw	0
 12266  03BE  00EE               	movwf	(sleep@delay+2)^(0+256)
 12267  03BF  3001               	movlw	1
 12268  03C0  00ED               	movwf	(sleep@delay+1)^(0+256)
 12269  03C1  30F4               	movlw	244
 12270  03C2  00EC               	movwf	sleep@delay^(0+256)
 12271  03C3  3193  23BB  3183   	fcall	_sleep
 12272  03C6                     l7454:
 12273                           
 12274                           ;configure.c: 211:     sendBTString("AT+RESET");
 12275  03C6  3036               	movlw	low (STR_10| (0+32768))
 12276  03C7  0143               	movlb	3	; select bank3
 12277  03C8  00EC               	movwf	sendBTString@buffer^(0+384)
 12278  03C9  30A0               	movlw	high (STR_10| (0+32768))
 12279  03CA  00ED               	movwf	(sendBTString@buffer^(0+384)+1)
 12280  03CB  319F  2791  3183   	fcall	_sendBTString
 12281  03CE                     l7456:
 12282                           
 12283                           ;configure.c: 212:     sleep(1000);
 12284  03CE  3000               	movlw	0
 12285  03CF  0142               	movlb	2	; select bank2
 12286  03D0  00EF               	movwf	(sleep@delay+3)^(0+256)
 12287  03D1  3000               	movlw	0
 12288  03D2  00EE               	movwf	(sleep@delay+2)^(0+256)
 12289  03D3  3003               	movlw	3
 12290  03D4  00ED               	movwf	(sleep@delay+1)^(0+256)
 12291  03D5  30E8               	movlw	232
 12292  03D6  00EC               	movwf	sleep@delay^(0+256)
 12293  03D7  3193  23BB  3183   	fcall	_sleep
 12294  03DA                     l7458:
 12295                           
 12296                           ;configure.c: 213:     setSerialBaud(9600);
 12297  03DA  3080               	movlw	128
 12298  03DB  0143               	movlb	3	; select bank3
 12299  03DC  00EC               	movwf	setSerialBaud@baud^(0+384)
 12300  03DD  3025               	movlw	37
 12301  03DE  00ED               	movwf	(setSerialBaud@baud^(0+384)+1)
 12302  03DF  319D  25EF  3183   	fcall	_setSerialBaud
 12303  03E2                     l7460:
 12304                           
 12305                           ;configure.c: 215:     sendBTString("AT+RENEW");
 12306  03E2  303F               	movlw	low (STR_25| (0+32768))
 12307  03E3  0143               	movlb	3	; select bank3
 12308  03E4  00EC               	movwf	sendBTString@buffer^(0+384)
 12309  03E5  30A0               	movlw	high (STR_25| (0+32768))
 12310  03E6  00ED               	movwf	(sendBTString@buffer^(0+384)+1)
 12311  03E7  319F  2791  3183   	fcall	_sendBTString
 12312  03EA                     l7462:
 12313                           
 12314                           ;configure.c: 216:     charsRead = receiveBTBuffer(RX_Buffer, 16, 100);
 12315  03EA  3010               	movlw	16
 12316  03EB  0144               	movlb	4	; select bank4
 12317  03EC  00E6               	movwf	??_doFactoryReset^(0+512)
 12318  03ED  0866               	movf	??_doFactoryReset^(0+512),w
 12319  03EE  0142               	movlb	2	; select bank2
 12320  03EF  00EC               	movwf	receiveBTBuffer@maxChars^(0+256)
 12321  03F0  3064               	movlw	100
 12322  03F1  00ED               	movwf	receiveBTBuffer@timeoutMS^(0+256)
 12323  03F2  3000               	movlw	0
 12324  03F3  00EE               	movwf	(receiveBTBuffer@timeoutMS^(0+256)+1)
 12325  03F4  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
 12326  03F5  3189  21E7  3183   	fcall	_receiveBTBuffer
 12327  03F8  0144               	movlb	4	; select bank4
 12328  03F9  00E7               	movwf	(??_doFactoryReset+1)^(0+512)
 12329  03FA  0867               	movf	(??_doFactoryReset+1)^(0+512),w
 12330  03FB  0141               	movlb	1	; select bank1
 12331  03FC  00C7               	movwf	_charsRead^(0+128)
 12332  03FD                     l7464:
 12333                           
 12334                           ;configure.c: 217:     pulseLEDColor((strstr((void *)RX_Buffer, "OK") != ((void*)0)) ? 0
      +                          x030 : 0x330, 100, 200);
 12335  03FD  305B               	movlw	low (STR_14| (0+32768))
 12336  03FE  00ED               	movwf	strstr@n^(0+128)
 12337  03FF  30A0               	movlw	high (STR_14| (0+32768))
 12338  0400  00EE               	movwf	(strstr@n^(0+128)+1)
 12339  0401  30C0               	movlw	(low (_RX_Buffer| (0+256)))& (0+255)
 12340  0402  3196  261C  3183   	fcall	_strstr
 12341  0405  3A00               	xorlw	0
 12342  0406  1D03               	skipz
 12343  0407  2C09               	goto	u6151
 12344  0408  2C0A               	goto	u6150
 12345  0409                     u6151:
 12346  0409  2C10               	goto	l7468
 12347  040A                     u6150:
 12348  040A                     l7466:
 12349  040A  3030               	movlw	48
 12350  040B  0144               	movlb	4	; select bank4
 12351  040C  00E8               	movwf	_doFactoryReset$2267^(0+512)
 12352  040D  3003               	movlw	3
 12353  040E  00E9               	movwf	(_doFactoryReset$2267^(0+512)+1)
 12354  040F  2C15               	goto	l7470
 12355  0410                     l7468:
 12356  0410  3030               	movlw	48
 12357  0411  0144               	movlb	4	; select bank4
 12358  0412  00E8               	movwf	_doFactoryReset$2267^(0+512)
 12359  0413  3000               	movlw	0
 12360  0414  00E9               	movwf	(_doFactoryReset$2267^(0+512)+1)
 12361  0415                     l7470:
 12362  0415  0869               	movf	(_doFactoryReset$2267+1)^(0+512),w
 12363  0416  00E1               	movwf	(pulseLEDColor@RGB+1)^(0+512)
 12364  0417  0868               	movf	_doFactoryReset$2267^(0+512),w
 12365  0418  00E0               	movwf	pulseLEDColor@RGB^(0+512)
 12366  0419  3064               	movlw	100
 12367  041A  00E2               	movwf	pulseLEDColor@onTimeMS^(0+512)
 12368  041B  3000               	movlw	0
 12369  041C  00E3               	movwf	(pulseLEDColor@onTimeMS^(0+512)+1)
 12370  041D  30C8               	movlw	200
 12371  041E  00E4               	movwf	pulseLEDColor@offTimeMS^(0+512)
 12372  041F  3000               	movlw	0
 12373  0420  00E5               	movwf	(pulseLEDColor@offTimeMS^(0+512)+1)
 12374  0421  3190  20EE  3183   	fcall	_pulseLEDColor
 12375  0424                     l7472:
 12376                           
 12377                           ;configure.c: 218:     sleep(1000);
 12378  0424  3000               	movlw	0
 12379  0425  0142               	movlb	2	; select bank2
 12380  0426  00EF               	movwf	(sleep@delay+3)^(0+256)
 12381  0427  3000               	movlw	0
 12382  0428  00EE               	movwf	(sleep@delay+2)^(0+256)
 12383  0429  3003               	movlw	3
 12384  042A  00ED               	movwf	(sleep@delay+1)^(0+256)
 12385  042B  30E8               	movlw	232
 12386  042C  00EC               	movwf	sleep@delay^(0+256)
 12387  042D  3193  23BB  3183   	fcall	_sleep
 12388  0430                     l7474:
 12389                           
 12390                           ;configure.c: 220:     SetSlaveTXRX();
 12391  0430  319A  2287  3183   	fcall	_SetSlaveTXRX
 12392  0433                     l1275:
 12393  0433  0008               	return
 12394  0434                     __end_of_doFactoryReset:
 12395                           
 12396                           	psect	text22
 12397  161C                     __ptext22:	
 12398 ;; *************** function _strstr *****************
 12399 ;; Defined at:
 12400 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strstr.c"
 12401 ;; Parameters:    Size  Location     Type
 12402 ;;  h               1    wreg     PTR const unsigned char 
 12403 ;;		 -> NULL(0), RX_Buffer(40), 
 12404 ;;  n               2    5[BANK1 ] PTR const unsigned char 
 12405 ;;		 -> STR_26(3), STR_20(3), STR_18(3), STR_16(6), 
 12406 ;;		 -> STR_14(3), STR_6(6), 
 12407 ;; Auto vars:     Size  Location     Type
 12408 ;;  h               1    5[BANK3 ] PTR const unsigned char 
 12409 ;;		 -> NULL(0), RX_Buffer(40), 
 12410 ;;  nl              2    3[BANK3 ] unsigned int 
 12411 ;; Return value:  Size  Location     Type
 12412 ;;                  1    wreg      PTR unsigned char 
 12413 ;; Registers used:
 12414 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12415 ;; Tracked objects:
 12416 ;;		On entry : 0/0
 12417 ;;		On exit  : 0/0
 12418 ;;		Unchanged: 0/0
 12419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12420 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12421 ;;      Locals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12422 ;;      Temps:          0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12423 ;;      Totals:         0       0       2       0       6       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12424 ;;Total ram usage:        8 bytes
 12425 ;; Hardware stack levels used:    1
 12426 ;; Hardware stack levels required when called:    9
 12427 ;; This function calls:
 12428 ;;		_strchr
 12429 ;;		_strlen
 12430 ;;		_strncmp
 12431 ;; This function is called by:
 12432 ;;		_pairBluetoothDevices
 12433 ;;		_getBTAddress
 12434 ;;		_setBTConnection
 12435 ;;		_doFactoryReset
 12436 ;; This function uses a non-reentrant model
 12437 ;;
 12438                           
 12439                           
 12440                           ;psect for function _strstr
 12441  161C                     _strstr:
 12442                           
 12443                           ;incstack = 0
 12444                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12445                           ;strstr@h stored from wreg
 12446  161C  0143               	movlb	3	; select bank3
 12447  161D  00ED               	movwf	strstr@h^(0+384)
 12448  161E                     l6810:
 12449  161E  0141               	movlb	1	; select bank1
 12450  161F  086D               	movf	strstr@n^(0+128),w
 12451  1620  046E               	iorwf	(strstr@n+1)^(0+128),w
 12452  1621  1903               	btfsc	3,2
 12453  1622  2E24               	goto	u5631
 12454  1623  2E25               	goto	u5630
 12455  1624                     u5631:
 12456  1624  2E78               	goto	l6826
 12457  1625                     u5630:
 12458  1625                     l6812:
 12459  1625  086E               	movf	(strstr@n+1)^(0+128),w
 12460  1626  00E9               	movwf	(strlen@s+1)^(0+128)
 12461  1627  086D               	movf	strstr@n^(0+128),w
 12462  1628  00E8               	movwf	strlen@s^(0+128)
 12463  1629  319C  24F5  3196   	fcall	_strlen
 12464  162C  0141               	movlb	1	; select bank1
 12465  162D  0869               	movf	(?_strlen+1)^(0+128),w
 12466  162E  0143               	movlb	3	; select bank3
 12467  162F  00EC               	movwf	(strstr@nl+1)^(0+384)
 12468  1630  0141               	movlb	1	; select bank1
 12469  1631  0868               	movf	?_strlen^(0+128),w
 12470  1632  0143               	movlb	3	; select bank3
 12471  1633  00EB               	movwf	strstr@nl^(0+384)
 12472  1634  2E6A               	goto	l6822
 12473  1635                     l6814:
 12474  1635  0141               	movlb	1	; select bank1
 12475  1636  086E               	movf	(strstr@n+1)^(0+128),w
 12476  1637  00E9               	movwf	(strncmp@_r+1)^(0+128)
 12477  1638  086D               	movf	strstr@n^(0+128),w
 12478  1639  00E8               	movwf	strncmp@_r^(0+128)
 12479  163A  0143               	movlb	3	; select bank3
 12480  163B  086C               	movf	(strstr@nl+1)^(0+384),w
 12481  163C  0141               	movlb	1	; select bank1
 12482  163D  00EB               	movwf	(strncmp@n+1)^(0+128)
 12483  163E  0143               	movlb	3	; select bank3
 12484  163F  086B               	movf	strstr@nl^(0+384),w
 12485  1640  0141               	movlb	1	; select bank1
 12486  1641  00EA               	movwf	strncmp@n^(0+128)
 12487  1642  0143               	movlb	3	; select bank3
 12488  1643  086D               	movf	strstr@h^(0+384),w
 12489  1644  3188  2095  3196   	fcall	_strncmp
 12490  1647  0141               	movlb	1	; select bank1
 12491  1648  0868               	movf	?_strncmp^(0+128),w
 12492  1649  0469               	iorwf	(?_strncmp+1)^(0+128),w
 12493  164A  1D03               	btfss	3,2
 12494  164B  2E4D               	goto	u5641
 12495  164C  2E4E               	goto	u5640
 12496  164D                     u5641:
 12497  164D  2E51               	goto	l6820
 12498  164E                     u5640:
 12499  164E                     l6816:
 12500  164E  0143               	movlb	3	; select bank3
 12501  164F  086D               	movf	strstr@h^(0+384),w
 12502  1650  2E79               	goto	l2126
 12503  1651                     l6820:
 12504  1651  086D               	movf	strstr@n^(0+128),w
 12505  1652  0084               	movwf	4
 12506  1653  086E               	movf	(strstr@n+1)^(0+128),w
 12507  1654  0085               	movwf	5
 12508  1655  0800               	movf	0,w	;code access
 12509  1656  0143               	movlb	3	; select bank3
 12510  1657  00E8               	movwf	??_strstr^(0+384)
 12511  1658  01E9               	clrf	(??_strstr^(0+384)+1)
 12512  1659  0868               	movf	??_strstr^(0+384),w
 12513  165A  0141               	movlb	1	; select bank1
 12514  165B  00E8               	movwf	strchr@c^(0+128)
 12515  165C  0143               	movlb	3	; select bank3
 12516  165D  0869               	movf	(??_strstr+1)^(0+384),w
 12517  165E  0141               	movlb	1	; select bank1
 12518  165F  00E9               	movwf	(strchr@c+1)^(0+128)
 12519  1660  0143               	movlb	3	; select bank3
 12520  1661  086D               	movf	strstr@h^(0+384),w
 12521  1662  3E01               	addlw	1
 12522  1663  319D  2529  3196   	fcall	_strchr
 12523  1666  0143               	movlb	3	; select bank3
 12524  1667  00EA               	movwf	(??_strstr+2)^(0+384)
 12525  1668  086A               	movf	(??_strstr+2)^(0+384),w
 12526  1669  00ED               	movwf	strstr@h^(0+384)
 12527  166A                     l6822:
 12528  166A  086D               	movf	strstr@h^(0+384),w
 12529  166B  1903               	btfsc	3,2
 12530  166C  2E6E               	goto	u5651
 12531  166D  2E6F               	goto	u5650
 12532  166E                     u5651:
 12533  166E  2E78               	goto	l6826
 12534  166F                     u5650:
 12535  166F                     l6824:
 12536  166F  086D               	movf	strstr@h^(0+384),w
 12537  1670  0086               	movwf	6
 12538  1671  3001               	movlw	1	; select bank2/3
 12539  1672  0087               	movwf	7
 12540  1673  0801               	movf	1,w
 12541  1674  1D03               	btfss	3,2
 12542  1675  2E77               	goto	u5661
 12543  1676  2E78               	goto	u5660
 12544  1677                     u5661:
 12545  1677  2E35               	goto	l6814
 12546  1678                     u5660:
 12547  1678                     l6826:
 12548  1678  3000               	movlw	0
 12549  1679                     l2126:
 12550  1679  0008               	return
 12551  167A                     __end_of_strstr:
 12552                           
 12553                           	psect	text23
 12554  0895                     __ptext23:	
 12555 ;; *************** function _strncmp *****************
 12556 ;; Defined at:
 12557 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
 12558 ;; Parameters:    Size  Location     Type
 12559 ;;  _l              1    wreg     PTR const unsigned char 
 12560 ;;		 -> NULL(0), RX_Buffer(40), 
 12561 ;;  _r              2    0[BANK1 ] PTR const unsigned char 
 12562 ;;		 -> STR_26(3), STR_20(3), STR_18(3), STR_16(6), 
 12563 ;;		 -> STR_14(3), STR_6(6), 
 12564 ;;  n               2    2[BANK1 ] unsigned int 
 12565 ;; Auto vars:     Size  Location     Type
 12566 ;;  _l              1    0[BANK2 ] PTR const unsigned char 
 12567 ;;		 -> NULL(0), RX_Buffer(40), 
 12568 ;;  r               2    1[BANK2 ] PTR const unsigned char 
 12569 ;;		 -> STR_26(3), STR_20(3), STR_18(3), STR_16(6), 
 12570 ;;		 -> STR_14(3), STR_6(6), 
 12571 ;;  l               1    3[BANK2 ] PTR const unsigned char 
 12572 ;;		 -> NULL(0), RX_Buffer(40), 
 12573 ;; Return value:  Size  Location     Type
 12574 ;;                  2    0[BANK1 ] int 
 12575 ;; Registers used:
 12576 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 12577 ;; Tracked objects:
 12578 ;;		On entry : 0/0
 12579 ;;		On exit  : 0/0
 12580 ;;		Unchanged: 0/0
 12581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12582 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12583 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12584 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12585 ;;      Totals:         0       0       5       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12586 ;;Total ram usage:        9 bytes
 12587 ;; Hardware stack levels used:    1
 12588 ;; Hardware stack levels required when called:    8
 12589 ;; This function calls:
 12590 ;;		Nothing
 12591 ;; This function is called by:
 12592 ;;		_strstr
 12593 ;; This function uses a non-reentrant model
 12594 ;;
 12595                           
 12596                           
 12597                           ;psect for function _strncmp
 12598  0895                     _strncmp:
 12599                           
 12600                           ;incstack = 0
 12601                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
 12602                           ;strncmp@_l stored from wreg
 12603  0895  0142               	movlb	2	; select bank2
 12604  0896  00EC               	movwf	strncmp@_l^(0+256)
 12605  0897                     l6614:
 12606  0897  086C               	movf	strncmp@_l^(0+256),w
 12607  0898  0141               	movlb	1	; select bank1
 12608  0899  00EC               	movwf	??_strncmp^(0+128)
 12609  089A  086C               	movf	??_strncmp^(0+128),w
 12610  089B  0142               	movlb	2	; select bank2
 12611  089C  00EF               	movwf	strncmp@l^(0+256)
 12612  089D  0141               	movlb	1	; select bank1
 12613  089E  0869               	movf	(strncmp@_r+1)^(0+128),w
 12614  089F  0142               	movlb	2	; select bank2
 12615  08A0  00EE               	movwf	(strncmp@r+1)^(0+256)
 12616  08A1  0141               	movlb	1	; select bank1
 12617  08A2  0868               	movf	strncmp@_r^(0+128),w
 12618  08A3  0142               	movlb	2	; select bank2
 12619  08A4  00ED               	movwf	strncmp@r^(0+256)
 12620  08A5                     l6616:
 12621  08A5  3001               	movlw	1
 12622  08A6  0141               	movlb	1	; select bank1
 12623  08A7  02EA               	subwf	strncmp@n^(0+128),f
 12624  08A8  3000               	movlw	0
 12625  08A9  3BEB               	subwfb	(strncmp@n+1)^(0+128),f
 12626  08AA  0A6A               	incf	strncmp@n^(0+128),w
 12627  08AB  1D03               	skipz
 12628  08AC  28B1               	goto	u5381
 12629  08AD  0A6B               	incf	(strncmp@n+1)^(0+128),w
 12630  08AE  1D03               	btfss	3,2
 12631  08AF  28B1               	goto	u5381
 12632  08B0  28B2               	goto	u5380
 12633  08B1                     u5381:
 12634  08B1  28C3               	goto	l6628
 12635  08B2                     u5380:
 12636  08B2                     l6618:
 12637  08B2  01E8               	clrf	?_strncmp^(0+128)
 12638  08B3  01E9               	clrf	(?_strncmp+1)^(0+128)
 12639  08B4  2901               	goto	l2139
 12640  08B5                     l6622:
 12641  08B5  3001               	movlw	1
 12642  08B6  00EC               	movwf	??_strncmp^(0+128)
 12643  08B7  086C               	movf	??_strncmp^(0+128),w
 12644  08B8  0142               	movlb	2	; select bank2
 12645  08B9  07EF               	addwf	strncmp@l^(0+256),f
 12646  08BA                     l6624:
 12647  08BA  3001               	movlw	1
 12648  08BB  07ED               	addwf	strncmp@r^(0+256),f
 12649  08BC  3000               	movlw	0
 12650  08BD  3DEE               	addwfc	(strncmp@r+1)^(0+256),f
 12651  08BE                     l6626:
 12652  08BE  3001               	movlw	1
 12653  08BF  0141               	movlb	1	; select bank1
 12654  08C0  02EA               	subwf	strncmp@n^(0+128),f
 12655  08C1  3000               	movlw	0
 12656  08C2  3BEB               	subwfb	(strncmp@n+1)^(0+128),f
 12657  08C3                     l6628:
 12658  08C3  0142               	movlb	2	; select bank2
 12659  08C4  086F               	movf	strncmp@l^(0+256),w
 12660  08C5  0086               	movwf	6
 12661  08C6  3001               	movlw	1	; select bank2/3
 12662  08C7  0087               	movwf	7
 12663  08C8  0801               	movf	1,w
 12664  08C9  1903               	btfsc	3,2
 12665  08CA  28CC               	goto	u5391
 12666  08CB  28CD               	goto	u5390
 12667  08CC                     u5391:
 12668  08CC  28F1               	goto	l6636
 12669  08CD                     u5390:
 12670  08CD                     l6630:
 12671  08CD  086D               	movf	strncmp@r^(0+256),w
 12672  08CE  0084               	movwf	4
 12673  08CF  086E               	movf	(strncmp@r+1)^(0+256),w
 12674  08D0  0085               	movwf	5
 12675  08D1  0012               	moviw fsr0++
 12676  08D2  1903               	btfsc	3,2
 12677  08D3  28D5               	goto	u5401
 12678  08D4  28D6               	goto	u5400
 12679  08D5                     u5401:
 12680  08D5  28F1               	goto	l6636
 12681  08D6                     u5400:
 12682  08D6                     l6632:
 12683  08D6  0141               	movlb	1	; select bank1
 12684  08D7  086A               	movf	strncmp@n^(0+128),w
 12685  08D8  046B               	iorwf	(strncmp@n+1)^(0+128),w
 12686  08D9  1903               	btfsc	3,2
 12687  08DA  28DC               	goto	u5411
 12688  08DB  28DD               	goto	u5410
 12689  08DC                     u5411:
 12690  08DC  28F1               	goto	l6636
 12691  08DD                     u5410:
 12692  08DD                     l6634:
 12693  08DD  0142               	movlb	2	; select bank2
 12694  08DE  086D               	movf	strncmp@r^(0+256),w
 12695  08DF  0084               	movwf	4
 12696  08E0  086E               	movf	(strncmp@r+1)^(0+256),w
 12697  08E1  0085               	movwf	5
 12698  08E2  0800               	movf	0,w	;code access
 12699  08E3  0141               	movlb	1	; select bank1
 12700  08E4  00EC               	movwf	??_strncmp^(0+128)
 12701  08E5  0142               	movlb	2	; select bank2
 12702  08E6  086F               	movf	strncmp@l^(0+256),w
 12703  08E7  0086               	movwf	6
 12704  08E8  3001               	movlw	1	; select bank2/3
 12705  08E9  0087               	movwf	7
 12706  08EA  0801               	movf	1,w
 12707  08EB  0141               	movlb	1	; select bank1
 12708  08EC  066C               	xorwf	??_strncmp^(0+128),w
 12709  08ED  1903               	skipnz
 12710  08EE  28F0               	goto	u5421
 12711  08EF  28F1               	goto	u5420
 12712  08F0                     u5421:
 12713  08F0  28B5               	goto	l6622
 12714  08F1                     u5420:
 12715  08F1                     l6636:
 12716  08F1  0142               	movlb	2	; select bank2
 12717  08F2  086F               	movf	strncmp@l^(0+256),w
 12718  08F3  0086               	movwf	6
 12719  08F4  3001               	movlw	1	; select bank2/3
 12720  08F5  0087               	movwf	7
 12721  08F6  086D               	movf	strncmp@r^(0+256),w
 12722  08F7  0084               	movwf	4
 12723  08F8  086E               	movf	(strncmp@r+1)^(0+256),w
 12724  08F9  0085               	movwf	5
 12725  08FA  0800               	movf	0,w	;code access
 12726  08FB  0201               	subwf	1,w
 12727  08FC  0141               	movlb	1	; select bank1
 12728  08FD  00E8               	movwf	?_strncmp^(0+128)
 12729  08FE  01E9               	clrf	(?_strncmp^(0+128)+1)
 12730  08FF  1C03               	skipc
 12731  0900  03E9               	decf	(?_strncmp+1)^(0+128),f
 12732  0901                     l2139:
 12733  0901  0008               	return
 12734  0902                     __end_of_strncmp:
 12735                           
 12736                           	psect	text24
 12737  1D29                     __ptext24:	
 12738 ;; *************** function _strchr *****************
 12739 ;; Defined at:
 12740 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strchr.c"
 12741 ;; Parameters:    Size  Location     Type
 12742 ;;  s               1    wreg     PTR const unsigned char 
 12743 ;;		 -> NULL(0), RX_Buffer(40), 
 12744 ;;  c               2    0[BANK1 ] int 
 12745 ;; Auto vars:     Size  Location     Type
 12746 ;;  s               1    2[BANK1 ] PTR const unsigned char 
 12747 ;;		 -> NULL(0), RX_Buffer(40), 
 12748 ;; Return value:  Size  Location     Type
 12749 ;;                  1    wreg      PTR unsigned char 
 12750 ;; Registers used:
 12751 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12752 ;; Tracked objects:
 12753 ;;		On entry : 0/0
 12754 ;;		On exit  : 0/0
 12755 ;;		Unchanged: 0/0
 12756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12757 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12758 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12760 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12761 ;;Total ram usage:        3 bytes
 12762 ;; Hardware stack levels used:    1
 12763 ;; Hardware stack levels required when called:    8
 12764 ;; This function calls:
 12765 ;;		Nothing
 12766 ;; This function is called by:
 12767 ;;		_strstr
 12768 ;; This function uses a non-reentrant model
 12769 ;;
 12770                           
 12771                           
 12772                           ;psect for function _strchr
 12773  1D29                     _strchr:
 12774                           
 12775                           ;incstack = 0
 12776                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
 12777                           ;strchr@s stored from wreg
 12778  1D29  0141               	movlb	1	; select bank1
 12779  1D2A  00EA               	movwf	strchr@s^(0+128)
 12780  1D2B                     l2132:
 12781  1D2B                     l6640:
 12782  1D2B  086A               	movf	strchr@s^(0+128),w
 12783  1D2C  0086               	movwf	6
 12784  1D2D  3001               	movlw	1	; select bank2/3
 12785  1D2E  0087               	movwf	7
 12786  1D2F  0801               	movf	1,w
 12787  1D30  0668               	xorwf	strchr@c^(0+128),w
 12788  1D31  1D03               	skipz
 12789  1D32  2D34               	goto	u5431
 12790  1D33  2D35               	goto	u5430
 12791  1D34                     u5431:
 12792  1D34  2D37               	goto	l6646
 12793  1D35                     u5430:
 12794  1D35                     l6642:
 12795  1D35  086A               	movf	strchr@s^(0+128),w
 12796  1D36  2D42               	goto	l2134
 12797  1D37                     l6646:
 12798  1D37  086A               	movf	strchr@s^(0+128),w
 12799  1D38  0086               	movwf	6
 12800  1D39  3001               	movlw	1	; select bank2/3
 12801  1D3A  0087               	movwf	7
 12802  1D3B  0AEA               	incf	strchr@s^(0+128),f
 12803  1D3C  0801               	movf	1,w
 12804  1D3D  1D03               	btfss	3,2
 12805  1D3E  2D40               	goto	u5441
 12806  1D3F  2D41               	goto	u5440
 12807  1D40                     u5441:
 12808  1D40  2D2B               	goto	l2132
 12809  1D41                     u5440:
 12810  1D41                     l6648:
 12811  1D41  3000               	movlw	0
 12812  1D42                     l2134:
 12813  1D42  0008               	return
 12814  1D43                     __end_of_strchr:
 12815                           
 12816                           	psect	text25
 12817  1F91                     __ptext25:	
 12818 ;; *************** function _sendBTString *****************
 12819 ;; Defined at:
 12820 ;;		line 62 in file "serial.c"
 12821 ;; Parameters:    Size  Location     Type
 12822 ;;  buffer          2    4[BANK3 ] PTR unsigned char 
 12823 ;;		 -> STR_25(9), STR_24(9), STR_23(9), STR_22(9), 
 12824 ;;		 -> STR_21(3), STR_19(7), STR_17(3), STR_15(9), 
 12825 ;;		 -> STR_13(9), STR_12(9), STR_11(3), STR_10(9), 
 12826 ;;		 -> STR_9(3), STR_8(9), STR_7(3), STR_4(6), 
 12827 ;; Auto vars:     Size  Location     Type
 12828 ;;		None
 12829 ;; Return value:  Size  Location     Type
 12830 ;;                  1    wreg      void 
 12831 ;; Registers used:
 12832 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12833 ;; Tracked objects:
 12834 ;;		On entry : 0/0
 12835 ;;		On exit  : 0/0
 12836 ;;		Unchanged: 0/0
 12837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12838 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12840 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12841 ;;      Totals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12842 ;;Total ram usage:        3 bytes
 12843 ;; Hardware stack levels used:    1
 12844 ;; Hardware stack levels required when called:   11
 12845 ;; This function calls:
 12846 ;;		_flushBTRXbuffer
 12847 ;;		_sendBTBuffer
 12848 ;;		_strlen
 12849 ;; This function is called by:
 12850 ;;		_pairBluetoothDevices
 12851 ;;		_setBTBaudRatesTo38400
 12852 ;;		_getBTAddress
 12853 ;;		_setBTConnection
 12854 ;;		_doFactoryReset
 12855 ;; This function uses a non-reentrant model
 12856 ;;
 12857                           
 12858                           
 12859                           ;psect for function _sendBTString
 12860  1F91                     _sendBTString:
 12861  1F91                     l6766:	
 12862                           ;incstack = 0
 12863                           ; Regs used in _sendBTString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12864                           
 12865                           
 12866                           ;serial.c: 63:     flushBTRXbuffer();
 12867  1F91  319F  274D  319F   	fcall	_flushBTRXbuffer
 12868  1F94                     l6768:
 12869                           
 12870                           ;serial.c: 64:     sendBTBuffer((void *)buffer, strlen(buffer), 1);
 12871  1F94  0143               	movlb	3	; select bank3
 12872  1F95  086D               	movf	(sendBTString@buffer+1)^(0+384),w
 12873  1F96  0142               	movlb	2	; select bank2
 12874  1F97  00ED               	movwf	(sendBTBuffer@buffer+1)^(0+256)
 12875  1F98  0143               	movlb	3	; select bank3
 12876  1F99  086C               	movf	sendBTString@buffer^(0+384),w
 12877  1F9A  0142               	movlb	2	; select bank2
 12878  1F9B  00EC               	movwf	sendBTBuffer@buffer^(0+256)
 12879  1F9C  0143               	movlb	3	; select bank3
 12880  1F9D  086D               	movf	(sendBTString@buffer+1)^(0+384),w
 12881  1F9E  0141               	movlb	1	; select bank1
 12882  1F9F  00E9               	movwf	(strlen@s+1)^(0+128)
 12883  1FA0  0143               	movlb	3	; select bank3
 12884  1FA1  086C               	movf	sendBTString@buffer^(0+384),w
 12885  1FA2  0141               	movlb	1	; select bank1
 12886  1FA3  00E8               	movwf	strlen@s^(0+128)
 12887  1FA4  319C  24F5  319F   	fcall	_strlen
 12888  1FA7  0141               	movlb	1	; select bank1
 12889  1FA8  0868               	movf	?_strlen^(0+128),w
 12890  1FA9  0143               	movlb	3	; select bank3
 12891  1FAA  00EE               	movwf	??_sendBTString^(0+384)
 12892  1FAB  086E               	movf	??_sendBTString^(0+384),w
 12893  1FAC  0142               	movlb	2	; select bank2
 12894  1FAD  00EE               	movwf	sendBTBuffer@length^(0+256)
 12895  1FAE  01EF               	clrf	sendBTBuffer@blockIfBusy^(0+256)
 12896  1FAF  0AEF               	incf	sendBTBuffer@blockIfBusy^(0+256),f
 12897  1FB0  3191  21D7  319F   	fcall	_sendBTBuffer
 12898  1FB3                     l1014:
 12899  1FB3  0008               	return
 12900  1FB4                     __end_of_sendBTString:
 12901                           
 12902                           	psect	text26
 12903  1F4D                     __ptext26:	
 12904 ;; *************** function _flushBTRXbuffer *****************
 12905 ;; Defined at:
 12906 ;;		line 84 in file "serial.c"
 12907 ;; Parameters:    Size  Location     Type
 12908 ;;		None
 12909 ;; Auto vars:     Size  Location     Type
 12910 ;;		None
 12911 ;; Return value:  Size  Location     Type
 12912 ;;                  1    wreg      void 
 12913 ;; Registers used:
 12914 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12915 ;; Tracked objects:
 12916 ;;		On entry : 0/0
 12917 ;;		On exit  : 0/0
 12918 ;;		Unchanged: 0/0
 12919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12924 ;;Total ram usage:        0 bytes
 12925 ;; Hardware stack levels used:    1
 12926 ;; Hardware stack levels required when called:   10
 12927 ;; This function calls:
 12928 ;;		_EUSART1_Read
 12929 ;;		_EUSART1_is_rx_ready
 12930 ;;		_sleep
 12931 ;; This function is called by:
 12932 ;;		_sendBTString
 12933 ;; This function uses a non-reentrant model
 12934 ;;
 12935                           
 12936                           
 12937                           ;psect for function _flushBTRXbuffer
 12938  1F4D                     _flushBTRXbuffer:
 12939  1F4D                     l6538:	
 12940                           ;incstack = 0
 12941                           ; Regs used in _flushBTRXbuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12942                           
 12943                           
 12944                           ;serial.c: 85:     while (EUSART1_is_rx_ready()){
 12945  1F4D  2F65               	goto	l1030
 12946  1F4E                     l6540:
 12947                           
 12948                           ;serial.c: 86:         EUSART1_Read();
 12949  1F4E  3188  2000  319F   	fcall	_EUSART1_Read
 12950  1F51                     l6542:
 12951                           
 12952                           ;serial.c: 87:         if (!EUSART1_is_rx_ready())
 12953  1F51  319A  22A2  319F   	fcall	_EUSART1_is_rx_ready
 12954  1F54  3A00               	xorlw	0
 12955  1F55  1D03               	skipz
 12956  1F56  2F58               	goto	u5201
 12957  1F57  2F59               	goto	u5200
 12958  1F58                     u5201:
 12959  1F58  2F65               	goto	l1030
 12960  1F59                     u5200:
 12961  1F59                     l6544:
 12962                           
 12963                           ;serial.c: 88:             sleep(5);
 12964  1F59  3000               	movlw	0
 12965  1F5A  0142               	movlb	2	; select bank2
 12966  1F5B  00EF               	movwf	(sleep@delay+3)^(0+256)
 12967  1F5C  3000               	movlw	0
 12968  1F5D  00EE               	movwf	(sleep@delay+2)^(0+256)
 12969  1F5E  3000               	movlw	0
 12970  1F5F  00ED               	movwf	(sleep@delay+1)^(0+256)
 12971  1F60  3005               	movlw	5
 12972  1F61  00EC               	movwf	sleep@delay^(0+256)
 12973  1F62  3193  23BB  319F   	fcall	_sleep
 12974  1F65                     l1030:	
 12975                           ;serial.c: 89:     }
 12976                           
 12977                           
 12978                           ;serial.c: 85:     while (EUSART1_is_rx_ready()){
 12979  1F65  319A  22A2  319F   	fcall	_EUSART1_is_rx_ready
 12980  1F68  3A00               	xorlw	0
 12981  1F69  1D03               	skipz
 12982  1F6A  2F6C               	goto	u5211
 12983  1F6B  2F6D               	goto	u5210
 12984  1F6C                     u5211:
 12985  1F6C  2F4E               	goto	l6540
 12986  1F6D                     u5210:
 12987  1F6D                     l1034:
 12988  1F6D  0008               	return
 12989  1F6E                     __end_of_flushBTRXbuffer:
 12990                           
 12991                           	psect	text27
 12992  09E7                     __ptext27:	
 12993 ;; *************** function _receiveBTBuffer *****************
 12994 ;; Defined at:
 12995 ;;		line 99 in file "serial.c"
 12996 ;; Parameters:    Size  Location     Type
 12997 ;;  buffer          1    wreg     PTR unsigned char 
 12998 ;;		 -> RX_Buffer(40), 
 12999 ;;  maxChars        1    0[BANK2 ] unsigned char 
 13000 ;;  timeoutMS       2    1[BANK2 ] unsigned short 
 13001 ;; Auto vars:     Size  Location     Type
 13002 ;;  buffer          1    5[BANK4 ] PTR unsigned char 
 13003 ;;		 -> RX_Buffer(40), 
 13004 ;;  startTime       4    0[BANK4 ] unsigned long 
 13005 ;;  charsRead       1    4[BANK4 ] unsigned char 
 13006 ;; Return value:  Size  Location     Type
 13007 ;;                  1    wreg      unsigned char 
 13008 ;; Registers used:
 13009 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13010 ;; Tracked objects:
 13011 ;;		On entry : 0/0
 13012 ;;		On exit  : 0/0
 13013 ;;		Unchanged: 0/0
 13014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13015 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13016 ;;      Locals:         0       0       0       0       0       6       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13017 ;;      Temps:          0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13018 ;;      Totals:         0       0       0       3       5       6       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13019 ;;Total ram usage:       14 bytes
 13020 ;; Hardware stack levels used:    1
 13021 ;; Hardware stack levels required when called:    9
 13022 ;; This function calls:
 13023 ;;		_EUSART1_Read
 13024 ;;		_EUSART1_is_rx_ready
 13025 ;;		_getTicks
 13026 ;;		_getTicksSince
 13027 ;; This function is called by:
 13028 ;;		_pairBluetoothDevices
 13029 ;;		_getBTAddress
 13030 ;;		_setBTConnection
 13031 ;;		_doFactoryReset
 13032 ;; This function uses a non-reentrant model
 13033 ;;
 13034                           
 13035                           
 13036                           ;psect for function _receiveBTBuffer
 13037  09E7                     _receiveBTBuffer:
 13038                           
 13039                           ;incstack = 0
 13040                           ; Regs used in _receiveBTBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13041                           ;receiveBTBuffer@buffer stored from wreg
 13042  09E7  0144               	movlb	4	; select bank4
 13043  09E8  00E5               	movwf	receiveBTBuffer@buffer^(0+512)
 13044  09E9                     l6770:
 13045                           
 13046                           ;serial.c: 100:     uint32_t startTime = getTicks();
 13047  09E9  319B  23E8  3189   	fcall	_getTicks
 13048  09EC  0141               	movlb	1	; select bank1
 13049  09ED  086B               	movf	(?_getTicks+3)^(0+128),w
 13050  09EE  0144               	movlb	4	; select bank4
 13051  09EF  00E3               	movwf	(receiveBTBuffer@startTime+3)^(0+512)
 13052  09F0  0141               	movlb	1	; select bank1
 13053  09F1  086A               	movf	(?_getTicks+2)^(0+128),w
 13054  09F2  0144               	movlb	4	; select bank4
 13055  09F3  00E2               	movwf	(receiveBTBuffer@startTime+2)^(0+512)
 13056  09F4  0141               	movlb	1	; select bank1
 13057  09F5  0869               	movf	(?_getTicks+1)^(0+128),w
 13058  09F6  0144               	movlb	4	; select bank4
 13059  09F7  00E1               	movwf	(receiveBTBuffer@startTime+1)^(0+512)
 13060  09F8  0141               	movlb	1	; select bank1
 13061  09F9  0868               	movf	?_getTicks^(0+128),w
 13062  09FA  0144               	movlb	4	; select bank4
 13063  09FB  00E0               	movwf	receiveBTBuffer@startTime^(0+512)
 13064  09FC                     l6772:
 13065                           
 13066                           ;serial.c: 101:     uint8_t charsRead = 0;
 13067  09FC  01E4               	clrf	receiveBTBuffer@charsRead^(0+512)
 13068                           
 13069                           ;serial.c: 104:     while ((charsRead < maxChars) && (getTicksSince(startTime) <= timeou
      +                          tMS)) {
 13070  09FD  2A1E               	goto	l6782
 13071  09FE                     l6774:
 13072                           
 13073                           ;serial.c: 105:         if (EUSART1_is_rx_ready()) {
 13074  09FE  319A  22A2  3189   	fcall	_EUSART1_is_rx_ready
 13075  0A01  3A00               	xorlw	0
 13076  0A02  1903               	skipnz
 13077  0A03  2A05               	goto	u5591
 13078  0A04  2A06               	goto	u5590
 13079  0A05                     u5591:
 13080  0A05  2A1E               	goto	l6782
 13081  0A06                     u5590:
 13082  0A06                     l6776:
 13083                           
 13084                           ;serial.c: 106:             (*buffer++ = EUSART1_Read());
 13085  0A06  3188  2000  3189   	fcall	_EUSART1_Read
 13086  0A09  0143               	movlb	3	; select bank3
 13087  0A0A  00E8               	movwf	??_receiveBTBuffer^(0+384)
 13088  0A0B  0144               	movlb	4	; select bank4
 13089  0A0C  0865               	movf	receiveBTBuffer@buffer^(0+512),w
 13090  0A0D  0086               	movwf	6
 13091  0A0E  3001               	movlw	1	; select bank2/3
 13092  0A0F  0087               	movwf	7
 13093  0A10  0143               	movlb	3	; select bank3
 13094  0A11  0868               	movf	??_receiveBTBuffer^(0+384),w
 13095  0A12  0081               	movwf	1
 13096  0A13                     l6778:
 13097  0A13  3001               	movlw	1
 13098  0A14  00E8               	movwf	??_receiveBTBuffer^(0+384)
 13099  0A15  0868               	movf	??_receiveBTBuffer^(0+384),w
 13100  0A16  0144               	movlb	4	; select bank4
 13101  0A17  07E5               	addwf	receiveBTBuffer@buffer^(0+512),f
 13102  0A18                     l6780:
 13103                           
 13104                           ;serial.c: 107:             charsRead++;
 13105  0A18  3001               	movlw	1
 13106  0A19  0143               	movlb	3	; select bank3
 13107  0A1A  00E8               	movwf	??_receiveBTBuffer^(0+384)
 13108  0A1B  0868               	movf	??_receiveBTBuffer^(0+384),w
 13109  0A1C  0144               	movlb	4	; select bank4
 13110  0A1D  07E4               	addwf	receiveBTBuffer@charsRead^(0+512),f
 13111  0A1E                     l6782:
 13112                           
 13113                           ;serial.c: 104:     while ((charsRead < maxChars) && (getTicksSince(startTime) <= timeou
      +                          tMS)) {
 13114  0A1E  0142               	movlb	2	; select bank2
 13115  0A1F  086C               	movf	receiveBTBuffer@maxChars^(0+256),w
 13116  0A20  0144               	movlb	4	; select bank4
 13117  0A21  0264               	subwf	receiveBTBuffer@charsRead^(0+512),w
 13118  0A22  1803               	skipnc
 13119  0A23  2A25               	goto	u5601
 13120  0A24  2A26               	goto	u5600
 13121  0A25                     u5601:
 13122  0A25  2A60               	goto	l6786
 13123  0A26                     u5600:
 13124  0A26                     l6784:
 13125  0A26  0863               	movf	(receiveBTBuffer@startTime+3)^(0+512),w
 13126  0A27  0141               	movlb	1	; select bank1
 13127  0A28  00EB               	movwf	(getTicksSince@from+3)^(0+128)
 13128  0A29  0144               	movlb	4	; select bank4
 13129  0A2A  0862               	movf	(receiveBTBuffer@startTime+2)^(0+512),w
 13130  0A2B  0141               	movlb	1	; select bank1
 13131  0A2C  00EA               	movwf	(getTicksSince@from+2)^(0+128)
 13132  0A2D  0144               	movlb	4	; select bank4
 13133  0A2E  0861               	movf	(receiveBTBuffer@startTime+1)^(0+512),w
 13134  0A2F  0141               	movlb	1	; select bank1
 13135  0A30  00E9               	movwf	(getTicksSince@from+1)^(0+128)
 13136  0A31  0144               	movlb	4	; select bank4
 13137  0A32  0860               	movf	receiveBTBuffer@startTime^(0+512),w
 13138  0A33  0141               	movlb	1	; select bank1
 13139  0A34  00E8               	movwf	getTicksSince@from^(0+128)
 13140  0A35  319D  25D1  3189   	fcall	_getTicksSince
 13141  0A38  0142               	movlb	2	; select bank2
 13142  0A39  086D               	movf	receiveBTBuffer@timeoutMS^(0+256),w
 13143  0A3A  0143               	movlb	3	; select bank3
 13144  0A3B  00E8               	movwf	??_receiveBTBuffer^(0+384)
 13145  0A3C  0142               	movlb	2	; select bank2
 13146  0A3D  086E               	movf	(receiveBTBuffer@timeoutMS+1)^(0+256),w
 13147  0A3E  0143               	movlb	3	; select bank3
 13148  0A3F  00E9               	movwf	(??_receiveBTBuffer^(0+384)+1)
 13149  0A40  01EA               	clrf	(??_receiveBTBuffer^(0+384)+2)
 13150  0A41  01EB               	clrf	(??_receiveBTBuffer^(0+384)+3)
 13151  0A42  086B               	movf	(??_receiveBTBuffer+3)^(0+384),w
 13152  0A43  3A80               	xorlw	128
 13153  0A44  00EC               	movwf	(??_receiveBTBuffer+4)^(0+384)
 13154  0A45  0141               	movlb	1	; select bank1
 13155  0A46  086B               	movf	(?_getTicksSince+3)^(0+128),w
 13156  0A47  3A80               	xorlw	128
 13157  0A48  0143               	movlb	3	; select bank3
 13158  0A49  026C               	subwf	(??_receiveBTBuffer+4)^(0+384),w
 13159  0A4A  1D03               	skipz
 13160  0A4B  2A5C               	goto	u5613
 13161  0A4C  0141               	movlb	1	; select bank1
 13162  0A4D  086A               	movf	(?_getTicksSince+2)^(0+128),w
 13163  0A4E  0143               	movlb	3	; select bank3
 13164  0A4F  026A               	subwf	(??_receiveBTBuffer+2)^(0+384),w
 13165  0A50  1D03               	skipz
 13166  0A51  2A5C               	goto	u5613
 13167  0A52  0141               	movlb	1	; select bank1
 13168  0A53  0869               	movf	(?_getTicksSince+1)^(0+128),w
 13169  0A54  0143               	movlb	3	; select bank3
 13170  0A55  0269               	subwf	(??_receiveBTBuffer+1)^(0+384),w
 13171  0A56  1D03               	skipz
 13172  0A57  2A5C               	goto	u5613
 13173  0A58  0141               	movlb	1	; select bank1
 13174  0A59  0868               	movf	?_getTicksSince^(0+128),w
 13175  0A5A  0143               	movlb	3	; select bank3
 13176  0A5B  0268               	subwf	??_receiveBTBuffer^(0+384),w
 13177  0A5C                     u5613:
 13178  0A5C  1803               	skipnc
 13179  0A5D  2A5F               	goto	u5611
 13180  0A5E  2A60               	goto	u5610
 13181  0A5F                     u5611:
 13182  0A5F  29FE               	goto	l6774
 13183  0A60                     u5610:
 13184  0A60                     l6786:
 13185                           
 13186                           ;serial.c: 110:     return charsRead;
 13187  0A60  0144               	movlb	4	; select bank4
 13188  0A61  0864               	movf	receiveBTBuffer@charsRead^(0+512),w
 13189  0A62                     l1043:
 13190  0A62  0008               	return
 13191  0A63                     __end_of_receiveBTBuffer:
 13192                           
 13193                           	psect	text28
 13194  1AA2                     __ptext28:	
 13195 ;; *************** function _EUSART1_is_rx_ready *****************
 13196 ;; Defined at:
 13197 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 13198 ;; Parameters:    Size  Location     Type
 13199 ;;		None
 13200 ;; Auto vars:     Size  Location     Type
 13201 ;;		None
 13202 ;; Return value:  Size  Location     Type
 13203 ;;                  1    wreg      _Bool 
 13204 ;; Registers used:
 13205 ;;		wreg, status,2, status,0
 13206 ;; Tracked objects:
 13207 ;;		On entry : 0/0
 13208 ;;		On exit  : 0/0
 13209 ;;		Unchanged: 0/0
 13210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13215 ;;Total ram usage:        0 bytes
 13216 ;; Hardware stack levels used:    1
 13217 ;; Hardware stack levels required when called:    8
 13218 ;; This function calls:
 13219 ;;		Nothing
 13220 ;; This function is called by:
 13221 ;;		_flushBTRXbuffer
 13222 ;;		_receiveBTBuffer
 13223 ;; This function uses a non-reentrant model
 13224 ;;
 13225                           
 13226                           
 13227                           ;psect for function _EUSART1_is_rx_ready
 13228  1AA2                     _EUSART1_is_rx_ready:
 13229  1AA2                     l6456:	
 13230                           ;incstack = 0
 13231                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 13232                           
 13233                           
 13234                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 13235  1AA2  0140               	movlb	0	; select bank0
 13236  1AA3  0850               	movf	_eusart1RxCount,w	;volatile
 13237  1AA4  1D03               	btfss	3,2
 13238  1AA5  2AA7               	goto	u5071
 13239  1AA6  2AA9               	goto	u5070
 13240  1AA7                     u5071:
 13241  1AA7  3001               	movlw	1
 13242  1AA8  2AAA               	goto	u5080
 13243  1AA9                     u5070:
 13244  1AA9  3000               	movlw	0
 13245  1AAA                     u5080:
 13246  1AAA                     l236:
 13247  1AAA  0008               	return
 13248  1AAB                     __end_of_EUSART1_is_rx_ready:
 13249                           
 13250                           	psect	text29
 13251  0800                     __ptext29:	
 13252 ;; *************** function _EUSART1_Read *****************
 13253 ;; Defined at:
 13254 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 13255 ;; Parameters:    Size  Location     Type
 13256 ;;		None
 13257 ;; Auto vars:     Size  Location     Type
 13258 ;;  readValue       1    1[BANK1 ] unsigned char 
 13259 ;; Return value:  Size  Location     Type
 13260 ;;                  1    wreg      unsigned char 
 13261 ;; Registers used:
 13262 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13263 ;; Tracked objects:
 13264 ;;		On entry : 0/0
 13265 ;;		On exit  : 0/0
 13266 ;;		Unchanged: 0/0
 13267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13269 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13270 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13271 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13272 ;;Total ram usage:        2 bytes
 13273 ;; Hardware stack levels used:    1
 13274 ;; Hardware stack levels required when called:    8
 13275 ;; This function calls:
 13276 ;;		Nothing
 13277 ;; This function is called by:
 13278 ;;		_flushBTRXbuffer
 13279 ;;		_receiveBTBuffer
 13280 ;; This function uses a non-reentrant model
 13281 ;;
 13282                           
 13283                           
 13284                           ;psect for function _EUSART1_Read
 13285  0800                     _EUSART1_Read:
 13286  0800                     l6460:	
 13287                           ;incstack = 0
 13288                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 13289                           
 13290  0800                     l6462:	
 13291                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 13292                           
 13293                           
 13294                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 13295  0800  0140               	movlb	0	; select bank0
 13296  0801  0850               	movf	_eusart1RxCount,w	;volatile
 13297  0802  1903               	btfsc	3,2
 13298  0803  2805               	goto	u5091
 13299  0804  2806               	goto	u5090
 13300  0805                     u5091:
 13301  0805  2800               	goto	l6462
 13302  0806                     u5090:
 13303  0806                     l6464:
 13304                           
 13305                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 13306  0806  0851               	movf	_eusart1RxTail,w	;volatile
 13307  0807  3EA0               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 13308  0808  0086               	movwf	6
 13309  0809  3001               	movlw	1	; select bank3/4
 13310  080A  0087               	movwf	7
 13311  080B  0801               	movf	1,w
 13312  080C  0141               	movlb	1	; select bank1
 13313  080D  00E8               	movwf	??_EUSART1_Read^(0+128)
 13314  080E  0868               	movf	??_EUSART1_Read^(0+128),w
 13315  080F  0140               	movlb	0	; select bank0
 13316  0810  00CF               	movwf	_eusart1RxLastError	;volatile
 13317                           
 13318                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 13319  0811  0851               	movf	_eusart1RxTail,w
 13320  0812  3E20               	addlw	(low (_eusart1RxBuffer| (0+512)))& (0+255)
 13321  0813  0086               	movwf	6
 13322  0814  3002               	movlw	2	; select bank4/5
 13323  0815  0087               	movwf	7
 13324  0816  0801               	movf	1,w
 13325  0817  0141               	movlb	1	; select bank1
 13326  0818  00E8               	movwf	??_EUSART1_Read^(0+128)
 13327  0819  0868               	movf	??_EUSART1_Read^(0+128),w
 13328  081A  00E9               	movwf	EUSART1_Read@readValue^(0+128)
 13329  081B                     l6466:
 13330  081B  3001               	movlw	1
 13331  081C  00E8               	movwf	??_EUSART1_Read^(0+128)
 13332  081D  0868               	movf	??_EUSART1_Read^(0+128),w
 13333  081E  0140               	movlb	0	; select bank0
 13334  081F  07D1               	addwf	_eusart1RxTail,f	;volatile
 13335  0820                     l6468:
 13336                           
 13337                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 13338  0820  3020               	movlw	32
 13339  0821  0251               	subwf	_eusart1RxTail,w	;volatile
 13340  0822  1C03               	skipc
 13341  0823  2825               	goto	u5101
 13342  0824  2826               	goto	u5100
 13343  0825                     u5101:
 13344  0825  2827               	goto	l6472
 13345  0826                     u5100:
 13346  0826                     l6470:
 13347                           
 13348                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 13349  0826  01D1               	clrf	_eusart1RxTail	;volatile
 13350  0827                     l6472:
 13351                           
 13352                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 13353  0827  014E               	movlb	14	; select bank14
 13354  0828  1299               	bcf	25,5	;volatile
 13355  0829                     l6474:
 13356                           
 13357                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 13358  0829  3001               	movlw	1
 13359  082A  0140               	movlb	0	; select bank0
 13360  082B  02D0               	subwf	_eusart1RxCount,f	;volatile
 13361  082C                     l6476:
 13362                           
 13363                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 13364  082C  014E               	movlb	14	; select bank14
 13365  082D  1699               	bsf	25,5	;volatile
 13366  082E                     l6478:
 13367                           
 13368                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 13369  082E  0141               	movlb	1	; select bank1
 13370  082F  0869               	movf	EUSART1_Read@readValue^(0+128),w
 13371  0830                     l249:
 13372  0830  0008               	return
 13373  0831                     __end_of_EUSART1_Read:
 13374                           
 13375                           	psect	text30
 13376  1C40                     __ptext30:	
 13377 ;; *************** function _SetDualReceive *****************
 13378 ;; Defined at:
 13379 ;;		line 35 in file "configure.c"
 13380 ;; Parameters:    Size  Location     Type
 13381 ;;		None
 13382 ;; Auto vars:     Size  Location     Type
 13383 ;;		None
 13384 ;; Return value:  Size  Location     Type
 13385 ;;                  1    wreg      void 
 13386 ;; Registers used:
 13387 ;;		wreg, status,2, status,0, pclath, cstack
 13388 ;; Tracked objects:
 13389 ;;		On entry : 0/0
 13390 ;;		On exit  : 0/0
 13391 ;;		Unchanged: 0/0
 13392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13397 ;;Total ram usage:        0 bytes
 13398 ;; Hardware stack levels used:    1
 13399 ;; Hardware stack levels required when called:   10
 13400 ;; This function calls:
 13401 ;;		_sleep
 13402 ;; This function is called by:
 13403 ;;		_setBTBaudRatesTo38400
 13404 ;;		_doFactoryReset
 13405 ;; This function uses a non-reentrant model
 13406 ;;
 13407                           
 13408                           
 13409                           ;psect for function _SetDualReceive
 13410  1C40                     _SetDualReceive:
 13411  1C40                     l6802:	
 13412                           ;incstack = 0
 13413                           ; Regs used in _SetDualReceive: [wreg+status,2+status,0+pclath+cstack]
 13414                           
 13415                           
 13416                           ;configure.c: 36:     RX1DTPPS = 0x15;
 13417  1C40  3015               	movlw	21
 13418  1C41  017D               	movlb	61	; select bank61
 13419  1C42  00CB               	movwf	75	;volatile
 13420                           
 13421                           ;configure.c: 37:     RC4PPS = 0x0F;
 13422  1C43  300F               	movlw	15
 13423  1C44  017E               	movlb	62	; select bank62
 13424  1C45  00A4               	movwf	36	;volatile
 13425                           
 13426                           ;configure.c: 38:     RC6PPS = 0x0F;
 13427  1C46  300F               	movlw	15
 13428  1C47  00A6               	movwf	38	;volatile
 13429  1C48                     l6804:
 13430                           
 13431                           ;configure.c: 39:     sleep(5);
 13432  1C48  3000               	movlw	0
 13433  1C49  0142               	movlb	2	; select bank2
 13434  1C4A  00EF               	movwf	(sleep@delay+3)^(0+256)
 13435  1C4B  3000               	movlw	0
 13436  1C4C  00EE               	movwf	(sleep@delay+2)^(0+256)
 13437  1C4D  3000               	movlw	0
 13438  1C4E  00ED               	movwf	(sleep@delay+1)^(0+256)
 13439  1C4F  3005               	movlw	5
 13440  1C50  00EC               	movwf	sleep@delay^(0+256)
 13441  1C51  3193  23BB  319C   	fcall	_sleep
 13442  1C54                     l1198:
 13443  1C54  0008               	return
 13444  1C55                     __end_of_SetDualReceive:
 13445                           
 13446                           	psect	text31
 13447  1A99                     __ptext31:	
 13448 ;; *************** function _disableJoystick *****************
 13449 ;; Defined at:
 13450 ;;		line 88 in file "joystick.c"
 13451 ;; Parameters:    Size  Location     Type
 13452 ;;		None
 13453 ;; Auto vars:     Size  Location     Type
 13454 ;;		None
 13455 ;; Return value:  Size  Location     Type
 13456 ;;                  1    wreg      void 
 13457 ;; Registers used:
 13458 ;;		status,2, status,0, pclath, cstack
 13459 ;; Tracked objects:
 13460 ;;		On entry : 0/0
 13461 ;;		On exit  : 0/0
 13462 ;;		Unchanged: 0/0
 13463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13468 ;;Total ram usage:        0 bytes
 13469 ;; Hardware stack levels used:    1
 13470 ;; Hardware stack levels required when called:    9
 13471 ;; This function calls:
 13472 ;;		_TMR1_StopTimer
 13473 ;; This function is called by:
 13474 ;;		_runUI
 13475 ;; This function uses a non-reentrant model
 13476 ;;
 13477                           
 13478                           
 13479                           ;psect for function _disableJoystick
 13480  1A99                     _disableJoystick:
 13481  1A99                     l7346:	
 13482                           ;incstack = 0
 13483                           ; Regs used in _disableJoystick: [status,2+status,0+pclath+cstack]
 13484                           
 13485                           
 13486                           ;joystick.c: 89:     TMR1_StopTimer();
 13487  1A99  3199  21ED  319A   	fcall	_TMR1_StopTimer
 13488  1A9C                     l7348:
 13489                           
 13490                           ;joystick.c: 90:     joystickEnabled = 0;
 13491  1A9C  0141               	movlb	1	; select bank1
 13492  1A9D  01C9               	clrf	_joystickEnabled^(0+128)
 13493  1A9E                     l7350:
 13494                           
 13495                           ;joystick.c: 91:     TMR1_StopTimer();
 13496  1A9E  3199  21ED  319A   	fcall	_TMR1_StopTimer
 13497  1AA1                     l886:
 13498  1AA1  0008               	return
 13499  1AA2                     __end_of_disableJoystick:
 13500                           
 13501                           	psect	text32
 13502  19ED                     __ptext32:	
 13503 ;; *************** function _TMR1_StopTimer *****************
 13504 ;; Defined at:
 13505 ;;		line 105 in file "mcc_generated_files/tmr1.c"
 13506 ;; Parameters:    Size  Location     Type
 13507 ;;		None
 13508 ;; Auto vars:     Size  Location     Type
 13509 ;;		None
 13510 ;; Return value:  Size  Location     Type
 13511 ;;                  1    wreg      void 
 13512 ;; Registers used:
 13513 ;;		None
 13514 ;; Tracked objects:
 13515 ;;		On entry : 0/0
 13516 ;;		On exit  : 0/0
 13517 ;;		Unchanged: 0/0
 13518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13523 ;;Total ram usage:        0 bytes
 13524 ;; Hardware stack levels used:    1
 13525 ;; Hardware stack levels required when called:    8
 13526 ;; This function calls:
 13527 ;;		Nothing
 13528 ;; This function is called by:
 13529 ;;		_disableJoystick
 13530 ;; This function uses a non-reentrant model
 13531 ;;
 13532                           
 13533                           
 13534                           ;psect for function _TMR1_StopTimer
 13535  19ED                     _TMR1_StopTimer:
 13536  19ED                     l6872:	
 13537                           ;incstack = 0
 13538                           ; Regs used in _TMR1_StopTimer: []
 13539                           
 13540                           
 13541                           ;mcc_generated_files/tmr1.c: 108:     T1CONbits.TMR1ON = 0;
 13542  19ED  0144               	movlb	4	; select bank4
 13543  19EE  100E               	bcf	14,0	;volatile
 13544  19EF                     l39:
 13545  19EF  0008               	return
 13546  19F0                     __end_of_TMR1_StopTimer:
 13547                           
 13548                           	psect	text33
 13549  1016                     __ptext33:	
 13550 ;; *************** function _bumpUIType *****************
 13551 ;; Defined at:
 13552 ;;		line 176 in file "ui.c"
 13553 ;; Parameters:    Size  Location     Type
 13554 ;;		None
 13555 ;; Auto vars:     Size  Location     Type
 13556 ;;		None
 13557 ;; Return value:  Size  Location     Type
 13558 ;;                  1    wreg      void 
 13559 ;; Registers used:
 13560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13561 ;; Tracked objects:
 13562 ;;		On entry : 0/0
 13563 ;;		On exit  : 0/0
 13564 ;;		Unchanged: 0/0
 13565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13568 ;;      Temps:          0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13569 ;;      Totals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13570 ;;Total ram usage:        1 bytes
 13571 ;; Hardware stack levels used:    1
 13572 ;; Hardware stack levels required when called:   12
 13573 ;; This function calls:
 13574 ;;		___ctoee
 13575 ;;		_blinkLEDColor
 13576 ;;		_setJoystickType
 13577 ;; This function is called by:
 13578 ;;		_runUI
 13579 ;; This function uses a non-reentrant model
 13580 ;;
 13581                           
 13582                           
 13583                           ;psect for function _bumpUIType
 13584  1016                     _bumpUIType:
 13585  1016                     l7484:	
 13586                           ;incstack = 0
 13587                           ; Regs used in _bumpUIType: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13588                           
 13589                           
 13590                           ;ui.c: 177:     uiType = ((uiType +1) % 2);
 13591  1016  0140               	movlb	0	; select bank0
 13592  1017  0848               	movf	_uiType,w
 13593  1018  3E01               	addlw	1
 13594  1019  3901               	andlw	1
 13595  101A  0144               	movlb	4	; select bank4
 13596  101B  00E7               	movwf	??_bumpUIType^(0+512)
 13597  101C  0867               	movf	??_bumpUIType^(0+512),w
 13598  101D  0140               	movlb	0	; select bank0
 13599  101E  00C8               	movwf	_uiType
 13600  101F                     l7486:
 13601                           
 13602                           ;ui.c: 178:     EEPROM_uiBrakeMode = uiType;
 13603  101F  0848               	movf	_uiType,w
 13604  1020  0144               	movlb	4	; select bank4
 13605  1021  00E7               	movwf	??_bumpUIType^(0+512)
 13606  1022  0867               	movf	??_bumpUIType^(0+512),w
 13607  1023  0141               	movlb	1	; select bank1
 13608  1024  00ED               	movwf	___ctoee@data^(0+128)
 13609  1025  3000               	movlw	(low _EEPROM_uiBrakeMode)& (0+255)
 13610  1026  319B  2330  3190   	fcall	___ctoee
 13611  1029                     l7488:
 13612                           
 13613                           ;ui.c: 179:     blinkLEDColor(0x033, uiType + 1);
 13614  1029  3033               	movlw	51
 13615  102A  0143               	movlb	3	; select bank3
 13616  102B  00EC               	movwf	blinkLEDColor@RGB^(0+384)
 13617  102C  3000               	movlw	0
 13618  102D  00ED               	movwf	(blinkLEDColor@RGB^(0+384)+1)
 13619  102E  0140               	movlb	0	; select bank0
 13620  102F  0848               	movf	_uiType,w
 13621  1030  3E01               	addlw	1
 13622  1031  0144               	movlb	4	; select bank4
 13623  1032  00E7               	movwf	??_bumpUIType^(0+512)
 13624  1033  0867               	movf	??_bumpUIType^(0+512),w
 13625  1034  0143               	movlb	3	; select bank3
 13626  1035  00EE               	movwf	blinkLEDColor@blinks^(0+384)
 13627  1036  319F  27B4  3190   	fcall	_blinkLEDColor
 13628  1039                     l7490:
 13629                           
 13630                           ;ui.c: 180:     setJoystickType(uiType);
 13631  1039  0140               	movlb	0	; select bank0
 13632  103A  0848               	movf	_uiType,w
 13633  103B  318E  268B  3190   	fcall	_setJoystickType
 13634  103E                     l1403:
 13635  103E  0008               	return
 13636  103F                     __end_of_bumpUIType:
 13637                           
 13638                           	psect	text34
 13639  1307                     __ptext34:	
 13640 ;; *************** function _bumpUISpeedMode *****************
 13641 ;; Defined at:
 13642 ;;		line 165 in file "ui.c"
 13643 ;; Parameters:    Size  Location     Type
 13644 ;;		None
 13645 ;; Auto vars:     Size  Location     Type
 13646 ;;		None
 13647 ;; Return value:  Size  Location     Type
 13648 ;;                  1    wreg      void 
 13649 ;; Registers used:
 13650 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13651 ;; Tracked objects:
 13652 ;;		On entry : 0/0
 13653 ;;		On exit  : 0/0
 13654 ;;		Unchanged: 0/0
 13655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13658 ;;      Temps:          0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13659 ;;      Totals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13660 ;;Total ram usage:        1 bytes
 13661 ;; Hardware stack levels used:    1
 13662 ;; Hardware stack levels required when called:   12
 13663 ;; This function calls:
 13664 ;;		___awmod
 13665 ;;		___ctoee
 13666 ;;		_blinkLEDColor
 13667 ;;		_setJoystickSpeed
 13668 ;; This function is called by:
 13669 ;;		_runUI
 13670 ;; This function uses a non-reentrant model
 13671 ;;
 13672                           
 13673                           
 13674                           ;psect for function _bumpUISpeedMode
 13675  1307                     _bumpUISpeedMode:
 13676  1307                     l7476:	
 13677                           ;incstack = 0
 13678                           ; Regs used in _bumpUISpeedMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13679                           
 13680                           
 13681                           ;ui.c: 166:     uiSpeedMode = ((uiSpeedMode +1) % 10);
 13682  1307  300A               	movlw	10
 13683  1308  0141               	movlb	1	; select bank1
 13684  1309  00E8               	movwf	___awmod@divisor^(0+128)
 13685  130A  3000               	movlw	0
 13686  130B  00E9               	movwf	(___awmod@divisor^(0+128)+1)
 13687  130C  0140               	movlb	0	; select bank0
 13688  130D  0849               	movf	_uiSpeedMode,w
 13689  130E  3E01               	addlw	1
 13690  130F  0141               	movlb	1	; select bank1
 13691  1310  00EA               	movwf	___awmod@dividend^(0+128)
 13692  1311  3000               	movlw	0
 13693  1312  1803               	skipnc
 13694  1313  3001               	movlw	1
 13695  1314  00EB               	movwf	(___awmod@dividend^(0+128)+1)
 13696  1315  3195  256B  3193   	fcall	___awmod
 13697  1318  0141               	movlb	1	; select bank1
 13698  1319  0868               	movf	?___awmod^(0+128),w
 13699  131A  0144               	movlb	4	; select bank4
 13700  131B  00E7               	movwf	??_bumpUISpeedMode^(0+512)
 13701  131C  0867               	movf	??_bumpUISpeedMode^(0+512),w
 13702  131D  0140               	movlb	0	; select bank0
 13703  131E  00C9               	movwf	_uiSpeedMode
 13704  131F                     l7478:
 13705                           
 13706                           ;ui.c: 167:     EEPROM_uiSpeedMode = uiSpeedMode;
 13707  131F  0849               	movf	_uiSpeedMode,w
 13708  1320  0144               	movlb	4	; select bank4
 13709  1321  00E7               	movwf	??_bumpUISpeedMode^(0+512)
 13710  1322  0867               	movf	??_bumpUISpeedMode^(0+512),w
 13711  1323  0141               	movlb	1	; select bank1
 13712  1324  00ED               	movwf	___ctoee@data^(0+128)
 13713  1325  3001               	movlw	(low _EEPROM_uiSpeedMode)& (0+255)
 13714  1326  319B  2330  3193   	fcall	___ctoee
 13715  1329                     l7480:
 13716                           
 13717                           ;ui.c: 168:     blinkLEDColor(0x330, uiSpeedMode + 1);
 13718  1329  3030               	movlw	48
 13719  132A  0143               	movlb	3	; select bank3
 13720  132B  00EC               	movwf	blinkLEDColor@RGB^(0+384)
 13721  132C  3003               	movlw	3
 13722  132D  00ED               	movwf	(blinkLEDColor@RGB^(0+384)+1)
 13723  132E  0140               	movlb	0	; select bank0
 13724  132F  0849               	movf	_uiSpeedMode,w
 13725  1330  3E01               	addlw	1
 13726  1331  0144               	movlb	4	; select bank4
 13727  1332  00E7               	movwf	??_bumpUISpeedMode^(0+512)
 13728  1333  0867               	movf	??_bumpUISpeedMode^(0+512),w
 13729  1334  0143               	movlb	3	; select bank3
 13730  1335  00EE               	movwf	blinkLEDColor@blinks^(0+384)
 13731  1336  319F  27B4  3193   	fcall	_blinkLEDColor
 13732  1339                     l7482:
 13733                           
 13734                           ;ui.c: 169:     setJoystickSpeed(uiSpeedMode);
 13735  1339  0140               	movlb	0	; select bank0
 13736  133A  0849               	movf	_uiSpeedMode,w
 13737  133B  318A  2263  3193   	fcall	_setJoystickSpeed
 13738  133E                     l1397:
 13739  133E  0008               	return
 13740  133F                     __end_of_bumpUISpeedMode:
 13741                           
 13742                           	psect	text35
 13743  1FB4                     __ptext35:	
 13744 ;; *************** function _blinkLEDColor *****************
 13745 ;; Defined at:
 13746 ;;		line 236 in file "ui.c"
 13747 ;; Parameters:    Size  Location     Type
 13748 ;;  RGB             2    4[BANK3 ] unsigned short 
 13749 ;;  blinks          1    6[BANK3 ] unsigned char 
 13750 ;; Auto vars:     Size  Location     Type
 13751 ;;  blink           1    6[BANK4 ] unsigned char 
 13752 ;; Return value:  Size  Location     Type
 13753 ;;                  1    wreg      void 
 13754 ;; Registers used:
 13755 ;;		wreg, status,2, status,0, pclath, cstack
 13756 ;; Tracked objects:
 13757 ;;		On entry : 0/0
 13758 ;;		On exit  : 0/0
 13759 ;;		Unchanged: 0/0
 13760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13761 ;;      Params:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13762 ;;      Locals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13763 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13764 ;;      Totals:         0       0       0       0       4       1       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13765 ;;Total ram usage:        5 bytes
 13766 ;; Hardware stack levels used:    1
 13767 ;; Hardware stack levels required when called:   11
 13768 ;; This function calls:
 13769 ;;		_pulseLEDColor
 13770 ;; This function is called by:
 13771 ;;		_bumpUISpeedMode
 13772 ;;		_bumpUIType
 13773 ;; This function uses a non-reentrant model
 13774 ;;
 13775                           
 13776                           
 13777                           ;psect for function _blinkLEDColor
 13778  1FB4                     _blinkLEDColor:
 13779  1FB4                     l7072:	
 13780                           ;incstack = 0
 13781                           ; Regs used in _blinkLEDColor: [wreg+status,2+status,0+pclath+cstack]
 13782                           
 13783                           
 13784                           ;ui.c: 237:     uint8_t blink;;ui.c: 239:     for(blink=0; blink < blinks; blink++){
 13785  1FB4  0144               	movlb	4	; select bank4
 13786  1FB5  01E6               	clrf	blinkLEDColor@blink^(0+512)
 13787  1FB6  2FD0               	goto	l7078
 13788  1FB7                     l7074:
 13789                           
 13790                           ;ui.c: 240:         pulseLEDColor(RGB, 100, 400);
 13791  1FB7  0143               	movlb	3	; select bank3
 13792  1FB8  086D               	movf	(blinkLEDColor@RGB+1)^(0+384),w
 13793  1FB9  0144               	movlb	4	; select bank4
 13794  1FBA  00E1               	movwf	(pulseLEDColor@RGB+1)^(0+512)
 13795  1FBB  0143               	movlb	3	; select bank3
 13796  1FBC  086C               	movf	blinkLEDColor@RGB^(0+384),w
 13797  1FBD  0144               	movlb	4	; select bank4
 13798  1FBE  00E0               	movwf	pulseLEDColor@RGB^(0+512)
 13799  1FBF  3064               	movlw	100
 13800  1FC0  00E2               	movwf	pulseLEDColor@onTimeMS^(0+512)
 13801  1FC1  3000               	movlw	0
 13802  1FC2  00E3               	movwf	(pulseLEDColor@onTimeMS^(0+512)+1)
 13803  1FC3  3090               	movlw	144
 13804  1FC4  00E4               	movwf	pulseLEDColor@offTimeMS^(0+512)
 13805  1FC5  3001               	movlw	1
 13806  1FC6  00E5               	movwf	(pulseLEDColor@offTimeMS^(0+512)+1)
 13807  1FC7  3190  20EE  319F   	fcall	_pulseLEDColor
 13808  1FCA                     l7076:
 13809                           
 13810                           ;ui.c: 241:     }
 13811  1FCA  3001               	movlw	1
 13812  1FCB  0143               	movlb	3	; select bank3
 13813  1FCC  00EF               	movwf	??_blinkLEDColor^(0+384)
 13814  1FCD  086F               	movf	??_blinkLEDColor^(0+384),w
 13815  1FCE  0144               	movlb	4	; select bank4
 13816  1FCF  07E6               	addwf	blinkLEDColor@blink^(0+512),f
 13817  1FD0                     l7078:
 13818  1FD0  0143               	movlb	3	; select bank3
 13819  1FD1  086E               	movf	blinkLEDColor@blinks^(0+384),w
 13820  1FD2  0144               	movlb	4	; select bank4
 13821  1FD3  0266               	subwf	blinkLEDColor@blink^(0+512),w
 13822  1FD4  1C03               	skipc
 13823  1FD5  2FD7               	goto	u5891
 13824  1FD6  2FD8               	goto	u5890
 13825  1FD7                     u5891:
 13826  1FD7  2FB7               	goto	l7074
 13827  1FD8                     u5890:
 13828  1FD8                     l1432:
 13829  1FD8  0008               	return
 13830  1FD9                     __end_of_blinkLEDColor:
 13831                           
 13832                           	psect	text36
 13833  10EE                     __ptext36:	
 13834 ;; *************** function _pulseLEDColor *****************
 13835 ;; Defined at:
 13836 ;;		line 229 in file "ui.c"
 13837 ;; Parameters:    Size  Location     Type
 13838 ;;  RGB             2    0[BANK4 ] unsigned short 
 13839 ;;  onTimeMS        2    2[BANK4 ] unsigned short 
 13840 ;;  offTimeMS       2    4[BANK4 ] unsigned short 
 13841 ;; Auto vars:     Size  Location     Type
 13842 ;;		None
 13843 ;; Return value:  Size  Location     Type
 13844 ;;                  1    wreg      void 
 13845 ;; Registers used:
 13846 ;;		wreg, status,2, status,0, pclath, cstack
 13847 ;; Tracked objects:
 13848 ;;		On entry : 0/0
 13849 ;;		On exit  : 0/0
 13850 ;;		Unchanged: 0/0
 13851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13852 ;;      Params:         0       0       0       0       0       6       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13855 ;;      Totals:         0       0       0       0       0       6       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13856 ;;Total ram usage:        6 bytes
 13857 ;; Hardware stack levels used:    1
 13858 ;; Hardware stack levels required when called:   10
 13859 ;; This function calls:
 13860 ;;		_setLEDColor
 13861 ;;		_sleep
 13862 ;; This function is called by:
 13863 ;;		_pairBluetoothDevices
 13864 ;;		_getBTAddress
 13865 ;;		_setBTConnection
 13866 ;;		_doFactoryReset
 13867 ;;		_runUI
 13868 ;;		_blinkLEDColor
 13869 ;; This function uses a non-reentrant model
 13870 ;;
 13871                           
 13872                           
 13873                           ;psect for function _pulseLEDColor
 13874  10EE                     _pulseLEDColor:
 13875  10EE                     l6830:	
 13876                           ;incstack = 0
 13877                           ; Regs used in _pulseLEDColor: [wreg+status,2+status,0+pclath+cstack]
 13878                           
 13879                           
 13880                           ;ui.c: 230:     setLEDColor(RGB);
 13881  10EE  0144               	movlb	4	; select bank4
 13882  10EF  0861               	movf	(pulseLEDColor@RGB+1)^(0+512),w
 13883  10F0  0141               	movlb	1	; select bank1
 13884  10F1  00E9               	movwf	(setLEDColor@RGB+1)^(0+128)
 13885  10F2  0144               	movlb	4	; select bank4
 13886  10F3  0860               	movf	pulseLEDColor@RGB^(0+512),w
 13887  10F4  0141               	movlb	1	; select bank1
 13888  10F5  00E8               	movwf	setLEDColor@RGB^(0+128)
 13889  10F6  319E  264A  3190   	fcall	_setLEDColor
 13890                           
 13891                           ;ui.c: 231:     sleep(onTimeMS);
 13892  10F9  0144               	movlb	4	; select bank4
 13893  10FA  0862               	movf	pulseLEDColor@onTimeMS^(0+512),w
 13894  10FB  0142               	movlb	2	; select bank2
 13895  10FC  00EC               	movwf	sleep@delay^(0+256)
 13896  10FD  0144               	movlb	4	; select bank4
 13897  10FE  0863               	movf	(pulseLEDColor@onTimeMS+1)^(0+512),w
 13898  10FF  0142               	movlb	2	; select bank2
 13899  1100  00ED               	movwf	(sleep@delay^(0+256)+1)
 13900  1101  01EE               	clrf	(sleep@delay^(0+256)+2)
 13901  1102  01EF               	clrf	(sleep@delay^(0+256)+3)
 13902  1103  3193  23BB  3190   	fcall	_sleep
 13903                           
 13904                           ;ui.c: 232:     setLEDColor(0x000);
 13905  1106  3000               	movlw	0
 13906  1107  0141               	movlb	1	; select bank1
 13907  1108  00E8               	movwf	setLEDColor@RGB^(0+128)
 13908  1109  00E9               	movwf	(setLEDColor@RGB+1)^(0+128)
 13909  110A  319E  264A  3190   	fcall	_setLEDColor
 13910                           
 13911                           ;ui.c: 233:     sleep(offTimeMS);
 13912  110D  0144               	movlb	4	; select bank4
 13913  110E  0864               	movf	pulseLEDColor@offTimeMS^(0+512),w
 13914  110F  0142               	movlb	2	; select bank2
 13915  1110  00EC               	movwf	sleep@delay^(0+256)
 13916  1111  0144               	movlb	4	; select bank4
 13917  1112  0865               	movf	(pulseLEDColor@offTimeMS+1)^(0+512),w
 13918  1113  0142               	movlb	2	; select bank2
 13919  1114  00ED               	movwf	(sleep@delay^(0+256)+1)
 13920  1115  01EE               	clrf	(sleep@delay^(0+256)+2)
 13921  1116  01EF               	clrf	(sleep@delay^(0+256)+3)
 13922  1117  3193  23BB  3190   	fcall	_sleep
 13923  111A                     l1426:
 13924  111A  0008               	return
 13925  111B                     __end_of_pulseLEDColor:
 13926                           
 13927                           	psect	text37
 13928  1E4A                     __ptext37:	
 13929 ;; *************** function _setLEDColor *****************
 13930 ;; Defined at:
 13931 ;;		line 223 in file "ui.c"
 13932 ;; Parameters:    Size  Location     Type
 13933 ;;  RGB             2    0[BANK1 ] unsigned short 
 13934 ;; Auto vars:     Size  Location     Type
 13935 ;;		None
 13936 ;; Return value:  Size  Location     Type
 13937 ;;                  1    wreg      void 
 13938 ;; Registers used:
 13939 ;;		wreg, status,2, status,0
 13940 ;; Tracked objects:
 13941 ;;		On entry : 0/0
 13942 ;;		On exit  : 0/0
 13943 ;;		Unchanged: 0/0
 13944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13945 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13947 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13948 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13949 ;;Total ram usage:        5 bytes
 13950 ;; Hardware stack levels used:    1
 13951 ;; Hardware stack levels required when called:    8
 13952 ;; This function calls:
 13953 ;;		Nothing
 13954 ;; This function is called by:
 13955 ;;		_pulseLEDColor
 13956 ;; This function uses a non-reentrant model
 13957 ;;
 13958                           
 13959                           
 13960                           ;psect for function _setLEDColor
 13961  1E4A                     _setLEDColor:
 13962  1E4A                     l6546:	
 13963                           ;incstack = 0
 13964                           ; Regs used in _setLEDColor: [wreg+status,2+status,0]
 13965                           
 13966                           
 13967                           ;ui.c: 224:     B_LED = RGB & 0x0F;
 13968  1E4A  0141               	movlb	1	; select bank1
 13969  1E4B  0868               	movf	setLEDColor@RGB^(0+128),w
 13970  1E4C  390F               	andlw	15
 13971  1E4D  00EA               	movwf	??_setLEDColor^(0+128)
 13972  1E4E  086A               	movf	??_setLEDColor^(0+128),w
 13973  1E4F  0140               	movlb	0	; select bank0
 13974  1E50  00C5               	movwf	_B_LED
 13975  1E51                     l6548:
 13976                           
 13977                           ;ui.c: 225:     G_LED = (RGB >> 4) & 0x0F;
 13978  1E51  0141               	movlb	1	; select bank1
 13979  1E52  0869               	movf	(setLEDColor@RGB+1)^(0+128),w
 13980  1E53  00EB               	movwf	(??_setLEDColor^(0+128)+1)
 13981  1E54  0868               	movf	setLEDColor@RGB^(0+128),w
 13982  1E55  00EA               	movwf	??_setLEDColor^(0+128)
 13983  1E56  3004               	movlw	4
 13984  1E57                     u5225:
 13985  1E57  36EB               	lsrf	(??_setLEDColor^(0+128)+1),f
 13986  1E58  0CEA               	rrf	??_setLEDColor^(0+128),f
 13987  1E59  0B89               	decfsz	9,f
 13988  1E5A  2E57               	goto	u5225
 13989  1E5B  086A               	movf	??_setLEDColor^(0+128),w
 13990  1E5C  390F               	andlw	15
 13991  1E5D  00EC               	movwf	(??_setLEDColor+2)^(0+128)
 13992  1E5E  086C               	movf	(??_setLEDColor+2)^(0+128),w
 13993  1E5F  0140               	movlb	0	; select bank0
 13994  1E60  00C6               	movwf	_G_LED
 13995  1E61                     l6550:
 13996                           
 13997                           ;ui.c: 226:     R_LED = (RGB >> 8) & 0x0F;
 13998  1E61  0141               	movlb	1	; select bank1
 13999  1E62  0869               	movf	(setLEDColor@RGB+1)^(0+128),w
 14000  1E63  390F               	andlw	15
 14001  1E64  00EA               	movwf	??_setLEDColor^(0+128)
 14002  1E65  086A               	movf	??_setLEDColor^(0+128),w
 14003  1E66  0140               	movlb	0	; select bank0
 14004  1E67  00C7               	movwf	_R_LED
 14005  1E68                     l1423:
 14006  1E68  0008               	return
 14007  1E69                     __end_of_setLEDColor:
 14008                           
 14009                           	psect	text38
 14010  1B30                     __ptext38:	
 14011 ;; *************** function ___ctoee *****************
 14012 ;; Defined at:
 14013 ;;		line 150 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c"
 14014 ;; Parameters:    Size  Location     Type
 14015 ;;  addr            1    wreg     PTR eeprom void 
 14016 ;;		 -> EEPROM_uiBrakeMode(1), EEPROM_uiSpeedMode(1), 
 14017 ;;  data            1    5[BANK1 ] unsigned char 
 14018 ;; Auto vars:     Size  Location     Type
 14019 ;;  addr            1    7[BANK1 ] PTR eeprom void 
 14020 ;;		 -> EEPROM_uiBrakeMode(1), EEPROM_uiSpeedMode(1), 
 14021 ;; Return value:  Size  Location     Type
 14022 ;;                  1    wreg      unsigned char 
 14023 ;; Registers used:
 14024 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14025 ;; Tracked objects:
 14026 ;;		On entry : 0/0
 14027 ;;		On exit  : 0/0
 14028 ;;		Unchanged: 0/0
 14029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14030 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14031 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14032 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14033 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14034 ;;Total ram usage:        3 bytes
 14035 ;; Hardware stack levels used:    1
 14036 ;; Hardware stack levels required when called:    9
 14037 ;; This function calls:
 14038 ;;		___memcpyee
 14039 ;; This function is called by:
 14040 ;;		_bumpUISpeedMode
 14041 ;;		_bumpUIType
 14042 ;; This function uses a non-reentrant model
 14043 ;;
 14044                           
 14045                           
 14046                           ;psect for function ___ctoee
 14047  1B30                     ___ctoee:
 14048                           
 14049                           ;incstack = 0
 14050                           ; Regs used in ___ctoee: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14051                           ;___ctoee@addr stored from wreg
 14052  1B30  0141               	movlb	1	; select bank1
 14053  1B31  00EF               	movwf	___ctoee@addr^(0+128)
 14054  1B32                     l7092:
 14055  1B32  30ED               	movlw	(low (___ctoee@data| 0))& (0+255)
 14056  1B33  00EE               	movwf	??___ctoee^(0+128)
 14057  1B34  086E               	movf	??___ctoee^(0+128),w
 14058  1B35  00E8               	movwf	___memcpyee@from^(0+128)
 14059  1B36  01E9               	clrf	___memcpyee@size^(0+128)
 14060  1B37  0AE9               	incf	___memcpyee@size^(0+128),f
 14061  1B38  086F               	movf	___ctoee@addr^(0+128),w
 14062  1B39  3194  24CA  319B   	fcall	___memcpyee
 14063  1B3C                     l1530:
 14064  1B3C  0008               	return
 14065  1B3D                     __end_of___ctoee:
 14066                           
 14067                           	psect	text39
 14068  14CA                     __ptext39:	
 14069 ;; *************** function ___memcpyee *****************
 14070 ;; Defined at:
 14071 ;;		line 39 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c"
 14072 ;; Parameters:    Size  Location     Type
 14073 ;;  to              1    wreg     PTR eeprom unsigned char
 14074 ;;		 -> EEPROM_uiBrakeMode(1), EEPROM_uiSpeedMode(1), 
 14075 ;;  from            1    0[BANK1 ] PTR const unsigned char 
 14076 ;;		 -> __fltoee@data(4), __fttoee@data(4), __otoee@data(8), __ltoee@data(4), 
 14077 ;;		 -> __mtoee@data(3), __itoee@data(2), __ctoee@data(1), 
 14078 ;;  size            1    1[BANK1 ] unsigned char 
 14079 ;; Auto vars:     Size  Location     Type
 14080 ;;  to              1    4[BANK1 ] PTR eeprom unsigned char
 14081 ;;		 -> EEPROM_uiBrakeMode(1), EEPROM_uiSpeedMode(1), 
 14082 ;;  ptr             1    3[BANK1 ] PTR const unsigned char 
 14083 ;;		 -> __fltoee@data(4), __fttoee@data(4), __otoee@data(8), __ltoee@data(4), 
 14084 ;;		 -> __mtoee@data(3), __itoee@data(2), __ctoee@data(1), 
 14085 ;; Return value:  Size  Location     Type
 14086 ;;                  1    wreg      void 
 14087 ;; Registers used:
 14088 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14089 ;; Tracked objects:
 14090 ;;		On entry : 0/0
 14091 ;;		On exit  : 0/0
 14092 ;;		Unchanged: 0/0
 14093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14094 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14095 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14096 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14097 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14098 ;;Total ram usage:        5 bytes
 14099 ;; Hardware stack levels used:    1
 14100 ;; Hardware stack levels required when called:    8
 14101 ;; This function calls:
 14102 ;;		Nothing
 14103 ;; This function is called by:
 14104 ;;		___ctoee
 14105 ;; This function uses a non-reentrant model
 14106 ;;
 14107                           
 14108                           
 14109                           ;psect for function ___memcpyee
 14110  14CA                     ___memcpyee:
 14111                           
 14112                           ;incstack = 0
 14113                           ; Regs used in ___memcpyee: [wreg+fsr1l+fsr1h+status,2+status,0]
 14114                           ;___memcpyee@to stored from wreg
 14115  14CA  0141               	movlb	1	; select bank1
 14116  14CB  00EC               	movwf	___memcpyee@to^(0+128)
 14117  14CC                     l6840:
 14118                           
 14119                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 39: __memcpyee(__e
      +                          eprom unsigned char * to, const unsigned char *from, unsigned char size);D:\Program File
      +                          s\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 40: {;D:\Program Files\Microchip\x
      +                          c8\v2.20\pic\sources\c99\pic\__eeprom.c: 41:  const unsigned char *ptr =from;
 14120  14CC  0868               	movf	___memcpyee@from^(0+128),w
 14121  14CD  00EA               	movwf	??___memcpyee^(0+128)
 14122  14CE  086A               	movf	??___memcpyee^(0+128),w
 14123  14CF  00EB               	movwf	___memcpyee@ptr^(0+128)
 14124  14D0                     l1498:	
 14125                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 71:  }
 14126                           
 14127                           
 14128                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 69:  while (NVMCON
      +                          1bits.WR) {
 14129  14D0  0150               	movlb	16	; select bank16
 14130  14D1  189E               	btfsc	30,1	;volsfr
 14131  14D2  2CD4               	goto	u5681
 14132  14D3  2CD5               	goto	u5680
 14133  14D4                     u5681:
 14134  14D4  2CD0               	goto	l1498
 14135  14D5                     u5680:
 14136  14D5                     l1500:
 14137                           
 14138                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 72:  NVMCON1bits.N
      +                          VMREGS = 1;
 14139  14D5  171E               	bsf	30,6	;volsfr
 14140  14D6                     l6842:
 14141                           
 14142                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 73:  NVMADRL = (un
      +                          signed char) to - 1U;
 14143  14D6  0141               	movlb	1	; select bank1
 14144  14D7  086C               	movf	___memcpyee@to^(0+128),w
 14145  14D8  3EFF               	addlw	255
 14146  14D9  0150               	movlb	16	; select bank16
 14147  14DA  009A               	movwf	26	;volatile
 14148  14DB                     l6844:
 14149                           
 14150                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 74:  NVMADRH = 0x7
      +                          0;
 14151  14DB  3070               	movlw	112
 14152  14DC  009B               	movwf	27	;volatile
 14153  14DD                     l6846:
 14154                           
 14155                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 75:  NVMDATH = 0;
 14156  14DD  019D               	clrf	29	;volatile
 14157                           
 14158                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 76:  while (size--
      +                          ) {
 14159  14DE  2D0E               	goto	l6866
 14160  14DF                     l1503:	
 14161                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 79:   }
 14162                           
 14163                           
 14164                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 77:   while (NVMCO
      +                          N1bits.WR) {
 14165  14DF  0150               	movlb	16	; select bank16
 14166  14E0  189E               	btfsc	30,1	;volsfr
 14167  14E1  2CE3               	goto	u5691
 14168  14E2  2CE4               	goto	u5690
 14169  14E3                     u5691:
 14170  14E3  2CDF               	goto	l1503
 14171  14E4                     u5690:
 14172  14E4                     l6848:
 14173                           
 14174                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 80:   NVMDATL = *p
      +                          tr++;
 14175  14E4  0141               	movlb	1	; select bank1
 14176  14E5  086B               	movf	___memcpyee@ptr^(0+128),w
 14177  14E6  0086               	movwf	6
 14178  14E7  0187               	clrf	7
 14179  14E8  0801               	movf	1,w
 14180  14E9  0150               	movlb	16	; select bank16
 14181  14EA  009C               	movwf	28	;volatile
 14182  14EB                     l6850:
 14183  14EB  3001               	movlw	1
 14184  14EC  0141               	movlb	1	; select bank1
 14185  14ED  00EA               	movwf	??___memcpyee^(0+128)
 14186  14EE  086A               	movf	??___memcpyee^(0+128),w
 14187  14EF  07EB               	addwf	___memcpyee@ptr^(0+128),f
 14188  14F0                     l6852:
 14189                           
 14190                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 81:   NVMADRL++;
 14191  14F0  3001               	movlw	1
 14192  14F1  00EA               	movwf	??___memcpyee^(0+128)
 14193  14F2  086A               	movf	??___memcpyee^(0+128),w
 14194  14F3  0150               	movlb	16	; select bank16
 14195  14F4  079A               	addwf	26,f	;volatile
 14196  14F5                     l6854:
 14197                           
 14198                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 82:   STATUSbits.C
      +                          ARRY = 0;
 14199  14F5  0140               	movlb	0	; select bank0
 14200  14F6  1003               	bcf	3,0	;volatile
 14201  14F7                     l6856:
 14202                           
 14203                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 83:   if (INTCONbi
      +                          ts.GIE) {
 14204  14F7  1F8B               	btfss	11,7	;volatile
 14205  14F8  2CFA               	goto	u5701
 14206  14F9  2CFB               	goto	u5700
 14207  14FA                     u5701:
 14208  14FA  2CFC               	goto	l1506
 14209  14FB                     u5700:
 14210  14FB                     l6858:
 14211                           
 14212                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 84:    STATUSbits.
      +                          CARRY = 1;
 14213  14FB  1403               	bsf	3,0	;volatile
 14214  14FC                     l1506:	
 14215                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 85:   }
 14216                           
 14217                           
 14218                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 86:   NVMCON1bits.
      +                          WREN = 1;
 14219  14FC  0150               	movlb	16	; select bank16
 14220  14FD  151E               	bsf	30,2	;volsfr
 14221  14FE                     l6860:
 14222                           
 14223                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 87:   NVMCON2 = 0x
      +                          55;
 14224  14FE  3055               	movlw	85
 14225  14FF  009F               	movwf	31	;volsfr
 14226                           
 14227                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 88:   NVMCON2 = 0x
      +                          AA;
 14228  1500  30AA               	movlw	170
 14229  1501  009F               	movwf	31	;volsfr
 14230  1502                     l6862:
 14231                           
 14232                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 89:   NVMCON1bits.
      +                          WR = 1;
 14233  1502  149E               	bsf	30,1	;volsfr
 14234  1503                     l1507:	
 14235                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 92:   }
 14236                           
 14237                           
 14238                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 90:   while (NVMCO
      +                          N1bits.WR) {
 14239  1503  189E               	btfsc	30,1	;volsfr
 14240  1504  2D06               	goto	u5711
 14241  1505  2D07               	goto	u5710
 14242  1506                     u5711:
 14243  1506  2D03               	goto	l1507
 14244  1507                     u5710:
 14245  1507                     l1509:
 14246                           
 14247                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 93:   NVMCON1bits.
      +                          WREN = 0;
 14248  1507  111E               	bcf	30,2	;volsfr
 14249                           
 14250                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 94:   if (STATUSbi
      +                          ts.CARRY) {
 14251  1508  0140               	movlb	0	; select bank0
 14252  1509  1C03               	btfss	3,0	;volatile
 14253  150A  2D0C               	goto	u5721
 14254  150B  2D0D               	goto	u5720
 14255  150C                     u5721:
 14256  150C  2D0E               	goto	l6866
 14257  150D                     u5720:
 14258  150D                     l6864:
 14259                           
 14260                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 95:    INTCONbits.
      +                          GIE = 1;
 14261  150D  178B               	bsf	11,7	;volatile
 14262  150E                     l6866:
 14263                           
 14264                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 76:  while (size--
      +                          ) {
 14265  150E  3001               	movlw	1
 14266  150F  0141               	movlb	1	; select bank1
 14267  1510  02E9               	subwf	___memcpyee@size^(0+128),f
 14268  1511  0A69               	incf	___memcpyee@size^(0+128),w
 14269  1512  1D03               	btfss	3,2
 14270  1513  2D15               	goto	u5731
 14271  1514  2D16               	goto	u5730
 14272  1515                     u5731:
 14273  1515  2CDF               	goto	l1503
 14274  1516                     u5730:
 14275  1516                     l1512:
 14276  1516  0008               	return
 14277  1517                     __end_of___memcpyee:
 14278                           
 14279                           	psect	text40
 14280  156B                     __ptext40:	
 14281 ;; *************** function ___awmod *****************
 14282 ;; Defined at:
 14283 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
 14284 ;; Parameters:    Size  Location     Type
 14285 ;;  divisor         2    0[BANK1 ] int 
 14286 ;;  dividend        2    2[BANK1 ] int 
 14287 ;; Auto vars:     Size  Location     Type
 14288 ;;  sign            1    6[BANK1 ] unsigned char 
 14289 ;;  counter         1    5[BANK1 ] unsigned char 
 14290 ;; Return value:  Size  Location     Type
 14291 ;;                  2    0[BANK1 ] int 
 14292 ;; Registers used:
 14293 ;;		wreg, status,2, status,0
 14294 ;; Tracked objects:
 14295 ;;		On entry : 0/0
 14296 ;;		On exit  : 0/0
 14297 ;;		Unchanged: 0/0
 14298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14299 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14300 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14301 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14302 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14303 ;;Total ram usage:        7 bytes
 14304 ;; Hardware stack levels used:    1
 14305 ;; Hardware stack levels required when called:    8
 14306 ;; This function calls:
 14307 ;;		Nothing
 14308 ;; This function is called by:
 14309 ;;		_bumpUISpeedMode
 14310 ;; This function uses a non-reentrant model
 14311 ;;
 14312                           
 14313                           
 14314                           ;psect for function ___awmod
 14315  156B                     ___awmod:
 14316  156B                     l7096:	
 14317                           ;incstack = 0
 14318                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 14319                           
 14320  156B  0141               	movlb	1	; select bank1
 14321  156C  01EE               	clrf	___awmod@sign^(0+128)
 14322  156D                     l7098:
 14323  156D  1FEB               	btfss	(___awmod@dividend+1)^(0+128),7
 14324  156E  2D70               	goto	u5921
 14325  156F  2D71               	goto	u5920
 14326  1570                     u5921:
 14327  1570  2D78               	goto	l7104
 14328  1571                     u5920:
 14329  1571                     l7100:
 14330  1571  09EA               	comf	___awmod@dividend^(0+128),f
 14331  1572  09EB               	comf	(___awmod@dividend+1)^(0+128),f
 14332  1573  0AEA               	incf	___awmod@dividend^(0+128),f
 14333  1574  1903               	skipnz
 14334  1575  0AEB               	incf	(___awmod@dividend+1)^(0+128),f
 14335  1576                     l7102:
 14336  1576  01EE               	clrf	___awmod@sign^(0+128)
 14337  1577  0AEE               	incf	___awmod@sign^(0+128),f
 14338  1578                     l7104:
 14339  1578  1FE9               	btfss	(___awmod@divisor+1)^(0+128),7
 14340  1579  2D7B               	goto	u5931
 14341  157A  2D7C               	goto	u5930
 14342  157B                     u5931:
 14343  157B  2D81               	goto	l7108
 14344  157C                     u5930:
 14345  157C                     l7106:
 14346  157C  09E8               	comf	___awmod@divisor^(0+128),f
 14347  157D  09E9               	comf	(___awmod@divisor+1)^(0+128),f
 14348  157E  0AE8               	incf	___awmod@divisor^(0+128),f
 14349  157F  1903               	skipnz
 14350  1580  0AE9               	incf	(___awmod@divisor+1)^(0+128),f
 14351  1581                     l7108:
 14352  1581  0868               	movf	___awmod@divisor^(0+128),w
 14353  1582  0469               	iorwf	(___awmod@divisor+1)^(0+128),w
 14354  1583  1903               	btfsc	3,2
 14355  1584  2D86               	goto	u5941
 14356  1585  2D87               	goto	u5940
 14357  1586                     u5941:
 14358  1586  2DB0               	goto	l7126
 14359  1587                     u5940:
 14360  1587                     l7110:
 14361  1587  01ED               	clrf	___awmod@counter^(0+128)
 14362  1588  0AED               	incf	___awmod@counter^(0+128),f
 14363  1589  2D93               	goto	l7116
 14364  158A                     l7112:
 14365  158A  3001               	movlw	1
 14366  158B                     u5955:
 14367  158B  35E8               	lslf	___awmod@divisor^(0+128),f
 14368  158C  0DE9               	rlf	(___awmod@divisor+1)^(0+128),f
 14369  158D  0B89               	decfsz	9,f
 14370  158E  2D8B               	goto	u5955
 14371  158F                     l7114:
 14372  158F  3001               	movlw	1
 14373  1590  00EC               	movwf	??___awmod^(0+128)
 14374  1591  086C               	movf	??___awmod^(0+128),w
 14375  1592  07ED               	addwf	___awmod@counter^(0+128),f
 14376  1593                     l7116:
 14377  1593  1FE9               	btfss	(___awmod@divisor+1)^(0+128),7
 14378  1594  2D96               	goto	u5961
 14379  1595  2D97               	goto	u5960
 14380  1596                     u5961:
 14381  1596  2D8A               	goto	l7112
 14382  1597                     u5960:
 14383  1597                     l7118:
 14384  1597  0869               	movf	(___awmod@divisor+1)^(0+128),w
 14385  1598  026B               	subwf	(___awmod@dividend+1)^(0+128),w
 14386  1599  1D03               	skipz
 14387  159A  2D9D               	goto	u5975
 14388  159B  0868               	movf	___awmod@divisor^(0+128),w
 14389  159C  026A               	subwf	___awmod@dividend^(0+128),w
 14390  159D                     u5975:
 14391  159D  1C03               	skipc
 14392  159E  2DA0               	goto	u5971
 14393  159F  2DA1               	goto	u5970
 14394  15A0                     u5971:
 14395  15A0  2DA5               	goto	l7122
 14396  15A1                     u5970:
 14397  15A1                     l7120:
 14398  15A1  0868               	movf	___awmod@divisor^(0+128),w
 14399  15A2  02EA               	subwf	___awmod@dividend^(0+128),f
 14400  15A3  0869               	movf	(___awmod@divisor+1)^(0+128),w
 14401  15A4  3BEB               	subwfb	(___awmod@dividend+1)^(0+128),f
 14402  15A5                     l7122:
 14403  15A5  3001               	movlw	1
 14404  15A6                     u5985:
 14405  15A6  36E9               	lsrf	(___awmod@divisor+1)^(0+128),f
 14406  15A7  0CE8               	rrf	___awmod@divisor^(0+128),f
 14407  15A8  0B89               	decfsz	9,f
 14408  15A9  2DA6               	goto	u5985
 14409  15AA                     l7124:
 14410  15AA  3001               	movlw	1
 14411  15AB  02ED               	subwf	___awmod@counter^(0+128),f
 14412  15AC  1D03               	btfss	3,2
 14413  15AD  2DAF               	goto	u5991
 14414  15AE  2DB0               	goto	u5990
 14415  15AF                     u5991:
 14416  15AF  2D97               	goto	l7118
 14417  15B0                     u5990:
 14418  15B0                     l7126:
 14419  15B0  086E               	movf	___awmod@sign^(0+128),w
 14420  15B1  1903               	btfsc	3,2
 14421  15B2  2DB4               	goto	u6001
 14422  15B3  2DB5               	goto	u6000
 14423  15B4                     u6001:
 14424  15B4  2DBA               	goto	l7130
 14425  15B5                     u6000:
 14426  15B5                     l7128:
 14427  15B5  09EA               	comf	___awmod@dividend^(0+128),f
 14428  15B6  09EB               	comf	(___awmod@dividend+1)^(0+128),f
 14429  15B7  0AEA               	incf	___awmod@dividend^(0+128),f
 14430  15B8  1903               	skipnz
 14431  15B9  0AEB               	incf	(___awmod@dividend+1)^(0+128),f
 14432  15BA                     l7130:
 14433  15BA  086B               	movf	(___awmod@dividend+1)^(0+128),w
 14434  15BB  00E9               	movwf	(?___awmod+1)^(0+128)
 14435  15BC  086A               	movf	___awmod@dividend^(0+128),w
 14436  15BD  00E8               	movwf	?___awmod^(0+128)
 14437  15BE                     l1788:
 14438  15BE  0008               	return
 14439  15BF                     __end_of___awmod:
 14440                           
 14441                           	psect	text41
 14442  1E0D                     __ptext41:	
 14443 ;; *************** function _BTTimeWaiting *****************
 14444 ;; Defined at:
 14445 ;;		line 67 in file "timers.c"
 14446 ;; Parameters:    Size  Location     Type
 14447 ;;		None
 14448 ;; Auto vars:     Size  Location     Type
 14449 ;;		None
 14450 ;; Return value:  Size  Location     Type
 14451 ;;                  4    0[BANK1 ] long 
 14452 ;; Registers used:
 14453 ;;		wreg
 14454 ;; Tracked objects:
 14455 ;;		On entry : 0/0
 14456 ;;		On exit  : 0/0
 14457 ;;		Unchanged: 0/0
 14458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14459 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14461 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14462 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14463 ;;Total ram usage:        8 bytes
 14464 ;; Hardware stack levels used:    1
 14465 ;; Hardware stack levels required when called:    8
 14466 ;; This function calls:
 14467 ;;		Nothing
 14468 ;; This function is called by:
 14469 ;;		_runUI
 14470 ;; This function uses a non-reentrant model
 14471 ;;
 14472                           
 14473                           
 14474                           ;psect for function _BTTimeWaiting
 14475  1E0D                     _BTTimeWaiting:
 14476  1E0D                     l7414:	
 14477                           ;incstack = 0
 14478                           ; Regs used in _BTTimeWaiting: [wreg]
 14479                           
 14480                           
 14481                           ;timers.c: 68:     return (systemTime - lastBTTime);
 14482  1E0D  0141               	movlb	1	; select bank1
 14483  1E0E  0828               	movf	_lastBTTime^(0+128),w
 14484  1E0F  0140               	movlb	0	; select bank0
 14485  1E10  023B               	subwf	_systemTime,w
 14486  1E11  0141               	movlb	1	; select bank1
 14487  1E12  00EC               	movwf	??_BTTimeWaiting^(0+128)
 14488  1E13  0829               	movf	(_lastBTTime+1)^(0+128),w
 14489  1E14  0140               	movlb	0	; select bank0
 14490  1E15  3B3C               	subwfb	_systemTime+1,w
 14491  1E16  0141               	movlb	1	; select bank1
 14492  1E17  00ED               	movwf	(??_BTTimeWaiting^(0+128)+1)
 14493  1E18  082A               	movf	(_lastBTTime+2)^(0+128),w
 14494  1E19  0140               	movlb	0	; select bank0
 14495  1E1A  3B3D               	subwfb	_systemTime+2,w
 14496  1E1B  0141               	movlb	1	; select bank1
 14497  1E1C  00EE               	movwf	(??_BTTimeWaiting^(0+128)+2)
 14498  1E1D  082B               	movf	(_lastBTTime+3)^(0+128),w
 14499  1E1E  0140               	movlb	0	; select bank0
 14500  1E1F  3B3E               	subwfb	_systemTime+3,w
 14501  1E20  0141               	movlb	1	; select bank1
 14502  1E21  00EF               	movwf	(??_BTTimeWaiting^(0+128)+3)
 14503  1E22  086F               	movf	(??_BTTimeWaiting+3)^(0+128),w
 14504  1E23  00EB               	movwf	(?_BTTimeWaiting+3)^(0+128)
 14505  1E24  086E               	movf	(??_BTTimeWaiting+2)^(0+128),w
 14506  1E25  00EA               	movwf	(?_BTTimeWaiting+2)^(0+128)
 14507  1E26  086D               	movf	(??_BTTimeWaiting+1)^(0+128),w
 14508  1E27  00E9               	movwf	(?_BTTimeWaiting+1)^(0+128)
 14509  1E28  086C               	movf	??_BTTimeWaiting^(0+128),w
 14510  1E29  00E8               	movwf	?_BTTimeWaiting^(0+128)
 14511  1E2A                     l1132:
 14512  1E2A  0008               	return
 14513  1E2B                     __end_of_BTTimeWaiting:
 14514                           
 14515                           	psect	text42
 14516  179C                     __ptext42:	
 14517 ;; *************** function _BTTimeRemaining *****************
 14518 ;; Defined at:
 14519 ;;		line 57 in file "timers.c"
 14520 ;; Parameters:    Size  Location     Type
 14521 ;;		None
 14522 ;; Auto vars:     Size  Location     Type
 14523 ;;  elapsed         4    0[BANK2 ] long 
 14524 ;; Return value:  Size  Location     Type
 14525 ;;                  4    0[BANK1 ] long 
 14526 ;; Registers used:
 14527 ;;		wreg
 14528 ;; Tracked objects:
 14529 ;;		On entry : 0/0
 14530 ;;		On exit  : 0/0
 14531 ;;		Unchanged: 0/0
 14532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14533 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14534 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14535 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14536 ;;      Totals:         0       0       8       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14537 ;;Total ram usage:       12 bytes
 14538 ;; Hardware stack levels used:    1
 14539 ;; Hardware stack levels required when called:    8
 14540 ;; This function calls:
 14541 ;;		Nothing
 14542 ;; This function is called by:
 14543 ;;		_main
 14544 ;;		_runUI
 14545 ;; This function uses a non-reentrant model
 14546 ;;
 14547                           
 14548                           
 14549                           ;psect for function _BTTimeRemaining
 14550  179C                     _BTTimeRemaining:
 14551  179C                     l7320:	
 14552                           ;incstack = 0
 14553                           ; Regs used in _BTTimeRemaining: [wreg]
 14554                           
 14555                           
 14556                           ;timers.c: 58:     int32_t elapsed = (systemTime - lastBTTime);
 14557  179C  0141               	movlb	1	; select bank1
 14558  179D  0828               	movf	_lastBTTime^(0+128),w
 14559  179E  0140               	movlb	0	; select bank0
 14560  179F  023B               	subwf	_systemTime,w
 14561  17A0  0141               	movlb	1	; select bank1
 14562  17A1  00EC               	movwf	??_BTTimeRemaining^(0+128)
 14563  17A2  0829               	movf	(_lastBTTime+1)^(0+128),w
 14564  17A3  0140               	movlb	0	; select bank0
 14565  17A4  3B3C               	subwfb	_systemTime+1,w
 14566  17A5  0141               	movlb	1	; select bank1
 14567  17A6  00ED               	movwf	(??_BTTimeRemaining^(0+128)+1)
 14568  17A7  082A               	movf	(_lastBTTime+2)^(0+128),w
 14569  17A8  0140               	movlb	0	; select bank0
 14570  17A9  3B3D               	subwfb	_systemTime+2,w
 14571  17AA  0141               	movlb	1	; select bank1
 14572  17AB  00EE               	movwf	(??_BTTimeRemaining^(0+128)+2)
 14573  17AC  082B               	movf	(_lastBTTime+3)^(0+128),w
 14574  17AD  0140               	movlb	0	; select bank0
 14575  17AE  3B3E               	subwfb	_systemTime+3,w
 14576  17AF  0141               	movlb	1	; select bank1
 14577  17B0  00EF               	movwf	(??_BTTimeRemaining^(0+128)+3)
 14578  17B1  086F               	movf	(??_BTTimeRemaining+3)^(0+128),w
 14579  17B2  0142               	movlb	2	; select bank2
 14580  17B3  00EF               	movwf	(BTTimeRemaining@elapsed+3)^(0+256)
 14581  17B4  0141               	movlb	1	; select bank1
 14582  17B5  086E               	movf	(??_BTTimeRemaining+2)^(0+128),w
 14583  17B6  0142               	movlb	2	; select bank2
 14584  17B7  00EE               	movwf	(BTTimeRemaining@elapsed+2)^(0+256)
 14585  17B8  0141               	movlb	1	; select bank1
 14586  17B9  086D               	movf	(??_BTTimeRemaining+1)^(0+128),w
 14587  17BA  0142               	movlb	2	; select bank2
 14588  17BB  00ED               	movwf	(BTTimeRemaining@elapsed+1)^(0+256)
 14589  17BC  0141               	movlb	1	; select bank1
 14590  17BD  086C               	movf	??_BTTimeRemaining^(0+128),w
 14591  17BE  0142               	movlb	2	; select bank2
 14592  17BF  00EC               	movwf	BTTimeRemaining@elapsed^(0+256)
 14593                           
 14594                           ;timers.c: 60:     if (elapsed >= BTTimeout){
 14595  17C0  0141               	movlb	1	; select bank1
 14596  17C1  0827               	movf	(_BTTimeout+3)^(0+128),w
 14597  17C2  0142               	movlb	2	; select bank2
 14598  17C3  026F               	subwf	(BTTimeRemaining@elapsed+3)^(0+256),w
 14599  17C4  1D03               	skipz
 14600  17C5  2FD6               	goto	u6035
 14601  17C6  0141               	movlb	1	; select bank1
 14602  17C7  0826               	movf	(_BTTimeout+2)^(0+128),w
 14603  17C8  0142               	movlb	2	; select bank2
 14604  17C9  026E               	subwf	(BTTimeRemaining@elapsed+2)^(0+256),w
 14605  17CA  1D03               	skipz
 14606  17CB  2FD6               	goto	u6035
 14607  17CC  0141               	movlb	1	; select bank1
 14608  17CD  0825               	movf	(_BTTimeout+1)^(0+128),w
 14609  17CE  0142               	movlb	2	; select bank2
 14610  17CF  026D               	subwf	(BTTimeRemaining@elapsed+1)^(0+256),w
 14611  17D0  1D03               	skipz
 14612  17D1  2FD6               	goto	u6035
 14613  17D2  0141               	movlb	1	; select bank1
 14614  17D3  0824               	movf	_BTTimeout^(0+128),w
 14615  17D4  0142               	movlb	2	; select bank2
 14616  17D5  026C               	subwf	BTTimeRemaining@elapsed^(0+256),w
 14617  17D6                     u6035:
 14618  17D6  1C03               	skipc
 14619  17D7  2FD9               	goto	u6031
 14620  17D8  2FDA               	goto	u6030
 14621  17D9                     u6031:
 14622  17D9  2FE4               	goto	l7328
 14623  17DA                     u6030:
 14624  17DA                     l7322:
 14625                           
 14626                           ;timers.c: 61:         return 0;
 14627  17DA  3000               	movlw	0
 14628  17DB  0141               	movlb	1	; select bank1
 14629  17DC  00EB               	movwf	(?_BTTimeRemaining+3)^(0+128)
 14630  17DD  3000               	movlw	0
 14631  17DE  00EA               	movwf	(?_BTTimeRemaining+2)^(0+128)
 14632  17DF  3000               	movlw	0
 14633  17E0  00E9               	movwf	(?_BTTimeRemaining+1)^(0+128)
 14634  17E1  3000               	movlw	0
 14635  17E2  00E8               	movwf	?_BTTimeRemaining^(0+128)
 14636  17E3  2FFF               	goto	l1128
 14637  17E4                     l7328:
 14638                           
 14639                           ;timers.c: 63:         return (BTTimeout - elapsed);
 14640  17E4  086C               	movf	BTTimeRemaining@elapsed^(0+256),w
 14641  17E5  0141               	movlb	1	; select bank1
 14642  17E6  0224               	subwf	_BTTimeout^(0+128),w
 14643  17E7  00EC               	movwf	??_BTTimeRemaining^(0+128)
 14644  17E8  0142               	movlb	2	; select bank2
 14645  17E9  086D               	movf	(BTTimeRemaining@elapsed+1)^(0+256),w
 14646  17EA  0141               	movlb	1	; select bank1
 14647  17EB  3B25               	subwfb	(_BTTimeout+1)^(0+128),w
 14648  17EC  00ED               	movwf	(??_BTTimeRemaining^(0+128)+1)
 14649  17ED  0142               	movlb	2	; select bank2
 14650  17EE  086E               	movf	(BTTimeRemaining@elapsed+2)^(0+256),w
 14651  17EF  0141               	movlb	1	; select bank1
 14652  17F0  3B26               	subwfb	(_BTTimeout+2)^(0+128),w
 14653  17F1  00EE               	movwf	(??_BTTimeRemaining^(0+128)+2)
 14654  17F2  0142               	movlb	2	; select bank2
 14655  17F3  086F               	movf	(BTTimeRemaining@elapsed+3)^(0+256),w
 14656  17F4  0141               	movlb	1	; select bank1
 14657  17F5  3B27               	subwfb	(_BTTimeout+3)^(0+128),w
 14658  17F6  00EF               	movwf	(??_BTTimeRemaining^(0+128)+3)
 14659  17F7  086F               	movf	(??_BTTimeRemaining+3)^(0+128),w
 14660  17F8  00EB               	movwf	(?_BTTimeRemaining+3)^(0+128)
 14661  17F9  086E               	movf	(??_BTTimeRemaining+2)^(0+128),w
 14662  17FA  00EA               	movwf	(?_BTTimeRemaining+2)^(0+128)
 14663  17FB  086D               	movf	(??_BTTimeRemaining+1)^(0+128),w
 14664  17FC  00E9               	movwf	(?_BTTimeRemaining+1)^(0+128)
 14665  17FD  086C               	movf	??_BTTimeRemaining^(0+128),w
 14666  17FE  00E8               	movwf	?_BTTimeRemaining^(0+128)
 14667  17FF                     l1128:
 14668  17FF  0008               	return
 14669  1800                     __end_of_BTTimeRemaining:
 14670                           
 14671                           	psect	text43
 14672  19EA                     __ptext43:	
 14673 ;; *************** function _powerIsOn *****************
 14674 ;; Defined at:
 14675 ;;		line 72 in file "configure.c"
 14676 ;; Parameters:    Size  Location     Type
 14677 ;;		None
 14678 ;; Auto vars:     Size  Location     Type
 14679 ;;		None
 14680 ;; Return value:  Size  Location     Type
 14681 ;;                  1    wreg      _Bool 
 14682 ;; Registers used:
 14683 ;;		wreg
 14684 ;; Tracked objects:
 14685 ;;		On entry : 0/0
 14686 ;;		On exit  : 0/0
 14687 ;;		Unchanged: 0/0
 14688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14693 ;;Total ram usage:        0 bytes
 14694 ;; Hardware stack levels used:    1
 14695 ;; Hardware stack levels required when called:    8
 14696 ;; This function calls:
 14697 ;;		Nothing
 14698 ;; This function is called by:
 14699 ;;		_main
 14700 ;; This function uses a non-reentrant model
 14701 ;;
 14702                           
 14703                           
 14704                           ;psect for function _powerIsOn
 14705  19EA                     _powerIsOn:
 14706  19EA                     l7758:	
 14707                           ;incstack = 0
 14708                           ; Regs used in _powerIsOn: [wreg]
 14709                           
 14710                           
 14711                           ;configure.c: 73:     return powerOn;
 14712  19EA  0140               	movlb	0	; select bank0
 14713  19EB  084A               	movf	_powerOn,w
 14714  19EC                     l1221:
 14715  19EC  0008               	return
 14716  19ED                     __end_of_powerIsOn:
 14717                           
 14718                           	psect	text44
 14719  13FC                     __ptext44:	
 14720 ;; *************** function _initUI *****************
 14721 ;; Defined at:
 14722 ;;		line 45 in file "ui.c"
 14723 ;; Parameters:    Size  Location     Type
 14724 ;;		None
 14725 ;; Auto vars:     Size  Location     Type
 14726 ;;		None
 14727 ;; Return value:  Size  Location     Type
 14728 ;;                  1    wreg      void 
 14729 ;; Registers used:
 14730 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14731 ;; Tracked objects:
 14732 ;;		On entry : 0/0
 14733 ;;		On exit  : 0/0
 14734 ;;		Unchanged: 0/0
 14735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14738 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14739 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14740 ;;Total ram usage:        1 bytes
 14741 ;; Hardware stack levels used:    1
 14742 ;; Hardware stack levels required when called:   10
 14743 ;; This function calls:
 14744 ;;		_IOCCF0_SetInterruptHandler
 14745 ;;		_IOCCF2_SetInterruptHandler
 14746 ;;		_TMR3_SetInterruptHandler
 14747 ;;		___eetoc
 14748 ;;		_getTicks
 14749 ;; This function is called by:
 14750 ;;		_main
 14751 ;; This function uses a non-reentrant model
 14752 ;;
 14753                           
 14754                           
 14755                           ;psect for function _initUI
 14756  13FC                     _initUI:
 14757  13FC                     l7542:	
 14758                           ;incstack = 0
 14759                           ; Regs used in _initUI: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14760                           
 14761                           
 14762                           ;ui.c: 46:     R_LED = 0 ;
 14763  13FC  0140               	movlb	0	; select bank0
 14764  13FD  01C7               	clrf	_R_LED
 14765                           
 14766                           ;ui.c: 47:     G_LED = 0 ;
 14767  13FE  01C6               	clrf	_G_LED
 14768                           
 14769                           ;ui.c: 48:     B_LED = 0 ;
 14770  13FF  01C5               	clrf	_B_LED
 14771                           
 14772                           ;ui.c: 49:     dutyCycle = 0;
 14773  1400  01C4               	clrf	_dutyCycle
 14774                           
 14775                           ;ui.c: 50:     uiState = 0;
 14776  1401  01C3               	clrf	_uiState
 14777  1402                     l7544:
 14778                           
 14779                           ;ui.c: 51:     uiStateTime = getTicks();
 14780  1402  319B  23E8  3193   	fcall	_getTicks
 14781  1405  0141               	movlb	1	; select bank1
 14782  1406  086B               	movf	(?_getTicks+3)^(0+128),w
 14783  1407  00A3               	movwf	(_uiStateTime+3)^(0+128)
 14784  1408  086A               	movf	(?_getTicks+2)^(0+128),w
 14785  1409  00A2               	movwf	(_uiStateTime+2)^(0+128)
 14786  140A  0869               	movf	(?_getTicks+1)^(0+128),w
 14787  140B  00A1               	movwf	(_uiStateTime+1)^(0+128)
 14788  140C  0868               	movf	?_getTicks^(0+128),w
 14789  140D  00A0               	movwf	_uiStateTime^(0+128)
 14790  140E                     l7546:
 14791                           
 14792                           ;ui.c: 52:     timeoutSequence = 0;
 14793  140E  01C6               	clrf	_timeoutSequence^(0+128)
 14794  140F                     l7548:
 14795  140F  0140               	movlb	0	; select bank0
 14796  1410  1719               	bsf	25,6	;volatile
 14797  1411                     l7550:
 14798  1411  1699               	bsf	25,5	;volatile
 14799  1412                     l7552:
 14800  1412  1619               	bsf	25,4	;volatile
 14801  1413                     l7554:
 14802                           
 14803                           ;ui.c: 58:     uiSpeedMode = EEPROM_uiSpeedMode;
 14804  1413  3001               	movlw	(low _EEPROM_uiSpeedMode)& (0+255)
 14805  1414  319B  2385  3193   	fcall	___eetoc
 14806  1417  0142               	movlb	2	; select bank2
 14807  1418  00EC               	movwf	??_initUI^(0+256)
 14808  1419  086C               	movf	??_initUI^(0+256),w
 14809  141A  0140               	movlb	0	; select bank0
 14810  141B  00C9               	movwf	_uiSpeedMode
 14811  141C                     l7556:
 14812                           
 14813                           ;ui.c: 59:     uiType = EEPROM_uiBrakeMode;
 14814  141C  3000               	movlw	(low _EEPROM_uiBrakeMode)& (0+255)
 14815  141D  319B  2385  3193   	fcall	___eetoc
 14816  1420  0142               	movlb	2	; select bank2
 14817  1421  00EC               	movwf	??_initUI^(0+256)
 14818  1422  086C               	movf	??_initUI^(0+256),w
 14819  1423  0140               	movlb	0	; select bank0
 14820  1424  00C8               	movwf	_uiType
 14821  1425                     l7558:
 14822                           
 14823                           ;ui.c: 61:     TMR3_SetInterruptHandler(UI_PWM_handler);
 14824  1425  303F               	movlw	low _UI_PWM_handler
 14825  1426  0141               	movlb	1	; select bank1
 14826  1427  00E8               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
 14827  1428  3013               	movlw	high _UI_PWM_handler
 14828  1429  00E9               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
 14829  142A  319A  221F  3193   	fcall	_TMR3_SetInterruptHandler
 14830  142D                     l7560:
 14831                           
 14832                           ;ui.c: 62:     IOCCF0_SetInterruptHandler(turnPowerOn);
 14833  142D  3094               	movlw	low _turnPowerOn
 14834  142E  0141               	movlb	1	; select bank1
 14835  142F  00E8               	movwf	IOCCF0_SetInterruptHandler@InterruptHandler^(0+128)
 14836  1430  301B               	movlw	high _turnPowerOn
 14837  1431  00E9               	movwf	(IOCCF0_SetInterruptHandler@InterruptHandler^(0+128)+1)
 14838  1432  319A  2207  3193   	fcall	_IOCCF0_SetInterruptHandler
 14839  1435                     l7562:
 14840                           
 14841                           ;ui.c: 63:     IOCCF2_SetInterruptHandler(turnPowerOn);
 14842  1435  3094               	movlw	low _turnPowerOn
 14843  1436  0141               	movlb	1	; select bank1
 14844  1437  00E8               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler^(0+128)
 14845  1438  301B               	movlw	high _turnPowerOn
 14846  1439  00E9               	movwf	(IOCCF2_SetInterruptHandler@InterruptHandler^(0+128)+1)
 14847  143A  319A  220D  3193   	fcall	_IOCCF2_SetInterruptHandler
 14848  143D                     l1360:
 14849  143D  0008               	return
 14850  143E                     __end_of_initUI:
 14851                           
 14852                           	psect	text45
 14853  1B85                     __ptext45:	
 14854 ;; *************** function ___eetoc *****************
 14855 ;; Defined at:
 14856 ;;		line 104 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c"
 14857 ;; Parameters:    Size  Location     Type
 14858 ;;  addr            1    wreg     PTR eeprom void 
 14859 ;;		 -> EEPROM_uiBrakeMode(1), EEPROM_uiSpeedMode(1), 
 14860 ;; Auto vars:     Size  Location     Type
 14861 ;;  addr            1    6[BANK1 ] PTR eeprom void 
 14862 ;;		 -> EEPROM_uiBrakeMode(1), EEPROM_uiSpeedMode(1), 
 14863 ;;  data            1    7[BANK1 ] unsigned char 
 14864 ;; Return value:  Size  Location     Type
 14865 ;;                  1    wreg      unsigned char 
 14866 ;; Registers used:
 14867 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14868 ;; Tracked objects:
 14869 ;;		On entry : 0/0
 14870 ;;		On exit  : 0/0
 14871 ;;		Unchanged: 0/0
 14872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14874 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14875 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14876 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14877 ;;Total ram usage:        3 bytes
 14878 ;; Hardware stack levels used:    1
 14879 ;; Hardware stack levels required when called:    9
 14880 ;; This function calls:
 14881 ;;		___eecpymem
 14882 ;; This function is called by:
 14883 ;;		_initUI
 14884 ;; This function uses a non-reentrant model
 14885 ;;
 14886                           
 14887                           
 14888                           ;psect for function ___eetoc
 14889  1B85                     ___eetoc:
 14890                           
 14891                           ;incstack = 0
 14892                           ; Regs used in ___eetoc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14893                           ;___eetoc@addr stored from wreg
 14894  1B85  0141               	movlb	1	; select bank1
 14895  1B86  00EE               	movwf	___eetoc@addr^(0+128)
 14896  1B87                     l7492:
 14897                           
 14898                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 104: __eetoc(__eep
      +                          rom void *addr);D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 105
      +                          : {;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 106:  unsigned 
      +                          char data;;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 107:  __
      +                          eecpymem((unsigned char *) &data,addr,1);
 14899  1B87  086E               	movf	___eetoc@addr^(0+128),w
 14900  1B88  00ED               	movwf	??___eetoc^(0+128)
 14901  1B89  086D               	movf	??___eetoc^(0+128),w
 14902  1B8A  00E8               	movwf	___eecpymem@from^(0+128)
 14903  1B8B  01E9               	clrf	___eecpymem@size^(0+128)
 14904  1B8C  0AE9               	incf	___eecpymem@size^(0+128),f
 14905  1B8D  30EF               	movlw	(low (___eetoc@data| 0))& (0+255)
 14906  1B8E  3191  2178  319B   	fcall	___eecpymem
 14907  1B91                     l7494:
 14908                           
 14909                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 108:  return data;
 14910  1B91  0141               	movlb	1	; select bank1
 14911  1B92  086F               	movf	___eetoc@data^(0+128),w
 14912  1B93                     l1515:
 14913  1B93  0008               	return
 14914  1B94                     __end_of___eetoc:
 14915                           
 14916                           	psect	text46
 14917  1178                     __ptext46:	
 14918 ;; *************** function ___eecpymem *****************
 14919 ;; Defined at:
 14920 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c"
 14921 ;; Parameters:    Size  Location     Type
 14922 ;;  to              1    wreg     PTR volatile unsigned ch
 14923 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
 14924 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
 14925 ;;  from            1    0[BANK1 ] PTR eeprom unsigned char
 14926 ;;		 -> EEPROM_uiBrakeMode(1), EEPROM_uiSpeedMode(1), 
 14927 ;;  size            1    1[BANK1 ] unsigned char 
 14928 ;; Auto vars:     Size  Location     Type
 14929 ;;  to              1    4[BANK1 ] PTR volatile unsigned ch
 14930 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
 14931 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
 14932 ;;  cp              1    3[BANK1 ] PTR volatile unsigned ch
 14933 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
 14934 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
 14935 ;; Return value:  Size  Location     Type
 14936 ;;                  1    wreg      void 
 14937 ;; Registers used:
 14938 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14939 ;; Tracked objects:
 14940 ;;		On entry : 0/0
 14941 ;;		On exit  : 0/0
 14942 ;;		Unchanged: 0/0
 14943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14944 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14945 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14946 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14947 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14948 ;;Total ram usage:        5 bytes
 14949 ;; Hardware stack levels used:    1
 14950 ;; Hardware stack levels required when called:    8
 14951 ;; This function calls:
 14952 ;;		Nothing
 14953 ;; This function is called by:
 14954 ;;		___eetoc
 14955 ;; This function uses a non-reentrant model
 14956 ;;
 14957                           
 14958                           
 14959                           ;psect for function ___eecpymem
 14960  1178                     ___eecpymem:
 14961                           
 14962                           ;incstack = 0
 14963                           ; Regs used in ___eecpymem: [wreg+fsr1l+fsr1h+status,2+status,0]
 14964                           ;___eecpymem@to stored from wreg
 14965  1178  0141               	movlb	1	; select bank1
 14966  1179  00EC               	movwf	___eecpymem@to^(0+128)
 14967  117A                     l7080:
 14968                           
 14969                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 6: __eecpymem(vola
      +                          tile unsigned char *to, __eeprom unsigned char * from, unsigned char size);D:\Program Fi
      +                          les\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 6: };D:\Program Files\Microchip\
      +                          xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 6: ;D:\Program Files\Microchip\xc8\v2.20\pic\s
      +                          ources\c99\pic\__eeprom.c: 6: ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\
      +                          __eeprom.c: 6: };D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 7:
      +                           {
 14970  117A  086C               	movf	___eecpymem@to^(0+128),w
 14971  117B  00EA               	movwf	??___eecpymem^(0+128)
 14972  117C  086A               	movf	??___eecpymem^(0+128),w
 14973  117D  00EB               	movwf	___eecpymem@cp^(0+128)
 14974  117E                     l1489:	
 14975                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 24:  };D:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 24: __fltoee(__eeprom void *ad
      +                          dr, double data)
 14976                           
 14977                           
 14978                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 22:  while (NVMCON
      +                          1bits.WR) {;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 22: 
 14979  117E  0150               	movlb	16	; select bank16
 14980  117F  189E               	btfsc	30,1	;volsfr
 14981  1180  2982               	goto	u5901
 14982  1181  2983               	goto	u5900
 14983  1182                     u5901:
 14984  1182  297E               	goto	l1489
 14985  1183                     u5900:
 14986  1183                     l1491:
 14987                           
 14988                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 25:  NVMCON1bits.N
      +                          VMREGS = 1;;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 25: {
 14989  1183  171E               	bsf	30,6	;volsfr
 14990  1184                     l7082:
 14991                           
 14992                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 26:  NVMADRL = (un
      +                          signed char) from;;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 
      +                          26:  __memcpyee(addr,(unsigned char *) &data,4);
 14993  1184  0141               	movlb	1	; select bank1
 14994  1185  0868               	movf	___eecpymem@from^(0+128),w
 14995  1186  0150               	movlb	16	; select bank16
 14996  1187  009A               	movwf	26	;volatile
 14997                           
 14998                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 27:  NVMADRH = 0x7
      +                          0;;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 27:  return data
      +                          ;
 14999  1188  3070               	movlw	112
 15000  1189  009B               	movwf	27	;volatile
 15001                           
 15002                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 28:  while (size--
      +                          ) {;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 28: }
 15003  118A  299E               	goto	l7090
 15004  118B                     l1493:
 15005                           
 15006                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 29:   NVMCON1bits.
      +                          RD = 1;
 15007  118B  0150               	movlb	16	; select bank16
 15008  118C  141E               	bsf	30,0	;volsfr
 15009  118D                     l7084:
 15010                           
 15011                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 30:   *cp++ = NVMD
      +                          ATL;
 15012  118D  081C               	movf	28,w	;volatile
 15013  118E  0141               	movlb	1	; select bank1
 15014  118F  00EA               	movwf	??___eecpymem^(0+128)
 15015  1190  086B               	movf	___eecpymem@cp^(0+128),w
 15016  1191  0086               	movwf	6
 15017  1192  0187               	clrf	7
 15018  1193  086A               	movf	??___eecpymem^(0+128),w
 15019  1194  0081               	movwf	1
 15020  1195                     l7086:
 15021  1195  3001               	movlw	1
 15022  1196  00EA               	movwf	??___eecpymem^(0+128)
 15023  1197  086A               	movf	??___eecpymem^(0+128),w
 15024  1198  07EB               	addwf	___eecpymem@cp^(0+128),f
 15025  1199                     l7088:
 15026                           
 15027                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 31:   NVMADRL++;
 15028  1199  3001               	movlw	1
 15029  119A  00EA               	movwf	??___eecpymem^(0+128)
 15030  119B  086A               	movf	??___eecpymem^(0+128),w
 15031  119C  0150               	movlb	16	; select bank16
 15032  119D  079A               	addwf	26,f	;volatile
 15033  119E                     l7090:
 15034                           
 15035                           ;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 28:  while (size--
      +                          ) {;D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\pic\__eeprom.c: 28: }
 15036  119E  3001               	movlw	1
 15037  119F  0141               	movlb	1	; select bank1
 15038  11A0  02E9               	subwf	___eecpymem@size^(0+128),f
 15039  11A1  0A69               	incf	___eecpymem@size^(0+128),w
 15040  11A2  1D03               	btfss	3,2
 15041  11A3  29A5               	goto	u5911
 15042  11A4  29A6               	goto	u5910
 15043  11A5                     u5911:
 15044  11A5  298B               	goto	l1493
 15045  11A6                     u5910:
 15046  11A6                     l1495:
 15047  11A6  0008               	return
 15048  11A7                     __end_of___eecpymem:
 15049                           
 15050                           	psect	text47
 15051  1DB4                     __ptext47:	
 15052 ;; *************** function _initTimers *****************
 15053 ;; Defined at:
 15054 ;;		line 11 in file "timers.c"
 15055 ;; Parameters:    Size  Location     Type
 15056 ;;		None
 15057 ;; Auto vars:     Size  Location     Type
 15058 ;;		None
 15059 ;; Return value:  Size  Location     Type
 15060 ;;                  1    wreg      void 
 15061 ;; Registers used:
 15062 ;;		wreg, status,2, status,0, pclath, cstack
 15063 ;; Tracked objects:
 15064 ;;		On entry : 0/0
 15065 ;;		On exit  : 0/0
 15066 ;;		Unchanged: 0/0
 15067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15072 ;;Total ram usage:        0 bytes
 15073 ;; Hardware stack levels used:    1
 15074 ;; Hardware stack levels required when called:    9
 15075 ;; This function calls:
 15076 ;;		_TMR2_SetInterruptHandler
 15077 ;; This function is called by:
 15078 ;;		_main
 15079 ;; This function uses a non-reentrant model
 15080 ;;
 15081                           
 15082                           
 15083                           ;psect for function _initTimers
 15084  1DB4                     _initTimers:
 15085  1DB4                     l7522:	
 15086                           ;incstack = 0
 15087                           ; Regs used in _initTimers: [wreg+status,2+status,0+pclath+cstack]
 15088                           
 15089                           
 15090                           ;timers.c: 12:     systemTime = 0;
 15091  1DB4  3000               	movlw	0
 15092  1DB5  0140               	movlb	0	; select bank0
 15093  1DB6  00BE               	movwf	_systemTime+3
 15094  1DB7  3000               	movlw	0
 15095  1DB8  00BD               	movwf	_systemTime+2
 15096  1DB9  3000               	movlw	0
 15097  1DBA  00BC               	movwf	_systemTime+1
 15098  1DBB  3000               	movlw	0
 15099  1DBC  00BB               	movwf	_systemTime
 15100                           
 15101                           ;timers.c: 13:     lastBTTime = 0;
 15102  1DBD  3000               	movlw	0
 15103  1DBE  0141               	movlb	1	; select bank1
 15104  1DBF  00AB               	movwf	(_lastBTTime+3)^(0+128)
 15105  1DC0  3000               	movlw	0
 15106  1DC1  00AA               	movwf	(_lastBTTime+2)^(0+128)
 15107  1DC2  3000               	movlw	0
 15108  1DC3  00A9               	movwf	(_lastBTTime+1)^(0+128)
 15109  1DC4  3000               	movlw	0
 15110  1DC5  00A8               	movwf	_lastBTTime^(0+128)
 15111  1DC6                     l7524:
 15112                           
 15113                           ;timers.c: 14:     oneSecBlink = 0;
 15114  1DC6  0140               	movlb	0	; select bank0
 15115  1DC7  01CB               	clrf	_oneSecBlink
 15116  1DC8                     l7526:
 15117                           
 15118                           ;timers.c: 15:     TMR2_SetInterruptHandler(timeKeeper);
 15119  1DC8  3069               	movlw	low _timeKeeper
 15120  1DC9  0141               	movlb	1	; select bank1
 15121  1DCA  00E8               	movwf	TMR2_SetInterruptHandler@InterruptHandler^(0+128)
 15122  1DCB  301E               	movlw	high _timeKeeper
 15123  1DCC  00E9               	movwf	(TMR2_SetInterruptHandler@InterruptHandler^(0+128)+1)
 15124  1DCD  319A  2219  319D   	fcall	_TMR2_SetInterruptHandler
 15125  1DD0                     l1097:
 15126  1DD0  0008               	return
 15127  1DD1                     __end_of_initTimers:
 15128                           
 15129                           	psect	text48
 15130  1FD9                     __ptext48:	
 15131 ;; *************** function _initSerial *****************
 15132 ;; Defined at:
 15133 ;;		line 24 in file "serial.c"
 15134 ;; Parameters:    Size  Location     Type
 15135 ;;		None
 15136 ;; Auto vars:     Size  Location     Type
 15137 ;;		None
 15138 ;; Return value:  Size  Location     Type
 15139 ;;                  1    wreg      void 
 15140 ;; Registers used:
 15141 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15142 ;; Tracked objects:
 15143 ;;		On entry : 0/0
 15144 ;;		On exit  : 0/0
 15145 ;;		Unchanged: 0/0
 15146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15149 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15150 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15151 ;;Total ram usage:        1 bytes
 15152 ;; Hardware stack levels used:    1
 15153 ;; Hardware stack levels required when called:    9
 15154 ;; This function calls:
 15155 ;;		_memset
 15156 ;; This function is called by:
 15157 ;;		_main
 15158 ;; This function uses a non-reentrant model
 15159 ;;
 15160                           
 15161                           
 15162                           ;psect for function _initSerial
 15163  1FD9                     _initSerial:
 15164  1FD9                     l7528:	
 15165                           ;incstack = 0
 15166                           ; Regs used in _initSerial: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15167                           
 15168                           
 15169                           ;serial.c: 26:     memset(speedBuffer, 0, sizeof(speedBuffer));
 15170  1FD9  3000               	movlw	0
 15171  1FDA  0141               	movlb	1	; select bank1
 15172  1FDB  00E8               	movwf	memset@c^(0+128)
 15173  1FDC  00E9               	movwf	(memset@c+1)^(0+128)
 15174  1FDD  300C               	movlw	12
 15175  1FDE  00EA               	movwf	memset@n^(0+128)
 15176  1FDF  3000               	movlw	0
 15177  1FE0  00EB               	movwf	(memset@n^(0+128)+1)
 15178  1FE1  3050               	movlw	(low (_speedBuffer| (0+256)))& (0+255)
 15179  1FE2  3184  2434  319F   	fcall	_memset
 15180  1FE5                     l7530:
 15181                           
 15182                           ;serial.c: 27:     speedBuffer[0] = '/';
 15183  1FE5  302F               	movlw	47
 15184  1FE6  0141               	movlb	1	; select bank1
 15185  1FE7  00EE               	movwf	??_initSerial^(0+128)
 15186  1FE8  086E               	movf	??_initSerial^(0+128),w
 15187  1FE9  0142               	movlb	2	; select bank2
 15188  1FEA  00D0               	movwf	_speedBuffer^(0+256)
 15189  1FEB                     l7532:
 15190                           
 15191                           ;serial.c: 28:     speedBuffer[1] = 4;
 15192  1FEB  3004               	movlw	4
 15193  1FEC  0141               	movlb	1	; select bank1
 15194  1FED  00EE               	movwf	??_initSerial^(0+128)
 15195  1FEE  086E               	movf	??_initSerial^(0+128),w
 15196  1FEF  0142               	movlb	2	; select bank2
 15197  1FF0  00D1               	movwf	(_speedBuffer^(0+256)+1)
 15198  1FF1                     l7534:
 15199                           
 15200                           ;serial.c: 29:     speedBuffer[2] = 0;
 15201  1FF1  01D2               	clrf	(_speedBuffer^(0+256)+2)
 15202  1FF2                     l7536:
 15203                           
 15204                           ;serial.c: 30:     speedBuffer[3] = 0x86;
 15205  1FF2  3086               	movlw	134
 15206  1FF3  0141               	movlb	1	; select bank1
 15207  1FF4  00EE               	movwf	??_initSerial^(0+128)
 15208  1FF5  086E               	movf	??_initSerial^(0+128),w
 15209  1FF6  0142               	movlb	2	; select bank2
 15210  1FF7  00D3               	movwf	(_speedBuffer^(0+256)+3)
 15211  1FF8                     l7538:
 15212                           
 15213                           ;serial.c: 31:     speedBuffer[4] = 0;
 15214  1FF8  01D4               	clrf	(_speedBuffer^(0+256)+4)
 15215  1FF9                     l7540:
 15216                           
 15217                           ;serial.c: 32:     speedBuffer[11] = '\n';
 15218  1FF9  300A               	movlw	10
 15219  1FFA  0141               	movlb	1	; select bank1
 15220  1FFB  00EE               	movwf	??_initSerial^(0+128)
 15221  1FFC  086E               	movf	??_initSerial^(0+128),w
 15222  1FFD  0142               	movlb	2	; select bank2
 15223  1FFE  00DB               	movwf	(_speedBuffer^(0+256)+11)
 15224  1FFF                     l1003:
 15225  1FFF  0008               	return
 15226  2000                     __end_of_initSerial:
 15227                           
 15228                           	psect	text49
 15229  0434                     __ptext49:	
 15230 ;; *************** function _memset *****************
 15231 ;; Defined at:
 15232 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\memset.c"
 15233 ;; Parameters:    Size  Location     Type
 15234 ;;  dest            1    wreg     PTR void 
 15235 ;;		 -> speedBuffer(12), 
 15236 ;;  c               2    0[BANK1 ] int 
 15237 ;;  n               2    2[BANK1 ] unsigned int 
 15238 ;; Auto vars:     Size  Location     Type
 15239 ;;  dest            1    0[BANK2 ] PTR void 
 15240 ;;		 -> speedBuffer(12), 
 15241 ;;  k               2    1[BANK2 ] unsigned int 
 15242 ;;  s               1    3[BANK2 ] PTR unsigned char 
 15243 ;;		 -> speedBuffer(12), 
 15244 ;; Return value:  Size  Location     Type
 15245 ;;                  1    wreg      PTR void 
 15246 ;; Registers used:
 15247 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15248 ;; Tracked objects:
 15249 ;;		On entry : 0/0
 15250 ;;		On exit  : 0/0
 15251 ;;		Unchanged: 0/0
 15252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15253 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15254 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15255 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15256 ;;      Totals:         0       0       6       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15257 ;;Total ram usage:       10 bytes
 15258 ;; Hardware stack levels used:    1
 15259 ;; Hardware stack levels required when called:    8
 15260 ;; This function calls:
 15261 ;;		Nothing
 15262 ;; This function is called by:
 15263 ;;		_initSerial
 15264 ;; This function uses a non-reentrant model
 15265 ;;
 15266                           
 15267                           
 15268                           ;psect for function _memset
 15269  0434                     _memset:
 15270                           
 15271                           ;incstack = 0
 15272                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 15273                           ;memset@dest stored from wreg
 15274  0434  0142               	movlb	2	; select bank2
 15275  0435  00EC               	movwf	memset@dest^(0+256)
 15276  0436                     l7354:
 15277  0436  086C               	movf	memset@dest^(0+256),w
 15278  0437  0141               	movlb	1	; select bank1
 15279  0438  00EC               	movwf	??_memset^(0+128)
 15280  0439  086C               	movf	??_memset^(0+128),w
 15281  043A  0142               	movlb	2	; select bank2
 15282  043B  00EF               	movwf	memset@s^(0+256)
 15283  043C                     l7356:
 15284  043C  0141               	movlb	1	; select bank1
 15285  043D  086A               	movf	memset@n^(0+128),w
 15286  043E  046B               	iorwf	(memset@n+1)^(0+128),w
 15287  043F  1D03               	btfss	3,2
 15288  0440  2C42               	goto	u6051
 15289  0441  2C43               	goto	u6050
 15290  0442                     u6051:
 15291  0442  2C44               	goto	l7360
 15292  0443                     u6050:
 15293  0443  2D04               	goto	l2088
 15294  0444                     l7360:
 15295  0444  0868               	movf	memset@c^(0+128),w
 15296  0445  00EC               	movwf	??_memset^(0+128)
 15297  0446  0142               	movlb	2	; select bank2
 15298  0447  086F               	movf	memset@s^(0+256),w
 15299  0448  0086               	movwf	6
 15300  0449  3001               	movlw	1	; select bank2/3
 15301  044A  0087               	movwf	7
 15302  044B  0141               	movlb	1	; select bank1
 15303  044C  086C               	movf	??_memset^(0+128),w
 15304  044D  0081               	movwf	1
 15305  044E                     l7362:
 15306  044E  0868               	movf	memset@c^(0+128),w
 15307  044F  00EC               	movwf	??_memset^(0+128)
 15308  0450  086A               	movf	memset@n^(0+128),w
 15309  0451  0142               	movlb	2	; select bank2
 15310  0452  076F               	addwf	memset@s^(0+256),w
 15311  0453  0141               	movlb	1	; select bank1
 15312  0454  00ED               	movwf	(??_memset+1)^(0+128)
 15313  0455  086D               	movf	(??_memset+1)^(0+128),w
 15314  0456  3EFF               	addlw	255
 15315  0457  0086               	movwf	6
 15316  0458  3001               	movlw	1	; select bank2/3
 15317  0459  0087               	movwf	7
 15318  045A  086C               	movf	??_memset^(0+128),w
 15319  045B  0081               	movwf	1
 15320  045C                     l7364:
 15321  045C  3000               	movlw	0
 15322  045D  026B               	subwf	(memset@n+1)^(0+128),w
 15323  045E  3003               	movlw	3
 15324  045F  1903               	skipnz
 15325  0460  026A               	subwf	memset@n^(0+128),w
 15326  0461  1803               	skipnc
 15327  0462  2C64               	goto	u6061
 15328  0463  2C65               	goto	u6060
 15329  0464                     u6061:
 15330  0464  2C66               	goto	l7368
 15331  0465                     u6060:
 15332  0465  2D04               	goto	l2088
 15333  0466                     l7368:
 15334  0466  0868               	movf	memset@c^(0+128),w
 15335  0467  00EC               	movwf	??_memset^(0+128)
 15336  0468  0142               	movlb	2	; select bank2
 15337  0469  0A6F               	incf	memset@s^(0+256),w
 15338  046A  0086               	movwf	6
 15339  046B  3001               	movlw	1	; select bank2/3
 15340  046C  0087               	movwf	7
 15341  046D  0141               	movlb	1	; select bank1
 15342  046E  086C               	movf	??_memset^(0+128),w
 15343  046F  0081               	movwf	1
 15344  0470                     l7370:
 15345  0470  0868               	movf	memset@c^(0+128),w
 15346  0471  00EC               	movwf	??_memset^(0+128)
 15347  0472  0142               	movlb	2	; select bank2
 15348  0473  086F               	movf	memset@s^(0+256),w
 15349  0474  3E02               	addlw	2
 15350  0475  0086               	movwf	6
 15351  0476  3001               	movlw	1	; select bank2/3
 15352  0477  0087               	movwf	7
 15353  0478  0141               	movlb	1	; select bank1
 15354  0479  086C               	movf	??_memset^(0+128),w
 15355  047A  0081               	movwf	1
 15356  047B                     l7372:
 15357  047B  0868               	movf	memset@c^(0+128),w
 15358  047C  00EC               	movwf	??_memset^(0+128)
 15359  047D  086A               	movf	memset@n^(0+128),w
 15360  047E  0142               	movlb	2	; select bank2
 15361  047F  076F               	addwf	memset@s^(0+256),w
 15362  0480  0141               	movlb	1	; select bank1
 15363  0481  00ED               	movwf	(??_memset+1)^(0+128)
 15364  0482  086D               	movf	(??_memset+1)^(0+128),w
 15365  0483  3EFE               	addlw	254
 15366  0484  0086               	movwf	6
 15367  0485  3001               	movlw	1	; select bank2/3
 15368  0486  0087               	movwf	7
 15369  0487  086C               	movf	??_memset^(0+128),w
 15370  0488  0081               	movwf	1
 15371  0489                     l7374:
 15372  0489  0868               	movf	memset@c^(0+128),w
 15373  048A  00EC               	movwf	??_memset^(0+128)
 15374  048B  086A               	movf	memset@n^(0+128),w
 15375  048C  0142               	movlb	2	; select bank2
 15376  048D  076F               	addwf	memset@s^(0+256),w
 15377  048E  0141               	movlb	1	; select bank1
 15378  048F  00ED               	movwf	(??_memset+1)^(0+128)
 15379  0490  086D               	movf	(??_memset+1)^(0+128),w
 15380  0491  3EFD               	addlw	253
 15381  0492  0086               	movwf	6
 15382  0493  3001               	movlw	1	; select bank2/3
 15383  0494  0087               	movwf	7
 15384  0495  086C               	movf	??_memset^(0+128),w
 15385  0496  0081               	movwf	1
 15386  0497                     l7376:
 15387  0497  3000               	movlw	0
 15388  0498  026B               	subwf	(memset@n+1)^(0+128),w
 15389  0499  3007               	movlw	7
 15390  049A  1903               	skipnz
 15391  049B  026A               	subwf	memset@n^(0+128),w
 15392  049C  1803               	skipnc
 15393  049D  2C9F               	goto	u6071
 15394  049E  2CA0               	goto	u6070
 15395  049F                     u6071:
 15396  049F  2CA1               	goto	l7380
 15397  04A0                     u6070:
 15398  04A0  2D04               	goto	l2088
 15399  04A1                     l7380:
 15400  04A1  0868               	movf	memset@c^(0+128),w
 15401  04A2  00EC               	movwf	??_memset^(0+128)
 15402  04A3  0142               	movlb	2	; select bank2
 15403  04A4  086F               	movf	memset@s^(0+256),w
 15404  04A5  3E03               	addlw	3
 15405  04A6  0086               	movwf	6
 15406  04A7  3001               	movlw	1	; select bank2/3
 15407  04A8  0087               	movwf	7
 15408  04A9  0141               	movlb	1	; select bank1
 15409  04AA  086C               	movf	??_memset^(0+128),w
 15410  04AB  0081               	movwf	1
 15411  04AC  0868               	movf	memset@c^(0+128),w
 15412  04AD  00EC               	movwf	??_memset^(0+128)
 15413  04AE  086A               	movf	memset@n^(0+128),w
 15414  04AF  0142               	movlb	2	; select bank2
 15415  04B0  076F               	addwf	memset@s^(0+256),w
 15416  04B1  0141               	movlb	1	; select bank1
 15417  04B2  00ED               	movwf	(??_memset+1)^(0+128)
 15418  04B3  086D               	movf	(??_memset+1)^(0+128),w
 15419  04B4  3EFC               	addlw	252
 15420  04B5  0086               	movwf	6
 15421  04B6  3001               	movlw	1	; select bank2/3
 15422  04B7  0087               	movwf	7
 15423  04B8  086C               	movf	??_memset^(0+128),w
 15424  04B9  0081               	movwf	1
 15425  04BA                     l7382:
 15426  04BA  3000               	movlw	0
 15427  04BB  026B               	subwf	(memset@n+1)^(0+128),w
 15428  04BC  3009               	movlw	9
 15429  04BD  1903               	skipnz
 15430  04BE  026A               	subwf	memset@n^(0+128),w
 15431  04BF  1803               	skipnc
 15432  04C0  2CC2               	goto	u6081
 15433  04C1  2CC3               	goto	u6080
 15434  04C2                     u6081:
 15435  04C2  2CC4               	goto	l7386
 15436  04C3                     u6080:
 15437  04C3  2D04               	goto	l2088
 15438  04C4                     l7386:
 15439  04C4  0142               	movlb	2	; select bank2
 15440  04C5  096F               	comf	memset@s^(0+256),w
 15441  04C6  0141               	movlb	1	; select bank1
 15442  04C7  00EC               	movwf	??_memset^(0+128)
 15443  04C8  0142               	movlb	2	; select bank2
 15444  04C9  0970               	comf	(memset@s+1)^(0+256),w
 15445  04CA  0141               	movlb	1	; select bank1
 15446  04CB  00ED               	movwf	(??_memset^(0+128)+1)
 15447  04CC  0AEC               	incf	??_memset^(0+128),f
 15448  04CD  1903               	skipnz
 15449  04CE  0AED               	incf	(??_memset^(0+128)+1),f
 15450  04CF  3003               	movlw	3
 15451  04D0  056C               	andwf	??_memset^(0+128),w
 15452  04D1  0142               	movlb	2	; select bank2
 15453  04D2  00ED               	movwf	memset@k^(0+256)
 15454  04D3  3000               	movlw	0
 15455  04D4  0141               	movlb	1	; select bank1
 15456  04D5  056D               	andwf	(??_memset+1)^(0+128),w
 15457  04D6  0142               	movlb	2	; select bank2
 15458  04D7  00EE               	movwf	(memset@k+1)^(0+256)
 15459  04D8  086D               	movf	memset@k^(0+256),w
 15460  04D9  0141               	movlb	1	; select bank1
 15461  04DA  00EC               	movwf	??_memset^(0+128)
 15462  04DB  086C               	movf	??_memset^(0+128),w
 15463  04DC  0142               	movlb	2	; select bank2
 15464  04DD  07EF               	addwf	memset@s^(0+256),f
 15465  04DE                     l7388:
 15466  04DE  086D               	movf	memset@k^(0+256),w
 15467  04DF  0141               	movlb	1	; select bank1
 15468  04E0  02EA               	subwf	memset@n^(0+128),f
 15469  04E1  0142               	movlb	2	; select bank2
 15470  04E2  086E               	movf	(memset@k+1)^(0+256),w
 15471  04E3  0141               	movlb	1	; select bank1
 15472  04E4  3BEB               	subwfb	(memset@n+1)^(0+128),f
 15473  04E5                     l7390:
 15474  04E5  30FC               	movlw	252
 15475  04E6  05EA               	andwf	memset@n^(0+128),f
 15476  04E7  30FF               	movlw	255
 15477  04E8  05EB               	andwf	(memset@n+1)^(0+128),f
 15478  04E9  2CFD               	goto	l7398
 15479  04EA                     l7392:
 15480  04EA  0868               	movf	memset@c^(0+128),w
 15481  04EB  00EC               	movwf	??_memset^(0+128)
 15482  04EC  0142               	movlb	2	; select bank2
 15483  04ED  086F               	movf	memset@s^(0+256),w
 15484  04EE  0086               	movwf	6
 15485  04EF  3001               	movlw	1	; select bank2/3
 15486  04F0  0087               	movwf	7
 15487  04F1  0141               	movlb	1	; select bank1
 15488  04F2  086C               	movf	??_memset^(0+128),w
 15489  04F3  0081               	movwf	1
 15490  04F4                     l7394:
 15491  04F4  3001               	movlw	1
 15492  04F5  02EA               	subwf	memset@n^(0+128),f
 15493  04F6  3000               	movlw	0
 15494  04F7  3BEB               	subwfb	(memset@n+1)^(0+128),f
 15495  04F8                     l7396:
 15496  04F8  3001               	movlw	1
 15497  04F9  00EC               	movwf	??_memset^(0+128)
 15498  04FA  086C               	movf	??_memset^(0+128),w
 15499  04FB  0142               	movlb	2	; select bank2
 15500  04FC  07EF               	addwf	memset@s^(0+256),f
 15501  04FD                     l7398:
 15502  04FD  0141               	movlb	1	; select bank1
 15503  04FE  086A               	movf	memset@n^(0+128),w
 15504  04FF  046B               	iorwf	(memset@n+1)^(0+128),w
 15505  0500  1D03               	btfss	3,2
 15506  0501  2D03               	goto	u6091
 15507  0502  2D04               	goto	u6090
 15508  0503                     u6091:
 15509  0503  2CEA               	goto	l7392
 15510  0504                     u6090:
 15511  0504                     l2088:
 15512  0504  0008               	return
 15513  0505                     __end_of_memset:
 15514                           
 15515                           	psect	text50
 15516  1D0F                     __ptext50:	
 15517 ;; *************** function _initJoystick *****************
 15518 ;; Defined at:
 15519 ;;		line 69 in file "joystick.c"
 15520 ;; Parameters:    Size  Location     Type
 15521 ;;		None
 15522 ;; Auto vars:     Size  Location     Type
 15523 ;;		None
 15524 ;; Return value:  Size  Location     Type
 15525 ;;                  1    wreg      void 
 15526 ;; Registers used:
 15527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15528 ;; Tracked objects:
 15529 ;;		On entry : 0/0
 15530 ;;		On exit  : 0/0
 15531 ;;		Unchanged: 0/0
 15532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15537 ;;Total ram usage:        0 bytes
 15538 ;; Hardware stack levels used:    1
 15539 ;; Hardware stack levels required when called:   12
 15540 ;; This function calls:
 15541 ;;		_TMR1_SetInterruptHandler
 15542 ;;		_getUISpeedMode
 15543 ;;		_getUIType
 15544 ;;		_setJoystickSpeed
 15545 ;;		_setJoystickType
 15546 ;;		_stopMotion
 15547 ;; This function is called by:
 15548 ;;		_main
 15549 ;; This function uses a non-reentrant model
 15550 ;;
 15551                           
 15552                           
 15553                           ;psect for function _initJoystick
 15554  1D0F                     _initJoystick:
 15555  1D0F                     l7564:	
 15556                           ;incstack = 0
 15557                           ; Regs used in _initJoystick: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15558                           
 15559                           
 15560                           ;joystick.c: 70:     setJoystickType(getUIType());
 15561  1D0F  3199  21E7  319D   	fcall	_getUIType
 15562  1D12  318E  268B  319D   	fcall	_setJoystickType
 15563  1D15                     l7566:
 15564                           
 15565                           ;joystick.c: 71:     setJoystickSpeed(getUISpeedMode());
 15566  1D15  3199  21E4  319D   	fcall	_getUISpeedMode
 15567  1D18  318A  2263  319D   	fcall	_setJoystickSpeed
 15568  1D1B                     l7568:
 15569                           
 15570                           ;joystick.c: 72:     TMR1_SetInterruptHandler(readJoystick);
 15571  1D1B  3066               	movlw	low _readJoystick
 15572  1D1C  0141               	movlb	1	; select bank1
 15573  1D1D  00E8               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
 15574  1D1E  3007               	movlw	high _readJoystick
 15575  1D1F  00E9               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
 15576  1D20  319A  2213  319D   	fcall	_TMR1_SetInterruptHandler
 15577  1D23                     l7570:
 15578                           
 15579                           ;joystick.c: 73:     joystickEnabled = 0;
 15580  1D23  0141               	movlb	1	; select bank1
 15581  1D24  01C9               	clrf	_joystickEnabled^(0+128)
 15582  1D25                     l7572:
 15583                           
 15584                           ;joystick.c: 74:     stopMotion();
 15585  1D25  319D  2597  319D   	fcall	_stopMotion
 15586  1D28                     l877:
 15587  1D28  0008               	return
 15588  1D29                     __end_of_initJoystick:
 15589                           
 15590                           	psect	text51
 15591  1D97                     __ptext51:	
 15592 ;; *************** function _stopMotion *****************
 15593 ;; Defined at:
 15594 ;;		line 126 in file "joystick.c"
 15595 ;; Parameters:    Size  Location     Type
 15596 ;;		None
 15597 ;; Auto vars:     Size  Location     Type
 15598 ;;		None
 15599 ;; Return value:  Size  Location     Type
 15600 ;;                  1    wreg      void 
 15601 ;; Registers used:
 15602 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15603 ;; Tracked objects:
 15604 ;;		On entry : 0/0
 15605 ;;		On exit  : 0/0
 15606 ;;		Unchanged: 0/0
 15607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15612 ;;Total ram usage:        0 bytes
 15613 ;; Hardware stack levels used:    1
 15614 ;; Hardware stack levels required when called:   11
 15615 ;; This function calls:
 15616 ;;		_sendBTSpeedCmd
 15617 ;; This function is called by:
 15618 ;;		_initJoystick
 15619 ;; This function uses a non-reentrant model
 15620 ;;
 15621                           
 15622                           
 15623                           ;psect for function _stopMotion
 15624  1D97                     _stopMotion:
 15625  1D97                     l7340:	
 15626                           ;incstack = 0
 15627                           ; Regs used in _stopMotion: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15628                           
 15629                           
 15630                           ;joystick.c: 127:     targetAxialFP = 0;
 15631  1D97  0140               	movlb	0	; select bank0
 15632  1D98  01C1               	clrf	_targetAxialFP
 15633  1D99  01C2               	clrf	_targetAxialFP+1
 15634                           
 15635                           ;joystick.c: 128:     targetYawFP = 0;
 15636  1D9A  0141               	movlb	1	; select bank1
 15637  1D9B  01C4               	clrf	_targetYawFP^(0+128)
 15638  1D9C  01C5               	clrf	(_targetYawFP+1)^(0+128)
 15639                           
 15640                           ;joystick.c: 129:     limitedAxialFP = 0;
 15641  1D9D  0140               	movlb	0	; select bank0
 15642  1D9E  01BF               	clrf	_limitedAxialFP
 15643  1D9F  01C0               	clrf	_limitedAxialFP+1
 15644                           
 15645                           ;joystick.c: 130:     limitedYawFP = 0;
 15646  1DA0  0141               	movlb	1	; select bank1
 15647  1DA1  01C2               	clrf	_limitedYawFP^(0+128)
 15648  1DA2  01C3               	clrf	(_limitedYawFP+1)^(0+128)
 15649  1DA3                     l7342:
 15650                           
 15651                           ;joystick.c: 131:     if (joystickEnabled)
 15652  1DA3  0849               	movf	_joystickEnabled^(0+128),w
 15653  1DA4  1903               	btfsc	3,2
 15654  1DA5  2DA7               	goto	u6041
 15655  1DA6  2DA8               	goto	u6040
 15656  1DA7                     u6041:
 15657  1DA7  2DB3               	goto	l902
 15658  1DA8                     u6040:
 15659  1DA8                     l7344:
 15660                           
 15661                           ;joystick.c: 132:         sendBTSpeedCmd(0, 0, 0);
 15662  1DA8  3000               	movlw	0
 15663  1DA9  0144               	movlb	4	; select bank4
 15664  1DAA  00E6               	movwf	sendBTSpeedCmd@axial^(0+512)
 15665  1DAB  00E7               	movwf	(sendBTSpeedCmd@axial+1)^(0+512)
 15666  1DAC  3000               	movlw	0
 15667  1DAD  00E8               	movwf	sendBTSpeedCmd@yaw^(0+512)
 15668  1DAE  00E9               	movwf	(sendBTSpeedCmd@yaw+1)^(0+512)
 15669  1DAF  01EA               	clrf	sendBTSpeedCmd@blockIfBusy^(0+512)
 15670  1DB0  318F  273E  319D   	fcall	_sendBTSpeedCmd
 15671  1DB3                     l902:
 15672  1DB3  0008               	return
 15673  1DB4                     __end_of_stopMotion:
 15674                           
 15675                           	psect	text52
 15676  0F3E                     __ptext52:	
 15677 ;; *************** function _sendBTSpeedCmd *****************
 15678 ;; Defined at:
 15679 ;;		line 35 in file "serial.c"
 15680 ;; Parameters:    Size  Location     Type
 15681 ;;  axial           2    6[BANK4 ] short 
 15682 ;;  yaw             2    8[BANK4 ] short 
 15683 ;;  blockIfBusy     1   10[BANK4 ] _Bool 
 15684 ;; Auto vars:     Size  Location     Type
 15685 ;;		None
 15686 ;; Return value:  Size  Location     Type
 15687 ;;                  1    wreg      _Bool 
 15688 ;; Registers used:
 15689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15690 ;; Tracked objects:
 15691 ;;		On entry : 0/0
 15692 ;;		On exit  : 0/0
 15693 ;;		Unchanged: 0/0
 15694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15695 ;;      Params:         0       0       0       0       0       5       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15697 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15698 ;;      Totals:         0       0       0       0       2       5       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15699 ;;Total ram usage:        7 bytes
 15700 ;; Hardware stack levels used:    1
 15701 ;; Hardware stack levels required when called:   10
 15702 ;; This function calls:
 15703 ;;		_calcCRC
 15704 ;;		_clampInt
 15705 ;;		_int16ToBytes
 15706 ;;		_int16cat
 15707 ;;		_sendBTBuffer
 15708 ;;		_strcat
 15709 ;;		_strlen
 15710 ;; This function is called by:
 15711 ;;		_stopMotion
 15712 ;; This function uses a non-reentrant model
 15713 ;;
 15714                           
 15715                           
 15716                           ;psect for function _sendBTSpeedCmd
 15717  0F3E                     _sendBTSpeedCmd:
 15718  0F3E                     l6932:	
 15719                           ;incstack = 0
 15720                           ; Regs used in _sendBTSpeedCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15721                           
 15722                           
 15723                           ;serial.c: 36:     axial = clampInt(axial, 5000);
 15724  0F3E  0144               	movlb	4	; select bank4
 15725  0F3F  0867               	movf	(sendBTSpeedCmd@axial+1)^(0+512),w
 15726  0F40  0141               	movlb	1	; select bank1
 15727  0F41  00E9               	movwf	(clampInt@num+1)^(0+128)
 15728  0F42  0144               	movlb	4	; select bank4
 15729  0F43  0866               	movf	sendBTSpeedCmd@axial^(0+512),w
 15730  0F44  0141               	movlb	1	; select bank1
 15731  0F45  00E8               	movwf	clampInt@num^(0+128)
 15732  0F46  3088               	movlw	136
 15733  0F47  00EA               	movwf	clampInt@limit^(0+128)
 15734  0F48  3013               	movlw	19
 15735  0F49  00EB               	movwf	(clampInt@limit^(0+128)+1)
 15736  0F4A  3192  22CF  318F   	fcall	_clampInt
 15737  0F4D  0141               	movlb	1	; select bank1
 15738  0F4E  0869               	movf	(?_clampInt+1)^(0+128),w
 15739  0F4F  0144               	movlb	4	; select bank4
 15740  0F50  00E7               	movwf	(sendBTSpeedCmd@axial+1)^(0+512)
 15741  0F51  0141               	movlb	1	; select bank1
 15742  0F52  0868               	movf	?_clampInt^(0+128),w
 15743  0F53  0144               	movlb	4	; select bank4
 15744  0F54  00E6               	movwf	sendBTSpeedCmd@axial^(0+512)
 15745                           
 15746                           ;serial.c: 37:     yaw = clampInt(yaw, 5000);
 15747  0F55  0869               	movf	(sendBTSpeedCmd@yaw+1)^(0+512),w
 15748  0F56  0141               	movlb	1	; select bank1
 15749  0F57  00E9               	movwf	(clampInt@num+1)^(0+128)
 15750  0F58  0144               	movlb	4	; select bank4
 15751  0F59  0868               	movf	sendBTSpeedCmd@yaw^(0+512),w
 15752  0F5A  0141               	movlb	1	; select bank1
 15753  0F5B  00E8               	movwf	clampInt@num^(0+128)
 15754  0F5C  3088               	movlw	136
 15755  0F5D  00EA               	movwf	clampInt@limit^(0+128)
 15756  0F5E  3013               	movlw	19
 15757  0F5F  00EB               	movwf	(clampInt@limit^(0+128)+1)
 15758  0F60  3192  22CF  318F   	fcall	_clampInt
 15759  0F63  0141               	movlb	1	; select bank1
 15760  0F64  0869               	movf	(?_clampInt+1)^(0+128),w
 15761  0F65  0144               	movlb	4	; select bank4
 15762  0F66  00E9               	movwf	(sendBTSpeedCmd@yaw+1)^(0+512)
 15763  0F67  0141               	movlb	1	; select bank1
 15764  0F68  0868               	movf	?_clampInt^(0+128),w
 15765  0F69  0144               	movlb	4	; select bank4
 15766  0F6A  00E8               	movwf	sendBTSpeedCmd@yaw^(0+512)
 15767  0F6B                     l6934:
 15768                           
 15769                           ;serial.c: 40:     if (sendDebugText){
 15770  0F6B  0141               	movlb	1	; select bank1
 15771  0F6C  0848               	movf	_sendDebugText^(0+128),w
 15772  0F6D  1903               	btfsc	3,2
 15773  0F6E  2F70               	goto	u5801
 15774  0F6F  2F71               	goto	u5800
 15775  0F70                     u5801:
 15776  0F70  2FC4               	goto	l6954
 15777  0F71                     u5800:
 15778  0F71                     l6936:
 15779                           
 15780                           ;serial.c: 41:         debugBuffer[0] = 0;
 15781  0F71  0142               	movlb	2	; select bank2
 15782  0F72  01A8               	clrf	_debugBuffer^(0+256)
 15783  0F73                     l6938:
 15784                           
 15785                           ;serial.c: 42:         strcat(debugBuffer, "> ");
 15786  0F73  3061               	movlw	low (STR_1| (0+32768))
 15787  0F74  00EE               	movwf	strcat@src^(0+256)
 15788  0F75  30A0               	movlw	high (STR_1| (0+32768))
 15789  0F76  00EF               	movwf	(strcat@src^(0+256)+1)
 15790  0F77  3028               	movlw	(low (_debugBuffer| (0+256)))& (0+255)
 15791  0F78  319F  272C  318F   	fcall	_strcat
 15792  0F7B                     l6940:
 15793                           
 15794                           ;serial.c: 43:         int16cat(debugBuffer, axial);
 15795  0F7B  0144               	movlb	4	; select bank4
 15796  0F7C  0867               	movf	(sendBTSpeedCmd@axial+1)^(0+512),w
 15797  0F7D  0143               	movlb	3	; select bank3
 15798  0F7E  00ED               	movwf	(int16cat@num+1)^(0+384)
 15799  0F7F  0144               	movlb	4	; select bank4
 15800  0F80  0866               	movf	sendBTSpeedCmd@axial^(0+512),w
 15801  0F81  0143               	movlb	3	; select bank3
 15802  0F82  00EC               	movwf	int16cat@num^(0+384)
 15803  0F83  3028               	movlw	(low (_debugBuffer| (0+256)))& (0+255)
 15804  0F84  3185  2505  318F   	fcall	_int16cat
 15805  0F87                     l6942:
 15806                           
 15807                           ;serial.c: 44:         strcat(debugBuffer, ",");
 15808  0F87  3064               	movlw	low (STR_2| (0+32768))
 15809  0F88  0142               	movlb	2	; select bank2
 15810  0F89  00EE               	movwf	strcat@src^(0+256)
 15811  0F8A  30A0               	movlw	high (STR_2| (0+32768))
 15812  0F8B  00EF               	movwf	(strcat@src^(0+256)+1)
 15813  0F8C  3028               	movlw	(low (_debugBuffer| (0+256)))& (0+255)
 15814  0F8D  319F  272C  318F   	fcall	_strcat
 15815  0F90                     l6944:
 15816                           
 15817                           ;serial.c: 45:         int16cat(debugBuffer, yaw);
 15818  0F90  0144               	movlb	4	; select bank4
 15819  0F91  0869               	movf	(sendBTSpeedCmd@yaw+1)^(0+512),w
 15820  0F92  0143               	movlb	3	; select bank3
 15821  0F93  00ED               	movwf	(int16cat@num+1)^(0+384)
 15822  0F94  0144               	movlb	4	; select bank4
 15823  0F95  0868               	movf	sendBTSpeedCmd@yaw^(0+512),w
 15824  0F96  0143               	movlb	3	; select bank3
 15825  0F97  00EC               	movwf	int16cat@num^(0+384)
 15826  0F98  3028               	movlw	(low (_debugBuffer| (0+256)))& (0+255)
 15827  0F99  3185  2505  318F   	fcall	_int16cat
 15828  0F9C                     l6946:
 15829                           
 15830                           ;serial.c: 46:         strcat(debugBuffer, "\n");
 15831  0F9C  3053               	movlw	low ((STR_4+4)| (0+32768))
 15832  0F9D  0142               	movlb	2	; select bank2
 15833  0F9E  00EE               	movwf	strcat@src^(0+256)
 15834  0F9F  30A0               	movlw	high ((STR_4+4)| (0+32768))
 15835  0FA0  00EF               	movwf	(strcat@src^(0+256)+1)
 15836  0FA1  3028               	movlw	(low (_debugBuffer| (0+256)))& (0+255)
 15837  0FA2  319F  272C  318F   	fcall	_strcat
 15838  0FA5                     l6948:
 15839                           
 15840                           ;serial.c: 48:         return sendBTBuffer((void *)debugBuffer, strlen(debugBuffer), blo
      +                          ckIfBusy);;	Return value of _sendBTSpeedCmd is never used
 15841  0FA5  3028               	movlw	low _debugBuffer
 15842  0FA6  0142               	movlb	2	; select bank2
 15843  0FA7  00EC               	movwf	sendBTBuffer@buffer^(0+256)
 15844  0FA8  3001               	movlw	high _debugBuffer
 15845  0FA9  00ED               	movwf	(sendBTBuffer@buffer+1)^(0+256)
 15846  0FAA  3028               	movlw	low _debugBuffer
 15847  0FAB  0141               	movlb	1	; select bank1
 15848  0FAC  00E8               	movwf	strlen@s^(0+128)
 15849  0FAD  3001               	movlw	high _debugBuffer
 15850  0FAE  00E9               	movwf	(strlen@s+1)^(0+128)
 15851  0FAF  319C  24F5  318F   	fcall	_strlen
 15852  0FB2  0141               	movlb	1	; select bank1
 15853  0FB3  0868               	movf	?_strlen^(0+128),w
 15854  0FB4  0143               	movlb	3	; select bank3
 15855  0FB5  00EE               	movwf	??_sendBTSpeedCmd^(0+384)
 15856  0FB6  086E               	movf	??_sendBTSpeedCmd^(0+384),w
 15857  0FB7  0142               	movlb	2	; select bank2
 15858  0FB8  00EE               	movwf	sendBTBuffer@length^(0+256)
 15859  0FB9  0144               	movlb	4	; select bank4
 15860  0FBA  086A               	movf	sendBTSpeedCmd@blockIfBusy^(0+512),w
 15861  0FBB  0143               	movlb	3	; select bank3
 15862  0FBC  00EF               	movwf	(??_sendBTSpeedCmd+1)^(0+384)
 15863  0FBD  086F               	movf	(??_sendBTSpeedCmd+1)^(0+384),w
 15864  0FBE  0142               	movlb	2	; select bank2
 15865  0FBF  00EF               	movwf	sendBTBuffer@blockIfBusy^(0+256)
 15866  0FC0  3191  21D7  318F   	fcall	_sendBTBuffer
 15867  0FC3  2FFF               	goto	l1007
 15868  0FC4                     l6954:
 15869                           
 15870                           ;serial.c: 50:         int16ToBytes(axial, speedBuffer + 5);
 15871  0FC4  0144               	movlb	4	; select bank4
 15872  0FC5  0867               	movf	(sendBTSpeedCmd@axial+1)^(0+512),w
 15873  0FC6  0141               	movlb	1	; select bank1
 15874  0FC7  00E9               	movwf	(int16ToBytes@num+1)^(0+128)
 15875  0FC8  0144               	movlb	4	; select bank4
 15876  0FC9  0866               	movf	sendBTSpeedCmd@axial^(0+512),w
 15877  0FCA  0141               	movlb	1	; select bank1
 15878  0FCB  00E8               	movwf	int16ToBytes@num^(0+128)
 15879  0FCC  3055               	movlw	(low ((_speedBuffer| (0+256)+5)))& (0+255)
 15880  0FCD  0143               	movlb	3	; select bank3
 15881  0FCE  00EE               	movwf	??_sendBTSpeedCmd^(0+384)
 15882  0FCF  086E               	movf	??_sendBTSpeedCmd^(0+384),w
 15883  0FD0  0141               	movlb	1	; select bank1
 15884  0FD1  00EA               	movwf	int16ToBytes@ndata^(0+128)
 15885  0FD2  3192  2237  318F   	fcall	_int16ToBytes
 15886                           
 15887                           ;serial.c: 51:         int16ToBytes(yaw, speedBuffer + 7);
 15888  0FD5  0144               	movlb	4	; select bank4
 15889  0FD6  0869               	movf	(sendBTSpeedCmd@yaw+1)^(0+512),w
 15890  0FD7  0141               	movlb	1	; select bank1
 15891  0FD8  00E9               	movwf	(int16ToBytes@num+1)^(0+128)
 15892  0FD9  0144               	movlb	4	; select bank4
 15893  0FDA  0868               	movf	sendBTSpeedCmd@yaw^(0+512),w
 15894  0FDB  0141               	movlb	1	; select bank1
 15895  0FDC  00E8               	movwf	int16ToBytes@num^(0+128)
 15896  0FDD  3057               	movlw	(low ((_speedBuffer| (0+256)+7)))& (0+255)
 15897  0FDE  0143               	movlb	3	; select bank3
 15898  0FDF  00EE               	movwf	??_sendBTSpeedCmd^(0+384)
 15899  0FE0  086E               	movf	??_sendBTSpeedCmd^(0+384),w
 15900  0FE1  0141               	movlb	1	; select bank1
 15901  0FE2  00EA               	movwf	int16ToBytes@ndata^(0+128)
 15902  0FE3  3192  2237  318F   	fcall	_int16ToBytes
 15903                           
 15904                           ;serial.c: 52:         calcCRC(speedBuffer);
 15905  0FE6  3050               	movlw	(low (_speedBuffer| (0+256)))& (0+255)
 15906  0FE7  3197  273A  318F   	fcall	_calcCRC
 15907  0FEA                     l6956:
 15908                           
 15909                           ;serial.c: 53:         return sendBTBuffer((void *)speedBuffer, sizeof(speedBuffer), blo
      +                          ckIfBusy);;	Return value of _sendBTSpeedCmd is never used
 15910  0FEA  3050               	movlw	low _speedBuffer
 15911  0FEB  0142               	movlb	2	; select bank2
 15912  0FEC  00EC               	movwf	sendBTBuffer@buffer^(0+256)
 15913  0FED  3001               	movlw	high _speedBuffer
 15914  0FEE  00ED               	movwf	(sendBTBuffer@buffer+1)^(0+256)
 15915  0FEF  300C               	movlw	12
 15916  0FF0  0143               	movlb	3	; select bank3
 15917  0FF1  00EE               	movwf	??_sendBTSpeedCmd^(0+384)
 15918  0FF2  086E               	movf	??_sendBTSpeedCmd^(0+384),w
 15919  0FF3  0142               	movlb	2	; select bank2
 15920  0FF4  00EE               	movwf	sendBTBuffer@length^(0+256)
 15921  0FF5  0144               	movlb	4	; select bank4
 15922  0FF6  086A               	movf	sendBTSpeedCmd@blockIfBusy^(0+512),w
 15923  0FF7  0143               	movlb	3	; select bank3
 15924  0FF8  00EF               	movwf	(??_sendBTSpeedCmd+1)^(0+384)
 15925  0FF9  086F               	movf	(??_sendBTSpeedCmd+1)^(0+384),w
 15926  0FFA  0142               	movlb	2	; select bank2
 15927  0FFB  00EF               	movwf	sendBTBuffer@blockIfBusy^(0+256)
 15928  0FFC  3191  21D7  318F   	fcall	_sendBTBuffer
 15929  0FFF                     l1007:
 15930  0FFF  0008               	return
 15931  1000                     __end_of_sendBTSpeedCmd:
 15932                           
 15933                           	psect	text53
 15934  1F2C                     __ptext53:	
 15935 ;; *************** function _strcat *****************
 15936 ;; Defined at:
 15937 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcat.c"
 15938 ;; Parameters:    Size  Location     Type
 15939 ;;  dest            1    wreg     PTR unsigned char 
 15940 ;;		 -> debugBuffer(16), 
 15941 ;;  src             2    2[BANK2 ] PTR const unsigned char 
 15942 ;;		 -> STR_3(2), STR_2(2), STR_1(3), 
 15943 ;; Auto vars:     Size  Location     Type
 15944 ;;  dest            1    7[BANK1 ] PTR unsigned char 
 15945 ;;		 -> debugBuffer(16), 
 15946 ;; Return value:  Size  Location     Type
 15947 ;;                  1    wreg      PTR unsigned char 
 15948 ;; Registers used:
 15949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15950 ;; Tracked objects:
 15951 ;;		On entry : 0/0
 15952 ;;		On exit  : 0/0
 15953 ;;		Unchanged: 0/0
 15954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15955 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15956 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15957 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15958 ;;      Totals:         0       0       1       2       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15959 ;;Total ram usage:        5 bytes
 15960 ;; Hardware stack levels used:    1
 15961 ;; Hardware stack levels required when called:    9
 15962 ;; This function calls:
 15963 ;;		_strcpy
 15964 ;;		_strlen
 15965 ;; This function is called by:
 15966 ;;		_sendBTSpeedCmd
 15967 ;; This function uses a non-reentrant model
 15968 ;;
 15969                           
 15970                           
 15971                           ;psect for function _strcat
 15972  1F2C                     _strcat:
 15973                           
 15974                           ;incstack = 0
 15975                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15976                           ;strcat@dest stored from wreg
 15977  1F2C  0141               	movlb	1	; select bank1
 15978  1F2D  00EF               	movwf	strcat@dest^(0+128)
 15979  1F2E                     l6676:
 15980  1F2E  0142               	movlb	2	; select bank2
 15981  1F2F  086F               	movf	(strcat@src+1)^(0+256),w
 15982  1F30  0141               	movlb	1	; select bank1
 15983  1F31  00EE               	movwf	(strcpy@src+1)^(0+128)
 15984  1F32  0142               	movlb	2	; select bank2
 15985  1F33  086E               	movf	strcat@src^(0+256),w
 15986  1F34  0141               	movlb	1	; select bank1
 15987  1F35  00ED               	movwf	strcpy@src^(0+128)
 15988  1F36  086F               	movf	strcat@dest^(0+128),w
 15989  1F37  00E8               	movwf	strlen@s^(0+128)
 15990  1F38  3001               	movlw	1
 15991  1F39  00E9               	movwf	(strlen@s+1)^(0+128)
 15992  1F3A  319C  24F5  319F   	fcall	_strlen
 15993  1F3D  0141               	movlb	1	; select bank1
 15994  1F3E  0868               	movf	?_strlen^(0+128),w
 15995  1F3F  0143               	movlb	3	; select bank3
 15996  1F40  00EC               	movwf	??_strcat^(0+384)
 15997  1F41  0141               	movlb	1	; select bank1
 15998  1F42  0869               	movf	(?_strlen+1)^(0+128),w
 15999  1F43  0143               	movlb	3	; select bank3
 16000  1F44  00ED               	movwf	(??_strcat^(0+384)+1)
 16001  1F45  0141               	movlb	1	; select bank1
 16002  1F46  086F               	movf	strcat@dest^(0+128),w
 16003  1F47  0143               	movlb	3	; select bank3
 16004  1F48  076C               	addwf	??_strcat^(0+384),w
 16005  1F49  3191  211B  319F   	fcall	_strcpy
 16006  1F4C                     l2101:
 16007  1F4C  0008               	return
 16008  1F4D                     __end_of_strcat:
 16009                           
 16010                           	psect	text54
 16011  1CF5                     __ptext54:	
 16012 ;; *************** function _strlen *****************
 16013 ;; Defined at:
 16014 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
 16015 ;; Parameters:    Size  Location     Type
 16016 ;;  s               2    0[BANK1 ] PTR const unsigned char 
 16017 ;;		 -> STR_26(3), STR_25(9), STR_24(9), STR_23(9), 
 16018 ;;		 -> STR_22(9), STR_21(3), STR_20(3), STR_19(7), 
 16019 ;;		 -> STR_18(3), STR_17(3), STR_16(6), STR_15(9), 
 16020 ;;		 -> STR_14(3), STR_13(9), STR_12(9), STR_11(3), 
 16021 ;;		 -> STR_10(9), STR_9(3), STR_8(9), STR_7(3), 
 16022 ;;		 -> STR_6(6), STR_4(6), debugBuffer(16), 
 16023 ;; Auto vars:     Size  Location     Type
 16024 ;;  a               2    3[BANK1 ] PTR const unsigned char 
 16025 ;;		 -> STR_26(3), STR_25(9), STR_24(9), STR_23(9), 
 16026 ;;		 -> STR_22(9), STR_21(3), STR_20(3), STR_19(7), 
 16027 ;;		 -> STR_18(3), STR_17(3), STR_16(6), STR_15(9), 
 16028 ;;		 -> STR_14(3), STR_13(9), STR_12(9), STR_11(3), 
 16029 ;;		 -> STR_10(9), STR_9(3), STR_8(9), STR_7(3), 
 16030 ;;		 -> STR_6(6), STR_4(6), debugBuffer(16), 
 16031 ;; Return value:  Size  Location     Type
 16032 ;;                  2    0[BANK1 ] unsigned int 
 16033 ;; Registers used:
 16034 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 16035 ;; Tracked objects:
 16036 ;;		On entry : 0/0
 16037 ;;		On exit  : 0/0
 16038 ;;		Unchanged: 0/0
 16039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16040 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16041 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16042 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16043 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16044 ;;Total ram usage:        5 bytes
 16045 ;; Hardware stack levels used:    1
 16046 ;; Hardware stack levels required when called:    8
 16047 ;; This function calls:
 16048 ;;		Nothing
 16049 ;; This function is called by:
 16050 ;;		_sendBTSpeedCmd
 16051 ;;		_sendBTString
 16052 ;;		_strcat
 16053 ;;		_strstr
 16054 ;; This function uses a non-reentrant model
 16055 ;;
 16056                           
 16057                           
 16058                           ;psect for function _strlen
 16059  1CF5                     _strlen:
 16060  1CF5                     l6504:	
 16061                           ;incstack = 0
 16062                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 16063                           
 16064  1CF5  0141               	movlb	1	; select bank1
 16065  1CF6  0869               	movf	(strlen@s+1)^(0+128),w
 16066  1CF7  00EC               	movwf	(strlen@a+1)^(0+128)
 16067  1CF8  0868               	movf	strlen@s^(0+128),w
 16068  1CF9  00EB               	movwf	strlen@a^(0+128)
 16069  1CFA  2CFF               	goto	l6508
 16070  1CFB                     l6506:
 16071  1CFB  3001               	movlw	1
 16072  1CFC  07E8               	addwf	strlen@s^(0+128),f
 16073  1CFD  3000               	movlw	0
 16074  1CFE  3DE9               	addwfc	(strlen@s+1)^(0+128),f
 16075  1CFF                     l6508:
 16076  1CFF  0868               	movf	strlen@s^(0+128),w
 16077  1D00  0084               	movwf	4
 16078  1D01  0869               	movf	(strlen@s+1)^(0+128),w
 16079  1D02  0085               	movwf	5
 16080  1D03  0012               	moviw fsr0++
 16081  1D04  1D03               	btfss	3,2
 16082  1D05  2D07               	goto	u5151
 16083  1D06  2D08               	goto	u5150
 16084  1D07                     u5151:
 16085  1D07  2CFB               	goto	l6506
 16086  1D08                     u5150:
 16087  1D08                     l6510:
 16088  1D08  086B               	movf	strlen@a^(0+128),w
 16089  1D09  0268               	subwf	strlen@s^(0+128),w
 16090  1D0A  00E8               	movwf	?_strlen^(0+128)
 16091  1D0B  086C               	movf	(strlen@a+1)^(0+128),w
 16092  1D0C  3B69               	subwfb	(strlen@s+1)^(0+128),w
 16093  1D0D  00E9               	movwf	(?_strlen+1)^(0+128)
 16094  1D0E                     l2113:
 16095  1D0E  0008               	return
 16096  1D0F                     __end_of_strlen:
 16097                           
 16098                           	psect	text55
 16099  111B                     __ptext55:	
 16100 ;; *************** function _strcpy *****************
 16101 ;; Defined at:
 16102 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
 16103 ;; Parameters:    Size  Location     Type
 16104 ;;  dest            1    wreg     PTR unsigned char 
 16105 ;;		 -> debugBuffer(16), 
 16106 ;;  src             2    5[BANK1 ] PTR const unsigned char 
 16107 ;;		 -> STR_3(2), STR_2(2), STR_1(3), 
 16108 ;; Auto vars:     Size  Location     Type
 16109 ;;  dest            1    3[BANK3 ] PTR unsigned char 
 16110 ;;		 -> debugBuffer(16), 
 16111 ;;  s               2    0[BANK3 ] PTR const unsigned char 
 16112 ;;		 -> STR_3(2), STR_2(2), STR_1(3), 
 16113 ;;  d               1    2[BANK3 ] PTR unsigned char 
 16114 ;;		 -> debugBuffer(16), 
 16115 ;; Return value:  Size  Location     Type
 16116 ;;                  1    wreg      PTR unsigned char 
 16117 ;; Registers used:
 16118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 16119 ;; Tracked objects:
 16120 ;;		On entry : 0/0
 16121 ;;		On exit  : 0/0
 16122 ;;		Unchanged: 0/0
 16123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16124 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16125 ;;      Locals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16126 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16127 ;;      Totals:         0       0       2       2       4       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16128 ;;Total ram usage:        8 bytes
 16129 ;; Hardware stack levels used:    1
 16130 ;; Hardware stack levels required when called:    8
 16131 ;; This function calls:
 16132 ;;		Nothing
 16133 ;; This function is called by:
 16134 ;;		_strcat
 16135 ;; This function uses a non-reentrant model
 16136 ;;
 16137                           
 16138                           
 16139                           ;psect for function _strcpy
 16140  111B                     _strcpy:
 16141                           
 16142                           ;incstack = 0
 16143                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 16144                           ;strcpy@dest stored from wreg
 16145  111B  0143               	movlb	3	; select bank3
 16146  111C  00EB               	movwf	strcpy@dest^(0+384)
 16147  111D                     l6610:
 16148  111D  0141               	movlb	1	; select bank1
 16149  111E  086E               	movf	(strcpy@src+1)^(0+128),w
 16150  111F  0143               	movlb	3	; select bank3
 16151  1120  00E9               	movwf	(strcpy@s+1)^(0+384)
 16152  1121  0141               	movlb	1	; select bank1
 16153  1122  086D               	movf	strcpy@src^(0+128),w
 16154  1123  0143               	movlb	3	; select bank3
 16155  1124  00E8               	movwf	strcpy@s^(0+384)
 16156  1125  086B               	movf	strcpy@dest^(0+384),w
 16157  1126  0142               	movlb	2	; select bank2
 16158  1127  00EC               	movwf	??_strcpy^(0+256)
 16159  1128  086C               	movf	??_strcpy^(0+256),w
 16160  1129  0143               	movlb	3	; select bank3
 16161  112A  00EA               	movwf	strcpy@d^(0+384)
 16162  112B                     l6612:
 16163  112B  0143               	movlb	3	; select bank3
 16164  112C  086A               	movf	strcpy@d^(0+384),w
 16165  112D  0086               	movwf	6
 16166  112E  3001               	movlw	1	; select bank2/3
 16167  112F  0087               	movwf	7
 16168  1130  0AEA               	incf	strcpy@d^(0+384),f
 16169  1131  0869               	movf	(strcpy@s+1)^(0+384),w
 16170  1132  0142               	movlb	2	; select bank2
 16171  1133  00ED               	movwf	(??_strcpy^(0+256)+1)
 16172  1134  0143               	movlb	3	; select bank3
 16173  1135  0868               	movf	strcpy@s^(0+384),w
 16174  1136  0142               	movlb	2	; select bank2
 16175  1137  00EC               	movwf	??_strcpy^(0+256)
 16176  1138  0143               	movlb	3	; select bank3
 16177  1139  0AE8               	incf	strcpy@s^(0+384),f
 16178  113A  1903               	skipnz
 16179  113B  0AE9               	incf	(strcpy@s+1)^(0+384),f
 16180  113C  0142               	movlb	2	; select bank2
 16181  113D  086C               	movf	??_strcpy^(0+256),w
 16182  113E  0084               	movwf	4
 16183  113F  086D               	movf	(??_strcpy+1)^(0+256),w
 16184  1140  0085               	movwf	5
 16185  1141  0800               	movf	0,w	;code access
 16186  1142  3FC0               	movwi [0]fsr1
 16187  1143  0889               	movf	9,f
 16188  1144  1D03               	btfss	3,2
 16189  1145  2947               	goto	u5371
 16190  1146  2948               	goto	u5370
 16191  1147                     u5371:
 16192  1147  292B               	goto	l6612
 16193  1148                     u5370:
 16194  1148                     l2107:
 16195  1148  0008               	return
 16196  1149                     __end_of_strcpy:
 16197                           
 16198                           	psect	text56
 16199  11D7                     __ptext56:	
 16200 ;; *************** function _sendBTBuffer *****************
 16201 ;; Defined at:
 16202 ;;		line 67 in file "serial.c"
 16203 ;; Parameters:    Size  Location     Type
 16204 ;;  buffer          2    0[BANK2 ] PTR unsigned char 
 16205 ;;		 -> STR_25(9), STR_24(9), STR_23(9), STR_22(9), 
 16206 ;;		 -> STR_21(3), STR_19(7), STR_17(3), STR_15(9), 
 16207 ;;		 -> STR_13(9), STR_12(9), STR_11(3), STR_10(9), 
 16208 ;;		 -> STR_9(3), STR_8(9), STR_7(3), STR_4(6), 
 16209 ;;		 -> masterMAC(12), slaveMAC(12), estopBuffer(8), debugBuffer(16), 
 16210 ;;		 -> speedBuffer(12), 
 16211 ;;  length          1    2[BANK2 ] unsigned char 
 16212 ;;  blockIfBusy     1    3[BANK2 ] _Bool 
 16213 ;; Auto vars:     Size  Location     Type
 16214 ;;		None
 16215 ;; Return value:  Size  Location     Type
 16216 ;;                  1    wreg      _Bool 
 16217 ;; Registers used:
 16218 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16219 ;; Tracked objects:
 16220 ;;		On entry : 0/0
 16221 ;;		On exit  : 0/0
 16222 ;;		Unchanged: 0/0
 16223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16224 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16227 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16228 ;;Total ram usage:        4 bytes
 16229 ;; Hardware stack levels used:    1
 16230 ;; Hardware stack levels required when called:    9
 16231 ;; This function calls:
 16232 ;;		_EUSART1_Write
 16233 ;;		_EUSART1_is_tx_ready
 16234 ;; This function is called by:
 16235 ;;		_sendBTSpeedCmd
 16236 ;;		_sendBTString
 16237 ;;		_setBTConnection
 16238 ;; This function uses a non-reentrant model
 16239 ;;
 16240                           
 16241                           
 16242                           ;psect for function _sendBTBuffer
 16243  11D7                     _sendBTBuffer:
 16244  11D7                     l6514:	
 16245                           ;incstack = 0
 16246                           ; Regs used in _sendBTBuffer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16247                           
 16248                           
 16249                           ;serial.c: 68:     if (blockIfBusy || (eusart1TxBufferRemaining > length)){
 16250  11D7  0142               	movlb	2	; select bank2
 16251  11D8  086F               	movf	sendBTBuffer@blockIfBusy^(0+256),w
 16252  11D9  1D03               	btfss	3,2
 16253  11DA  29DC               	goto	u5161
 16254  11DB  29DD               	goto	u5160
 16255  11DC                     u5161:
 16256  11DC  29FE               	goto	l6526
 16257  11DD                     u5160:
 16258  11DD                     l6516:
 16259  11DD  0140               	movlb	0	; select bank0
 16260  11DE  0855               	movf	_eusart1TxBufferRemaining,w	;volatile
 16261  11DF  0142               	movlb	2	; select bank2
 16262  11E0  026E               	subwf	sendBTBuffer@length^(0+256),w
 16263  11E1  1803               	skipnc
 16264  11E2  29E4               	goto	u5171
 16265  11E3  29E5               	goto	u5170
 16266  11E4                     u5171:
 16267  11E4  2A05               	goto	l6534
 16268  11E5                     u5170:
 16269  11E5  29FE               	goto	l6526
 16270  11E6                     l6518:
 16271  11E6  319A  2290  3191   	fcall	_EUSART1_is_tx_ready
 16272  11E9  3A00               	xorlw	0
 16273  11EA  1903               	skipnz
 16274  11EB  29ED               	goto	u5181
 16275  11EC  29EE               	goto	u5180
 16276  11ED                     u5181:
 16277  11ED  29E6               	goto	l6518
 16278  11EE                     u5180:
 16279  11EE                     l6520:
 16280                           
 16281                           ;serial.c: 74:             EUSART1_Write(*buffer++);
 16282  11EE  0142               	movlb	2	; select bank2
 16283  11EF  086C               	movf	sendBTBuffer@buffer^(0+256),w
 16284  11F0  0084               	movwf	4
 16285  11F1  086D               	movf	(sendBTBuffer@buffer+1)^(0+256),w
 16286  11F2  0085               	movwf	5
 16287  11F3  0800               	movf	0,w	;code access
 16288  11F4  3191  21A7  3191   	fcall	_EUSART1_Write
 16289  11F7                     l6522:
 16290  11F7  3001               	movlw	1
 16291  11F8  0142               	movlb	2	; select bank2
 16292  11F9  07EC               	addwf	sendBTBuffer@buffer^(0+256),f
 16293  11FA  3000               	movlw	0
 16294  11FB  3DED               	addwfc	(sendBTBuffer@buffer+1)^(0+256),f
 16295  11FC                     l6524:
 16296                           
 16297                           ;serial.c: 75:             length--;
 16298  11FC  3001               	movlw	1
 16299  11FD  02EE               	subwf	sendBTBuffer@length^(0+256),f
 16300  11FE                     l6526:
 16301                           
 16302                           ;serial.c: 69:         while (length > 0) {
 16303  11FE  086E               	movf	sendBTBuffer@length^(0+256),w
 16304  11FF  1D03               	btfss	3,2
 16305  1200  2A02               	goto	u5191
 16306  1201  2A03               	goto	u5190
 16307  1202                     u5191:
 16308  1202  29E6               	goto	l6518
 16309  1203                     u5190:
 16310  1203                     l6528:
 16311                           
 16312                           ;serial.c: 77:         return 1;
 16313  1203  3001               	movlw	1
 16314  1204  2A06               	goto	l1026
 16315  1205                     l6534:
 16316                           
 16317                           ;serial.c: 80:         return 0;
 16318  1205  3000               	movlw	0
 16319  1206                     l1026:
 16320  1206  0008               	return
 16321  1207                     __end_of_sendBTBuffer:
 16322                           
 16323                           	psect	text57
 16324  1A90                     __ptext57:	
 16325 ;; *************** function _EUSART1_is_tx_ready *****************
 16326 ;; Defined at:
 16327 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 16328 ;; Parameters:    Size  Location     Type
 16329 ;;		None
 16330 ;; Auto vars:     Size  Location     Type
 16331 ;;		None
 16332 ;; Return value:  Size  Location     Type
 16333 ;;                  1    wreg      _Bool 
 16334 ;; Registers used:
 16335 ;;		wreg, status,2, status,0
 16336 ;; Tracked objects:
 16337 ;;		On entry : 0/0
 16338 ;;		On exit  : 0/0
 16339 ;;		Unchanged: 0/0
 16340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16345 ;;Total ram usage:        0 bytes
 16346 ;; Hardware stack levels used:    1
 16347 ;; Hardware stack levels required when called:    8
 16348 ;; This function calls:
 16349 ;;		Nothing
 16350 ;; This function is called by:
 16351 ;;		_sendBTBuffer
 16352 ;; This function uses a non-reentrant model
 16353 ;;
 16354                           
 16355                           
 16356                           ;psect for function _EUSART1_is_tx_ready
 16357  1A90                     _EUSART1_is_tx_ready:
 16358  1A90                     l6452:	
 16359                           ;incstack = 0
 16360                           ; Regs used in _EUSART1_is_tx_ready: [wreg+status,2+status,0]
 16361                           
 16362                           
 16363                           ;mcc_generated_files/eusart1.c: 134:     return (eusart1TxBufferRemaining ? 1 : 0);
 16364  1A90  0140               	movlb	0	; select bank0
 16365  1A91  0855               	movf	_eusart1TxBufferRemaining,w	;volatile
 16366  1A92  1D03               	btfss	3,2
 16367  1A93  2A95               	goto	u5051
 16368  1A94  2A97               	goto	u5050
 16369  1A95                     u5051:
 16370  1A95  3001               	movlw	1
 16371  1A96  2A98               	goto	u5060
 16372  1A97                     u5050:
 16373  1A97  3000               	movlw	0
 16374  1A98                     u5060:
 16375  1A98                     l233:
 16376  1A98  0008               	return
 16377  1A99                     __end_of_EUSART1_is_tx_ready:
 16378                           
 16379                           	psect	text58
 16380  11A7                     __ptext58:	
 16381 ;; *************** function _EUSART1_Write *****************
 16382 ;; Defined at:
 16383 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 16384 ;; Parameters:    Size  Location     Type
 16385 ;;  txData          1    wreg     unsigned char 
 16386 ;; Auto vars:     Size  Location     Type
 16387 ;;  txData          1    1[BANK1 ] unsigned char 
 16388 ;; Return value:  Size  Location     Type
 16389 ;;                  1    wreg      void 
 16390 ;; Registers used:
 16391 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16392 ;; Tracked objects:
 16393 ;;		On entry : 0/0
 16394 ;;		On exit  : 0/0
 16395 ;;		Unchanged: 0/0
 16396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16398 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16399 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16400 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16401 ;;Total ram usage:        2 bytes
 16402 ;; Hardware stack levels used:    1
 16403 ;; Hardware stack levels required when called:    8
 16404 ;; This function calls:
 16405 ;;		Nothing
 16406 ;; This function is called by:
 16407 ;;		_sendBTBuffer
 16408 ;; This function uses a non-reentrant model
 16409 ;;
 16410                           
 16411                           
 16412                           ;psect for function _EUSART1_Write
 16413  11A7                     _EUSART1_Write:
 16414                           
 16415                           ;incstack = 0
 16416                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 16417                           ;EUSART1_Write@txData stored from wreg
 16418  11A7  0141               	movlb	1	; select bank1
 16419  11A8  00E9               	movwf	EUSART1_Write@txData^(0+128)
 16420  11A9                     l6482:
 16421  11A9                     l6484:	
 16422                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 16423                           
 16424                           
 16425                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 16426  11A9  0140               	movlb	0	; select bank0
 16427  11AA  0855               	movf	_eusart1TxBufferRemaining,w	;volatile
 16428  11AB  1903               	btfsc	3,2
 16429  11AC  29AE               	goto	u5111
 16430  11AD  29AF               	goto	u5110
 16431  11AE                     u5111:
 16432  11AE  29A9               	goto	l6484
 16433  11AF                     u5110:
 16434  11AF                     l254:
 16435                           
 16436                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 16437  11AF  014E               	movlb	14	; select bank14
 16438  11B0  1A19               	btfsc	25,4	;volatile
 16439  11B1  29B3               	goto	u5121
 16440  11B2  29B4               	goto	u5120
 16441  11B3                     u5121:
 16442  11B3  29B9               	goto	l255
 16443  11B4                     u5120:
 16444  11B4                     l6486:
 16445                           
 16446                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 16447  11B4  0141               	movlb	1	; select bank1
 16448  11B5  0869               	movf	EUSART1_Write@txData^(0+128),w
 16449  11B6  0142               	movlb	2	; select bank2
 16450  11B7  009A               	movwf	26	;volatile
 16451                           
 16452                           ;mcc_generated_files/eusart1.c: 182:     }
 16453  11B8  29D4               	goto	l6498
 16454  11B9                     l255:	
 16455                           ;mcc_generated_files/eusart1.c: 183:     else
 16456                           
 16457                           
 16458                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 16459  11B9  1219               	bcf	25,4	;volatile
 16460  11BA                     l6488:
 16461                           
 16462                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 16463  11BA  0141               	movlb	1	; select bank1
 16464  11BB  0869               	movf	EUSART1_Write@txData^(0+128),w
 16465  11BC  00E8               	movwf	??_EUSART1_Write^(0+128)
 16466  11BD  0140               	movlb	0	; select bank0
 16467  11BE  0854               	movf	_eusart1TxHead,w
 16468  11BF  3E40               	addlw	(low (_eusart1TxBuffer| (0+512)))& (0+255)
 16469  11C0  0086               	movwf	6
 16470  11C1  3002               	movlw	2	; select bank4/5
 16471  11C2  0087               	movwf	7
 16472  11C3  0141               	movlb	1	; select bank1
 16473  11C4  0868               	movf	??_EUSART1_Write^(0+128),w
 16474  11C5  0081               	movwf	1
 16475  11C6                     l6490:
 16476  11C6  3001               	movlw	1
 16477  11C7  00E8               	movwf	??_EUSART1_Write^(0+128)
 16478  11C8  0868               	movf	??_EUSART1_Write^(0+128),w
 16479  11C9  0140               	movlb	0	; select bank0
 16480  11CA  07D4               	addwf	_eusart1TxHead,f	;volatile
 16481  11CB                     l6492:
 16482                           
 16483                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 16484  11CB  3020               	movlw	32
 16485  11CC  0254               	subwf	_eusart1TxHead,w	;volatile
 16486  11CD  1C03               	skipc
 16487  11CE  29D0               	goto	u5131
 16488  11CF  29D1               	goto	u5130
 16489  11D0                     u5131:
 16490  11D0  29D2               	goto	l6496
 16491  11D1                     u5130:
 16492  11D1                     l6494:
 16493                           
 16494                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 16495  11D1  01D4               	clrf	_eusart1TxHead	;volatile
 16496  11D2                     l6496:
 16497                           
 16498                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 16499  11D2  3001               	movlw	1
 16500  11D3  02D5               	subwf	_eusart1TxBufferRemaining,f	;volatile
 16501  11D4                     l6498:
 16502                           
 16503                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 16504  11D4  014E               	movlb	14	; select bank14
 16505  11D5  1619               	bsf	25,4	;volatile
 16506  11D6                     l258:
 16507  11D6  0008               	return
 16508  11D7                     __end_of_EUSART1_Write:
 16509                           
 16510                           	psect	text59
 16511  0505                     __ptext59:	
 16512 ;; *************** function _int16cat *****************
 16513 ;; Defined at:
 16514 ;;		line 157 in file "serial.c"
 16515 ;; Parameters:    Size  Location     Type
 16516 ;;  bufP            1    wreg     PTR unsigned char 
 16517 ;;		 -> debugBuffer(16), 
 16518 ;;  num             2    4[BANK3 ] short 
 16519 ;; Auto vars:     Size  Location     Type
 16520 ;;  bufP            1    5[BANK4 ] PTR unsigned char 
 16521 ;;		 -> debugBuffer(16), 
 16522 ;;  divider         2    3[BANK4 ] short 
 16523 ;;  digit           2    1[BANK4 ] short 
 16524 ;;  suppress        1    0[BANK4 ] _Bool 
 16525 ;; Return value:  Size  Location     Type
 16526 ;;                  1    wreg      void 
 16527 ;; Registers used:
 16528 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16529 ;; Tracked objects:
 16530 ;;		On entry : 0/0
 16531 ;;		On exit  : 0/0
 16532 ;;		Unchanged: 0/0
 16533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16534 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16535 ;;      Locals:         0       0       0       0       0       6       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16536 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16537 ;;      Totals:         0       0       1       0       2       6       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16538 ;;Total ram usage:        9 bytes
 16539 ;; Hardware stack levels used:    1
 16540 ;; Hardware stack levels required when called:    9
 16541 ;; This function calls:
 16542 ;;		___awdiv
 16543 ;;		___wmul
 16544 ;; This function is called by:
 16545 ;;		_sendBTSpeedCmd
 16546 ;; This function uses a non-reentrant model
 16547 ;;
 16548                           
 16549                           
 16550                           ;psect for function _int16cat
 16551  0505                     _int16cat:
 16552                           
 16553                           ;incstack = 0
 16554                           ; Regs used in _int16cat: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16555                           ;int16cat@bufP stored from wreg
 16556  0505  0144               	movlb	4	; select bank4
 16557  0506  00E5               	movwf	int16cat@bufP^(0+512)
 16558  0507                     l6680:
 16559                           
 16560                           ;serial.c: 158:     _Bool suppress = 1;
 16561  0507  01E0               	clrf	int16cat@suppress^(0+512)
 16562  0508  0AE0               	incf	int16cat@suppress^(0+512),f
 16563  0509                     l6682:
 16564  0509                     l6684:
 16565                           
 16566                           ;serial.c: 160:     int16_t divider = 10000;
 16567  0509  3010               	movlw	16
 16568  050A  00E3               	movwf	int16cat@divider^(0+512)
 16569  050B  3027               	movlw	39
 16570  050C  00E4               	movwf	(int16cat@divider^(0+512)+1)
 16571                           
 16572                           ;serial.c: 163:     while (*bufP != 0)
 16573  050D  2D14               	goto	l6688
 16574  050E                     l6686:
 16575                           
 16576                           ;serial.c: 164:         bufP++;
 16577  050E  3001               	movlw	1
 16578  050F  0141               	movlb	1	; select bank1
 16579  0510  00EF               	movwf	??_int16cat^(0+128)
 16580  0511  086F               	movf	??_int16cat^(0+128),w
 16581  0512  0144               	movlb	4	; select bank4
 16582  0513  07E5               	addwf	int16cat@bufP^(0+512),f
 16583  0514                     l6688:
 16584                           
 16585                           ;serial.c: 163:     while (*bufP != 0)
 16586  0514  0865               	movf	int16cat@bufP^(0+512),w
 16587  0515  0086               	movwf	6
 16588  0516  3001               	movlw	1	; select bank2/3
 16589  0517  0087               	movwf	7
 16590  0518  0801               	movf	1,w
 16591  0519  1D03               	btfss	3,2
 16592  051A  2D1C               	goto	u5481
 16593  051B  2D1D               	goto	u5480
 16594  051C                     u5481:
 16595  051C  2D0E               	goto	l6686
 16596  051D                     u5480:
 16597  051D                     l1069:
 16598                           
 16599                           ;serial.c: 167:     if (num < 0) {
 16600  051D  0143               	movlb	3	; select bank3
 16601  051E  1FED               	btfss	(int16cat@num+1)^(0+384),7
 16602  051F  2D21               	goto	u5491
 16603  0520  2D22               	goto	u5490
 16604  0521                     u5491:
 16605  0521  2DA0               	goto	l6708
 16606  0522                     u5490:
 16607  0522                     l6690:
 16608                           
 16609                           ;serial.c: 168:         num = -num;
 16610  0522  09EC               	comf	int16cat@num^(0+384),f
 16611  0523  09ED               	comf	(int16cat@num+1)^(0+384),f
 16612  0524  0AEC               	incf	int16cat@num^(0+384),f
 16613  0525  1903               	skipnz
 16614  0526  0AED               	incf	(int16cat@num+1)^(0+384),f
 16615  0527                     l6692:
 16616                           
 16617                           ;serial.c: 169:         *bufP++ = '-';
 16618  0527  302D               	movlw	45
 16619  0528  0141               	movlb	1	; select bank1
 16620  0529  00EF               	movwf	??_int16cat^(0+128)
 16621  052A  0144               	movlb	4	; select bank4
 16622  052B  0865               	movf	int16cat@bufP^(0+512),w
 16623  052C  0086               	movwf	6
 16624  052D  3001               	movlw	1	; select bank2/3
 16625  052E  0087               	movwf	7
 16626  052F  0141               	movlb	1	; select bank1
 16627  0530  086F               	movf	??_int16cat^(0+128),w
 16628  0531  0081               	movwf	1
 16629  0532                     l6694:
 16630  0532  3001               	movlw	1
 16631  0533  00EF               	movwf	??_int16cat^(0+128)
 16632  0534  086F               	movf	??_int16cat^(0+128),w
 16633  0535  0144               	movlb	4	; select bank4
 16634  0536  07E5               	addwf	int16cat@bufP^(0+512),f
 16635  0537  2DA0               	goto	l6708
 16636  0538                     l6696:
 16637                           
 16638                           ;serial.c: 174:         digit = num / divider;
 16639  0538  0144               	movlb	4	; select bank4
 16640  0539  0864               	movf	(int16cat@divider+1)^(0+512),w
 16641  053A  0142               	movlb	2	; select bank2
 16642  053B  00ED               	movwf	(___awdiv@divisor+1)^(0+256)
 16643  053C  0144               	movlb	4	; select bank4
 16644  053D  0863               	movf	int16cat@divider^(0+512),w
 16645  053E  0142               	movlb	2	; select bank2
 16646  053F  00EC               	movwf	___awdiv@divisor^(0+256)
 16647  0540  0143               	movlb	3	; select bank3
 16648  0541  086D               	movf	(int16cat@num+1)^(0+384),w
 16649  0542  0142               	movlb	2	; select bank2
 16650  0543  00EF               	movwf	(___awdiv@dividend+1)^(0+256)
 16651  0544  0143               	movlb	3	; select bank3
 16652  0545  086C               	movf	int16cat@num^(0+384),w
 16653  0546  0142               	movlb	2	; select bank2
 16654  0547  00EE               	movwf	___awdiv@dividend^(0+256)
 16655  0548  3189  2173  3185   	fcall	___awdiv
 16656  054B  0142               	movlb	2	; select bank2
 16657  054C  086D               	movf	(?___awdiv+1)^(0+256),w
 16658  054D  0144               	movlb	4	; select bank4
 16659  054E  00E2               	movwf	(int16cat@digit+1)^(0+512)
 16660  054F  0142               	movlb	2	; select bank2
 16661  0550  086C               	movf	?___awdiv^(0+256),w
 16662  0551  0144               	movlb	4	; select bank4
 16663  0552  00E1               	movwf	int16cat@digit^(0+512)
 16664                           
 16665                           ;serial.c: 175:         num = num - (digit * divider);
 16666  0553  0862               	movf	(int16cat@digit+1)^(0+512),w
 16667  0554  0141               	movlb	1	; select bank1
 16668  0555  00E9               	movwf	(___wmul@multiplier+1)^(0+128)
 16669  0556  0144               	movlb	4	; select bank4
 16670  0557  0861               	movf	int16cat@digit^(0+512),w
 16671  0558  0141               	movlb	1	; select bank1
 16672  0559  00E8               	movwf	___wmul@multiplier^(0+128)
 16673  055A  0144               	movlb	4	; select bank4
 16674  055B  0864               	movf	(int16cat@divider+1)^(0+512),w
 16675  055C  0141               	movlb	1	; select bank1
 16676  055D  00EB               	movwf	(___wmul@multiplicand+1)^(0+128)
 16677  055E  0144               	movlb	4	; select bank4
 16678  055F  0863               	movf	int16cat@divider^(0+512),w
 16679  0560  0141               	movlb	1	; select bank1
 16680  0561  00EA               	movwf	___wmul@multiplicand^(0+128)
 16681  0562  319E  2689  3185   	fcall	___wmul
 16682  0565  0141               	movlb	1	; select bank1
 16683  0566  0868               	movf	?___wmul^(0+128),w
 16684  0567  0143               	movlb	3	; select bank3
 16685  0568  026C               	subwf	int16cat@num^(0+384),w
 16686  0569  00EC               	movwf	int16cat@num^(0+384)
 16687  056A  0141               	movlb	1	; select bank1
 16688  056B  0869               	movf	(?___wmul+1)^(0+128),w
 16689  056C  0143               	movlb	3	; select bank3
 16690  056D  3B6D               	subwfb	(int16cat@num+1)^(0+384),w
 16691  056E  00ED               	movwf	(int16cat@num+1)^(0+384)
 16692                           
 16693                           ;serial.c: 176:         divider /= 10;
 16694  056F  300A               	movlw	10
 16695  0570  0142               	movlb	2	; select bank2
 16696  0571  00EC               	movwf	___awdiv@divisor^(0+256)
 16697  0572  3000               	movlw	0
 16698  0573  00ED               	movwf	(___awdiv@divisor^(0+256)+1)
 16699  0574  0144               	movlb	4	; select bank4
 16700  0575  0864               	movf	(int16cat@divider+1)^(0+512),w
 16701  0576  0142               	movlb	2	; select bank2
 16702  0577  00EF               	movwf	(___awdiv@dividend+1)^(0+256)
 16703  0578  0144               	movlb	4	; select bank4
 16704  0579  0863               	movf	int16cat@divider^(0+512),w
 16705  057A  0142               	movlb	2	; select bank2
 16706  057B  00EE               	movwf	___awdiv@dividend^(0+256)
 16707  057C  3189  2173  3185   	fcall	___awdiv
 16708  057F  0142               	movlb	2	; select bank2
 16709  0580  086D               	movf	(?___awdiv+1)^(0+256),w
 16710  0581  0144               	movlb	4	; select bank4
 16711  0582  00E4               	movwf	(int16cat@divider+1)^(0+512)
 16712  0583  0142               	movlb	2	; select bank2
 16713  0584  086C               	movf	?___awdiv^(0+256),w
 16714  0585  0144               	movlb	4	; select bank4
 16715  0586  00E3               	movwf	int16cat@divider^(0+512)
 16716  0587                     l6698:
 16717                           
 16718                           ;serial.c: 178:         if ((digit != 0) || !suppress){
 16719  0587  0861               	movf	int16cat@digit^(0+512),w
 16720  0588  0462               	iorwf	(int16cat@digit+1)^(0+512),w
 16721  0589  1D03               	btfss	3,2
 16722  058A  2D8C               	goto	u5501
 16723  058B  2D8D               	goto	u5500
 16724  058C                     u5501:
 16725  058C  2D92               	goto	l6702
 16726  058D                     u5500:
 16727  058D                     l6700:
 16728  058D  0860               	movf	int16cat@suppress^(0+512),w
 16729  058E  1D03               	btfss	3,2
 16730  058F  2D91               	goto	u5511
 16731  0590  2D92               	goto	u5510
 16732  0591                     u5511:
 16733  0591  2DA0               	goto	l6708
 16734  0592                     u5510:
 16735  0592                     l6702:
 16736                           
 16737                           ;serial.c: 179:             suppress = 0;
 16738  0592  01E0               	clrf	int16cat@suppress^(0+512)
 16739  0593                     l6704:
 16740                           
 16741                           ;serial.c: 180:             *bufP++ = '0' + digit;
 16742  0593  0861               	movf	int16cat@digit^(0+512),w
 16743  0594  3E30               	addlw	48
 16744  0595  0141               	movlb	1	; select bank1
 16745  0596  00EF               	movwf	??_int16cat^(0+128)
 16746  0597  0144               	movlb	4	; select bank4
 16747  0598  0865               	movf	int16cat@bufP^(0+512),w
 16748  0599  0086               	movwf	6
 16749  059A  3001               	movlw	1	; select bank2/3
 16750  059B  0087               	movwf	7
 16751  059C  0141               	movlb	1	; select bank1
 16752  059D  086F               	movf	??_int16cat^(0+128),w
 16753  059E  0081               	movwf	1
 16754  059F  2D32               	goto	l6694
 16755  05A0                     l6708:
 16756                           
 16757                           ;serial.c: 173:     while (divider > 0){
 16758  05A0  0144               	movlb	4	; select bank4
 16759  05A1  0864               	movf	(int16cat@divider+1)^(0+512),w
 16760  05A2  3A80               	xorlw	128
 16761  05A3  0141               	movlb	1	; select bank1
 16762  05A4  00EF               	movwf	??_int16cat^(0+128)
 16763  05A5  3080               	movlw	128
 16764  05A6  026F               	subwf	??_int16cat^(0+128),w
 16765  05A7  1D03               	skipz
 16766  05A8  2DAC               	goto	u5525
 16767  05A9  3001               	movlw	1
 16768  05AA  0144               	movlb	4	; select bank4
 16769  05AB  0263               	subwf	int16cat@divider^(0+512),w
 16770  05AC                     u5525:
 16771  05AC  1803               	skipnc
 16772  05AD  2DAF               	goto	u5521
 16773  05AE  2DB0               	goto	u5520
 16774  05AF                     u5521:
 16775  05AF  2D38               	goto	l6696
 16776  05B0                     u5520:
 16777  05B0                     l6710:
 16778                           
 16779                           ;serial.c: 184:     if (suppress)
 16780  05B0  0144               	movlb	4	; select bank4
 16781  05B1  0860               	movf	int16cat@suppress^(0+512),w
 16782  05B2  1903               	btfsc	3,2
 16783  05B3  2DB5               	goto	u5531
 16784  05B4  2DB6               	goto	u5530
 16785  05B5                     u5531:
 16786  05B5  2DC6               	goto	l6716
 16787  05B6                     u5530:
 16788  05B6                     l6712:
 16789                           
 16790                           ;serial.c: 185:         *bufP++ = '0';
 16791  05B6  3030               	movlw	48
 16792  05B7  0141               	movlb	1	; select bank1
 16793  05B8  00EF               	movwf	??_int16cat^(0+128)
 16794  05B9  0144               	movlb	4	; select bank4
 16795  05BA  0865               	movf	int16cat@bufP^(0+512),w
 16796  05BB  0086               	movwf	6
 16797  05BC  3001               	movlw	1	; select bank2/3
 16798  05BD  0087               	movwf	7
 16799  05BE  0141               	movlb	1	; select bank1
 16800  05BF  086F               	movf	??_int16cat^(0+128),w
 16801  05C0  0081               	movwf	1
 16802  05C1                     l6714:
 16803  05C1  3001               	movlw	1
 16804  05C2  00EF               	movwf	??_int16cat^(0+128)
 16805  05C3  086F               	movf	??_int16cat^(0+128),w
 16806  05C4  0144               	movlb	4	; select bank4
 16807  05C5  07E5               	addwf	int16cat@bufP^(0+512),f
 16808  05C6                     l6716:
 16809                           
 16810                           ;serial.c: 187:     *bufP++ = 0;
 16811  05C6  0865               	movf	int16cat@bufP^(0+512),w
 16812  05C7  0086               	movwf	6
 16813  05C8  3001               	movlw	1	; select bank2/3
 16814  05C9  0087               	movwf	7
 16815  05CA  0181               	clrf	1
 16816  05CB                     l6718:
 16817  05CB  3001               	movlw	1
 16818  05CC  0141               	movlb	1	; select bank1
 16819  05CD  00EF               	movwf	??_int16cat^(0+128)
 16820  05CE  086F               	movf	??_int16cat^(0+128),w
 16821  05CF  0144               	movlb	4	; select bank4
 16822  05D0  07E5               	addwf	int16cat@bufP^(0+512),f
 16823  05D1                     l1078:
 16824  05D1  0008               	return
 16825  05D2                     __end_of_int16cat:
 16826                           
 16827                           	psect	text60
 16828  1237                     __ptext60:	
 16829 ;; *************** function _int16ToBytes *****************
 16830 ;; Defined at:
 16831 ;;		line 142 in file "serial.c"
 16832 ;; Parameters:    Size  Location     Type
 16833 ;;  num             2    0[BANK1 ] short 
 16834 ;;  ndata           1    2[BANK1 ] PTR unsigned char 
 16835 ;;		 -> speedBuffer(12), 
 16836 ;; Auto vars:     Size  Location     Type
 16837 ;;  i               2    6[BANK1 ] int 
 16838 ;; Return value:  Size  Location     Type
 16839 ;;                  1    wreg      void 
 16840 ;; Registers used:
 16841 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16842 ;; Tracked objects:
 16843 ;;		On entry : 0/0
 16844 ;;		On exit  : 0/0
 16845 ;;		Unchanged: 0/0
 16846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16847 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16848 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16849 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16850 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16851 ;;Total ram usage:        8 bytes
 16852 ;; Hardware stack levels used:    1
 16853 ;; Hardware stack levels required when called:    8
 16854 ;; This function calls:
 16855 ;;		Nothing
 16856 ;; This function is called by:
 16857 ;;		_sendBTSpeedCmd
 16858 ;; This function uses a non-reentrant model
 16859 ;;
 16860                           
 16861                           
 16862                           ;psect for function _int16ToBytes
 16863  1237                     _int16ToBytes:
 16864  1237                     l6720:	
 16865                           ;incstack = 0
 16866                           ; Regs used in _int16ToBytes: [wreg+fsr1l+fsr1h+status,2+status,0]
 16867                           
 16868                           
 16869                           ;serial.c: 143:  for (int i = 0; i < 2; i++) {
 16870  1237  0141               	movlb	1	; select bank1
 16871  1238  01EE               	clrf	int16ToBytes@i^(0+128)
 16872  1239  01EF               	clrf	(int16ToBytes@i+1)^(0+128)
 16873  123A                     l6726:
 16874                           
 16875                           ;serial.c: 144:   *ndata++ = ((uint8_t)(num & 0xFF));
 16876  123A  0141               	movlb	1	; select bank1
 16877  123B  0868               	movf	int16ToBytes@num^(0+128),w
 16878  123C  00EB               	movwf	??_int16ToBytes^(0+128)
 16879  123D  086A               	movf	int16ToBytes@ndata^(0+128),w
 16880  123E  0086               	movwf	6
 16881  123F  3001               	movlw	1	; select bank2/3
 16882  1240  0087               	movwf	7
 16883  1241  086B               	movf	??_int16ToBytes^(0+128),w
 16884  1242  0081               	movwf	1
 16885  1243                     l6728:
 16886  1243  3001               	movlw	1
 16887  1244  00EB               	movwf	??_int16ToBytes^(0+128)
 16888  1245  086B               	movf	??_int16ToBytes^(0+128),w
 16889  1246  07EA               	addwf	int16ToBytes@ndata^(0+128),f
 16890  1247                     l6730:
 16891                           
 16892                           ;serial.c: 145:   num = num >> 8;
 16893  1247  0869               	movf	(int16ToBytes@num+1)^(0+128),w
 16894  1248  00EC               	movwf	(??_int16ToBytes^(0+128)+1)
 16895  1249  0868               	movf	int16ToBytes@num^(0+128),w
 16896  124A  00EB               	movwf	??_int16ToBytes^(0+128)
 16897  124B  3008               	movlw	8
 16898  124C  00ED               	movwf	(??_int16ToBytes+2)^(0+128)
 16899  124D                     u5545:
 16900  124D  0D6C               	rlf	(??_int16ToBytes^(0+128)+1),w
 16901  124E  0CEC               	rrf	(??_int16ToBytes^(0+128)+1),f
 16902  124F  0CEB               	rrf	??_int16ToBytes^(0+128),f
 16903  1250  0BED               	decfsz	(??_int16ToBytes+2)^(0+128),f
 16904  1251  2A4D               	goto	u5545
 16905  1252  086B               	movf	??_int16ToBytes^(0+128),w
 16906  1253  00E8               	movwf	int16ToBytes@num^(0+128)
 16907  1254  086C               	movf	(??_int16ToBytes+1)^(0+128),w
 16908  1255  00E9               	movwf	(int16ToBytes@num+1)^(0+128)
 16909  1256                     l6732:
 16910                           
 16911                           ;serial.c: 146:  }
 16912  1256  3001               	movlw	1
 16913  1257  07EE               	addwf	int16ToBytes@i^(0+128),f
 16914  1258  3000               	movlw	0
 16915  1259  3DEF               	addwfc	(int16ToBytes@i+1)^(0+128),f
 16916  125A                     l6734:
 16917  125A  086F               	movf	(int16ToBytes@i+1)^(0+128),w
 16918  125B  3A80               	xorlw	128
 16919  125C  00EB               	movwf	??_int16ToBytes^(0+128)
 16920  125D  3080               	movlw	128
 16921  125E  026B               	subwf	??_int16ToBytes^(0+128),w
 16922  125F  1D03               	skipz
 16923  1260  2A63               	goto	u5555
 16924  1261  3002               	movlw	2
 16925  1262  026E               	subwf	int16ToBytes@i^(0+128),w
 16926  1263                     u5555:
 16927  1263  1C03               	skipc
 16928  1264  2A66               	goto	u5551
 16929  1265  2A67               	goto	u5550
 16930  1266                     u5551:
 16931  1266  2A3A               	goto	l6726
 16932  1267                     u5550:
 16933  1267                     l1058:
 16934  1267  0008               	return
 16935  1268                     __end_of_int16ToBytes:
 16936                           
 16937                           	psect	text61
 16938  12CF                     __ptext61:	
 16939 ;; *************** function _clampInt *****************
 16940 ;; Defined at:
 16941 ;;		line 149 in file "serial.c"
 16942 ;; Parameters:    Size  Location     Type
 16943 ;;  num             2    0[BANK1 ] short 
 16944 ;;  limit           2    2[BANK1 ] short 
 16945 ;; Auto vars:     Size  Location     Type
 16946 ;;		None
 16947 ;; Return value:  Size  Location     Type
 16948 ;;                  2    0[BANK1 ] short 
 16949 ;; Registers used:
 16950 ;;		wreg, status,2, status,0
 16951 ;; Tracked objects:
 16952 ;;		On entry : 0/0
 16953 ;;		On exit  : 0/0
 16954 ;;		Unchanged: 0/0
 16955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16956 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16958 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16959 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16960 ;;Total ram usage:        7 bytes
 16961 ;; Hardware stack levels used:    1
 16962 ;; Hardware stack levels required when called:    8
 16963 ;; This function calls:
 16964 ;;		Nothing
 16965 ;; This function is called by:
 16966 ;;		_sendBTSpeedCmd
 16967 ;; This function uses a non-reentrant model
 16968 ;;
 16969                           
 16970                           
 16971                           ;psect for function _clampInt
 16972  12CF                     _clampInt:
 16973  12CF                     l6664:	
 16974                           ;incstack = 0
 16975                           ; Regs used in _clampInt: [wreg+status,2+status,0]
 16976                           
 16977                           
 16978                           ;serial.c: 150:     if (num > limit)
 16979  12CF  0141               	movlb	1	; select bank1
 16980  12D0  086B               	movf	(clampInt@limit+1)^(0+128),w
 16981  12D1  3A80               	xorlw	128
 16982  12D2  00EC               	movwf	??_clampInt^(0+128)
 16983  12D3  0869               	movf	(clampInt@num+1)^(0+128),w
 16984  12D4  3A80               	xorlw	128
 16985  12D5  026C               	subwf	??_clampInt^(0+128),w
 16986  12D6  1D03               	skipz
 16987  12D7  2ADA               	goto	u5465
 16988  12D8  0868               	movf	clampInt@num^(0+128),w
 16989  12D9  026A               	subwf	clampInt@limit^(0+128),w
 16990  12DA                     u5465:
 16991  12DA  1803               	skipnc
 16992  12DB  2ADD               	goto	u5461
 16993  12DC  2ADE               	goto	u5460
 16994  12DD                     u5461:
 16995  12DD  2AE4               	goto	l6668
 16996  12DE                     u5460:
 16997  12DE                     l6666:
 16998                           
 16999                           ;serial.c: 151:         num = limit ;
 17000  12DE  0141               	movlb	1	; select bank1
 17001  12DF  086B               	movf	(clampInt@limit+1)^(0+128),w
 17002  12E0  00E9               	movwf	(clampInt@num+1)^(0+128)
 17003  12E1  086A               	movf	clampInt@limit^(0+128),w
 17004  12E2  00E8               	movwf	clampInt@num^(0+128)
 17005  12E3  2B06               	goto	l6672
 17006  12E4                     l6668:
 17007  12E4  0141               	movlb	1	; select bank1
 17008  12E5  096A               	comf	clampInt@limit^(0+128),w
 17009  12E6  00EC               	movwf	??_clampInt^(0+128)
 17010  12E7  096B               	comf	(clampInt@limit+1)^(0+128),w
 17011  12E8  00ED               	movwf	(??_clampInt^(0+128)+1)
 17012  12E9  0AEC               	incf	??_clampInt^(0+128),f
 17013  12EA  1903               	skipnz
 17014  12EB  0AED               	incf	(??_clampInt^(0+128)+1),f
 17015  12EC  0869               	movf	(clampInt@num+1)^(0+128),w
 17016  12ED  3A80               	xorlw	128
 17017  12EE  00EE               	movwf	(??_clampInt+2)^(0+128)
 17018  12EF  086D               	movf	(??_clampInt+1)^(0+128),w
 17019  12F0  3A80               	xorlw	128
 17020  12F1  026E               	subwf	(??_clampInt+2)^(0+128),w
 17021  12F2  1D03               	skipz
 17022  12F3  2AF6               	goto	u5475
 17023  12F4  086C               	movf	??_clampInt^(0+128),w
 17024  12F5  0268               	subwf	clampInt@num^(0+128),w
 17025  12F6                     u5475:
 17026  12F6  1803               	skipnc
 17027  12F7  2AF9               	goto	u5471
 17028  12F8  2AFA               	goto	u5470
 17029  12F9                     u5471:
 17030  12F9  2B06               	goto	l6672
 17031  12FA                     u5470:
 17032  12FA                     l6670:
 17033                           
 17034                           ;serial.c: 153:         num = - limit;
 17035  12FA  0141               	movlb	1	; select bank1
 17036  12FB  096A               	comf	clampInt@limit^(0+128),w
 17037  12FC  00EC               	movwf	??_clampInt^(0+128)
 17038  12FD  096B               	comf	(clampInt@limit+1)^(0+128),w
 17039  12FE  00ED               	movwf	(??_clampInt^(0+128)+1)
 17040  12FF  0AEC               	incf	??_clampInt^(0+128),f
 17041  1300  1903               	skipnz
 17042  1301  0AED               	incf	(??_clampInt^(0+128)+1),f
 17043  1302  086C               	movf	??_clampInt^(0+128),w
 17044  1303  00E8               	movwf	clampInt@num^(0+128)
 17045  1304  086D               	movf	(??_clampInt+1)^(0+128),w
 17046  1305  00E9               	movwf	(clampInt@num+1)^(0+128)
 17047  1306                     l6672:
 17048  1306                     l1064:	
 17049                           ;serial.c: 154:     return num;
 17050                           
 17051  1306  0008               	return
 17052  1307                     __end_of_clampInt:
 17053                           
 17054                           	psect	text62
 17055  173A                     __ptext62:	
 17056 ;; *************** function _calcCRC *****************
 17057 ;; Defined at:
 17058 ;;		line 116 in file "serial.c"
 17059 ;; Parameters:    Size  Location     Type
 17060 ;;  ptr             1    wreg     PTR unsigned char 
 17061 ;;		 -> estopBuffer(8), speedBuffer(12), 
 17062 ;; Auto vars:     Size  Location     Type
 17063 ;;  ptr             1    5[BANK1 ] PTR unsigned char 
 17064 ;;		 -> estopBuffer(8), speedBuffer(12), 
 17065 ;;  crc             2    6[BANK1 ] unsigned short 
 17066 ;;  count           1    4[BANK1 ] char 
 17067 ;;  i               1    3[BANK1 ] unsigned char 
 17068 ;; Return value:  Size  Location     Type
 17069 ;;                  2  974[None  ] unsigned short 
 17070 ;; Registers used:
 17071 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17072 ;; Tracked objects:
 17073 ;;		On entry : 0/0
 17074 ;;		On exit  : 0/0
 17075 ;;		Unchanged: 0/0
 17076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17078 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17079 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17080 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17081 ;;Total ram usage:        8 bytes
 17082 ;; Hardware stack levels used:    1
 17083 ;; Hardware stack levels required when called:    8
 17084 ;; This function calls:
 17085 ;;		Nothing
 17086 ;; This function is called by:
 17087 ;;		_sendBTSpeedCmd
 17088 ;; This function uses a non-reentrant model
 17089 ;;
 17090                           
 17091                           
 17092                           ;psect for function _calcCRC
 17093  173A                     _calcCRC:
 17094                           
 17095                           ;incstack = 0
 17096                           ; Regs used in _calcCRC: [wreg+fsr1l+fsr1h+status,2+status,0]
 17097                           ;calcCRC@ptr stored from wreg
 17098  173A  0141               	movlb	1	; select bank1
 17099  173B  00ED               	movwf	calcCRC@ptr^(0+128)
 17100  173C                     l6736:
 17101                           
 17102                           ;serial.c: 116: uint16_t calcCRC(uint8_t *ptr);serial.c: 117: {;serial.c: 118:   uint16_
      +                          t crc;;serial.c: 119:   uint8_t i;;serial.c: 120:   int8_t count = ptr[1] + 5;
 17103  173C  0A6D               	incf	calcCRC@ptr^(0+128),w
 17104  173D  0086               	movwf	6
 17105  173E  3001               	movlw	1	; select bank2/3
 17106  173F  0087               	movwf	7
 17107  1740  0801               	movf	1,w
 17108  1741  3E05               	addlw	5
 17109  1742  00E8               	movwf	??_calcCRC^(0+128)
 17110  1743  0868               	movf	??_calcCRC^(0+128),w
 17111  1744  00EC               	movwf	calcCRC@count^(0+128)
 17112  1745                     l6738:
 17113                           
 17114                           ;serial.c: 121:   crc = 0;
 17115  1745  01EE               	clrf	calcCRC@crc^(0+128)
 17116  1746  01EF               	clrf	(calcCRC@crc+1)^(0+128)
 17117                           
 17118                           ;serial.c: 123:   while (--count >= 0)
 17119  1747  2F7B               	goto	l6754
 17120  1748                     l6740:
 17121                           
 17122                           ;serial.c: 124:   {;serial.c: 125:     crc = crc ^ (uint16_t) *ptr++ << 8;
 17123  1748  086D               	movf	calcCRC@ptr^(0+128),w
 17124  1749  0086               	movwf	6
 17125  174A  3001               	movlw	1	; select bank2/3
 17126  174B  0087               	movwf	7
 17127  174C  0801               	movf	1,w
 17128  174D  00E8               	movwf	??_calcCRC^(0+128)
 17129  174E  01E9               	clrf	(??_calcCRC^(0+128)+1)
 17130  174F  0868               	movf	??_calcCRC^(0+128),w
 17131  1750  00E9               	movwf	(??_calcCRC^(0+128)+1)
 17132  1751  01E8               	clrf	??_calcCRC^(0+128)
 17133  1752  086E               	movf	calcCRC@crc^(0+128),w
 17134  1753  0668               	xorwf	??_calcCRC^(0+128),w
 17135  1754  00EE               	movwf	calcCRC@crc^(0+128)
 17136  1755  086F               	movf	(calcCRC@crc+1)^(0+128),w
 17137  1756  0669               	xorwf	(??_calcCRC+1)^(0+128),w
 17138  1757  00EF               	movwf	(calcCRC@crc+1)^(0+128)
 17139  1758                     l6742:
 17140  1758  3001               	movlw	1
 17141  1759  00E8               	movwf	??_calcCRC^(0+128)
 17142  175A  0868               	movf	??_calcCRC^(0+128),w
 17143  175B  07ED               	addwf	calcCRC@ptr^(0+128),f
 17144  175C                     l6744:
 17145                           
 17146                           ;serial.c: 126:     i = 8;
 17147  175C  3008               	movlw	8
 17148  175D  00E8               	movwf	??_calcCRC^(0+128)
 17149  175E  0868               	movf	??_calcCRC^(0+128),w
 17150  175F  00EB               	movwf	calcCRC@i^(0+128)
 17151  1760                     l6746:
 17152                           
 17153                           ;serial.c: 128:     {;serial.c: 129:       if (crc & 0x8000)
 17154  1760  1FEF               	btfss	(calcCRC@crc+1)^(0+128),7
 17155  1761  2F63               	goto	u5561
 17156  1762  2F64               	goto	u5560
 17157  1763                     u5561:
 17158  1763  2F71               	goto	l6750
 17159  1764                     u5560:
 17160  1764                     l6748:
 17161                           
 17162                           ;serial.c: 130:         crc = crc << 1 ^ 0x1021;
 17163  1764  086F               	movf	(calcCRC@crc+1)^(0+128),w
 17164  1765  00E9               	movwf	(??_calcCRC^(0+128)+1)
 17165  1766  086E               	movf	calcCRC@crc^(0+128),w
 17166  1767  00E8               	movwf	??_calcCRC^(0+128)
 17167  1768  35E8               	lslf	??_calcCRC^(0+128),f
 17168  1769  0DE9               	rlf	(??_calcCRC^(0+128)+1),f
 17169  176A  3021               	movlw	33
 17170  176B  0668               	xorwf	??_calcCRC^(0+128),w
 17171  176C  00EE               	movwf	calcCRC@crc^(0+128)
 17172  176D  3010               	movlw	16
 17173  176E  0669               	xorwf	(??_calcCRC+1)^(0+128),w
 17174  176F  00EF               	movwf	(calcCRC@crc+1)^(0+128)
 17175  1770  2F75               	goto	l6752
 17176  1771                     l6750:
 17177                           
 17178                           ;serial.c: 132:         crc = crc << 1;
 17179  1771  356E               	lslf	calcCRC@crc^(0+128),w
 17180  1772  00EE               	movwf	calcCRC@crc^(0+128)
 17181  1773  0D6F               	rlf	(calcCRC@crc+1)^(0+128),w
 17182  1774  00EF               	movwf	(calcCRC@crc+1)^(0+128)
 17183  1775                     l6752:
 17184                           
 17185                           ;serial.c: 133:     } while(--i);
 17186  1775  3001               	movlw	1
 17187  1776  02EB               	subwf	calcCRC@i^(0+128),f
 17188  1777  1D03               	btfss	3,2
 17189  1778  2F7A               	goto	u5571
 17190  1779  2F7B               	goto	u5570
 17191  177A                     u5571:
 17192  177A  2F60               	goto	l6746
 17193  177B                     u5570:
 17194  177B                     l6754:
 17195                           
 17196                           ;serial.c: 123:   while (--count >= 0)
 17197  177B  30FF               	movlw	255
 17198  177C  00E8               	movwf	??_calcCRC^(0+128)
 17199  177D  0868               	movf	??_calcCRC^(0+128),w
 17200  177E  07EC               	addwf	calcCRC@count^(0+128),f
 17201  177F  1FEC               	btfss	calcCRC@count^(0+128),7
 17202  1780  2F82               	goto	u5581
 17203  1781  2F83               	goto	u5580
 17204  1782                     u5581:
 17205  1782  2F48               	goto	l6740
 17206  1783                     u5580:
 17207  1783                     l6756:
 17208                           
 17209                           ;serial.c: 136:   *ptr++ = crc & 0xFF;
 17210  1783  086E               	movf	calcCRC@crc^(0+128),w
 17211  1784  00E8               	movwf	??_calcCRC^(0+128)
 17212  1785  086D               	movf	calcCRC@ptr^(0+128),w
 17213  1786  0086               	movwf	6
 17214  1787  3001               	movlw	1	; select bank2/3
 17215  1788  0087               	movwf	7
 17216  1789  0868               	movf	??_calcCRC^(0+128),w
 17217  178A  0081               	movwf	1
 17218  178B                     l6758:
 17219  178B  3001               	movlw	1
 17220  178C  00E8               	movwf	??_calcCRC^(0+128)
 17221  178D  0868               	movf	??_calcCRC^(0+128),w
 17222  178E  07ED               	addwf	calcCRC@ptr^(0+128),f
 17223  178F                     l6760:
 17224                           
 17225                           ;serial.c: 137:   *ptr++ = (crc >> 8) & 0xFF;
 17226  178F  086F               	movf	(calcCRC@crc+1)^(0+128),w
 17227  1790  00E8               	movwf	??_calcCRC^(0+128)
 17228  1791  086D               	movf	calcCRC@ptr^(0+128),w
 17229  1792  0086               	movwf	6
 17230  1793  3001               	movlw	1	; select bank2/3
 17231  1794  0087               	movwf	7
 17232  1795  0868               	movf	??_calcCRC^(0+128),w
 17233  1796  0081               	movwf	1
 17234  1797                     l6762:
 17235  1797  3001               	movlw	1
 17236  1798  00E8               	movwf	??_calcCRC^(0+128)
 17237  1799  0868               	movf	??_calcCRC^(0+128),w
 17238  179A  07ED               	addwf	calcCRC@ptr^(0+128),f
 17239  179B                     l1053:
 17240  179B  0008               	return
 17241  179C                     __end_of_calcCRC:
 17242                           
 17243                           	psect	text63
 17244  0E8B                     __ptext63:	
 17245 ;; *************** function _setJoystickType *****************
 17246 ;; Defined at:
 17247 ;;		line 98 in file "joystick.c"
 17248 ;; Parameters:    Size  Location     Type
 17249 ;;  jsType          1    wreg     unsigned char 
 17250 ;; Auto vars:     Size  Location     Type
 17251 ;;  jsType          1    4[BANK3 ] unsigned char 
 17252 ;;  i               2    5[BANK3 ] int 
 17253 ;; Return value:  Size  Location     Type
 17254 ;;                  1    wreg      void 
 17255 ;; Registers used:
 17256 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17257 ;; Tracked objects:
 17258 ;;		On entry : 0/0
 17259 ;;		On exit  : 0/0
 17260 ;;		Unchanged: 0/0
 17261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17263 ;;      Locals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17264 ;;      Temps:          0       0       0       0       0       5       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17265 ;;      Totals:         0       0       0       0       3       5       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17266 ;;Total ram usage:        8 bytes
 17267 ;; Hardware stack levels used:    1
 17268 ;; Hardware stack levels required when called:   10
 17269 ;; This function calls:
 17270 ;;		_ADCC_GetSingleConversion
 17271 ;;		_sleep
 17272 ;; This function is called by:
 17273 ;;		_initJoystick
 17274 ;;		_bumpUIType
 17275 ;; This function uses a non-reentrant model
 17276 ;;
 17277                           
 17278                           
 17279                           ;psect for function _setJoystickType
 17280  0E8B                     _setJoystickType:
 17281                           
 17282                           ;incstack = 0
 17283                           ; Regs used in _setJoystickType: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17284                           ;setJoystickType@jsType stored from wreg
 17285  0E8B  0143               	movlb	3	; select bank3
 17286  0E8C  00EC               	movwf	setJoystickType@jsType^(0+384)
 17287  0E8D                     l6894:
 17288                           
 17289                           ;joystick.c: 99:     joystickType = jsType;
 17290  0E8D  086C               	movf	setJoystickType@jsType^(0+384),w
 17291  0E8E  0144               	movlb	4	; select bank4
 17292  0E8F  00E0               	movwf	??_setJoystickType^(0+512)
 17293  0E90  0860               	movf	??_setJoystickType^(0+512),w
 17294  0E91  0140               	movlb	0	; select bank0
 17295  0E92  00CE               	movwf	_joystickType
 17296                           
 17297                           ;joystick.c: 100:     switch (joystickType) {
 17298  0E93  2F2C               	goto	l6924
 17299  0E94                     l893:	
 17300                           ;joystick.c: 101:         case 0:
 17301                           
 17302                           
 17303                           ;joystick.c: 102:             ADCON0bits.ADON = 0;
 17304  0E94  0142               	movlb	2	; select bank2
 17305  0E95  1391               	bcf	17,7	;volatile
 17306  0E96                     l6896:
 17307                           
 17308                           ;joystick.c: 103:             ANSELA = 0x01;
 17309  0E96  3001               	movlw	1
 17310  0E97  017E               	movlb	62	; select bank62
 17311  0E98  00B8               	movwf	56	;volatile
 17312                           
 17313                           ;joystick.c: 104:             WPUA = 0x16;
 17314  0E99  3016               	movlw	22
 17315  0E9A  00B9               	movwf	57	;volatile
 17316                           
 17317                           ;joystick.c: 105:             break;
 17318  0E9B  2F3D               	goto	l898
 17319  0E9C                     l6898:
 17320                           
 17321                           ;joystick.c: 108:             ANSELA = 0x07;
 17322  0E9C  3007               	movlw	7
 17323  0E9D  017E               	movlb	62	; select bank62
 17324  0E9E  00B8               	movwf	56	;volatile
 17325                           
 17326                           ;joystick.c: 109:             WPUA = 0x10;
 17327  0E9F  3010               	movlw	16
 17328  0EA0  00B9               	movwf	57	;volatile
 17329  0EA1                     l6900:
 17330                           
 17331                           ;joystick.c: 110:             ADCON0bits.ADON = 1;
 17332  0EA1  0142               	movlb	2	; select bank2
 17333  0EA2  1791               	bsf	17,7	;volatile
 17334  0EA3                     l6902:
 17335                           
 17336                           ;joystick.c: 111:             sleep(20);
 17337  0EA3  3000               	movlw	0
 17338  0EA4  00EF               	movwf	(sleep@delay+3)^(0+256)
 17339  0EA5  3000               	movlw	0
 17340  0EA6  00EE               	movwf	(sleep@delay+2)^(0+256)
 17341  0EA7  3000               	movlw	0
 17342  0EA8  00ED               	movwf	(sleep@delay+1)^(0+256)
 17343  0EA9  3014               	movlw	20
 17344  0EAA  00EC               	movwf	sleep@delay^(0+256)
 17345  0EAB  3193  23BB  318E   	fcall	_sleep
 17346  0EAE                     l6904:
 17347                           
 17348                           ;joystick.c: 114:             axialCenterSum = 0;
 17349  0EAE  3000               	movlw	0
 17350  0EAF  0141               	movlb	1	; select bank1
 17351  0EB0  00B3               	movwf	(_axialCenterSum+3)^(0+128)
 17352  0EB1  3000               	movlw	0
 17353  0EB2  00B2               	movwf	(_axialCenterSum+2)^(0+128)
 17354  0EB3  3000               	movlw	0
 17355  0EB4  00B1               	movwf	(_axialCenterSum+1)^(0+128)
 17356  0EB5  3000               	movlw	0
 17357  0EB6  00B0               	movwf	_axialCenterSum^(0+128)
 17358  0EB7                     l6906:
 17359                           
 17360                           ;joystick.c: 115:             yawCenterSum = 0;
 17361  0EB7  3000               	movlw	0
 17362  0EB8  00AF               	movwf	(_yawCenterSum+3)^(0+128)
 17363  0EB9  3000               	movlw	0
 17364  0EBA  00AE               	movwf	(_yawCenterSum+2)^(0+128)
 17365  0EBB  3000               	movlw	0
 17366  0EBC  00AD               	movwf	(_yawCenterSum+1)^(0+128)
 17367  0EBD  3000               	movlw	0
 17368  0EBE  00AC               	movwf	_yawCenterSum^(0+128)
 17369  0EBF                     l6908:
 17370                           
 17371                           ;joystick.c: 116:             for (int i = 0; i < 128; i++) {
 17372  0EBF  0143               	movlb	3	; select bank3
 17373  0EC0  01ED               	clrf	setJoystickType@i^(0+384)
 17374  0EC1  01EE               	clrf	(setJoystickType@i+1)^(0+384)
 17375  0EC2                     l6914:
 17376                           
 17377                           ;joystick.c: 117:                 axialCenterSum += ADCC_GetSingleConversion(JSDO);
 17378  0EC2  3002               	movlw	2
 17379  0EC3  319C  242E  318E   	fcall	_ADCC_GetSingleConversion
 17380  0EC6  0141               	movlb	1	; select bank1
 17381  0EC7  0868               	movf	?_ADCC_GetSingleConversion^(0+128),w
 17382  0EC8  07B0               	addwf	_axialCenterSum^(0+128),f
 17383  0EC9  0869               	movf	(?_ADCC_GetSingleConversion+1)^(0+128),w
 17384  0ECA  3DB1               	addwfc	(_axialCenterSum+1)^(0+128),f
 17385  0ECB  3000               	movlw	0
 17386  0ECC  3DB2               	addwfc	(_axialCenterSum+2)^(0+128),f
 17387  0ECD  3DB3               	addwfc	(_axialCenterSum+3)^(0+128),f
 17388                           
 17389                           ;joystick.c: 118:                 yawCenterSum += ADCC_GetSingleConversion(JSLE);
 17390  0ECE  3001               	movlw	1
 17391  0ECF  319C  242E  318E   	fcall	_ADCC_GetSingleConversion
 17392  0ED2  0141               	movlb	1	; select bank1
 17393  0ED3  0868               	movf	?_ADCC_GetSingleConversion^(0+128),w
 17394  0ED4  07AC               	addwf	_yawCenterSum^(0+128),f
 17395  0ED5  0869               	movf	(?_ADCC_GetSingleConversion+1)^(0+128),w
 17396  0ED6  3DAD               	addwfc	(_yawCenterSum+1)^(0+128),f
 17397  0ED7  3000               	movlw	0
 17398  0ED8  3DAE               	addwfc	(_yawCenterSum+2)^(0+128),f
 17399  0ED9  3DAF               	addwfc	(_yawCenterSum+3)^(0+128),f
 17400  0EDA                     l6916:
 17401                           
 17402                           ;joystick.c: 119:             }
 17403  0EDA  3001               	movlw	1
 17404  0EDB  0143               	movlb	3	; select bank3
 17405  0EDC  07ED               	addwf	setJoystickType@i^(0+384),f
 17406  0EDD  3000               	movlw	0
 17407  0EDE  3DEE               	addwfc	(setJoystickType@i+1)^(0+384),f
 17408  0EDF                     l6918:
 17409  0EDF  086E               	movf	(setJoystickType@i+1)^(0+384),w
 17410  0EE0  3A80               	xorlw	128
 17411  0EE1  0144               	movlb	4	; select bank4
 17412  0EE2  00E0               	movwf	??_setJoystickType^(0+512)
 17413  0EE3  3080               	movlw	128
 17414  0EE4  0260               	subwf	??_setJoystickType^(0+512),w
 17415  0EE5  1D03               	skipz
 17416  0EE6  2EEA               	goto	u5745
 17417  0EE7  3080               	movlw	128
 17418  0EE8  0143               	movlb	3	; select bank3
 17419  0EE9  026D               	subwf	setJoystickType@i^(0+384),w
 17420  0EEA                     u5745:
 17421  0EEA  1C03               	skipc
 17422  0EEB  2EED               	goto	u5741
 17423  0EEC  2EEE               	goto	u5740
 17424  0EED                     u5741:
 17425  0EED  2EC2               	goto	l6914
 17426  0EEE                     u5740:
 17427  0EEE                     l6920:
 17428                           
 17429                           ;joystick.c: 120:             axialCenter = axialCenterSum >> 7;
 17430  0EEE  0141               	movlb	1	; select bank1
 17431  0EEF  0830               	movf	_axialCenterSum^(0+128),w
 17432  0EF0  0144               	movlb	4	; select bank4
 17433  0EF1  00E0               	movwf	??_setJoystickType^(0+512)
 17434  0EF2  0141               	movlb	1	; select bank1
 17435  0EF3  0831               	movf	(_axialCenterSum+1)^(0+128),w
 17436  0EF4  0144               	movlb	4	; select bank4
 17437  0EF5  00E1               	movwf	(??_setJoystickType^(0+512)+1)
 17438  0EF6  0141               	movlb	1	; select bank1
 17439  0EF7  0832               	movf	(_axialCenterSum+2)^(0+128),w
 17440  0EF8  0144               	movlb	4	; select bank4
 17441  0EF9  00E2               	movwf	(??_setJoystickType^(0+512)+2)
 17442  0EFA  0141               	movlb	1	; select bank1
 17443  0EFB  0833               	movf	(_axialCenterSum+3)^(0+128),w
 17444  0EFC  0144               	movlb	4	; select bank4
 17445  0EFD  00E3               	movwf	(??_setJoystickType^(0+512)+3)
 17446  0EFE  3007               	movlw	7
 17447  0EFF  00E4               	movwf	(??_setJoystickType+4)^(0+512)
 17448  0F00                     u5755:
 17449  0F00  37E3               	asrf	(??_setJoystickType^(0+512)+3),f
 17450  0F01  0CE2               	rrf	(??_setJoystickType^(0+512)+2),f
 17451  0F02  0CE1               	rrf	(??_setJoystickType^(0+512)+1),f
 17452  0F03  0CE0               	rrf	??_setJoystickType^(0+512),f
 17453  0F04                     u5750:
 17454  0F04  0BE4               	decfsz	(??_setJoystickType+4)^(0+512),f
 17455  0F05  2F00               	goto	u5755
 17456  0F06  0861               	movf	(??_setJoystickType+1)^(0+512),w
 17457  0F07  0141               	movlb	1	; select bank1
 17458  0F08  00E7               	movwf	(_axialCenter+1)^(0+128)
 17459  0F09  0144               	movlb	4	; select bank4
 17460  0F0A  0860               	movf	??_setJoystickType^(0+512),w
 17461  0F0B  0141               	movlb	1	; select bank1
 17462  0F0C  00E6               	movwf	_axialCenter^(0+128)
 17463                           
 17464                           ;joystick.c: 121:             yawCenter = yawCenterSum >> 7;
 17465  0F0D  082C               	movf	_yawCenterSum^(0+128),w
 17466  0F0E  0144               	movlb	4	; select bank4
 17467  0F0F  00E0               	movwf	??_setJoystickType^(0+512)
 17468  0F10  0141               	movlb	1	; select bank1
 17469  0F11  082D               	movf	(_yawCenterSum+1)^(0+128),w
 17470  0F12  0144               	movlb	4	; select bank4
 17471  0F13  00E1               	movwf	(??_setJoystickType^(0+512)+1)
 17472  0F14  0141               	movlb	1	; select bank1
 17473  0F15  082E               	movf	(_yawCenterSum+2)^(0+128),w
 17474  0F16  0144               	movlb	4	; select bank4
 17475  0F17  00E2               	movwf	(??_setJoystickType^(0+512)+2)
 17476  0F18  0141               	movlb	1	; select bank1
 17477  0F19  082F               	movf	(_yawCenterSum+3)^(0+128),w
 17478  0F1A  0144               	movlb	4	; select bank4
 17479  0F1B  00E3               	movwf	(??_setJoystickType^(0+512)+3)
 17480  0F1C  3007               	movlw	7
 17481  0F1D  00E4               	movwf	(??_setJoystickType+4)^(0+512)
 17482  0F1E                     u5765:
 17483  0F1E  37E3               	asrf	(??_setJoystickType^(0+512)+3),f
 17484  0F1F  0CE2               	rrf	(??_setJoystickType^(0+512)+2),f
 17485  0F20  0CE1               	rrf	(??_setJoystickType^(0+512)+1),f
 17486  0F21  0CE0               	rrf	??_setJoystickType^(0+512),f
 17487  0F22                     u5760:
 17488  0F22  0BE4               	decfsz	(??_setJoystickType+4)^(0+512),f
 17489  0F23  2F1E               	goto	u5765
 17490  0F24  0861               	movf	(??_setJoystickType+1)^(0+512),w
 17491  0F25  0141               	movlb	1	; select bank1
 17492  0F26  00E5               	movwf	(_yawCenter+1)^(0+128)
 17493  0F27  0144               	movlb	4	; select bank4
 17494  0F28  0860               	movf	??_setJoystickType^(0+512),w
 17495  0F29  0141               	movlb	1	; select bank1
 17496  0F2A  00E4               	movwf	_yawCenter^(0+128)
 17497                           
 17498                           ;joystick.c: 122:             break;
 17499  0F2B  2F3D               	goto	l898
 17500  0F2C                     l6924:
 17501  0F2C  084E               	movf	_joystickType,w
 17502  0F2D  0144               	movlb	4	; select bank4
 17503  0F2E  00E0               	movwf	??_setJoystickType^(0+512)
 17504  0F2F  01E1               	clrf	(??_setJoystickType^(0+512)+1)
 17505                           
 17506                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17507                           ; Switch size 1, requested type "simple"
 17508                           ; Number of cases is 1, Range of values is 0 to 0
 17509                           ; switch strategies available:
 17510                           ; Name         Instructions Cycles
 17511                           ; simple_byte            4     3 (average)
 17512                           ; direct_byte            8     6 (fixed)
 17513                           ; jumptable            260     6 (fixed)
 17514                           ;	Chosen strategy is simple_byte
 17515  0F30  0861               	movf	(??_setJoystickType+1)^(0+512),w
 17516  0F31  3A00               	xorlw	0	; case 0
 17517  0F32  1903               	skipnz
 17518  0F33  2F35               	goto	l7904
 17519  0F34  2F3D               	goto	l898
 17520  0F35                     l7904:
 17521                           
 17522                           ; Switch size 1, requested type "simple"
 17523                           ; Number of cases is 2, Range of values is 0 to 1
 17524                           ; switch strategies available:
 17525                           ; Name         Instructions Cycles
 17526                           ; simple_byte            7     4 (average)
 17527                           ; direct_byte           10     6 (fixed)
 17528                           ; jumptable            260     6 (fixed)
 17529                           ;	Chosen strategy is simple_byte
 17530  0F35  0860               	movf	??_setJoystickType^(0+512),w
 17531  0F36  3A00               	xorlw	0	; case 0
 17532  0F37  1903               	skipnz
 17533  0F38  2E94               	goto	l893
 17534  0F39  3A01               	xorlw	1	; case 1
 17535  0F3A  1903               	skipnz
 17536  0F3B  2E9C               	goto	l6898
 17537  0F3C  2F3D               	goto	l898
 17538  0F3D                     l898:
 17539  0F3D  0008               	return
 17540  0F3E                     __end_of_setJoystickType:
 17541                           
 17542                           	psect	text64
 17543  1C2E                     __ptext64:	
 17544 ;; *************** function _ADCC_GetSingleConversion *****************
 17545 ;; Defined at:
 17546 ;;		line 138 in file "mcc_generated_files/adcc.c"
 17547 ;; Parameters:    Size  Location     Type
 17548 ;;  channel         1    wreg     enum E10887
 17549 ;; Auto vars:     Size  Location     Type
 17550 ;;  channel         1    3[BANK1 ] enum E10887
 17551 ;; Return value:  Size  Location     Type
 17552 ;;                  2    0[BANK1 ] unsigned short 
 17553 ;; Registers used:
 17554 ;;		wreg
 17555 ;; Tracked objects:
 17556 ;;		On entry : 0/0
 17557 ;;		On exit  : 0/0
 17558 ;;		Unchanged: 0/0
 17559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17560 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17561 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17563 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17564 ;;Total ram usage:        4 bytes
 17565 ;; Hardware stack levels used:    1
 17566 ;; Hardware stack levels required when called:    8
 17567 ;; This function calls:
 17568 ;;		Nothing
 17569 ;; This function is called by:
 17570 ;;		_setJoystickType
 17571 ;; This function uses a non-reentrant model
 17572 ;;
 17573                           
 17574                           
 17575                           ;psect for function _ADCC_GetSingleConversion
 17576  1C2E                     _ADCC_GetSingleConversion:
 17577                           
 17578                           ;incstack = 0
 17579                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 17580                           ;ADCC_GetSingleConversion@channel stored from wreg
 17581  1C2E  0141               	movlb	1	; select bank1
 17582  1C2F  00EB               	movwf	ADCC_GetSingleConversion@channel^(0+128)
 17583  1C30                     l6652:
 17584                           
 17585                           ;mcc_generated_files/adcc.c: 138: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 139: {;mcc_generated_files/adcc.c: 141:     ADPCH = 
      +                          channel;
 17586  1C30  086B               	movf	ADCC_GetSingleConversion@channel^(0+128),w
 17587  1C31  009F               	movwf	31	;volatile
 17588  1C32                     l6654:
 17589                           
 17590                           ;mcc_generated_files/adcc.c: 144:     ADCON0bits.ADON = 1;
 17591  1C32  0142               	movlb	2	; select bank2
 17592  1C33  1791               	bsf	17,7	;volatile
 17593  1C34                     l6656:
 17594                           
 17595                           ;mcc_generated_files/adcc.c: 147:     ADCON0bits.ADCONT = 0;
 17596  1C34  1311               	bcf	17,6	;volatile
 17597  1C35                     l6658:
 17598                           
 17599                           ;mcc_generated_files/adcc.c: 150:     ADCON0bits.ADGO = 1;
 17600  1C35  1411               	bsf	17,0	;volatile
 17601  1C36                     l651:	
 17602                           ;mcc_generated_files/adcc.c: 155:     {;mcc_generated_files/adcc.c: 156:     }
 17603                           
 17604                           
 17605                           ;mcc_generated_files/adcc.c: 154:     while (ADCON0bits.ADGO)
 17606  1C36  1811               	btfsc	17,0	;volatile
 17607  1C37  2C39               	goto	u5451
 17608  1C38  2C3A               	goto	u5450
 17609  1C39                     u5451:
 17610  1C39  2C36               	goto	l651
 17611  1C3A                     u5450:
 17612  1C3A                     l6660:
 17613                           
 17614                           ;mcc_generated_files/adcc.c: 160:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 17615  1C3A  0141               	movlb	1	; select bank1
 17616  1C3B  081E               	movf	30,w	;volatile
 17617  1C3C  00E9               	movwf	(?_ADCC_GetSingleConversion+1)^(0+128)
 17618  1C3D  081D               	movf	29,w	;volatile
 17619  1C3E  00E8               	movwf	?_ADCC_GetSingleConversion^(0+128)
 17620  1C3F                     l654:
 17621  1C3F  0008               	return
 17622  1C40                     __end_of_ADCC_GetSingleConversion:
 17623                           
 17624                           	psect	text65
 17625  0A63                     __ptext65:	
 17626 ;; *************** function _setJoystickSpeed *****************
 17627 ;; Defined at:
 17628 ;;		line 77 in file "joystick.c"
 17629 ;; Parameters:    Size  Location     Type
 17630 ;;  jsSpeedMode     1    wreg     char 
 17631 ;; Auto vars:     Size  Location     Type
 17632 ;;  jsSpeedMode     1    7[BANK1 ] char 
 17633 ;; Return value:  Size  Location     Type
 17634 ;;                  1    wreg      void 
 17635 ;; Registers used:
 17636 ;;		wreg, status,2, status,0, pclath, cstack
 17637 ;; Tracked objects:
 17638 ;;		On entry : 0/0
 17639 ;;		On exit  : 0/0
 17640 ;;		Unchanged: 0/0
 17641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17643 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17645 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17646 ;;Total ram usage:        1 bytes
 17647 ;; Hardware stack levels used:    1
 17648 ;; Hardware stack levels required when called:    9
 17649 ;; This function calls:
 17650 ;;		___awdiv
 17651 ;;		___wmul
 17652 ;; This function is called by:
 17653 ;;		_initJoystick
 17654 ;;		_bumpUISpeedMode
 17655 ;; This function uses a non-reentrant model
 17656 ;;
 17657                           
 17658                           
 17659                           ;psect for function _setJoystickSpeed
 17660  0A63                     _setJoystickSpeed:
 17661                           
 17662                           ;incstack = 0
 17663                           ; Regs used in _setJoystickSpeed: [wreg+status,2+status,0+pclath+cstack]
 17664                           ;setJoystickSpeed@jsSpeedMode stored from wreg
 17665  0A63  0141               	movlb	1	; select bank1
 17666  0A64  00EF               	movwf	setJoystickSpeed@jsSpeedMode^(0+128)
 17667  0A65                     l6930:
 17668                           
 17669                           ;joystick.c: 78:     topAxialSpeedFP = (300 << 2) * (3 + jsSpeedMode) / 3;
 17670  0A65  3003               	movlw	3
 17671  0A66  0142               	movlb	2	; select bank2
 17672  0A67  00EC               	movwf	___awdiv@divisor^(0+256)
 17673  0A68  3000               	movlw	0
 17674  0A69  00ED               	movwf	(___awdiv@divisor^(0+256)+1)
 17675  0A6A  3003               	movlw	3
 17676  0A6B  0141               	movlb	1	; select bank1
 17677  0A6C  076F               	addwf	setJoystickSpeed@jsSpeedMode^(0+128),w
 17678  0A6D  00E8               	movwf	___wmul@multiplier^(0+128)
 17679  0A6E  01E9               	clrf	(___wmul@multiplier+1)^(0+128)
 17680  0A6F  1803               	skipnc
 17681  0A70  0AE9               	incf	(___wmul@multiplier^(0+128)+1),f
 17682  0A71  1FEF               	btfss	setJoystickSpeed@jsSpeedMode^(0+128),7
 17683  0A72  2A74               	goto	u5774
 17684  0A73  03E9               	decf	(___wmul@multiplier^(0+128)+1),f
 17685  0A74                     u5774:
 17686  0A74  30B0               	movlw	176
 17687  0A75  0141               	movlb	1	; select bank1
 17688  0A76  00EA               	movwf	___wmul@multiplicand^(0+128)
 17689  0A77  3004               	movlw	4
 17690  0A78  00EB               	movwf	(___wmul@multiplicand^(0+128)+1)
 17691  0A79  319E  2689  318A   	fcall	___wmul
 17692  0A7C  0141               	movlb	1	; select bank1
 17693  0A7D  0869               	movf	(?___wmul+1)^(0+128),w
 17694  0A7E  0142               	movlb	2	; select bank2
 17695  0A7F  00EF               	movwf	(___awdiv@dividend+1)^(0+256)
 17696  0A80  0141               	movlb	1	; select bank1
 17697  0A81  0868               	movf	?___wmul^(0+128),w
 17698  0A82  0142               	movlb	2	; select bank2
 17699  0A83  00EE               	movwf	___awdiv@dividend^(0+256)
 17700  0A84  3189  2173  318A   	fcall	___awdiv
 17701  0A87  0142               	movlb	2	; select bank2
 17702  0A88  086D               	movf	(?___awdiv+1)^(0+256),w
 17703  0A89  0141               	movlb	1	; select bank1
 17704  0A8A  00BD               	movwf	(_topAxialSpeedFP+1)^(0+128)
 17705  0A8B  0142               	movlb	2	; select bank2
 17706  0A8C  086C               	movf	?___awdiv^(0+256),w
 17707  0A8D  0141               	movlb	1	; select bank1
 17708  0A8E  00BC               	movwf	_topAxialSpeedFP^(0+128)
 17709                           
 17710                           ;joystick.c: 79:     topYawSpeedFP = (30 << 2) * (3 + jsSpeedMode) / 3;
 17711  0A8F  3003               	movlw	3
 17712  0A90  0142               	movlb	2	; select bank2
 17713  0A91  00EC               	movwf	___awdiv@divisor^(0+256)
 17714  0A92  3000               	movlw	0
 17715  0A93  00ED               	movwf	(___awdiv@divisor^(0+256)+1)
 17716  0A94  3003               	movlw	3
 17717  0A95  0141               	movlb	1	; select bank1
 17718  0A96  076F               	addwf	setJoystickSpeed@jsSpeedMode^(0+128),w
 17719  0A97  00E8               	movwf	___wmul@multiplier^(0+128)
 17720  0A98  01E9               	clrf	(___wmul@multiplier+1)^(0+128)
 17721  0A99  1803               	skipnc
 17722  0A9A  0AE9               	incf	(___wmul@multiplier^(0+128)+1),f
 17723  0A9B  1FEF               	btfss	setJoystickSpeed@jsSpeedMode^(0+128),7
 17724  0A9C  2A9E               	goto	u5784
 17725  0A9D  03E9               	decf	(___wmul@multiplier^(0+128)+1),f
 17726  0A9E                     u5784:
 17727  0A9E  3078               	movlw	120
 17728  0A9F  0141               	movlb	1	; select bank1
 17729  0AA0  00EA               	movwf	___wmul@multiplicand^(0+128)
 17730  0AA1  3000               	movlw	0
 17731  0AA2  00EB               	movwf	(___wmul@multiplicand^(0+128)+1)
 17732  0AA3  319E  2689  318A   	fcall	___wmul
 17733  0AA6  0141               	movlb	1	; select bank1
 17734  0AA7  0869               	movf	(?___wmul+1)^(0+128),w
 17735  0AA8  0142               	movlb	2	; select bank2
 17736  0AA9  00EF               	movwf	(___awdiv@dividend+1)^(0+256)
 17737  0AAA  0141               	movlb	1	; select bank1
 17738  0AAB  0868               	movf	?___wmul^(0+128),w
 17739  0AAC  0142               	movlb	2	; select bank2
 17740  0AAD  00EE               	movwf	___awdiv@dividend^(0+256)
 17741  0AAE  3189  2173  318A   	fcall	___awdiv
 17742  0AB1  0142               	movlb	2	; select bank2
 17743  0AB2  086D               	movf	(?___awdiv+1)^(0+256),w
 17744  0AB3  0141               	movlb	1	; select bank1
 17745  0AB4  00BB               	movwf	(_topYawSpeedFP+1)^(0+128)
 17746  0AB5  0142               	movlb	2	; select bank2
 17747  0AB6  086C               	movf	?___awdiv^(0+256),w
 17748  0AB7  0141               	movlb	1	; select bank1
 17749  0AB8  00BA               	movwf	_topYawSpeedFP^(0+128)
 17750                           
 17751                           ;joystick.c: 80:     topSweepSpeedFP = (15 << 2) * (3 + jsSpeedMode) / 3;
 17752  0AB9  3003               	movlw	3
 17753  0ABA  0142               	movlb	2	; select bank2
 17754  0ABB  00EC               	movwf	___awdiv@divisor^(0+256)
 17755  0ABC  3000               	movlw	0
 17756  0ABD  00ED               	movwf	(___awdiv@divisor^(0+256)+1)
 17757  0ABE  3003               	movlw	3
 17758  0ABF  0141               	movlb	1	; select bank1
 17759  0AC0  076F               	addwf	setJoystickSpeed@jsSpeedMode^(0+128),w
 17760  0AC1  00E8               	movwf	___wmul@multiplier^(0+128)
 17761  0AC2  01E9               	clrf	(___wmul@multiplier+1)^(0+128)
 17762  0AC3  1803               	skipnc
 17763  0AC4  0AE9               	incf	(___wmul@multiplier^(0+128)+1),f
 17764  0AC5  1FEF               	btfss	setJoystickSpeed@jsSpeedMode^(0+128),7
 17765  0AC6  2AC8               	goto	u5794
 17766  0AC7  03E9               	decf	(___wmul@multiplier^(0+128)+1),f
 17767  0AC8                     u5794:
 17768  0AC8  303C               	movlw	60
 17769  0AC9  0141               	movlb	1	; select bank1
 17770  0ACA  00EA               	movwf	___wmul@multiplicand^(0+128)
 17771  0ACB  3000               	movlw	0
 17772  0ACC  00EB               	movwf	(___wmul@multiplicand^(0+128)+1)
 17773  0ACD  319E  2689  318A   	fcall	___wmul
 17774  0AD0  0141               	movlb	1	; select bank1
 17775  0AD1  0869               	movf	(?___wmul+1)^(0+128),w
 17776  0AD2  0142               	movlb	2	; select bank2
 17777  0AD3  00EF               	movwf	(___awdiv@dividend+1)^(0+256)
 17778  0AD4  0141               	movlb	1	; select bank1
 17779  0AD5  0868               	movf	?___wmul^(0+128),w
 17780  0AD6  0142               	movlb	2	; select bank2
 17781  0AD7  00EE               	movwf	___awdiv@dividend^(0+256)
 17782  0AD8  3189  2173  318A   	fcall	___awdiv
 17783  0ADB  0142               	movlb	2	; select bank2
 17784  0ADC  086D               	movf	(?___awdiv+1)^(0+256),w
 17785  0ADD  0141               	movlb	1	; select bank1
 17786  0ADE  00B9               	movwf	(_topSweepSpeedFP+1)^(0+128)
 17787  0ADF  0142               	movlb	2	; select bank2
 17788  0AE0  086C               	movf	?___awdiv^(0+256),w
 17789  0AE1  0141               	movlb	1	; select bank1
 17790  0AE2  00B8               	movwf	_topSweepSpeedFP^(0+128)
 17791  0AE3                     l880:
 17792  0AE3  0008               	return
 17793  0AE4                     __end_of_setJoystickSpeed:
 17794                           
 17795                           	psect	text66
 17796  1E89                     __ptext66:	
 17797 ;; *************** function ___wmul *****************
 17798 ;; Defined at:
 17799 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 17800 ;; Parameters:    Size  Location     Type
 17801 ;;  multiplier      2    0[BANK1 ] unsigned int 
 17802 ;;  multiplicand    2    2[BANK1 ] unsigned int 
 17803 ;; Auto vars:     Size  Location     Type
 17804 ;;  product         2    4[BANK1 ] unsigned int 
 17805 ;; Return value:  Size  Location     Type
 17806 ;;                  2    0[BANK1 ] unsigned int 
 17807 ;; Registers used:
 17808 ;;		wreg, status,2, status,0
 17809 ;; Tracked objects:
 17810 ;;		On entry : 0/0
 17811 ;;		On exit  : 0/0
 17812 ;;		Unchanged: 0/0
 17813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17814 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17815 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17817 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17818 ;;Total ram usage:        6 bytes
 17819 ;; Hardware stack levels used:    1
 17820 ;; Hardware stack levels required when called:    8
 17821 ;; This function calls:
 17822 ;;		Nothing
 17823 ;; This function is called by:
 17824 ;;		_setJoystickSpeed
 17825 ;;		_int16cat
 17826 ;; This function uses a non-reentrant model
 17827 ;;
 17828                           
 17829                           
 17830                           ;psect for function ___wmul
 17831  1E89                     ___wmul:
 17832  1E89                     l6552:	
 17833                           ;incstack = 0
 17834                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 17835                           
 17836  1E89  0141               	movlb	1	; select bank1
 17837  1E8A  01EC               	clrf	___wmul@product^(0+128)
 17838  1E8B  01ED               	clrf	(___wmul@product+1)^(0+128)
 17839  1E8C                     l6554:
 17840  1E8C  1C68               	btfss	___wmul@multiplier^(0+128),0
 17841  1E8D  2E8F               	goto	u5231
 17842  1E8E  2E90               	goto	u5230
 17843  1E8F                     u5231:
 17844  1E8F  2E94               	goto	l1622
 17845  1E90                     u5230:
 17846  1E90                     l6556:
 17847  1E90  086A               	movf	___wmul@multiplicand^(0+128),w
 17848  1E91  07EC               	addwf	___wmul@product^(0+128),f
 17849  1E92  086B               	movf	(___wmul@multiplicand+1)^(0+128),w
 17850  1E93  3DED               	addwfc	(___wmul@product+1)^(0+128),f
 17851  1E94                     l1622:
 17852  1E94  3001               	movlw	1
 17853  1E95                     u5245:
 17854  1E95  35EA               	lslf	___wmul@multiplicand^(0+128),f
 17855  1E96  0DEB               	rlf	(___wmul@multiplicand+1)^(0+128),f
 17856  1E97  0B89               	decfsz	9,f
 17857  1E98  2E95               	goto	u5245
 17858  1E99                     l6558:
 17859  1E99  3001               	movlw	1
 17860  1E9A                     u5255:
 17861  1E9A  36E9               	lsrf	(___wmul@multiplier+1)^(0+128),f
 17862  1E9B  0CE8               	rrf	___wmul@multiplier^(0+128),f
 17863  1E9C  0B89               	decfsz	9,f
 17864  1E9D  2E9A               	goto	u5255
 17865  1E9E                     l6560:
 17866  1E9E  0868               	movf	___wmul@multiplier^(0+128),w
 17867  1E9F  0469               	iorwf	(___wmul@multiplier+1)^(0+128),w
 17868  1EA0  1D03               	btfss	3,2
 17869  1EA1  2EA3               	goto	u5261
 17870  1EA2  2EA4               	goto	u5260
 17871  1EA3                     u5261:
 17872  1EA3  2E8C               	goto	l6554
 17873  1EA4                     u5260:
 17874  1EA4                     l6562:
 17875  1EA4  086D               	movf	(___wmul@product+1)^(0+128),w
 17876  1EA5  00E9               	movwf	(?___wmul+1)^(0+128)
 17877  1EA6  086C               	movf	___wmul@product^(0+128),w
 17878  1EA7  00E8               	movwf	?___wmul^(0+128)
 17879  1EA8                     l1624:
 17880  1EA8  0008               	return
 17881  1EA9                     __end_of___wmul:
 17882                           
 17883                           	psect	text67
 17884  0973                     __ptext67:	
 17885 ;; *************** function ___awdiv *****************
 17886 ;; Defined at:
 17887 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 17888 ;; Parameters:    Size  Location     Type
 17889 ;;  divisor         2    0[BANK2 ] int 
 17890 ;;  dividend        2    2[BANK2 ] int 
 17891 ;; Auto vars:     Size  Location     Type
 17892 ;;  quotient        2    2[BANK3 ] int 
 17893 ;;  sign            1    1[BANK3 ] unsigned char 
 17894 ;;  counter         1    0[BANK3 ] unsigned char 
 17895 ;; Return value:  Size  Location     Type
 17896 ;;                  2    0[BANK2 ] int 
 17897 ;; Registers used:
 17898 ;;		wreg, status,2, status,0
 17899 ;; Tracked objects:
 17900 ;;		On entry : 0/0
 17901 ;;		On exit  : 0/0
 17902 ;;		Unchanged: 0/0
 17903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17904 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17905 ;;      Locals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17906 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17907 ;;      Totals:         0       0       1       4       4       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17908 ;;Total ram usage:        9 bytes
 17909 ;; Hardware stack levels used:    1
 17910 ;; Hardware stack levels required when called:    8
 17911 ;; This function calls:
 17912 ;;		Nothing
 17913 ;; This function is called by:
 17914 ;;		_setJoystickSpeed
 17915 ;;		_int16cat
 17916 ;; This function uses a non-reentrant model
 17917 ;;
 17918                           
 17919                           
 17920                           ;psect for function ___awdiv
 17921  0973                     ___awdiv:
 17922  0973                     l6566:	
 17923                           ;incstack = 0
 17924                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 17925                           
 17926  0973  0143               	movlb	3	; select bank3
 17927  0974  01E9               	clrf	___awdiv@sign^(0+384)
 17928  0975                     l6568:
 17929  0975  0142               	movlb	2	; select bank2
 17930  0976  1FED               	btfss	(___awdiv@divisor+1)^(0+256),7
 17931  0977  2979               	goto	u5271
 17932  0978  297A               	goto	u5270
 17933  0979                     u5271:
 17934  0979  2982               	goto	l6574
 17935  097A                     u5270:
 17936  097A                     l6570:
 17937  097A  09EC               	comf	___awdiv@divisor^(0+256),f
 17938  097B  09ED               	comf	(___awdiv@divisor+1)^(0+256),f
 17939  097C  0AEC               	incf	___awdiv@divisor^(0+256),f
 17940  097D  1903               	skipnz
 17941  097E  0AED               	incf	(___awdiv@divisor+1)^(0+256),f
 17942  097F                     l6572:
 17943  097F  0143               	movlb	3	; select bank3
 17944  0980  01E9               	clrf	___awdiv@sign^(0+384)
 17945  0981  0AE9               	incf	___awdiv@sign^(0+384),f
 17946  0982                     l6574:
 17947  0982  0142               	movlb	2	; select bank2
 17948  0983  1FEF               	btfss	(___awdiv@dividend+1)^(0+256),7
 17949  0984  2986               	goto	u5281
 17950  0985  2987               	goto	u5280
 17951  0986                     u5281:
 17952  0986  2992               	goto	l6580
 17953  0987                     u5280:
 17954  0987                     l6576:
 17955  0987  09EE               	comf	___awdiv@dividend^(0+256),f
 17956  0988  09EF               	comf	(___awdiv@dividend+1)^(0+256),f
 17957  0989  0AEE               	incf	___awdiv@dividend^(0+256),f
 17958  098A  1903               	skipnz
 17959  098B  0AEF               	incf	(___awdiv@dividend+1)^(0+256),f
 17960  098C                     l6578:
 17961  098C  3001               	movlw	1
 17962  098D  0141               	movlb	1	; select bank1
 17963  098E  00EE               	movwf	??___awdiv^(0+128)
 17964  098F  086E               	movf	??___awdiv^(0+128),w
 17965  0990  0143               	movlb	3	; select bank3
 17966  0991  06E9               	xorwf	___awdiv@sign^(0+384),f
 17967  0992                     l6580:
 17968  0992  0143               	movlb	3	; select bank3
 17969  0993  01EA               	clrf	___awdiv@quotient^(0+384)
 17970  0994  01EB               	clrf	(___awdiv@quotient+1)^(0+384)
 17971  0995                     l6582:
 17972  0995  0142               	movlb	2	; select bank2
 17973  0996  086C               	movf	___awdiv@divisor^(0+256),w
 17974  0997  046D               	iorwf	(___awdiv@divisor+1)^(0+256),w
 17975  0998  1903               	btfsc	3,2
 17976  0999  299B               	goto	u5291
 17977  099A  299C               	goto	u5290
 17978  099B                     u5291:
 17979  099B  29D4               	goto	l6602
 17980  099C                     u5290:
 17981  099C                     l6584:
 17982  099C  0143               	movlb	3	; select bank3
 17983  099D  01E8               	clrf	___awdiv@counter^(0+384)
 17984  099E  0AE8               	incf	___awdiv@counter^(0+384),f
 17985  099F  29AB               	goto	l6590
 17986  09A0                     l6586:
 17987  09A0  3001               	movlw	1
 17988  09A1                     u5305:
 17989  09A1  35EC               	lslf	___awdiv@divisor^(0+256),f
 17990  09A2  0DED               	rlf	(___awdiv@divisor+1)^(0+256),f
 17991  09A3  0B89               	decfsz	9,f
 17992  09A4  29A1               	goto	u5305
 17993  09A5                     l6588:
 17994  09A5  3001               	movlw	1
 17995  09A6  0141               	movlb	1	; select bank1
 17996  09A7  00EE               	movwf	??___awdiv^(0+128)
 17997  09A8  086E               	movf	??___awdiv^(0+128),w
 17998  09A9  0143               	movlb	3	; select bank3
 17999  09AA  07E8               	addwf	___awdiv@counter^(0+384),f
 18000  09AB                     l6590:
 18001  09AB  0142               	movlb	2	; select bank2
 18002  09AC  1FED               	btfss	(___awdiv@divisor+1)^(0+256),7
 18003  09AD  29AF               	goto	u5311
 18004  09AE  29B0               	goto	u5310
 18005  09AF                     u5311:
 18006  09AF  29A0               	goto	l6586
 18007  09B0                     u5310:
 18008  09B0                     l6592:
 18009  09B0  3001               	movlw	1
 18010  09B1  0143               	movlb	3	; select bank3
 18011  09B2                     u5325:
 18012  09B2  35EA               	lslf	___awdiv@quotient^(0+384),f
 18013  09B3  0DEB               	rlf	(___awdiv@quotient+1)^(0+384),f
 18014  09B4  0B89               	decfsz	9,f
 18015  09B5  29B2               	goto	u5325
 18016  09B6  0142               	movlb	2	; select bank2
 18017  09B7  086D               	movf	(___awdiv@divisor+1)^(0+256),w
 18018  09B8  026F               	subwf	(___awdiv@dividend+1)^(0+256),w
 18019  09B9  1D03               	skipz
 18020  09BA  29BD               	goto	u5335
 18021  09BB  086C               	movf	___awdiv@divisor^(0+256),w
 18022  09BC  026E               	subwf	___awdiv@dividend^(0+256),w
 18023  09BD                     u5335:
 18024  09BD  1C03               	skipc
 18025  09BE  29C0               	goto	u5331
 18026  09BF  29C1               	goto	u5330
 18027  09C0                     u5331:
 18028  09C0  29C7               	goto	l6598
 18029  09C1                     u5330:
 18030  09C1                     l6594:
 18031  09C1  086C               	movf	___awdiv@divisor^(0+256),w
 18032  09C2  02EE               	subwf	___awdiv@dividend^(0+256),f
 18033  09C3  086D               	movf	(___awdiv@divisor+1)^(0+256),w
 18034  09C4  3BEF               	subwfb	(___awdiv@dividend+1)^(0+256),f
 18035  09C5                     l6596:
 18036  09C5  0143               	movlb	3	; select bank3
 18037  09C6  146A               	bsf	___awdiv@quotient^(0+384),0
 18038  09C7                     l6598:
 18039  09C7  3001               	movlw	1
 18040  09C8  0142               	movlb	2	; select bank2
 18041  09C9                     u5345:
 18042  09C9  36ED               	lsrf	(___awdiv@divisor+1)^(0+256),f
 18043  09CA  0CEC               	rrf	___awdiv@divisor^(0+256),f
 18044  09CB  0B89               	decfsz	9,f
 18045  09CC  29C9               	goto	u5345
 18046  09CD                     l6600:
 18047  09CD  3001               	movlw	1
 18048  09CE  0143               	movlb	3	; select bank3
 18049  09CF  02E8               	subwf	___awdiv@counter^(0+384),f
 18050  09D0  1D03               	btfss	3,2
 18051  09D1  29D3               	goto	u5351
 18052  09D2  29D4               	goto	u5350
 18053  09D3                     u5351:
 18054  09D3  29B0               	goto	l6592
 18055  09D4                     u5350:
 18056  09D4                     l6602:
 18057  09D4  0143               	movlb	3	; select bank3
 18058  09D5  0869               	movf	___awdiv@sign^(0+384),w
 18059  09D6  1903               	btfsc	3,2
 18060  09D7  29D9               	goto	u5361
 18061  09D8  29DA               	goto	u5360
 18062  09D9                     u5361:
 18063  09D9  29DF               	goto	l6606
 18064  09DA                     u5360:
 18065  09DA                     l6604:
 18066  09DA  09EA               	comf	___awdiv@quotient^(0+384),f
 18067  09DB  09EB               	comf	(___awdiv@quotient+1)^(0+384),f
 18068  09DC  0AEA               	incf	___awdiv@quotient^(0+384),f
 18069  09DD  1903               	skipnz
 18070  09DE  0AEB               	incf	(___awdiv@quotient+1)^(0+384),f
 18071  09DF                     l6606:
 18072  09DF  086B               	movf	(___awdiv@quotient+1)^(0+384),w
 18073  09E0  0142               	movlb	2	; select bank2
 18074  09E1  00ED               	movwf	(?___awdiv+1)^(0+256)
 18075  09E2  0143               	movlb	3	; select bank3
 18076  09E3  086A               	movf	___awdiv@quotient^(0+384),w
 18077  09E4  0142               	movlb	2	; select bank2
 18078  09E5  00EC               	movwf	?___awdiv^(0+256)
 18079  09E6                     l1775:
 18080  09E6  0008               	return
 18081  09E7                     __end_of___awdiv:
 18082                           
 18083                           	psect	text68
 18084  19E7                     __ptext68:	
 18085 ;; *************** function _getUIType *****************
 18086 ;; Defined at:
 18087 ;;		line 183 in file "ui.c"
 18088 ;; Parameters:    Size  Location     Type
 18089 ;;		None
 18090 ;; Auto vars:     Size  Location     Type
 18091 ;;		None
 18092 ;; Return value:  Size  Location     Type
 18093 ;;                  1    wreg      unsigned char 
 18094 ;; Registers used:
 18095 ;;		wreg
 18096 ;; Tracked objects:
 18097 ;;		On entry : 0/0
 18098 ;;		On exit  : 0/0
 18099 ;;		Unchanged: 0/0
 18100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18105 ;;Total ram usage:        0 bytes
 18106 ;; Hardware stack levels used:    1
 18107 ;; Hardware stack levels required when called:    8
 18108 ;; This function calls:
 18109 ;;		Nothing
 18110 ;; This function is called by:
 18111 ;;		_initJoystick
 18112 ;; This function uses a non-reentrant model
 18113 ;;
 18114                           
 18115                           
 18116                           ;psect for function _getUIType
 18117  19E7                     _getUIType:
 18118  19E7                     l7332:	
 18119                           ;incstack = 0
 18120                           ; Regs used in _getUIType: [wreg]
 18121                           
 18122                           
 18123                           ;ui.c: 184:     return (uiType);
 18124  19E7  0140               	movlb	0	; select bank0
 18125  19E8  0848               	movf	_uiType,w
 18126  19E9                     l1406:
 18127  19E9  0008               	return
 18128  19EA                     __end_of_getUIType:
 18129                           
 18130                           	psect	text69
 18131  19E4                     __ptext69:	
 18132 ;; *************** function _getUISpeedMode *****************
 18133 ;; Defined at:
 18134 ;;		line 172 in file "ui.c"
 18135 ;; Parameters:    Size  Location     Type
 18136 ;;		None
 18137 ;; Auto vars:     Size  Location     Type
 18138 ;;		None
 18139 ;; Return value:  Size  Location     Type
 18140 ;;                  1    wreg      unsigned char 
 18141 ;; Registers used:
 18142 ;;		wreg
 18143 ;; Tracked objects:
 18144 ;;		On entry : 0/0
 18145 ;;		On exit  : 0/0
 18146 ;;		Unchanged: 0/0
 18147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18152 ;;Total ram usage:        0 bytes
 18153 ;; Hardware stack levels used:    1
 18154 ;; Hardware stack levels required when called:    8
 18155 ;; This function calls:
 18156 ;;		Nothing
 18157 ;; This function is called by:
 18158 ;;		_initJoystick
 18159 ;; This function uses a non-reentrant model
 18160 ;;
 18161                           
 18162                           
 18163                           ;psect for function _getUISpeedMode
 18164  19E4                     _getUISpeedMode:
 18165  19E4                     l7336:	
 18166                           ;incstack = 0
 18167                           ; Regs used in _getUISpeedMode: [wreg]
 18168                           
 18169                           
 18170                           ;ui.c: 173:     return (uiSpeedMode);
 18171  19E4  0140               	movlb	0	; select bank0
 18172  19E5  0849               	movf	_uiSpeedMode,w
 18173  19E6                     l1400:
 18174  19E6  0008               	return
 18175  19E7                     __end_of_getUISpeedMode:
 18176                           
 18177                           	psect	text70
 18178  1AFD                     __ptext70:	
 18179 ;; *************** function _initConfiguration *****************
 18180 ;; Defined at:
 18181 ;;		line 16 in file "configure.c"
 18182 ;; Parameters:    Size  Location     Type
 18183 ;;		None
 18184 ;; Auto vars:     Size  Location     Type
 18185 ;;		None
 18186 ;; Return value:  Size  Location     Type
 18187 ;;                  1    wreg      void 
 18188 ;; Registers used:
 18189 ;;		wreg, status,2, status,0, pclath, cstack
 18190 ;; Tracked objects:
 18191 ;;		On entry : 0/0
 18192 ;;		On exit  : 0/0
 18193 ;;		Unchanged: 0/0
 18194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18199 ;;Total ram usage:        0 bytes
 18200 ;; Hardware stack levels used:    1
 18201 ;; Hardware stack levels required when called:   11
 18202 ;; This function calls:
 18203 ;;		_SetSlaveTXRX
 18204 ;;		_setSerialBaud
 18205 ;; This function is called by:
 18206 ;;		_main
 18207 ;; This function uses a non-reentrant model
 18208 ;;
 18209                           
 18210                           
 18211                           ;psect for function _initConfiguration
 18212  1AFD                     _initConfiguration:
 18213  1AFD                     l7574:	
 18214                           ;incstack = 0
 18215                           ; Regs used in _initConfiguration: [wreg+status,2+status,0+pclath+cstack]
 18216                           
 18217                           
 18218                           ;configure.c: 17:     setSerialBaud(38400);
 18219  1AFD  3000               	movlw	0
 18220  1AFE  0143               	movlb	3	; select bank3
 18221  1AFF  00EC               	movwf	setSerialBaud@baud^(0+384)
 18222  1B00  3096               	movlw	150
 18223  1B01  00ED               	movwf	(setSerialBaud@baud^(0+384)+1)
 18224  1B02  319D  25EF  319A   	fcall	_setSerialBaud
 18225                           
 18226                           ;configure.c: 18:     SetSlaveTXRX();
 18227  1B05  319A  2287  319A   	fcall	_SetSlaveTXRX
 18228  1B08                     l1189:
 18229  1B08  0008               	return
 18230  1B09                     __end_of_initConfiguration:
 18231                           
 18232                           	psect	text71
 18233  1DEF                     __ptext71:	
 18234 ;; *************** function _setSerialBaud *****************
 18235 ;; Defined at:
 18236 ;;		line 76 in file "configure.c"
 18237 ;; Parameters:    Size  Location     Type
 18238 ;;  baud            2    4[BANK3 ] unsigned short 
 18239 ;; Auto vars:     Size  Location     Type
 18240 ;;		None
 18241 ;; Return value:  Size  Location     Type
 18242 ;;                  1    wreg      void 
 18243 ;; Registers used:
 18244 ;;		wreg, status,2, status,0, pclath, cstack
 18245 ;; Tracked objects:
 18246 ;;		On entry : 0/0
 18247 ;;		On exit  : 0/0
 18248 ;;		Unchanged: 0/0
 18249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18250 ;;      Params:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18253 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18254 ;;Total ram usage:        2 bytes
 18255 ;; Hardware stack levels used:    1
 18256 ;; Hardware stack levels required when called:   10
 18257 ;; This function calls:
 18258 ;;		_sleep
 18259 ;; This function is called by:
 18260 ;;		_initConfiguration
 18261 ;;		_setBTBaudRatesTo38400
 18262 ;;		_doFactoryReset
 18263 ;; This function uses a non-reentrant model
 18264 ;;
 18265                           
 18266                           
 18267                           ;psect for function _setSerialBaud
 18268  1DEF                     _setSerialBaud:
 18269  1DEF                     l6790:	
 18270                           ;incstack = 0
 18271                           ; Regs used in _setSerialBaud: [wreg+status,2+status,0+pclath+cstack]
 18272                           
 18273                           
 18274                           ;configure.c: 77:     if (baud == 38400) {
 18275  1DEF  3096               	movlw	150
 18276  1DF0  0143               	movlb	3	; select bank3
 18277  1DF1  066D               	xorwf	(setSerialBaud@baud+1)^(0+384),w
 18278  1DF2  046C               	iorwf	setSerialBaud@baud^(0+384),w
 18279  1DF3  1D03               	btfss	3,2
 18280  1DF4  2DF6               	goto	u5621
 18281  1DF5  2DF7               	goto	u5620
 18282  1DF6                     u5621:
 18283  1DF6  2DFC               	goto	l6796
 18284  1DF7                     u5620:
 18285  1DF7                     l6792:
 18286                           
 18287                           ;configure.c: 79:         SP1BRGL = 0x67;
 18288  1DF7  3067               	movlw	103
 18289  1DF8  0142               	movlb	2	; select bank2
 18290  1DF9  009B               	movwf	27	;volatile
 18291  1DFA                     l6794:
 18292                           
 18293                           ;configure.c: 80:         SP1BRGH = 0x00;
 18294  1DFA  019C               	clrf	28	;volatile
 18295                           
 18296                           ;configure.c: 81:     } else {
 18297  1DFB  2E01               	goto	l6798
 18298  1DFC                     l6796:
 18299                           
 18300                           ;configure.c: 83:         SP1BRGL = 0xA0;
 18301  1DFC  30A0               	movlw	160
 18302  1DFD  0142               	movlb	2	; select bank2
 18303  1DFE  009B               	movwf	27	;volatile
 18304                           
 18305                           ;configure.c: 84:         SP1BRGH = 0x01;
 18306  1DFF  3001               	movlw	1
 18307  1E00  009C               	movwf	28	;volatile
 18308  1E01                     l6798:
 18309                           
 18310                           ;configure.c: 86:     sleep(200);
 18311  1E01  3000               	movlw	0
 18312  1E02  00EF               	movwf	(sleep@delay+3)^(0+256)
 18313  1E03  3000               	movlw	0
 18314  1E04  00EE               	movwf	(sleep@delay+2)^(0+256)
 18315  1E05  3000               	movlw	0
 18316  1E06  00ED               	movwf	(sleep@delay+1)^(0+256)
 18317  1E07  30C8               	movlw	200
 18318  1E08  00EC               	movwf	sleep@delay^(0+256)
 18319  1E09  3193  23BB  319D   	fcall	_sleep
 18320  1E0C                     l1226:
 18321  1E0C  0008               	return
 18322  1E0D                     __end_of_setSerialBaud:
 18323                           
 18324                           	psect	text72
 18325  13BB                     __ptext72:	
 18326 ;; *************** function _sleep *****************
 18327 ;; Defined at:
 18328 ;;		line 35 in file "timers.c"
 18329 ;; Parameters:    Size  Location     Type
 18330 ;;  delay           4    0[BANK2 ] unsigned long 
 18331 ;; Auto vars:     Size  Location     Type
 18332 ;;  start           4    0[BANK3 ] unsigned long 
 18333 ;; Return value:  Size  Location     Type
 18334 ;;                  1    wreg      void 
 18335 ;; Registers used:
 18336 ;;		wreg, pclath, cstack
 18337 ;; Tracked objects:
 18338 ;;		On entry : 0/0
 18339 ;;		On exit  : 0/0
 18340 ;;		Unchanged: 0/0
 18341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18342 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18343 ;;      Locals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18345 ;;      Totals:         0       0       0       4       4       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18346 ;;Total ram usage:        8 bytes
 18347 ;; Hardware stack levels used:    1
 18348 ;; Hardware stack levels required when called:    9
 18349 ;; This function calls:
 18350 ;;		_getTicks
 18351 ;;		_getTicksSince
 18352 ;; This function is called by:
 18353 ;;		_main
 18354 ;;		_setJoystickType
 18355 ;;		_flushBTRXbuffer
 18356 ;;		_SetPowerdownTXRX
 18357 ;;		_SetDualReceive
 18358 ;;		_SetMasterTXRX
 18359 ;;		_SetSlaveTXMasterRX
 18360 ;;		_setSerialBaud
 18361 ;;		_pairBluetoothDevices
 18362 ;;		_setBTBaudRatesTo38400
 18363 ;;		_getBTAddress
 18364 ;;		_setBTConnection
 18365 ;;		_doFactoryReset
 18366 ;;		_showStartup
 18367 ;;		_showShutdown
 18368 ;;		_pulseLEDColor
 18369 ;; This function uses a non-reentrant model
 18370 ;;
 18371                           
 18372                           
 18373                           ;psect for function _sleep
 18374  13BB                     _sleep:
 18375  13BB                     l6500:	
 18376                           ;incstack = 0
 18377                           ; Regs used in _sleep: [wreg+pclath+cstack]
 18378                           
 18379                           
 18380                           ;timers.c: 36:     uint32_t start = getTicks();
 18381  13BB  319B  23E8  3193   	fcall	_getTicks
 18382  13BE  0141               	movlb	1	; select bank1
 18383  13BF  086B               	movf	(?_getTicks+3)^(0+128),w
 18384  13C0  0143               	movlb	3	; select bank3
 18385  13C1  00EB               	movwf	(sleep@start+3)^(0+384)
 18386  13C2  0141               	movlb	1	; select bank1
 18387  13C3  086A               	movf	(?_getTicks+2)^(0+128),w
 18388  13C4  0143               	movlb	3	; select bank3
 18389  13C5  00EA               	movwf	(sleep@start+2)^(0+384)
 18390  13C6  0141               	movlb	1	; select bank1
 18391  13C7  0869               	movf	(?_getTicks+1)^(0+128),w
 18392  13C8  0143               	movlb	3	; select bank3
 18393  13C9  00E9               	movwf	(sleep@start+1)^(0+384)
 18394  13CA  0141               	movlb	1	; select bank1
 18395  13CB  0868               	movf	?_getTicks^(0+128),w
 18396  13CC  0143               	movlb	3	; select bank3
 18397  13CD  00E8               	movwf	sleep@start^(0+384)
 18398  13CE                     l6502:	
 18399                           ;timers.c: 37:     while (getTicksSince(start) < delay);
 18400                           
 18401  13CE  0143               	movlb	3	; select bank3
 18402  13CF  086B               	movf	(sleep@start+3)^(0+384),w
 18403  13D0  0141               	movlb	1	; select bank1
 18404  13D1  00EB               	movwf	(getTicksSince@from+3)^(0+128)
 18405  13D2  0143               	movlb	3	; select bank3
 18406  13D3  086A               	movf	(sleep@start+2)^(0+384),w
 18407  13D4  0141               	movlb	1	; select bank1
 18408  13D5  00EA               	movwf	(getTicksSince@from+2)^(0+128)
 18409  13D6  0143               	movlb	3	; select bank3
 18410  13D7  0869               	movf	(sleep@start+1)^(0+384),w
 18411  13D8  0141               	movlb	1	; select bank1
 18412  13D9  00E9               	movwf	(getTicksSince@from+1)^(0+128)
 18413  13DA  0143               	movlb	3	; select bank3
 18414  13DB  0868               	movf	sleep@start^(0+384),w
 18415  13DC  0141               	movlb	1	; select bank1
 18416  13DD  00E8               	movwf	getTicksSince@from^(0+128)
 18417  13DE  319D  25D1  3193   	fcall	_getTicksSince
 18418  13E1  0142               	movlb	2	; select bank2
 18419  13E2  086F               	movf	(sleep@delay+3)^(0+256),w
 18420  13E3  0141               	movlb	1	; select bank1
 18421  13E4  026B               	subwf	(?_getTicksSince+3)^(0+128),w
 18422  13E5  1D03               	skipz
 18423  13E6  2BF7               	goto	u5145
 18424  13E7  0142               	movlb	2	; select bank2
 18425  13E8  086E               	movf	(sleep@delay+2)^(0+256),w
 18426  13E9  0141               	movlb	1	; select bank1
 18427  13EA  026A               	subwf	(?_getTicksSince+2)^(0+128),w
 18428  13EB  1D03               	skipz
 18429  13EC  2BF7               	goto	u5145
 18430  13ED  0142               	movlb	2	; select bank2
 18431  13EE  086D               	movf	(sleep@delay+1)^(0+256),w
 18432  13EF  0141               	movlb	1	; select bank1
 18433  13F0  0269               	subwf	(?_getTicksSince+1)^(0+128),w
 18434  13F1  1D03               	skipz
 18435  13F2  2BF7               	goto	u5145
 18436  13F3  0142               	movlb	2	; select bank2
 18437  13F4  086C               	movf	sleep@delay^(0+256),w
 18438  13F5  0141               	movlb	1	; select bank1
 18439  13F6  0268               	subwf	?_getTicksSince^(0+128),w
 18440  13F7                     u5145:
 18441  13F7  1C03               	skipc
 18442  13F8  2BFA               	goto	u5141
 18443  13F9  2BFB               	goto	u5140
 18444  13FA                     u5141:
 18445  13FA  2BCE               	goto	l6502
 18446  13FB                     u5140:
 18447  13FB                     l1112:
 18448  13FB  0008               	return
 18449  13FC                     __end_of_sleep:
 18450                           
 18451                           	psect	text73
 18452  1DD1                     __ptext73:	
 18453 ;; *************** function _getTicksSince *****************
 18454 ;; Defined at:
 18455 ;;		line 44 in file "timers.c"
 18456 ;; Parameters:    Size  Location     Type
 18457 ;;  from            4    0[BANK1 ] unsigned long 
 18458 ;; Auto vars:     Size  Location     Type
 18459 ;;		None
 18460 ;; Return value:  Size  Location     Type
 18461 ;;                  4    0[BANK1 ] long 
 18462 ;; Registers used:
 18463 ;;		wreg
 18464 ;; Tracked objects:
 18465 ;;		On entry : 0/0
 18466 ;;		On exit  : 0/0
 18467 ;;		Unchanged: 0/0
 18468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18469 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18471 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18472 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18473 ;;Total ram usage:        8 bytes
 18474 ;; Hardware stack levels used:    1
 18475 ;; Hardware stack levels required when called:    8
 18476 ;; This function calls:
 18477 ;;		Nothing
 18478 ;; This function is called by:
 18479 ;;		_receiveBTBuffer
 18480 ;;		_sleep
 18481 ;;		_runUI
 18482 ;; This function uses a non-reentrant model
 18483 ;;
 18484                           
 18485                           
 18486                           ;psect for function _getTicksSince
 18487  1DD1                     _getTicksSince:
 18488  1DD1                     l6444:	
 18489                           ;incstack = 0
 18490                           ; Regs used in _getTicksSince: [wreg]
 18491                           
 18492                           
 18493                           ;timers.c: 45:     return (systemTime - from);
 18494  1DD1  0141               	movlb	1	; select bank1
 18495  1DD2  0868               	movf	getTicksSince@from^(0+128),w
 18496  1DD3  0140               	movlb	0	; select bank0
 18497  1DD4  023B               	subwf	_systemTime,w
 18498  1DD5  0141               	movlb	1	; select bank1
 18499  1DD6  00EC               	movwf	??_getTicksSince^(0+128)
 18500  1DD7  0869               	movf	(getTicksSince@from+1)^(0+128),w
 18501  1DD8  0140               	movlb	0	; select bank0
 18502  1DD9  3B3C               	subwfb	_systemTime+1,w
 18503  1DDA  0141               	movlb	1	; select bank1
 18504  1DDB  00ED               	movwf	(??_getTicksSince^(0+128)+1)
 18505  1DDC  086A               	movf	(getTicksSince@from+2)^(0+128),w
 18506  1DDD  0140               	movlb	0	; select bank0
 18507  1DDE  3B3D               	subwfb	_systemTime+2,w
 18508  1DDF  0141               	movlb	1	; select bank1
 18509  1DE0  00EE               	movwf	(??_getTicksSince^(0+128)+2)
 18510  1DE1  086B               	movf	(getTicksSince@from+3)^(0+128),w
 18511  1DE2  0140               	movlb	0	; select bank0
 18512  1DE3  3B3E               	subwfb	_systemTime+3,w
 18513  1DE4  0141               	movlb	1	; select bank1
 18514  1DE5  00EF               	movwf	(??_getTicksSince^(0+128)+3)
 18515  1DE6  086F               	movf	(??_getTicksSince+3)^(0+128),w
 18516  1DE7  00EB               	movwf	(?_getTicksSince+3)^(0+128)
 18517  1DE8  086E               	movf	(??_getTicksSince+2)^(0+128),w
 18518  1DE9  00EA               	movwf	(?_getTicksSince+2)^(0+128)
 18519  1DEA  086D               	movf	(??_getTicksSince+1)^(0+128),w
 18520  1DEB  00E9               	movwf	(?_getTicksSince+1)^(0+128)
 18521  1DEC  086C               	movf	??_getTicksSince^(0+128),w
 18522  1DED  00E8               	movwf	?_getTicksSince^(0+128)
 18523  1DEE                     l1118:
 18524  1DEE  0008               	return
 18525  1DEF                     __end_of_getTicksSince:
 18526                           
 18527                           	psect	text74
 18528  1BE8                     __ptext74:	
 18529 ;; *************** function _getTicks *****************
 18530 ;; Defined at:
 18531 ;;		line 40 in file "timers.c"
 18532 ;; Parameters:    Size  Location     Type
 18533 ;;		None
 18534 ;; Auto vars:     Size  Location     Type
 18535 ;;		None
 18536 ;; Return value:  Size  Location     Type
 18537 ;;                  4    0[BANK1 ] unsigned long 
 18538 ;; Registers used:
 18539 ;;		wreg
 18540 ;; Tracked objects:
 18541 ;;		On entry : 0/0
 18542 ;;		On exit  : 0/0
 18543 ;;		Unchanged: 0/0
 18544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18545 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18548 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18549 ;;Total ram usage:        4 bytes
 18550 ;; Hardware stack levels used:    1
 18551 ;; Hardware stack levels required when called:    8
 18552 ;; This function calls:
 18553 ;;		Nothing
 18554 ;; This function is called by:
 18555 ;;		_receiveBTBuffer
 18556 ;;		_sleep
 18557 ;;		_initUI
 18558 ;;		_runUI
 18559 ;; This function uses a non-reentrant model
 18560 ;;
 18561                           
 18562                           
 18563                           ;psect for function _getTicks
 18564  1BE8                     _getTicks:
 18565  1BE8                     l6448:	
 18566                           ;incstack = 0
 18567                           ; Regs used in _getTicks: [wreg]
 18568                           
 18569                           
 18570                           ;timers.c: 41:     return systemTime;
 18571  1BE8  0140               	movlb	0	; select bank0
 18572  1BE9  083E               	movf	_systemTime+3,w
 18573  1BEA  0141               	movlb	1	; select bank1
 18574  1BEB  00EB               	movwf	(?_getTicks+3)^(0+128)
 18575  1BEC  0140               	movlb	0	; select bank0
 18576  1BED  083D               	movf	_systemTime+2,w
 18577  1BEE  0141               	movlb	1	; select bank1
 18578  1BEF  00EA               	movwf	(?_getTicks+2)^(0+128)
 18579  1BF0  0140               	movlb	0	; select bank0
 18580  1BF1  083C               	movf	_systemTime+1,w
 18581  1BF2  0141               	movlb	1	; select bank1
 18582  1BF3  00E9               	movwf	(?_getTicks+1)^(0+128)
 18583  1BF4  0140               	movlb	0	; select bank0
 18584  1BF5  083B               	movf	_systemTime,w
 18585  1BF6  0141               	movlb	1	; select bank1
 18586  1BF7  00E8               	movwf	?_getTicks^(0+128)
 18587  1BF8                     l1115:
 18588  1BF8  0008               	return
 18589  1BF9                     __end_of_getTicks:
 18590                           
 18591                           	psect	text75
 18592  1A87                     __ptext75:	
 18593 ;; *************** function _SetSlaveTXRX *****************
 18594 ;; Defined at:
 18595 ;;		line 21 in file "configure.c"
 18596 ;; Parameters:    Size  Location     Type
 18597 ;;		None
 18598 ;; Auto vars:     Size  Location     Type
 18599 ;;		None
 18600 ;; Return value:  Size  Location     Type
 18601 ;;                  1    wreg      void 
 18602 ;; Registers used:
 18603 ;;		wreg
 18604 ;; Tracked objects:
 18605 ;;		On entry : 0/0
 18606 ;;		On exit  : 0/0
 18607 ;;		Unchanged: 0/0
 18608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18613 ;;Total ram usage:        0 bytes
 18614 ;; Hardware stack levels used:    1
 18615 ;; Hardware stack levels required when called:    8
 18616 ;; This function calls:
 18617 ;;		Nothing
 18618 ;; This function is called by:
 18619 ;;		_initConfiguration
 18620 ;;		_turnPowerOn
 18621 ;;		_pairBluetoothDevices
 18622 ;;		_getBTAddress
 18623 ;;		_setBTConnection
 18624 ;;		_doFactoryReset
 18625 ;; This function uses a non-reentrant model
 18626 ;;
 18627                           
 18628                           
 18629                           ;psect for function _SetSlaveTXRX
 18630  1A87                     _SetSlaveTXRX:
 18631  1A87                     l6800:	
 18632                           ;incstack = 0
 18633                           ; Regs used in _SetSlaveTXRX: [wreg]
 18634                           
 18635                           
 18636                           ;configure.c: 22:     RX1DTPPS = 0x15;
 18637  1A87  3015               	movlw	21
 18638  1A88  017D               	movlb	61	; select bank61
 18639  1A89  00CB               	movwf	75	;volatile
 18640                           
 18641                           ;configure.c: 23:     RC4PPS = 0x0F;
 18642  1A8A  300F               	movlw	15
 18643  1A8B  017E               	movlb	62	; select bank62
 18644  1A8C  00A4               	movwf	36	;volatile
 18645                           
 18646                           ;configure.c: 24:     RC6PPS = 0x16;
 18647  1A8D  3016               	movlw	22
 18648  1A8E  00A6               	movwf	38	;volatile
 18649  1A8F                     l1192:
 18650  1A8F  0008               	return
 18651  1A90                     __end_of_SetSlaveTXRX:
 18652                           
 18653                           	psect	text76
 18654  1CDC                     __ptext76:	
 18655 ;; *************** function _SYSTEM_Initialize *****************
 18656 ;; Defined at:
 18657 ;;		line 50 in file "mcc_generated_files/mcc.c"
 18658 ;; Parameters:    Size  Location     Type
 18659 ;;		None
 18660 ;; Auto vars:     Size  Location     Type
 18661 ;;		None
 18662 ;; Return value:  Size  Location     Type
 18663 ;;                  1    wreg      void 
 18664 ;; Registers used:
 18665 ;;		wreg, status,2, status,0, pclath, cstack
 18666 ;; Tracked objects:
 18667 ;;		On entry : 0/0
 18668 ;;		On exit  : 0/0
 18669 ;;		Unchanged: 0/0
 18670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18675 ;;Total ram usage:        0 bytes
 18676 ;; Hardware stack levels used:    1
 18677 ;; Hardware stack levels required when called:   10
 18678 ;; This function calls:
 18679 ;;		_ADCC_Initialize
 18680 ;;		_EUSART1_Initialize
 18681 ;;		_OSCILLATOR_Initialize
 18682 ;;		_PIN_MANAGER_Initialize
 18683 ;;		_PMD_Initialize
 18684 ;;		_TMR1_Initialize
 18685 ;;		_TMR2_Initialize
 18686 ;;		_TMR3_Initialize
 18687 ;; This function is called by:
 18688 ;;		_main
 18689 ;; This function uses a non-reentrant model
 18690 ;;
 18691                           
 18692                           
 18693                           ;psect for function _SYSTEM_Initialize
 18694  1CDC                     _SYSTEM_Initialize:
 18695  1CDC                     l7498:	
 18696                           ;incstack = 0
 18697                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18698                           
 18699                           
 18700                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 18701  1CDC  319A  22C8  319C   	fcall	_PMD_Initialize
 18702  1CDF                     l7500:
 18703                           
 18704                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 18705  1CDF  3194  2484  319C   	fcall	_PIN_MANAGER_Initialize
 18706  1CE2                     l7502:
 18707                           
 18708                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 18709  1CE2  319A  227E  319C   	fcall	_OSCILLATOR_Initialize
 18710  1CE5                     l7504:
 18711                           
 18712                           ;mcc_generated_files/mcc.c: 55:     ADCC_Initialize();
 18713  1CE5  319D  255E  319C   	fcall	_ADCC_Initialize
 18714  1CE8                     l7506:
 18715                           
 18716                           ;mcc_generated_files/mcc.c: 56:     TMR3_Initialize();
 18717  1CE8  319F  270B  319C   	fcall	_TMR3_Initialize
 18718  1CEB                     l7508:
 18719                           
 18720                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 18721  1CEB  319C  2494  319C   	fcall	_TMR2_Initialize
 18722  1CEE                     l7510:
 18723                           
 18724                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
 18725  1CEE  319E  26EA  319C   	fcall	_TMR1_Initialize
 18726  1CF1                     l7512:
 18727                           
 18728                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
 18729  1CF1  3194  243E  319C   	fcall	_EUSART1_Initialize
 18730  1CF4                     l344:
 18731  1CF4  0008               	return
 18732  1CF5                     __end_of_SYSTEM_Initialize:
 18733                           
 18734                           	psect	text77
 18735  1F0B                     __ptext77:	
 18736 ;; *************** function _TMR3_Initialize *****************
 18737 ;; Defined at:
 18738 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 18739 ;; Parameters:    Size  Location     Type
 18740 ;;		None
 18741 ;; Auto vars:     Size  Location     Type
 18742 ;;		None
 18743 ;; Return value:  Size  Location     Type
 18744 ;;                  1    wreg      void 
 18745 ;; Registers used:
 18746 ;;		wreg, status,2, status,0, pclath, cstack
 18747 ;; Tracked objects:
 18748 ;;		On entry : 0/0
 18749 ;;		On exit  : 0/0
 18750 ;;		Unchanged: 0/0
 18751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18756 ;;Total ram usage:        0 bytes
 18757 ;; Hardware stack levels used:    1
 18758 ;; Hardware stack levels required when called:    9
 18759 ;; This function calls:
 18760 ;;		_TMR3_SetInterruptHandler
 18761 ;; This function is called by:
 18762 ;;		_SYSTEM_Initialize
 18763 ;; This function uses a non-reentrant model
 18764 ;;
 18765                           
 18766                           
 18767                           ;psect for function _TMR3_Initialize
 18768  1F0B                     _TMR3_Initialize:
 18769  1F0B                     l7284:	
 18770                           ;incstack = 0
 18771                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18772                           
 18773                           
 18774                           ;mcc_generated_files/tmr3.c: 69:     T3GCON = 0x00;
 18775  1F0B  0144               	movlb	4	; select bank4
 18776  1F0C  0195               	clrf	21	;volatile
 18777                           
 18778                           ;mcc_generated_files/tmr3.c: 72:     T3GATE = 0x00;
 18779  1F0D  0196               	clrf	22	;volatile
 18780  1F0E                     l7286:
 18781                           
 18782                           ;mcc_generated_files/tmr3.c: 75:     T3CLK = 0x01;
 18783  1F0E  3001               	movlw	1
 18784  1F0F  0097               	movwf	23	;volatile
 18785  1F10                     l7288:
 18786                           
 18787                           ;mcc_generated_files/tmr3.c: 78:     TMR3H = 0xFF;
 18788  1F10  30FF               	movlw	255
 18789  1F11  0093               	movwf	19	;volatile
 18790  1F12                     l7290:
 18791                           
 18792                           ;mcc_generated_files/tmr3.c: 81:     TMR3L = 0x06;
 18793  1F12  3006               	movlw	6
 18794  1F13  0092               	movwf	18	;volatile
 18795  1F14                     l7292:
 18796                           
 18797                           ;mcc_generated_files/tmr3.c: 84:     PIR4bits.TMR3IF = 0;
 18798  1F14  014E               	movlb	14	; select bank14
 18799  1F15  1110               	bcf	16,2	;volatile
 18800  1F16                     l7294:
 18801                           
 18802                           ;mcc_generated_files/tmr3.c: 87:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 18803  1F16  0144               	movlb	4	; select bank4
 18804  1F17  0813               	movf	19,w	;volatile
 18805  1F18  0141               	movlb	1	; select bank1
 18806  1F19  00CD               	movwf	(_timer3ReloadVal+1)^(0+128)	;volatile
 18807  1F1A  0144               	movlb	4	; select bank4
 18808  1F1B  0812               	movf	18,w	;volatile
 18809  1F1C  0141               	movlb	1	; select bank1
 18810  1F1D  00CC               	movwf	_timer3ReloadVal^(0+128)	;volatile
 18811  1F1E                     l7296:
 18812                           
 18813                           ;mcc_generated_files/tmr3.c: 90:     PIE4bits.TMR3IE = 1;
 18814  1F1E  014E               	movlb	14	; select bank14
 18815  1F1F  151A               	bsf	26,2	;volatile
 18816  1F20                     l7298:
 18817                           
 18818                           ;mcc_generated_files/tmr3.c: 93:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 18819  1F20  3003               	movlw	low _TMR3_DefaultInterruptHandler
 18820  1F21  0141               	movlb	1	; select bank1
 18821  1F22  00E8               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
 18822  1F23  3000               	movlw	high _TMR3_DefaultInterruptHandler
 18823  1F24  00E9               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
 18824  1F25  319A  221F  319F   	fcall	_TMR3_SetInterruptHandler
 18825  1F28                     l7300:
 18826                           
 18827                           ;mcc_generated_files/tmr3.c: 96:     T3CON = 0x05;
 18828  1F28  3005               	movlw	5
 18829  1F29  0144               	movlb	4	; select bank4
 18830  1F2A  0094               	movwf	20	;volatile
 18831  1F2B                     l481:
 18832  1F2B  0008               	return
 18833  1F2C                     __end_of_TMR3_Initialize:
 18834                           
 18835                           	psect	text78
 18836  1A1F                     __ptext78:	
 18837 ;; *************** function _TMR3_SetInterruptHandler *****************
 18838 ;; Defined at:
 18839 ;;		line 185 in file "mcc_generated_files/tmr3.c"
 18840 ;; Parameters:    Size  Location     Type
 18841 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 18842 ;;		 -> UI_PWM_handler(1), TMR3_DefaultInterruptHandler(1), 
 18843 ;; Auto vars:     Size  Location     Type
 18844 ;;		None
 18845 ;; Return value:  Size  Location     Type
 18846 ;;                  1    wreg      void 
 18847 ;; Registers used:
 18848 ;;		wreg
 18849 ;; Tracked objects:
 18850 ;;		On entry : 0/0
 18851 ;;		On exit  : 0/0
 18852 ;;		Unchanged: 0/0
 18853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18854 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18857 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18858 ;;Total ram usage:        2 bytes
 18859 ;; Hardware stack levels used:    1
 18860 ;; Hardware stack levels required when called:    8
 18861 ;; This function calls:
 18862 ;;		Nothing
 18863 ;; This function is called by:
 18864 ;;		_TMR3_Initialize
 18865 ;;		_initUI
 18866 ;; This function uses a non-reentrant model
 18867 ;;
 18868                           
 18869                           
 18870                           ;psect for function _TMR3_SetInterruptHandler
 18871  1A1F                     _TMR3_SetInterruptHandler:
 18872  1A1F                     l6890:	
 18873                           ;incstack = 0
 18874                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
 18875                           
 18876                           
 18877                           ;mcc_generated_files/tmr3.c: 186:     TMR3_InterruptHandler = InterruptHandler;
 18878  1A1F  0141               	movlb	1	; select bank1
 18879  1A20  0869               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 18880  1A21  00CB               	movwf	(_TMR3_InterruptHandler+1)^(0+128)
 18881  1A22  0868               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
 18882  1A23  00CA               	movwf	_TMR3_InterruptHandler^(0+128)
 18883  1A24                     l514:
 18884  1A24  0008               	return
 18885  1A25                     __end_of_TMR3_SetInterruptHandler:
 18886                           
 18887                           	psect	text79
 18888  1C94                     __ptext79:	
 18889 ;; *************** function _TMR2_Initialize *****************
 18890 ;; Defined at:
 18891 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 18892 ;; Parameters:    Size  Location     Type
 18893 ;;		None
 18894 ;; Auto vars:     Size  Location     Type
 18895 ;;		None
 18896 ;; Return value:  Size  Location     Type
 18897 ;;                  1    wreg      void 
 18898 ;; Registers used:
 18899 ;;		wreg, status,2, status,0, pclath, cstack
 18900 ;; Tracked objects:
 18901 ;;		On entry : 0/0
 18902 ;;		On exit  : 0/0
 18903 ;;		Unchanged: 0/0
 18904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18909 ;;Total ram usage:        0 bytes
 18910 ;; Hardware stack levels used:    1
 18911 ;; Hardware stack levels required when called:    9
 18912 ;; This function calls:
 18913 ;;		_TMR2_SetInterruptHandler
 18914 ;; This function is called by:
 18915 ;;		_SYSTEM_Initialize
 18916 ;; This function uses a non-reentrant model
 18917 ;;
 18918                           
 18919                           
 18920                           ;psect for function _TMR2_Initialize
 18921  1C94                     _TMR2_Initialize:
 18922  1C94                     l7152:	
 18923                           ;incstack = 0
 18924                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18925                           
 18926                           
 18927                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
 18928  1C94  3001               	movlw	1
 18929  1C95  0145               	movlb	5	; select bank5
 18930  1C96  0090               	movwf	16	;volatile
 18931  1C97                     l7154:
 18932                           
 18933                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x00;
 18934  1C97  018F               	clrf	15	;volatile
 18935  1C98                     l7156:
 18936                           
 18937                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 18938  1C98  0191               	clrf	17	;volatile
 18939                           
 18940                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0xF9;
 18941  1C99  30F9               	movlw	249
 18942  1C9A  008D               	movwf	13	;volatile
 18943  1C9B                     l7158:
 18944                           
 18945                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 18946  1C9B  018C               	clrf	12	;volatile
 18947  1C9C                     l7160:
 18948                           
 18949                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
 18950  1C9C  014E               	movlb	14	; select bank14
 18951  1C9D  1090               	bcf	16,1	;volatile
 18952  1C9E                     l7162:
 18953                           
 18954                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
 18955  1C9E  149A               	bsf	26,1	;volatile
 18956  1C9F                     l7164:
 18957                           
 18958                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 18959  1C9F  3002               	movlw	low _TMR2_DefaultInterruptHandler
 18960  1CA0  0141               	movlb	1	; select bank1
 18961  1CA1  00E8               	movwf	TMR2_SetInterruptHandler@InterruptHandler^(0+128)
 18962  1CA2  3000               	movlw	high _TMR2_DefaultInterruptHandler
 18963  1CA3  00E9               	movwf	(TMR2_SetInterruptHandler@InterruptHandler^(0+128)+1)
 18964  1CA4  319A  2219  319C   	fcall	_TMR2_SetInterruptHandler
 18965  1CA7                     l7166:
 18966                           
 18967                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xC0;
 18968  1CA7  30C0               	movlw	192
 18969  1CA8  0145               	movlb	5	; select bank5
 18970  1CA9  008E               	movwf	14	;volatile
 18971  1CAA                     l106:
 18972  1CAA  0008               	return
 18973  1CAB                     __end_of_TMR2_Initialize:
 18974                           
 18975                           	psect	text80
 18976  1A19                     __ptext80:	
 18977 ;; *************** function _TMR2_SetInterruptHandler *****************
 18978 ;; Defined at:
 18979 ;;		line 186 in file "mcc_generated_files/tmr2.c"
 18980 ;; Parameters:    Size  Location     Type
 18981 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 18982 ;;		 -> timeKeeper(1), TMR2_DefaultInterruptHandler(1), 
 18983 ;; Auto vars:     Size  Location     Type
 18984 ;;		None
 18985 ;; Return value:  Size  Location     Type
 18986 ;;                  1    wreg      void 
 18987 ;; Registers used:
 18988 ;;		wreg
 18989 ;; Tracked objects:
 18990 ;;		On entry : 0/0
 18991 ;;		On exit  : 0/0
 18992 ;;		Unchanged: 0/0
 18993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18994 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18997 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18998 ;;Total ram usage:        2 bytes
 18999 ;; Hardware stack levels used:    1
 19000 ;; Hardware stack levels required when called:    8
 19001 ;; This function calls:
 19002 ;;		Nothing
 19003 ;; This function is called by:
 19004 ;;		_TMR2_Initialize
 19005 ;;		_initTimers
 19006 ;; This function uses a non-reentrant model
 19007 ;;
 19008                           
 19009                           
 19010                           ;psect for function _TMR2_SetInterruptHandler
 19011  1A19                     _TMR2_SetInterruptHandler:
 19012  1A19                     l6874:	
 19013                           ;incstack = 0
 19014                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 19015                           
 19016                           
 19017                           ;mcc_generated_files/tmr2.c: 187:     TMR2_InterruptHandler = InterruptHandler;
 19018  1A19  0141               	movlb	1	; select bank1
 19019  1A1A  0869               	movf	(TMR2_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 19020  1A1B  00D5               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
 19021  1A1C  0868               	movf	TMR2_SetInterruptHandler@InterruptHandler^(0+128),w
 19022  1A1D  00D4               	movwf	_TMR2_InterruptHandler^(0+128)
 19023  1A1E                     l152:
 19024  1A1E  0008               	return
 19025  1A1F                     __end_of_TMR2_SetInterruptHandler:
 19026                           
 19027                           	psect	text81
 19028  1EEA                     __ptext81:	
 19029 ;; *************** function _TMR1_Initialize *****************
 19030 ;; Defined at:
 19031 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 19032 ;; Parameters:    Size  Location     Type
 19033 ;;		None
 19034 ;; Auto vars:     Size  Location     Type
 19035 ;;		None
 19036 ;; Return value:  Size  Location     Type
 19037 ;;                  1    wreg      void 
 19038 ;; Registers used:
 19039 ;;		wreg, status,2, status,0, pclath, cstack
 19040 ;; Tracked objects:
 19041 ;;		On entry : 0/0
 19042 ;;		On exit  : 0/0
 19043 ;;		Unchanged: 0/0
 19044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19049 ;;Total ram usage:        0 bytes
 19050 ;; Hardware stack levels used:    1
 19051 ;; Hardware stack levels required when called:    9
 19052 ;; This function calls:
 19053 ;;		_TMR1_SetInterruptHandler
 19054 ;; This function is called by:
 19055 ;;		_SYSTEM_Initialize
 19056 ;; This function uses a non-reentrant model
 19057 ;;
 19058                           
 19059                           
 19060                           ;psect for function _TMR1_Initialize
 19061  1EEA                     _TMR1_Initialize:
 19062  1EEA                     l7134:	
 19063                           ;incstack = 0
 19064                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 19065                           
 19066                           
 19067                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 19068  1EEA  0144               	movlb	4	; select bank4
 19069  1EEB  018F               	clrf	15	;volatile
 19070                           
 19071                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 19072  1EEC  0190               	clrf	16	;volatile
 19073  1EED                     l7136:
 19074                           
 19075                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x06;
 19076  1EED  3006               	movlw	6
 19077  1EEE  0091               	movwf	17	;volatile
 19078  1EEF                     l7138:
 19079                           
 19080                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xF9;
 19081  1EEF  30F9               	movlw	249
 19082  1EF0  008D               	movwf	13	;volatile
 19083  1EF1                     l7140:
 19084                           
 19085                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xE5;
 19086  1EF1  30E5               	movlw	229
 19087  1EF2  008C               	movwf	12	;volatile
 19088  1EF3                     l7142:
 19089                           
 19090                           ;mcc_generated_files/tmr1.c: 84:     PIR4bits.TMR1IF = 0;
 19091  1EF3  014E               	movlb	14	; select bank14
 19092  1EF4  1010               	bcf	16,0	;volatile
 19093  1EF5                     l7144:
 19094                           
 19095                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 19096  1EF5  0144               	movlb	4	; select bank4
 19097  1EF6  080D               	movf	13,w	;volatile
 19098  1EF7  0141               	movlb	1	; select bank1
 19099  1EF8  00D9               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 19100  1EF9  0144               	movlb	4	; select bank4
 19101  1EFA  080C               	movf	12,w	;volatile
 19102  1EFB  0141               	movlb	1	; select bank1
 19103  1EFC  00D8               	movwf	_timer1ReloadVal^(0+128)	;volatile
 19104  1EFD                     l7146:
 19105                           
 19106                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 19107  1EFD  014E               	movlb	14	; select bank14
 19108  1EFE  141A               	bsf	26,0	;volatile
 19109  1EFF                     l7148:
 19110                           
 19111                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 19112  1EFF  30E3               	movlw	low _TMR1_DefaultInterruptHandler
 19113  1F00  0141               	movlb	1	; select bank1
 19114  1F01  00E8               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
 19115  1F02  3019               	movlw	high _TMR1_DefaultInterruptHandler
 19116  1F03  00E9               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
 19117  1F04  319A  2213  319E   	fcall	_TMR1_SetInterruptHandler
 19118  1F07                     l7150:
 19119                           
 19120                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x01;
 19121  1F07  3001               	movlw	1
 19122  1F08  0144               	movlb	4	; select bank4
 19123  1F09  008E               	movwf	14	;volatile
 19124  1F0A                     l33:
 19125  1F0A  0008               	return
 19126  1F0B                     __end_of_TMR1_Initialize:
 19127                           
 19128                           	psect	text82
 19129  1A13                     __ptext82:	
 19130 ;; *************** function _TMR1_SetInterruptHandler *****************
 19131 ;; Defined at:
 19132 ;;		line 185 in file "mcc_generated_files/tmr1.c"
 19133 ;; Parameters:    Size  Location     Type
 19134 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 19135 ;;		 -> readJoystick(1), TMR1_DefaultInterruptHandler(1), 
 19136 ;; Auto vars:     Size  Location     Type
 19137 ;;		None
 19138 ;; Return value:  Size  Location     Type
 19139 ;;                  1    wreg      void 
 19140 ;; Registers used:
 19141 ;;		wreg
 19142 ;; Tracked objects:
 19143 ;;		On entry : 0/0
 19144 ;;		On exit  : 0/0
 19145 ;;		Unchanged: 0/0
 19146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19147 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19150 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19151 ;;Total ram usage:        2 bytes
 19152 ;; Hardware stack levels used:    1
 19153 ;; Hardware stack levels required when called:    8
 19154 ;; This function calls:
 19155 ;;		Nothing
 19156 ;; This function is called by:
 19157 ;;		_TMR1_Initialize
 19158 ;;		_initJoystick
 19159 ;; This function uses a non-reentrant model
 19160 ;;
 19161                           
 19162                           
 19163                           ;psect for function _TMR1_SetInterruptHandler
 19164  1A13                     _TMR1_SetInterruptHandler:
 19165  1A13                     l6868:	
 19166                           ;incstack = 0
 19167                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 19168                           
 19169                           
 19170                           ;mcc_generated_files/tmr1.c: 186:     TMR1_InterruptHandler = InterruptHandler;
 19171  1A13  0141               	movlb	1	; select bank1
 19172  1A14  0869               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 19173  1A15  00D7               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 19174  1A16  0868               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
 19175  1A17  00D6               	movwf	_TMR1_InterruptHandler^(0+128)
 19176  1A18                     l66:
 19177  1A18  0008               	return
 19178  1A19                     __end_of_TMR1_SetInterruptHandler:
 19179                           
 19180                           	psect	text83
 19181  1AC8                     __ptext83:	
 19182 ;; *************** function _PMD_Initialize *****************
 19183 ;; Defined at:
 19184 ;;		line 76 in file "mcc_generated_files/mcc.c"
 19185 ;; Parameters:    Size  Location     Type
 19186 ;;		None
 19187 ;; Auto vars:     Size  Location     Type
 19188 ;;		None
 19189 ;; Return value:  Size  Location     Type
 19190 ;;                  1    wreg      void 
 19191 ;; Registers used:
 19192 ;;		status,2
 19193 ;; Tracked objects:
 19194 ;;		On entry : 0/0
 19195 ;;		On exit  : 0/0
 19196 ;;		Unchanged: 0/0
 19197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19202 ;;Total ram usage:        0 bytes
 19203 ;; Hardware stack levels used:    1
 19204 ;; Hardware stack levels required when called:    8
 19205 ;; This function calls:
 19206 ;;		Nothing
 19207 ;; This function is called by:
 19208 ;;		_SYSTEM_Initialize
 19209 ;; This function uses a non-reentrant model
 19210 ;;
 19211                           
 19212                           
 19213                           ;psect for function _PMD_Initialize
 19214  1AC8                     _PMD_Initialize:
 19215  1AC8                     l7200:	
 19216                           ;incstack = 0
 19217                           ; Regs used in _PMD_Initialize: [status,2]
 19218                           
 19219                           
 19220                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
 19221  1AC8  014F               	movlb	15	; select bank15
 19222  1AC9  0196               	clrf	22	;volatile
 19223                           
 19224                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
 19225  1ACA  0197               	clrf	23	;volatile
 19226                           
 19227                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
 19228  1ACB  0198               	clrf	24	;volatile
 19229                           
 19230                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
 19231  1ACC  0199               	clrf	25	;volatile
 19232                           
 19233                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
 19234  1ACD  019A               	clrf	26	;volatile
 19235                           
 19236                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
 19237  1ACE  019B               	clrf	27	;volatile
 19238                           
 19239                           ;mcc_generated_files/mcc.c: 91:     PMD6 = 0x00;
 19240  1ACF  019C               	clrf	28	;volatile
 19241                           
 19242                           ;mcc_generated_files/mcc.c: 93:     PMD7 = 0x00;
 19243  1AD0  019D               	clrf	29	;volatile
 19244  1AD1                     l350:
 19245  1AD1  0008               	return
 19246  1AD2                     __end_of_PMD_Initialize:
 19247                           
 19248                           	psect	text84
 19249  1484                     __ptext84:	
 19250 ;; *************** function _PIN_MANAGER_Initialize *****************
 19251 ;; Defined at:
 19252 ;;		line 58 in file "mcc_generated_files/pin_manager.c"
 19253 ;; Parameters:    Size  Location     Type
 19254 ;;		None
 19255 ;; Auto vars:     Size  Location     Type
 19256 ;;		None
 19257 ;; Return value:  Size  Location     Type
 19258 ;;                  1    wreg      void 
 19259 ;; Registers used:
 19260 ;;		wreg, status,2, status,0, pclath, cstack
 19261 ;; Tracked objects:
 19262 ;;		On entry : 0/0
 19263 ;;		On exit  : 0/0
 19264 ;;		Unchanged: 0/0
 19265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19270 ;;Total ram usage:        0 bytes
 19271 ;; Hardware stack levels used:    1
 19272 ;; Hardware stack levels required when called:    9
 19273 ;; This function calls:
 19274 ;;		_IOCCF0_SetInterruptHandler
 19275 ;;		_IOCCF2_SetInterruptHandler
 19276 ;; This function is called by:
 19277 ;;		_SYSTEM_Initialize
 19278 ;; This function uses a non-reentrant model
 19279 ;;
 19280                           
 19281                           
 19282                           ;psect for function _PIN_MANAGER_Initialize
 19283  1484                     _PIN_MANAGER_Initialize:
 19284  1484                     l7202:	
 19285                           ;incstack = 0
 19286                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 19287                           
 19288                           
 19289                           ;mcc_generated_files/pin_manager.c: 63:     LATA = 0x20;
 19290  1484  3020               	movlw	32
 19291  1485  0140               	movlb	0	; select bank0
 19292  1486  0098               	movwf	24	;volatile
 19293                           
 19294                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x70;
 19295  1487  3070               	movlw	112
 19296  1488  0099               	movwf	25	;volatile
 19297                           
 19298                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0x40;
 19299  1489  3040               	movlw	64
 19300  148A  009A               	movwf	26	;volatile
 19301                           
 19302                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x1F;
 19303  148B  301F               	movlw	31
 19304  148C  0092               	movwf	18	;volatile
 19305                           
 19306                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0x80;
 19307  148D  3080               	movlw	128
 19308  148E  0093               	movwf	19	;volatile
 19309                           
 19310                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x2F;
 19311  148F  302F               	movlw	47
 19312  1490  0094               	movwf	20	;volatile
 19313  1491                     l7204:
 19314                           
 19315                           ;mcc_generated_files/pin_manager.c: 77:     ANSELC = 0x00;
 19316  1491  017E               	movlb	62	; select bank62
 19317  1492  01CE               	clrf	78	;volatile
 19318  1493                     l7206:
 19319                           
 19320                           ;mcc_generated_files/pin_manager.c: 78:     ANSELB = 0x00;
 19321  1493  01C3               	clrf	67	;volatile
 19322                           
 19323                           ;mcc_generated_files/pin_manager.c: 79:     ANSELA = 0x07;
 19324  1494  3007               	movlw	7
 19325  1495  00B8               	movwf	56	;volatile
 19326                           
 19327                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0xF0;
 19328  1496  30F0               	movlw	240
 19329  1497  00C4               	movwf	68	;volatile
 19330                           
 19331                           ;mcc_generated_files/pin_manager.c: 85:     WPUA = 0x16;
 19332  1498  3016               	movlw	22
 19333  1499  00B9               	movwf	57	;volatile
 19334                           
 19335                           ;mcc_generated_files/pin_manager.c: 86:     WPUC = 0x47;
 19336  149A  3047               	movlw	71
 19337  149B  00CF               	movwf	79	;volatile
 19338  149C                     l7208:
 19339                           
 19340                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
 19341  149C  01BA               	clrf	58	;volatile
 19342  149D                     l7210:
 19343                           
 19344                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
 19345  149D  01C5               	clrf	69	;volatile
 19346  149E                     l7212:
 19347                           
 19348                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
 19349  149E  01D0               	clrf	80	;volatile
 19350  149F                     l7214:
 19351                           
 19352                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0x37;
 19353  149F  3037               	movlw	55
 19354  14A0  00BB               	movwf	59	;volatile
 19355  14A1                     l7216:
 19356                           
 19357                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xF0;
 19358  14A1  30F0               	movlw	240
 19359  14A2  00C6               	movwf	70	;volatile
 19360  14A3                     l7218:
 19361                           
 19362                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
 19363  14A3  30FF               	movlw	255
 19364  14A4  00D1               	movwf	81	;volatile
 19365  14A5                     l7220:
 19366                           
 19367                           ;mcc_generated_files/pin_manager.c: 105:     INLVLA = 0x3F;
 19368  14A5  303F               	movlw	63
 19369  14A6  00BC               	movwf	60	;volatile
 19370  14A7                     l7222:
 19371                           
 19372                           ;mcc_generated_files/pin_manager.c: 106:     INLVLB = 0xF0;
 19373  14A7  30F0               	movlw	240
 19374  14A8  00C7               	movwf	71	;volatile
 19375  14A9                     l7224:
 19376                           
 19377                           ;mcc_generated_files/pin_manager.c: 107:     INLVLC = 0xFF;
 19378  14A9  30FF               	movlw	255
 19379  14AA  00D2               	movwf	82	;volatile
 19380  14AB                     l7226:
 19381                           
 19382                           ;mcc_generated_files/pin_manager.c: 114:     IOCCFbits.IOCCF0 = 0;
 19383  14AB  1055               	bcf	85,0	;volatile
 19384  14AC                     l7228:
 19385                           
 19386                           ;mcc_generated_files/pin_manager.c: 116:     IOCCFbits.IOCCF2 = 0;
 19387  14AC  1155               	bcf	85,2	;volatile
 19388  14AD                     l7230:
 19389                           
 19390                           ;mcc_generated_files/pin_manager.c: 118:     IOCCNbits.IOCCN0 = 1;
 19391  14AD  1454               	bsf	84,0	;volatile
 19392  14AE                     l7232:
 19393                           
 19394                           ;mcc_generated_files/pin_manager.c: 120:     IOCCNbits.IOCCN2 = 1;
 19395  14AE  1554               	bsf	84,2	;volatile
 19396  14AF                     l7234:
 19397                           
 19398                           ;mcc_generated_files/pin_manager.c: 122:     IOCCPbits.IOCCP0 = 0;
 19399  14AF  1053               	bcf	83,0	;volatile
 19400  14B0                     l7236:
 19401                           
 19402                           ;mcc_generated_files/pin_manager.c: 124:     IOCCPbits.IOCCP2 = 0;
 19403  14B0  1153               	bcf	83,2	;volatile
 19404  14B1                     l7238:
 19405                           
 19406                           ;mcc_generated_files/pin_manager.c: 129:     IOCCF0_SetInterruptHandler(IOCCF0_DefaultIn
      +                          terruptHandler);
 19407  14B1  30E2               	movlw	low _IOCCF0_DefaultInterruptHandler
 19408  14B2  0141               	movlb	1	; select bank1
 19409  14B3  00E8               	movwf	IOCCF0_SetInterruptHandler@InterruptHandler^(0+128)
 19410  14B4  3019               	movlw	high _IOCCF0_DefaultInterruptHandler
 19411  14B5  00E9               	movwf	(IOCCF0_SetInterruptHandler@InterruptHandler^(0+128)+1)
 19412  14B6  319A  2207  3194   	fcall	_IOCCF0_SetInterruptHandler
 19413  14B9                     l7240:
 19414                           
 19415                           ;mcc_generated_files/pin_manager.c: 130:     IOCCF2_SetInterruptHandler(IOCCF2_DefaultIn
      +                          terruptHandler);
 19416  14B9  30E1               	movlw	low _IOCCF2_DefaultInterruptHandler
 19417  14BA  0141               	movlb	1	; select bank1
 19418  14BB  00E8               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler^(0+128)
 19419  14BC  3019               	movlw	high _IOCCF2_DefaultInterruptHandler
 19420  14BD  00E9               	movwf	(IOCCF2_SetInterruptHandler@InterruptHandler^(0+128)+1)
 19421  14BE  319A  220D  3194   	fcall	_IOCCF2_SetInterruptHandler
 19422  14C1                     l7242:
 19423                           
 19424                           ;mcc_generated_files/pin_manager.c: 133:     PIE0bits.IOCIE = 1;
 19425  14C1  014E               	movlb	14	; select bank14
 19426  14C2  1616               	bsf	22,4	;volatile
 19427  14C3                     l7244:
 19428                           
 19429                           ;mcc_generated_files/pin_manager.c: 136:     RC4PPS = 0x0F;
 19430  14C3  300F               	movlw	15
 19431  14C4  017E               	movlb	62	; select bank62
 19432  14C5  00A4               	movwf	36	;volatile
 19433  14C6                     l7246:
 19434                           
 19435                           ;mcc_generated_files/pin_manager.c: 137:     RX1DTPPS = 0x15;
 19436  14C6  3015               	movlw	21
 19437  14C7  017D               	movlb	61	; select bank61
 19438  14C8  00CB               	movwf	75	;volatile
 19439  14C9                     l423:
 19440  14C9  0008               	return
 19441  14CA                     __end_of_PIN_MANAGER_Initialize:
 19442                           
 19443                           	psect	text85
 19444  1A0D                     __ptext85:	
 19445 ;; *************** function _IOCCF2_SetInterruptHandler *****************
 19446 ;; Defined at:
 19447 ;;		line 202 in file "mcc_generated_files/pin_manager.c"
 19448 ;; Parameters:    Size  Location     Type
 19449 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 19450 ;;		 -> turnPowerOn(1), IOCCF2_DefaultInterruptHandler(1), 
 19451 ;; Auto vars:     Size  Location     Type
 19452 ;;		None
 19453 ;; Return value:  Size  Location     Type
 19454 ;;                  1    wreg      void 
 19455 ;; Registers used:
 19456 ;;		wreg
 19457 ;; Tracked objects:
 19458 ;;		On entry : 0/0
 19459 ;;		On exit  : 0/0
 19460 ;;		Unchanged: 0/0
 19461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19462 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19465 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19466 ;;Total ram usage:        2 bytes
 19467 ;; Hardware stack levels used:    1
 19468 ;; Hardware stack levels required when called:    8
 19469 ;; This function calls:
 19470 ;;		Nothing
 19471 ;; This function is called by:
 19472 ;;		_PIN_MANAGER_Initialize
 19473 ;;		_initUI
 19474 ;; This function uses a non-reentrant model
 19475 ;;
 19476                           
 19477                           
 19478                           ;psect for function _IOCCF2_SetInterruptHandler
 19479  1A0D                     _IOCCF2_SetInterruptHandler:
 19480  1A0D                     l6888:	
 19481                           ;incstack = 0
 19482                           ; Regs used in _IOCCF2_SetInterruptHandler: [wreg]
 19483                           
 19484                           
 19485                           ;mcc_generated_files/pin_manager.c: 203:     IOCCF2_InterruptHandler = InterruptHandler;
 19486  1A0D  0141               	movlb	1	; select bank1
 19487  1A0E  0869               	movf	(IOCCF2_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 19488  1A0F  00CF               	movwf	(_IOCCF2_InterruptHandler+1)^(0+128)
 19489  1A10  0868               	movf	IOCCF2_SetInterruptHandler@InterruptHandler^(0+128),w
 19490  1A11  00CE               	movwf	_IOCCF2_InterruptHandler^(0+128)
 19491  1A12                     l445:
 19492  1A12  0008               	return
 19493  1A13                     __end_of_IOCCF2_SetInterruptHandler:
 19494                           
 19495                           	psect	text86
 19496  1A07                     __ptext86:	
 19497 ;; *************** function _IOCCF0_SetInterruptHandler *****************
 19498 ;; Defined at:
 19499 ;;		line 172 in file "mcc_generated_files/pin_manager.c"
 19500 ;; Parameters:    Size  Location     Type
 19501 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 19502 ;;		 -> turnPowerOn(1), IOCCF0_DefaultInterruptHandler(1), 
 19503 ;; Auto vars:     Size  Location     Type
 19504 ;;		None
 19505 ;; Return value:  Size  Location     Type
 19506 ;;                  1    wreg      void 
 19507 ;; Registers used:
 19508 ;;		wreg
 19509 ;; Tracked objects:
 19510 ;;		On entry : 0/0
 19511 ;;		On exit  : 0/0
 19512 ;;		Unchanged: 0/0
 19513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19514 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19517 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19518 ;;Total ram usage:        2 bytes
 19519 ;; Hardware stack levels used:    1
 19520 ;; Hardware stack levels required when called:    8
 19521 ;; This function calls:
 19522 ;;		Nothing
 19523 ;; This function is called by:
 19524 ;;		_PIN_MANAGER_Initialize
 19525 ;;		_initUI
 19526 ;; This function uses a non-reentrant model
 19527 ;;
 19528                           
 19529                           
 19530                           ;psect for function _IOCCF0_SetInterruptHandler
 19531  1A07                     _IOCCF0_SetInterruptHandler:
 19532  1A07                     l6886:	
 19533                           ;incstack = 0
 19534                           ; Regs used in _IOCCF0_SetInterruptHandler: [wreg]
 19535                           
 19536                           
 19537                           ;mcc_generated_files/pin_manager.c: 173:     IOCCF0_InterruptHandler = InterruptHandler;
 19538  1A07  0141               	movlb	1	; select bank1
 19539  1A08  0869               	movf	(IOCCF0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 19540  1A09  00D1               	movwf	(_IOCCF0_InterruptHandler+1)^(0+128)
 19541  1A0A  0868               	movf	IOCCF0_SetInterruptHandler@InterruptHandler^(0+128),w
 19542  1A0B  00D0               	movwf	_IOCCF0_InterruptHandler^(0+128)
 19543  1A0C                     l435:
 19544  1A0C  0008               	return
 19545  1A0D                     __end_of_IOCCF0_SetInterruptHandler:
 19546                           
 19547                           	psect	text87
 19548  1A7E                     __ptext87:	
 19549 ;; *************** function _OSCILLATOR_Initialize *****************
 19550 ;; Defined at:
 19551 ;;		line 62 in file "mcc_generated_files/mcc.c"
 19552 ;; Parameters:    Size  Location     Type
 19553 ;;		None
 19554 ;; Auto vars:     Size  Location     Type
 19555 ;;		None
 19556 ;; Return value:  Size  Location     Type
 19557 ;;                  1    wreg      void 
 19558 ;; Registers used:
 19559 ;;		wreg, status,2
 19560 ;; Tracked objects:
 19561 ;;		On entry : 0/0
 19562 ;;		On exit  : 0/0
 19563 ;;		Unchanged: 0/0
 19564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19569 ;;Total ram usage:        0 bytes
 19570 ;; Hardware stack levels used:    1
 19571 ;; Hardware stack levels required when called:    8
 19572 ;; This function calls:
 19573 ;;		Nothing
 19574 ;; This function is called by:
 19575 ;;		_SYSTEM_Initialize
 19576 ;; This function uses a non-reentrant model
 19577 ;;
 19578                           
 19579                           
 19580                           ;psect for function _OSCILLATOR_Initialize
 19581  1A7E                     _OSCILLATOR_Initialize:
 19582  1A7E                     l7248:	
 19583                           ;incstack = 0
 19584                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 19585                           
 19586                           
 19587                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
 19588  1A7E  3060               	movlw	96
 19589  1A7F  0151               	movlb	17	; select bank17
 19590  1A80  008D               	movwf	13	;volatile
 19591  1A81                     l7250:
 19592                           
 19593                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
 19594  1A81  018F               	clrf	15	;volatile
 19595  1A82                     l7252:
 19596                           
 19597                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
 19598  1A82  0191               	clrf	17	;volatile
 19599                           
 19600                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x05;
 19601  1A83  3005               	movlw	5
 19602  1A84  0093               	movwf	19	;volatile
 19603  1A85                     l7254:
 19604                           
 19605                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
 19606  1A85  0192               	clrf	18	;volatile
 19607  1A86                     l347:
 19608  1A86  0008               	return
 19609  1A87                     __end_of_OSCILLATOR_Initialize:
 19610                           
 19611                           	psect	text88
 19612  143E                     __ptext88:	
 19613 ;; *************** function _EUSART1_Initialize *****************
 19614 ;; Defined at:
 19615 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 19616 ;; Parameters:    Size  Location     Type
 19617 ;;		None
 19618 ;; Auto vars:     Size  Location     Type
 19619 ;;		None
 19620 ;; Return value:  Size  Location     Type
 19621 ;;                  1    wreg      void 
 19622 ;; Registers used:
 19623 ;;		wreg, status,2, status,0, pclath, cstack
 19624 ;; Tracked objects:
 19625 ;;		On entry : 0/0
 19626 ;;		On exit  : 0/0
 19627 ;;		Unchanged: 0/0
 19628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19631 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19632 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19633 ;;Total ram usage:        1 bytes
 19634 ;; Hardware stack levels used:    1
 19635 ;; Hardware stack levels required when called:    9
 19636 ;; This function calls:
 19637 ;;		_EUSART1_SetErrorHandler
 19638 ;;		_EUSART1_SetFramingErrorHandler
 19639 ;;		_EUSART1_SetOverrunErrorHandler
 19640 ;;		_EUSART1_SetRxInterruptHandler
 19641 ;;		_EUSART1_SetTxInterruptHandler
 19642 ;; This function is called by:
 19643 ;;		_SYSTEM_Initialize
 19644 ;; This function uses a non-reentrant model
 19645 ;;
 19646                           
 19647                           
 19648                           ;psect for function _EUSART1_Initialize
 19649  143E                     _EUSART1_Initialize:
 19650  143E                     l7168:	
 19651                           ;incstack = 0
 19652                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 19653                           
 19654                           
 19655                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
 19656  143E  014E               	movlb	14	; select bank14
 19657  143F  1299               	bcf	25,5	;volatile
 19658  1440                     l7170:
 19659                           
 19660                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 19661  1440  307A               	movlw	low _EUSART1_Receive_ISR
 19662  1441  0141               	movlb	1	; select bank1
 19663  1442  00E8               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^(0+128)
 19664  1443  3013               	movlw	high _EUSART1_Receive_ISR
 19665  1444  00E9               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler^(0+128)+1)
 19666  1445  319A  2275  3194   	fcall	_EUSART1_SetRxInterruptHandler
 19667  1448                     l7172:
 19668                           
 19669                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
 19670  1448  014E               	movlb	14	; select bank14
 19671  1449  1219               	bcf	25,4	;volatile
 19672                           
 19673                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 19674  144A  306E               	movlw	low _EUSART1_Transmit_ISR
 19675  144B  0141               	movlb	1	; select bank1
 19676  144C  00E8               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^(0+128)
 19677  144D  301F               	movlw	high _EUSART1_Transmit_ISR
 19678  144E  00E9               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler^(0+128)+1)
 19679  144F  319A  2201  3194   	fcall	_EUSART1_SetTxInterruptHandler
 19680  1452                     l7174:
 19681                           
 19682                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
 19683  1452  3008               	movlw	8
 19684  1453  0142               	movlb	2	; select bank2
 19685  1454  009F               	movwf	31	;volatile
 19686  1455                     l7176:
 19687                           
 19688                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
 19689  1455  3090               	movlw	144
 19690  1456  009D               	movwf	29	;volatile
 19691  1457                     l7178:
 19692                           
 19693                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
 19694  1457  3024               	movlw	36
 19695  1458  009E               	movwf	30	;volatile
 19696  1459                     l7180:
 19697                           
 19698                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x67;
 19699  1459  3067               	movlw	103
 19700  145A  009B               	movwf	27	;volatile
 19701  145B                     l7182:
 19702                           
 19703                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x00;
 19704  145B  019C               	clrf	28	;volatile
 19705  145C                     l7184:
 19706                           
 19707                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 19708  145C  30E0               	movlw	low _EUSART1_DefaultFramingErrorHandler
 19709  145D  0141               	movlb	1	; select bank1
 19710  145E  00E8               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^(0+128)
 19711  145F  3019               	movlw	high _EUSART1_DefaultFramingErrorHandler
 19712  1460  00E9               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler^(0+128)+1)
 19713  1461  319A  2263  3194   	fcall	_EUSART1_SetFramingErrorHandler
 19714  1464                     l7186:
 19715                           
 19716                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 19717  1464  30F7               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 19718  1465  0141               	movlb	1	; select bank1
 19719  1466  00E8               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^(0+128)
 19720  1467  3019               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 19721  1468  00E9               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
 19722  1469  319A  226C  3194   	fcall	_EUSART1_SetOverrunErrorHandler
 19723  146C                     l7188:
 19724                           
 19725                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 19726  146C  30F3               	movlw	low _EUSART1_DefaultErrorHandler
 19727  146D  0141               	movlb	1	; select bank1
 19728  146E  00E8               	movwf	EUSART1_SetErrorHandler@interruptHandler^(0+128)
 19729  146F  3019               	movlw	high _EUSART1_DefaultErrorHandler
 19730  1470  00E9               	movwf	(EUSART1_SetErrorHandler@interruptHandler^(0+128)+1)
 19731  1471  319A  225A  3194   	fcall	_EUSART1_SetErrorHandler
 19732                           
 19733                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 19734  1474  0140               	movlb	0	; select bank0
 19735  1475  01CF               	clrf	_eusart1RxLastError	;volatile
 19736                           
 19737                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 19738  1476  01D4               	clrf	_eusart1TxHead	;volatile
 19739                           
 19740                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 19741  1477  01D3               	clrf	_eusart1TxTail	;volatile
 19742  1478                     l7190:
 19743                           
 19744                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 19745  1478  3020               	movlw	32
 19746  1479  0141               	movlb	1	; select bank1
 19747  147A  00EA               	movwf	??_EUSART1_Initialize^(0+128)
 19748  147B  086A               	movf	??_EUSART1_Initialize^(0+128),w
 19749  147C  0140               	movlb	0	; select bank0
 19750  147D  00D5               	movwf	_eusart1TxBufferRemaining	;volatile
 19751  147E                     l7192:
 19752                           
 19753                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 19754  147E  01D2               	clrf	_eusart1RxHead	;volatile
 19755  147F                     l7194:
 19756                           
 19757                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 19758  147F  01D1               	clrf	_eusart1RxTail	;volatile
 19759  1480                     l7196:
 19760                           
 19761                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 19762  1480  01D0               	clrf	_eusart1RxCount	;volatile
 19763  1481                     l7198:
 19764                           
 19765                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
 19766  1481  014E               	movlb	14	; select bank14
 19767  1482  1699               	bsf	25,5	;volatile
 19768  1483                     l230:
 19769  1483  0008               	return
 19770  1484                     __end_of_EUSART1_Initialize:
 19771                           
 19772                           	psect	text89
 19773  1A01                     __ptext89:	
 19774 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 19775 ;; Defined at:
 19776 ;;		line 272 in file "mcc_generated_files/eusart1.c"
 19777 ;; Parameters:    Size  Location     Type
 19778 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
 19779 ;;		 -> EUSART1_Transmit_ISR(1), 
 19780 ;; Auto vars:     Size  Location     Type
 19781 ;;		None
 19782 ;; Return value:  Size  Location     Type
 19783 ;;                  1    wreg      void 
 19784 ;; Registers used:
 19785 ;;		wreg
 19786 ;; Tracked objects:
 19787 ;;		On entry : 0/0
 19788 ;;		On exit  : 0/0
 19789 ;;		Unchanged: 0/0
 19790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19791 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19794 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19795 ;;Total ram usage:        2 bytes
 19796 ;; Hardware stack levels used:    1
 19797 ;; Hardware stack levels required when called:    8
 19798 ;; This function calls:
 19799 ;;		Nothing
 19800 ;; This function is called by:
 19801 ;;		_EUSART1_Initialize
 19802 ;; This function uses a non-reentrant model
 19803 ;;
 19804                           
 19805                           
 19806                           ;psect for function _EUSART1_SetTxInterruptHandler
 19807  1A01                     _EUSART1_SetTxInterruptHandler:
 19808  1A01                     l6878:	
 19809                           ;incstack = 0
 19810                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
 19811                           
 19812                           
 19813                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 19814  1A01  0141               	movlb	1	; select bank1
 19815  1A02  0869               	movf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^(0+128),w
 19816  1A03  00D3               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+128)
 19817  1A04  0868               	movf	EUSART1_SetTxInterruptHandler@interruptHandler^(0+128),w
 19818  1A05  00D2               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+128)
 19819  1A06                     l296:
 19820  1A06  0008               	return
 19821  1A07                     __end_of_EUSART1_SetTxInterruptHandler:
 19822                           
 19823                           	psect	text90
 19824  1A75                     __ptext90:	
 19825 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 19826 ;; Defined at:
 19827 ;;		line 276 in file "mcc_generated_files/eusart1.c"
 19828 ;; Parameters:    Size  Location     Type
 19829 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
 19830 ;;		 -> EUSART1_Receive_ISR(1), 
 19831 ;; Auto vars:     Size  Location     Type
 19832 ;;		None
 19833 ;; Return value:  Size  Location     Type
 19834 ;;                  1    wreg      void 
 19835 ;; Registers used:
 19836 ;;		wreg
 19837 ;; Tracked objects:
 19838 ;;		On entry : 0/0
 19839 ;;		On exit  : 0/0
 19840 ;;		Unchanged: 0/0
 19841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19842 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19845 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19846 ;;Total ram usage:        2 bytes
 19847 ;; Hardware stack levels used:    1
 19848 ;; Hardware stack levels required when called:    8
 19849 ;; This function calls:
 19850 ;;		Nothing
 19851 ;; This function is called by:
 19852 ;;		_EUSART1_Initialize
 19853 ;; This function uses a non-reentrant model
 19854 ;;
 19855                           
 19856                           
 19857                           ;psect for function _EUSART1_SetRxInterruptHandler
 19858  1A75                     _EUSART1_SetRxInterruptHandler:
 19859  1A75                     l6876:	
 19860                           ;incstack = 0
 19861                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 19862                           
 19863                           
 19864                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 19865  1A75  0141               	movlb	1	; select bank1
 19866  1A76  0869               	movf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^(0+128),w
 19867  1A77  0142               	movlb	2	; select bank2
 19868  1A78  00E3               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 19869  1A79  0141               	movlb	1	; select bank1
 19870  1A7A  0868               	movf	EUSART1_SetRxInterruptHandler@interruptHandler^(0+128),w
 19871  1A7B  0142               	movlb	2	; select bank2
 19872  1A7C  00E2               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 19873  1A7D                     l299:
 19874  1A7D  0008               	return
 19875  1A7E                     __end_of_EUSART1_SetRxInterruptHandler:
 19876                           
 19877                           	psect	text91
 19878  1A6C                     __ptext91:	
 19879 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 19880 ;; Defined at:
 19881 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 19882 ;; Parameters:    Size  Location     Type
 19883 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
 19884 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 19885 ;; Auto vars:     Size  Location     Type
 19886 ;;		None
 19887 ;; Return value:  Size  Location     Type
 19888 ;;                  1    wreg      void 
 19889 ;; Registers used:
 19890 ;;		wreg
 19891 ;; Tracked objects:
 19892 ;;		On entry : 0/0
 19893 ;;		On exit  : 0/0
 19894 ;;		Unchanged: 0/0
 19895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19896 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19899 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19900 ;;Total ram usage:        2 bytes
 19901 ;; Hardware stack levels used:    1
 19902 ;; Hardware stack levels required when called:    8
 19903 ;; This function calls:
 19904 ;;		Nothing
 19905 ;; This function is called by:
 19906 ;;		_EUSART1_Initialize
 19907 ;; This function uses a non-reentrant model
 19908 ;;
 19909                           
 19910                           
 19911                           ;psect for function _EUSART1_SetOverrunErrorHandler
 19912  1A6C                     _EUSART1_SetOverrunErrorHandler:
 19913  1A6C                     l6882:	
 19914                           ;incstack = 0
 19915                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 19916                           
 19917                           
 19918                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_OverrunErrorHandler = interruptHandler;
 19919  1A6C  0141               	movlb	1	; select bank1
 19920  1A6D  0869               	movf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
 19921  1A6E  0142               	movlb	2	; select bank2
 19922  1A6F  00DF               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 19923  1A70  0141               	movlb	1	; select bank1
 19924  1A71  0868               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler^(0+128),w
 19925  1A72  0142               	movlb	2	; select bank2
 19926  1A73  00DE               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 19927  1A74                     l290:
 19928  1A74  0008               	return
 19929  1A75                     __end_of_EUSART1_SetOverrunErrorHandler:
 19930                           
 19931                           	psect	text92
 19932  1A63                     __ptext92:	
 19933 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 19934 ;; Defined at:
 19935 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 19936 ;; Parameters:    Size  Location     Type
 19937 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
 19938 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 19939 ;; Auto vars:     Size  Location     Type
 19940 ;;		None
 19941 ;; Return value:  Size  Location     Type
 19942 ;;                  1    wreg      void 
 19943 ;; Registers used:
 19944 ;;		wreg
 19945 ;; Tracked objects:
 19946 ;;		On entry : 0/0
 19947 ;;		On exit  : 0/0
 19948 ;;		Unchanged: 0/0
 19949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19950 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19953 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19954 ;;Total ram usage:        2 bytes
 19955 ;; Hardware stack levels used:    1
 19956 ;; Hardware stack levels required when called:    8
 19957 ;; This function calls:
 19958 ;;		Nothing
 19959 ;; This function is called by:
 19960 ;;		_EUSART1_Initialize
 19961 ;; This function uses a non-reentrant model
 19962 ;;
 19963                           
 19964                           
 19965                           ;psect for function _EUSART1_SetFramingErrorHandler
 19966  1A63                     _EUSART1_SetFramingErrorHandler:
 19967  1A63                     l6880:	
 19968                           ;incstack = 0
 19969                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 19970                           
 19971                           
 19972                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_FramingErrorHandler = interruptHandler;
 19973  1A63  0141               	movlb	1	; select bank1
 19974  1A64  0869               	movf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
 19975  1A65  0142               	movlb	2	; select bank2
 19976  1A66  00E1               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 19977  1A67  0141               	movlb	1	; select bank1
 19978  1A68  0868               	movf	EUSART1_SetFramingErrorHandler@interruptHandler^(0+128),w
 19979  1A69  0142               	movlb	2	; select bank2
 19980  1A6A  00E0               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 19981  1A6B                     l287:
 19982  1A6B  0008               	return
 19983  1A6C                     __end_of_EUSART1_SetFramingErrorHandler:
 19984                           
 19985                           	psect	text93
 19986  1A5A                     __ptext93:	
 19987 ;; *************** function _EUSART1_SetErrorHandler *****************
 19988 ;; Defined at:
 19989 ;;		line 268 in file "mcc_generated_files/eusart1.c"
 19990 ;; Parameters:    Size  Location     Type
 19991 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
 19992 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 19993 ;; Auto vars:     Size  Location     Type
 19994 ;;		None
 19995 ;; Return value:  Size  Location     Type
 19996 ;;                  1    wreg      void 
 19997 ;; Registers used:
 19998 ;;		wreg
 19999 ;; Tracked objects:
 20000 ;;		On entry : 0/0
 20001 ;;		On exit  : 0/0
 20002 ;;		Unchanged: 0/0
 20003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20004 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20007 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20008 ;;Total ram usage:        2 bytes
 20009 ;; Hardware stack levels used:    1
 20010 ;; Hardware stack levels required when called:    8
 20011 ;; This function calls:
 20012 ;;		Nothing
 20013 ;; This function is called by:
 20014 ;;		_EUSART1_Initialize
 20015 ;; This function uses a non-reentrant model
 20016 ;;
 20017                           
 20018                           
 20019                           ;psect for function _EUSART1_SetErrorHandler
 20020  1A5A                     _EUSART1_SetErrorHandler:
 20021  1A5A                     l6884:	
 20022                           ;incstack = 0
 20023                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 20024                           
 20025                           
 20026                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_ErrorHandler = interruptHandler;
 20027  1A5A  0141               	movlb	1	; select bank1
 20028  1A5B  0869               	movf	(EUSART1_SetErrorHandler@interruptHandler+1)^(0+128),w
 20029  1A5C  0142               	movlb	2	; select bank2
 20030  1A5D  00DD               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 20031  1A5E  0141               	movlb	1	; select bank1
 20032  1A5F  0868               	movf	EUSART1_SetErrorHandler@interruptHandler^(0+128),w
 20033  1A60  0142               	movlb	2	; select bank2
 20034  1A61  00DC               	movwf	_EUSART1_ErrorHandler^(0+256)
 20035  1A62                     l293:
 20036  1A62  0008               	return
 20037  1A63                     __end_of_EUSART1_SetErrorHandler:
 20038                           
 20039                           	psect	text94
 20040  1D5E                     __ptext94:	
 20041 ;; *************** function _ADCC_Initialize *****************
 20042 ;; Defined at:
 20043 ;;		line 63 in file "mcc_generated_files/adcc.c"
 20044 ;; Parameters:    Size  Location     Type
 20045 ;;		None
 20046 ;; Auto vars:     Size  Location     Type
 20047 ;;		None
 20048 ;; Return value:  Size  Location     Type
 20049 ;;                  1    wreg      void 
 20050 ;; Registers used:
 20051 ;;		wreg, status,2
 20052 ;; Tracked objects:
 20053 ;;		On entry : 0/0
 20054 ;;		On exit  : 0/0
 20055 ;;		Unchanged: 0/0
 20056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20061 ;;Total ram usage:        0 bytes
 20062 ;; Hardware stack levels used:    1
 20063 ;; Hardware stack levels required when called:    8
 20064 ;; This function calls:
 20065 ;;		Nothing
 20066 ;; This function is called by:
 20067 ;;		_SYSTEM_Initialize
 20068 ;; This function uses a non-reentrant model
 20069 ;;
 20070                           
 20071                           
 20072                           ;psect for function _ADCC_Initialize
 20073  1D5E                     _ADCC_Initialize:
 20074  1D5E                     l7256:	
 20075                           ;incstack = 0
 20076                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 20077                           
 20078                           
 20079                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 20080  1D5E  0141               	movlb	1	; select bank1
 20081  1D5F  018C               	clrf	12	;volatile
 20082                           
 20083                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 20084  1D60  018D               	clrf	13	;volatile
 20085                           
 20086                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 20087  1D61  018E               	clrf	14	;volatile
 20088                           
 20089                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 20090  1D62  018F               	clrf	15	;volatile
 20091                           
 20092                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 20093  1D63  0192               	clrf	18	;volatile
 20094                           
 20095                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 20096  1D64  0193               	clrf	19	;volatile
 20097                           
 20098                           ;mcc_generated_files/adcc.c: 79:     ADACCU = 0x00;
 20099  1D65  0198               	clrf	24	;volatile
 20100                           
 20101                           ;mcc_generated_files/adcc.c: 81:     ADRPT = 0x00;
 20102  1D66  019A               	clrf	26	;volatile
 20103                           
 20104                           ;mcc_generated_files/adcc.c: 83:     ADPCH = 0x00;
 20105  1D67  019F               	clrf	31	;volatile
 20106  1D68                     l7258:
 20107                           
 20108                           ;mcc_generated_files/adcc.c: 85:     ADACQL = 0x10;
 20109  1D68  3010               	movlw	16
 20110  1D69  0142               	movlb	2	; select bank2
 20111  1D6A  008C               	movwf	12	;volatile
 20112  1D6B                     l7260:
 20113                           
 20114                           ;mcc_generated_files/adcc.c: 87:     ADACQH = 0x00;
 20115  1D6B  018D               	clrf	13	;volatile
 20116  1D6C                     l7262:
 20117                           
 20118                           ;mcc_generated_files/adcc.c: 89:     ADCAP = 0x00;
 20119  1D6C  018E               	clrf	14	;volatile
 20120  1D6D                     l7264:
 20121                           
 20122                           ;mcc_generated_files/adcc.c: 91:     ADPREL = 0x00;
 20123  1D6D  018F               	clrf	15	;volatile
 20124  1D6E                     l7266:
 20125                           
 20126                           ;mcc_generated_files/adcc.c: 93:     ADPREH = 0x00;
 20127  1D6E  0190               	clrf	16	;volatile
 20128  1D6F                     l7268:
 20129                           
 20130                           ;mcc_generated_files/adcc.c: 95:     ADCON1 = 0x00;
 20131  1D6F  0192               	clrf	18	;volatile
 20132  1D70                     l7270:
 20133                           
 20134                           ;mcc_generated_files/adcc.c: 97:     ADCON2 = 0x00;
 20135  1D70  0193               	clrf	19	;volatile
 20136  1D71                     l7272:
 20137                           
 20138                           ;mcc_generated_files/adcc.c: 99:     ADCON3 = 0x00;
 20139  1D71  0194               	clrf	20	;volatile
 20140  1D72                     l7274:
 20141                           
 20142                           ;mcc_generated_files/adcc.c: 101:     ADSTAT = 0x00;
 20143  1D72  0195               	clrf	21	;volatile
 20144  1D73                     l7276:
 20145                           
 20146                           ;mcc_generated_files/adcc.c: 103:     ADREF = 0x00;
 20147  1D73  0196               	clrf	22	;volatile
 20148  1D74                     l7278:
 20149                           
 20150                           ;mcc_generated_files/adcc.c: 105:     ADACT = 0x00;
 20151  1D74  0197               	clrf	23	;volatile
 20152  1D75                     l7280:
 20153                           
 20154                           ;mcc_generated_files/adcc.c: 107:     ADCLK = 0x07;
 20155  1D75  3007               	movlw	7
 20156  1D76  0098               	movwf	24	;volatile
 20157  1D77                     l7282:
 20158                           
 20159                           ;mcc_generated_files/adcc.c: 109:     ADCON0 = 0x84;
 20160  1D77  3084               	movlw	132
 20161  1D78  0091               	movwf	17	;volatile
 20162  1D79                     l639:
 20163  1D79  0008               	return
 20164  1D7A                     __end_of_ADCC_Initialize:
 20165                           
 20166                           	psect	intentry
 20167  0004                     __pintentry:	
 20168 ;; *************** function _INTERRUPT_InterruptManager *****************
 20169 ;; Defined at:
 20170 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 20171 ;; Parameters:    Size  Location     Type
 20172 ;;		None
 20173 ;; Auto vars:     Size  Location     Type
 20174 ;;		None
 20175 ;; Return value:  Size  Location     Type
 20176 ;;                  1    wreg      void 
 20177 ;; Registers used:
 20178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20179 ;; Tracked objects:
 20180 ;;		On entry : 0/0
 20181 ;;		On exit  : 0/0
 20182 ;;		Unchanged: 0/0
 20183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20188 ;;Total ram usage:        0 bytes
 20189 ;; Hardware stack levels used:    1
 20190 ;; Hardware stack levels required when called:    7
 20191 ;; This function calls:
 20192 ;;		Absolute function
 20193 ;;		_EUSART1_Receive_ISR
 20194 ;;		_EUSART1_Transmit_ISR
 20195 ;;		_PIN_MANAGER_IOC
 20196 ;;		_TMR1_ISR
 20197 ;;		_TMR2_ISR
 20198 ;;		_TMR3_ISR
 20199 ;; This function is called by:
 20200 ;;		Interrupt level 1
 20201 ;; This function uses a non-reentrant model
 20202 ;;
 20203                           
 20204  0004                     _INTERRUPT_InterruptManager:
 20205                           
 20206                           ;incstack = 0
 20207  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 20208                           
 20209                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20210  0005  3180               	pagesel	$
 20211  0006                     i1l7762:
 20212                           
 20213                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 20214  0006  014E               	movlb	14	; select bank14
 20215  0007  1E16               	btfss	22,4	;volatile
 20216  0008  280A               	goto	u640_21
 20217  0009  280B               	goto	u640_20
 20218  000A                     u640_21:
 20219  000A  2813               	goto	i1l548
 20220  000B                     u640_20:
 20221  000B                     i1l7764:
 20222  000B  1E0C               	btfss	12,4	;volatile
 20223  000C  280E               	goto	u641_21
 20224  000D  280F               	goto	u641_20
 20225  000E                     u641_21:
 20226  000E  2813               	goto	i1l548
 20227  000F                     u641_20:
 20228  000F                     i1l7766:
 20229                           
 20230                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 20231  000F  319B  23A4  3180   	fcall	_PIN_MANAGER_IOC
 20232                           
 20233                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 20234  0012  2859               	goto	i1l560
 20235  0013                     i1l548:	
 20236                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 20237                           
 20238  0013  1F0B               	btfss	11,6	;volatile
 20239  0014  2816               	goto	u642_21
 20240  0015  2817               	goto	u642_20
 20241  0016                     u642_21:
 20242  0016  2859               	goto	i1l560
 20243  0017                     u642_20:
 20244  0017                     i1l7768:
 20245                           
 20246                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE4bits.TMR3IE == 1 && PIR4bits.TMR3IF == 1)
 20247  0017  1D1A               	btfss	26,2	;volatile
 20248  0018  281A               	goto	u643_21
 20249  0019  281B               	goto	u643_20
 20250  001A                     u643_21:
 20251  001A  2823               	goto	i1l551
 20252  001B                     u643_20:
 20253  001B                     i1l7770:
 20254  001B  1D10               	btfss	16,2	;volatile
 20255  001C  281E               	goto	u644_21
 20256  001D  281F               	goto	u644_20
 20257  001E                     u644_21:
 20258  001E  2823               	goto	i1l551
 20259  001F                     u644_20:
 20260  001F                     i1l7772:
 20261                           
 20262                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR3_ISR();
 20263  001F  319B  234B  3180   	fcall	_TMR3_ISR
 20264                           
 20265                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 20266  0022  2859               	goto	i1l560
 20267  0023                     i1l551:	
 20268                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
 20269                           
 20270  0023  1C9A               	btfss	26,1	;volatile
 20271  0024  2826               	goto	u645_21
 20272  0025  2827               	goto	u645_20
 20273  0026                     u645_21:
 20274  0026  282F               	goto	i1l553
 20275  0027                     u645_20:
 20276  0027                     i1l7774:
 20277  0027  1C90               	btfss	16,1	;volatile
 20278  0028  282A               	goto	u646_21
 20279  0029  282B               	goto	u646_20
 20280  002A                     u646_21:
 20281  002A  282F               	goto	i1l553
 20282  002B                     u646_20:
 20283  002B                     i1l7776:
 20284                           
 20285                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR2_ISR();
 20286  002B  3199  21FB  3180   	fcall	_TMR2_ISR
 20287                           
 20288                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 20289  002E  2859               	goto	i1l560
 20290  002F                     i1l553:	
 20291                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
 20292                           
 20293  002F  1C1A               	btfss	26,0	;volatile
 20294  0030  2832               	goto	u647_21
 20295  0031  2833               	goto	u647_20
 20296  0032                     u647_21:
 20297  0032  283B               	goto	i1l555
 20298  0033                     u647_20:
 20299  0033                     i1l7778:
 20300  0033  1C10               	btfss	16,0	;volatile
 20301  0034  2836               	goto	u648_21
 20302  0035  2837               	goto	u648_20
 20303  0036                     u648_21:
 20304  0036  283B               	goto	i1l555
 20305  0037                     u648_20:
 20306  0037                     i1l7780:
 20307                           
 20308                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             TMR1_ISR();
 20309  0037  319B  233D  3180   	fcall	_TMR1_ISR
 20310                           
 20311                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 20312  003A  2859               	goto	i1l560
 20313  003B                     i1l555:	
 20314                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 20315                           
 20316  003B  1E99               	btfss	25,5	;volatile
 20317  003C  283E               	goto	u649_21
 20318  003D  283F               	goto	u649_20
 20319  003E                     u649_21:
 20320  003E  284A               	goto	i1l557
 20321  003F                     u649_20:
 20322  003F                     i1l7782:
 20323  003F  1E8F               	btfss	15,5	;volatile
 20324  0040  2842               	goto	u650_21
 20325  0041  2843               	goto	u650_20
 20326  0042                     u650_21:
 20327  0042  284A               	goto	i1l557
 20328  0043                     u650_20:
 20329  0043                     i1l7784:
 20330                           
 20331                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 20332  0043  0142               	movlb	2	; select bank2
 20333  0044  0863               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 20334  0045  008A               	movwf	10
 20335  0046  0862               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 20336  0047  000A               	callw
 20337  0048  3180               	pagesel	$
 20338                           
 20339                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 20340  0049  2859               	goto	i1l560
 20341  004A                     i1l557:	
 20342                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 20343                           
 20344  004A  1E19               	btfss	25,4	;volatile
 20345  004B  284D               	goto	u651_21
 20346  004C  284E               	goto	u651_20
 20347  004D                     u651_21:
 20348  004D  2859               	goto	i1l554
 20349  004E                     u651_20:
 20350  004E                     i1l7786:
 20351  004E  1E0F               	btfss	15,4	;volatile
 20352  004F  2851               	goto	u652_21
 20353  0050  2852               	goto	u652_20
 20354  0051                     u652_21:
 20355  0051  2859               	goto	i1l554
 20356  0052                     u652_20:
 20357  0052                     i1l7788:
 20358                           
 20359                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             EUSART1_TxDefaultInterruptHandler();
 20360  0052  0141               	movlb	1	; select bank1
 20361  0053  0853               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+128),w
 20362  0054  008A               	movwf	10
 20363  0055  0852               	movf	_EUSART1_TxDefaultInterruptHandler^(0+128),w
 20364  0056  000A               	callw
 20365  0057  3180               	pagesel	$
 20366  0058  2859               	goto	i1l560
 20367  0059                     i1l554:
 20368  0059                     i1l560:
 20369  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 20370  005A  0009               	retfie
 20371  005B                     __end_of_INTERRUPT_InterruptManager:
 20372                           
 20373                           	psect	text96
 20374  1B4B                     __ptext96:	
 20375 ;; *************** function _TMR3_ISR *****************
 20376 ;; Defined at:
 20377 ;;		line 164 in file "mcc_generated_files/tmr3.c"
 20378 ;; Parameters:    Size  Location     Type
 20379 ;;		None
 20380 ;; Auto vars:     Size  Location     Type
 20381 ;;		None
 20382 ;; Return value:  Size  Location     Type
 20383 ;;                  1    wreg      void 
 20384 ;; Registers used:
 20385 ;;		wreg, status,2, status,0, pclath, cstack
 20386 ;; Tracked objects:
 20387 ;;		On entry : 0/0
 20388 ;;		On exit  : 0/0
 20389 ;;		Unchanged: 0/0
 20390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20395 ;;Total ram usage:        0 bytes
 20396 ;; Hardware stack levels used:    1
 20397 ;; Hardware stack levels required when called:    2
 20398 ;; This function calls:
 20399 ;;		_TMR3_CallBack
 20400 ;;		_TMR3_WriteTimer
 20401 ;; This function is called by:
 20402 ;;		_INTERRUPT_InterruptManager
 20403 ;; This function uses a non-reentrant model
 20404 ;;
 20405                           
 20406                           
 20407                           ;psect for function _TMR3_ISR
 20408  1B4B                     _TMR3_ISR:
 20409  1B4B                     i1l6056:	
 20410                           ;incstack = 0
 20411                           ; Regs used in _TMR3_ISR: [wreg+status,2+status,0+pclath+cstack]
 20412                           
 20413                           
 20414                           ;mcc_generated_files/tmr3.c: 168:     PIR4bits.TMR3IF = 0;
 20415  1B4B  014E               	movlb	14	; select bank14
 20416  1B4C  1110               	bcf	16,2	;volatile
 20417  1B4D                     i1l6058:
 20418                           
 20419                           ;mcc_generated_files/tmr3.c: 169:     TMR3_WriteTimer(timer3ReloadVal);
 20420  1B4D  0141               	movlb	1	; select bank1
 20421  1B4E  084D               	movf	(_timer3ReloadVal+1)^(0+128),w	;volatile
 20422  1B4F  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 20423  1B50  084C               	movf	_timer3ReloadVal^(0+128),w	;volatile
 20424  1B51  00F0               	movwf	TMR3_WriteTimer@timerVal
 20425  1B52  319B  23D7  319B   	fcall	_TMR3_WriteTimer
 20426                           
 20427                           ;mcc_generated_files/tmr3.c: 173:     TMR3_CallBack();
 20428  1B55  319B  2323  319B   	fcall	_TMR3_CallBack
 20429  1B58                     i1l507:
 20430  1B58  0008               	return
 20431  1B59                     __end_of_TMR3_ISR:
 20432                           
 20433                           	psect	text97
 20434  1BD7                     __ptext97:	
 20435 ;; *************** function _TMR3_WriteTimer *****************
 20436 ;; Defined at:
 20437 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 20438 ;; Parameters:    Size  Location     Type
 20439 ;;  timerVal        2    0[COMMON] unsigned short 
 20440 ;; Auto vars:     Size  Location     Type
 20441 ;;		None
 20442 ;; Return value:  Size  Location     Type
 20443 ;;                  1    wreg      void 
 20444 ;; Registers used:
 20445 ;;		wreg, status,2
 20446 ;; Tracked objects:
 20447 ;;		On entry : 0/0
 20448 ;;		On exit  : 0/0
 20449 ;;		Unchanged: 0/0
 20450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20451 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20454 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20455 ;;Total ram usage:        2 bytes
 20456 ;; Hardware stack levels used:    1
 20457 ;; This function calls:
 20458 ;;		Nothing
 20459 ;; This function is called by:
 20460 ;;		_TMR3_ISR
 20461 ;;		_TMR3_Reload
 20462 ;; This function uses a non-reentrant model
 20463 ;;
 20464                           
 20465                           
 20466                           ;psect for function _TMR3_WriteTimer
 20467  1BD7                     _TMR3_WriteTimer:
 20468  1BD7                     i1l5788:	
 20469                           ;incstack = 0
 20470                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 20471                           
 20472                           
 20473                           ;mcc_generated_files/tmr3.c: 127: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 128: {;mcc_generated_files/tmr3.c: 129:     if (T3CONbits.NOT_SYNC == 1)
 20474  1BD7  0144               	movlb	4	; select bank4
 20475  1BD8  1D14               	btfss	20,2	;volatile
 20476  1BD9  2BDB               	goto	u446_21
 20477  1BDA  2BDC               	goto	u446_20
 20478  1BDB                     u446_21:
 20479  1BDB  2BE3               	goto	i1l5798
 20480  1BDC                     u446_20:
 20481  1BDC                     i1l5790:
 20482                           
 20483                           ;mcc_generated_files/tmr3.c: 130:     {;mcc_generated_files/tmr3.c: 132:         T3CONbi
      +                          ts.TMR3ON = 0;
 20484  1BDC  1014               	bcf	20,0	;volatile
 20485  1BDD                     i1l5792:
 20486                           
 20487                           ;mcc_generated_files/tmr3.c: 135:         TMR3H = (timerVal >> 8);
 20488  1BDD  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 20489  1BDE  0093               	movwf	19	;volatile
 20490  1BDF                     i1l5794:
 20491                           
 20492                           ;mcc_generated_files/tmr3.c: 136:         TMR3L = timerVal;
 20493  1BDF  0870               	movf	TMR3_WriteTimer@timerVal,w
 20494  1BE0  0092               	movwf	18	;volatile
 20495  1BE1                     i1l5796:
 20496                           
 20497                           ;mcc_generated_files/tmr3.c: 139:         T3CONbits.TMR3ON =1;
 20498  1BE1  1414               	bsf	20,0	;volatile
 20499                           
 20500                           ;mcc_generated_files/tmr3.c: 140:     }
 20501  1BE2  2BE7               	goto	i1l495
 20502  1BE3                     i1l5798:
 20503                           
 20504                           ;mcc_generated_files/tmr3.c: 142:     {;mcc_generated_files/tmr3.c: 144:         TMR3H =
      +                           (timerVal >> 8);
 20505  1BE3  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 20506  1BE4  0093               	movwf	19	;volatile
 20507  1BE5                     i1l5800:
 20508                           
 20509                           ;mcc_generated_files/tmr3.c: 145:         TMR3L = timerVal;
 20510  1BE5  0870               	movf	TMR3_WriteTimer@timerVal,w
 20511  1BE6  0092               	movwf	18	;volatile
 20512  1BE7                     i1l495:
 20513  1BE7  0008               	return
 20514  1BE8                     __end_of_TMR3_WriteTimer:
 20515                           
 20516                           	psect	text98
 20517  1B23                     __ptext98:	
 20518 ;; *************** function _TMR3_CallBack *****************
 20519 ;; Defined at:
 20520 ;;		line 176 in file "mcc_generated_files/tmr3.c"
 20521 ;; Parameters:    Size  Location     Type
 20522 ;;		None
 20523 ;; Auto vars:     Size  Location     Type
 20524 ;;		None
 20525 ;; Return value:  Size  Location     Type
 20526 ;;                  1    wreg      void 
 20527 ;; Registers used:
 20528 ;;		wreg, status,2, status,0, pclath, cstack
 20529 ;; Tracked objects:
 20530 ;;		On entry : 0/0
 20531 ;;		On exit  : 0/0
 20532 ;;		Unchanged: 0/0
 20533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20538 ;;Total ram usage:        0 bytes
 20539 ;; Hardware stack levels used:    1
 20540 ;; Hardware stack levels required when called:    1
 20541 ;; This function calls:
 20542 ;;		Absolute function
 20543 ;;		_TMR3_DefaultInterruptHandler
 20544 ;;		_UI_PWM_handler
 20545 ;; This function is called by:
 20546 ;;		_TMR3_ISR
 20547 ;; This function uses a non-reentrant model
 20548 ;;
 20549                           
 20550                           
 20551                           ;psect for function _TMR3_CallBack
 20552  1B23                     _TMR3_CallBack:
 20553  1B23                     i1l5802:	
 20554                           ;incstack = 0
 20555                           ; Regs used in _TMR3_CallBack: [wreg+status,2+status,0+pclath+cstack]
 20556                           
 20557                           
 20558                           ;mcc_generated_files/tmr3.c: 179:     if(TMR3_InterruptHandler)
 20559  1B23  0141               	movlb	1	; select bank1
 20560  1B24  084A               	movf	_TMR3_InterruptHandler^(0+128),w
 20561  1B25  044B               	iorwf	(_TMR3_InterruptHandler+1)^(0+128),w
 20562  1B26  1903               	btfsc	3,2
 20563  1B27  2B29               	goto	u447_21
 20564  1B28  2B2A               	goto	u447_20
 20565  1B29                     u447_21:
 20566  1B29  2B2F               	goto	i1l511
 20567  1B2A                     u447_20:
 20568  1B2A                     i1l5804:
 20569                           
 20570                           ;mcc_generated_files/tmr3.c: 180:     {;mcc_generated_files/tmr3.c: 181:         TMR3_In
      +                          terruptHandler();
 20571  1B2A  084B               	movf	(_TMR3_InterruptHandler+1)^(0+128),w
 20572  1B2B  008A               	movwf	10
 20573  1B2C  084A               	movf	_TMR3_InterruptHandler^(0+128),w
 20574  1B2D  000A               	callw
 20575  1B2E  319B               	pagesel	$
 20576  1B2F                     i1l511:
 20577  1B2F  0008               	return
 20578  1B30                     __end_of_TMR3_CallBack:
 20579                           
 20580                           	psect	text99
 20581  0003                     __ptext99:	
 20582 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 20583 ;; Defined at:
 20584 ;;		line 189 in file "mcc_generated_files/tmr3.c"
 20585 ;; Parameters:    Size  Location     Type
 20586 ;;		None
 20587 ;; Auto vars:     Size  Location     Type
 20588 ;;		None
 20589 ;; Return value:  Size  Location     Type
 20590 ;;                  1    wreg      void 
 20591 ;; Registers used:
 20592 ;;		None
 20593 ;; Tracked objects:
 20594 ;;		On entry : 0/0
 20595 ;;		On exit  : 0/0
 20596 ;;		Unchanged: 0/0
 20597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20602 ;;Total ram usage:        0 bytes
 20603 ;; Hardware stack levels used:    1
 20604 ;; This function calls:
 20605 ;;		Nothing
 20606 ;; This function is called by:
 20607 ;;		_TMR3_Initialize
 20608 ;;		_TMR3_CallBack
 20609 ;; This function uses a non-reentrant model
 20610 ;;
 20611                           
 20612                           
 20613                           ;psect for function _TMR3_DefaultInterruptHandler
 20614  0003                     _TMR3_DefaultInterruptHandler:
 20615  0003                     i1l517:	
 20616                           ;incstack = 0
 20617                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 20618                           
 20619  0003  0008               	return
 20620  0004                     __end_of_TMR3_DefaultInterruptHandler:
 20621                           
 20622                           	psect	text100
 20623  133F                     __ptext100:	
 20624 ;; *************** function _UI_PWM_handler *****************
 20625 ;; Defined at:
 20626 ;;		line 244 in file "ui.c"
 20627 ;; Parameters:    Size  Location     Type
 20628 ;;		None
 20629 ;; Auto vars:     Size  Location     Type
 20630 ;;		None
 20631 ;; Return value:  Size  Location     Type
 20632 ;;                  1    wreg      void 
 20633 ;; Registers used:
 20634 ;;		wreg, status,2, status,0
 20635 ;; Tracked objects:
 20636 ;;		On entry : 0/0
 20637 ;;		On exit  : 0/0
 20638 ;;		Unchanged: 0/0
 20639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20642 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20643 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20644 ;;Total ram usage:        1 bytes
 20645 ;; Hardware stack levels used:    1
 20646 ;; This function calls:
 20647 ;;		Nothing
 20648 ;; This function is called by:
 20649 ;;		_initUI
 20650 ;;		_TMR3_CallBack
 20651 ;; This function uses a non-reentrant model
 20652 ;;
 20653                           
 20654                           
 20655                           ;psect for function _UI_PWM_handler
 20656  133F                     _UI_PWM_handler:
 20657  133F                     i1l5508:	
 20658                           ;incstack = 0
 20659                           ; Regs used in _UI_PWM_handler: [wreg+status,2+status,0]
 20660                           
 20661                           
 20662                           ;ui.c: 248:     dutyCycle = (dutyCycle+1) & 0x0F;
 20663  133F  0140               	movlb	0	; select bank0
 20664  1340  0844               	movf	_dutyCycle,w
 20665  1341  3E01               	addlw	1
 20666  1342  390F               	andlw	15
 20667  1343  00F0               	movwf	??_UI_PWM_handler
 20668  1344  0870               	movf	??_UI_PWM_handler,w
 20669  1345  00C4               	movwf	_dutyCycle
 20670                           
 20671                           ;ui.c: 250:     if (dutyCycle == 0){
 20672  1346  0844               	movf	_dutyCycle,w
 20673  1347  1D03               	btfss	3,2
 20674  1348  2B4A               	goto	u423_21
 20675  1349  2B4B               	goto	u423_20
 20676  134A                     u423_21:
 20677  134A  2B64               	goto	i1l5516
 20678  134B                     u423_20:
 20679  134B                     i1l5510:
 20680                           
 20681                           ;ui.c: 251:         if (R_LED > 0)
 20682  134B  0847               	movf	_R_LED,w
 20683  134C  1903               	btfsc	3,2
 20684  134D  2B4F               	goto	u424_21
 20685  134E  2B50               	goto	u424_20
 20686  134F                     u424_21:
 20687  134F  2B52               	goto	i1l1440
 20688  1350                     u424_20:
 20689  1350                     i1l1437:	
 20690                           ;ui.c: 252:             do { LATBbits.LATB6 = 0; } while(0);
 20691                           
 20692  1350  1319               	bcf	25,6	;volatile
 20693  1351  2B53               	goto	i1l5512
 20694  1352                     i1l1440:	
 20695                           ;ui.c: 254:             do { LATBbits.LATB6 = 1; } while(0);
 20696                           
 20697  1352  1719               	bsf	25,6	;volatile
 20698  1353                     i1l5512:
 20699                           
 20700                           ;ui.c: 256:         if (G_LED > 0)
 20701  1353  0846               	movf	_G_LED,w
 20702  1354  1903               	btfsc	3,2
 20703  1355  2B57               	goto	u425_21
 20704  1356  2B58               	goto	u425_20
 20705  1357                     u425_21:
 20706  1357  2B5A               	goto	i1l1446
 20707  1358                     u425_20:
 20708  1358                     i1l1443:	
 20709                           ;ui.c: 257:             do { LATBbits.LATB5 = 0; } while(0);
 20710                           
 20711  1358  1299               	bcf	25,5	;volatile
 20712  1359  2B5B               	goto	i1l5514
 20713  135A                     i1l1446:	
 20714                           ;ui.c: 259:             do { LATBbits.LATB5 = 1; } while(0);
 20715                           
 20716  135A  1699               	bsf	25,5	;volatile
 20717  135B                     i1l5514:
 20718                           
 20719                           ;ui.c: 261:         if (B_LED > 0)
 20720  135B  0845               	movf	_B_LED,w
 20721  135C  1903               	btfsc	3,2
 20722  135D  2B5F               	goto	u426_21
 20723  135E  2B60               	goto	u426_20
 20724  135F                     u426_21:
 20725  135F  2B62               	goto	i1l1452
 20726  1360                     u426_20:
 20727  1360                     i1l1449:	
 20728                           ;ui.c: 262:             do { LATBbits.LATB4 = 0; } while(0);
 20729                           
 20730  1360  1219               	bcf	25,4	;volatile
 20731  1361  2B79               	goto	i1l1464
 20732  1362                     i1l1452:	
 20733                           ;ui.c: 264:             do { LATBbits.LATB4 = 1; } while(0);
 20734                           
 20735  1362  1619               	bsf	25,4	;volatile
 20736  1363  2B79               	goto	i1l1464
 20737  1364                     i1l5516:
 20738                           
 20739                           ;ui.c: 267:         if (dutyCycle >= R_LED)
 20740  1364  0847               	movf	_R_LED,w
 20741  1365  0244               	subwf	_dutyCycle,w
 20742  1366  1C03               	skipc
 20743  1367  2B69               	goto	u427_21
 20744  1368  2B6A               	goto	u427_20
 20745  1369                     u427_21:
 20746  1369  2B6B               	goto	i1l5518
 20747  136A                     u427_20:
 20748  136A                     i1l1456:	
 20749                           ;ui.c: 268:             do { LATBbits.LATB6 = 1; } while(0);
 20750                           
 20751  136A  1719               	bsf	25,6	;volatile
 20752  136B                     i1l5518:
 20753                           
 20754                           ;ui.c: 269:         if (dutyCycle >= G_LED)
 20755  136B  0846               	movf	_G_LED,w
 20756  136C  0244               	subwf	_dutyCycle,w
 20757  136D  1C03               	skipc
 20758  136E  2B70               	goto	u428_21
 20759  136F  2B71               	goto	u428_20
 20760  1370                     u428_21:
 20761  1370  2B72               	goto	i1l5520
 20762  1371                     u428_20:
 20763  1371                     i1l1459:	
 20764                           ;ui.c: 270:             do { LATBbits.LATB5 = 1; } while(0);
 20765                           
 20766  1371  1699               	bsf	25,5	;volatile
 20767  1372                     i1l5520:
 20768                           
 20769                           ;ui.c: 271:         if (dutyCycle >= B_LED)
 20770  1372  0845               	movf	_B_LED,w
 20771  1373  0244               	subwf	_dutyCycle,w
 20772  1374  1C03               	skipc
 20773  1375  2B77               	goto	u429_21
 20774  1376  2B78               	goto	u429_20
 20775  1377                     u429_21:
 20776  1377  2B79               	goto	i1l1464
 20777  1378                     u429_20:
 20778  1378                     i1l1462:	
 20779                           ;ui.c: 272:             do { LATBbits.LATB4 = 1; } while(0);
 20780                           
 20781  1378  1619               	bsf	25,4	;volatile
 20782  1379                     i1l1464:
 20783  1379  0008               	return
 20784  137A                     __end_of_UI_PWM_handler:
 20785                           
 20786                           	psect	text101
 20787  19FB                     __ptext101:	
 20788 ;; *************** function _TMR2_ISR *****************
 20789 ;; Defined at:
 20790 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 20791 ;; Parameters:    Size  Location     Type
 20792 ;;		None
 20793 ;; Auto vars:     Size  Location     Type
 20794 ;;		None
 20795 ;; Return value:  Size  Location     Type
 20796 ;;                  1    wreg      void 
 20797 ;; Registers used:
 20798 ;;		wreg, status,2, status,0, pclath, cstack
 20799 ;; Tracked objects:
 20800 ;;		On entry : 0/0
 20801 ;;		On exit  : 0/0
 20802 ;;		Unchanged: 0/0
 20803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20808 ;;Total ram usage:        0 bytes
 20809 ;; Hardware stack levels used:    1
 20810 ;; Hardware stack levels required when called:    2
 20811 ;; This function calls:
 20812 ;;		_TMR2_CallBack
 20813 ;; This function is called by:
 20814 ;;		_INTERRUPT_InterruptManager
 20815 ;; This function uses a non-reentrant model
 20816 ;;
 20817                           
 20818                           
 20819                           ;psect for function _TMR2_ISR
 20820  19FB                     _TMR2_ISR:
 20821  19FB                     i1l5996:	
 20822                           ;incstack = 0
 20823                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 20824                           
 20825                           
 20826                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 20827  19FB  014E               	movlb	14	; select bank14
 20828  19FC  1090               	bcf	16,1	;volatile
 20829  19FD                     i1l5998:
 20830                           
 20831                           ;mcc_generated_files/tmr2.c: 173:     TMR2_CallBack();
 20832  19FD  319B  2316  3199   	fcall	_TMR2_CallBack
 20833  1A00                     i1l145:
 20834  1A00  0008               	return
 20835  1A01                     __end_of_TMR2_ISR:
 20836                           
 20837                           	psect	text102
 20838  1B16                     __ptext102:	
 20839 ;; *************** function _TMR2_CallBack *****************
 20840 ;; Defined at:
 20841 ;;		line 176 in file "mcc_generated_files/tmr2.c"
 20842 ;; Parameters:    Size  Location     Type
 20843 ;;		None
 20844 ;; Auto vars:     Size  Location     Type
 20845 ;;		None
 20846 ;; Return value:  Size  Location     Type
 20847 ;;                  1    wreg      void 
 20848 ;; Registers used:
 20849 ;;		wreg, status,2, status,0, pclath, cstack
 20850 ;; Tracked objects:
 20851 ;;		On entry : 0/0
 20852 ;;		On exit  : 0/0
 20853 ;;		Unchanged: 0/0
 20854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20859 ;;Total ram usage:        0 bytes
 20860 ;; Hardware stack levels used:    1
 20861 ;; Hardware stack levels required when called:    1
 20862 ;; This function calls:
 20863 ;;		Absolute function
 20864 ;;		_TMR2_DefaultInterruptHandler
 20865 ;;		_timeKeeper
 20866 ;; This function is called by:
 20867 ;;		_TMR2_ISR
 20868 ;; This function uses a non-reentrant model
 20869 ;;
 20870                           
 20871                           
 20872                           ;psect for function _TMR2_CallBack
 20873  1B16                     _TMR2_CallBack:
 20874  1B16                     i1l5634:	
 20875                           ;incstack = 0
 20876                           ; Regs used in _TMR2_CallBack: [wreg+status,2+status,0+pclath+cstack]
 20877                           
 20878                           
 20879                           ;mcc_generated_files/tmr2.c: 180:     if(TMR2_InterruptHandler)
 20880  1B16  0141               	movlb	1	; select bank1
 20881  1B17  0854               	movf	_TMR2_InterruptHandler^(0+128),w
 20882  1B18  0455               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
 20883  1B19  1903               	btfsc	3,2
 20884  1B1A  2B1C               	goto	u443_21
 20885  1B1B  2B1D               	goto	u443_20
 20886  1B1C                     u443_21:
 20887  1B1C  2B22               	goto	i1l149
 20888  1B1D                     u443_20:
 20889  1B1D                     i1l5636:
 20890                           
 20891                           ;mcc_generated_files/tmr2.c: 181:     {;mcc_generated_files/tmr2.c: 182:         TMR2_In
      +                          terruptHandler();
 20892  1B1D  0855               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
 20893  1B1E  008A               	movwf	10
 20894  1B1F  0854               	movf	_TMR2_InterruptHandler^(0+128),w
 20895  1B20  000A               	callw
 20896  1B21  319B               	pagesel	$
 20897  1B22                     i1l149:
 20898  1B22  0008               	return
 20899  1B23                     __end_of_TMR2_CallBack:
 20900                           
 20901                           	psect	text103
 20902  0002                     __ptext103:	
 20903 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 20904 ;; Defined at:
 20905 ;;		line 190 in file "mcc_generated_files/tmr2.c"
 20906 ;; Parameters:    Size  Location     Type
 20907 ;;		None
 20908 ;; Auto vars:     Size  Location     Type
 20909 ;;		None
 20910 ;; Return value:  Size  Location     Type
 20911 ;;                  1    wreg      void 
 20912 ;; Registers used:
 20913 ;;		None
 20914 ;; Tracked objects:
 20915 ;;		On entry : 0/0
 20916 ;;		On exit  : 0/0
 20917 ;;		Unchanged: 0/0
 20918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20923 ;;Total ram usage:        0 bytes
 20924 ;; Hardware stack levels used:    1
 20925 ;; This function calls:
 20926 ;;		Nothing
 20927 ;; This function is called by:
 20928 ;;		_TMR2_Initialize
 20929 ;;		_TMR2_CallBack
 20930 ;; This function uses a non-reentrant model
 20931 ;;
 20932                           
 20933                           
 20934                           ;psect for function _TMR2_DefaultInterruptHandler
 20935  0002                     _TMR2_DefaultInterruptHandler:
 20936  0002                     i1l155:	
 20937                           ;incstack = 0
 20938                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 20939                           
 20940  0002  0008               	return
 20941  0003                     __end_of_TMR2_DefaultInterruptHandler:
 20942                           
 20943                           	psect	text104
 20944  1E69                     __ptext104:	
 20945 ;; *************** function _timeKeeper *****************
 20946 ;; Defined at:
 20947 ;;		line 18 in file "timers.c"
 20948 ;; Parameters:    Size  Location     Type
 20949 ;;		None
 20950 ;; Auto vars:     Size  Location     Type
 20951 ;;		None
 20952 ;; Return value:  Size  Location     Type
 20953 ;;                  1    wreg      void 
 20954 ;; Registers used:
 20955 ;;		wreg
 20956 ;; Tracked objects:
 20957 ;;		On entry : 0/0
 20958 ;;		On exit  : 0/0
 20959 ;;		Unchanged: 0/0
 20960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20963 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20964 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20965 ;;Total ram usage:        4 bytes
 20966 ;; Hardware stack levels used:    1
 20967 ;; This function calls:
 20968 ;;		Nothing
 20969 ;; This function is called by:
 20970 ;;		_initTimers
 20971 ;;		_TMR2_CallBack
 20972 ;; This function uses a non-reentrant model
 20973 ;;
 20974                           
 20975                           
 20976                           ;psect for function _timeKeeper
 20977  1E69                     _timeKeeper:
 20978  1E69                     i1l5384:	
 20979                           ;incstack = 0
 20980                           ; Regs used in _timeKeeper: [wreg]
 20981                           
 20982                           
 20983                           ;timers.c: 19:     systemTime++;
 20984  1E69  3001               	movlw	1
 20985  1E6A  0140               	movlb	0	; select bank0
 20986  1E6B  07BB               	addwf	_systemTime,f
 20987  1E6C  3000               	movlw	0
 20988  1E6D  3DBC               	addwfc	_systemTime+1,f
 20989  1E6E  3000               	movlw	0
 20990  1E6F  3DBD               	addwfc	_systemTime+2,f
 20991  1E70  3000               	movlw	0
 20992  1E71  3DBE               	addwfc	_systemTime+3,f
 20993                           
 20994                           ;timers.c: 22:     if ((systemTime & 0x03FF) == 0)
 20995  1E72  30FF               	movlw	255
 20996  1E73  053B               	andwf	_systemTime,w
 20997  1E74  00F0               	movwf	??_timeKeeper
 20998  1E75  3003               	movlw	3
 20999  1E76  053C               	andwf	_systemTime+1,w
 21000  1E77  00F1               	movwf	??_timeKeeper+1
 21001  1E78  3000               	movlw	0
 21002  1E79  053D               	andwf	_systemTime+2,w
 21003  1E7A  00F2               	movwf	??_timeKeeper+2
 21004  1E7B  3000               	movlw	0
 21005  1E7C  053E               	andwf	_systemTime+3,w
 21006  1E7D  00F3               	movwf	??_timeKeeper+3
 21007  1E7E  0873               	movf	??_timeKeeper+3,w
 21008  1E7F  0472               	iorwf	??_timeKeeper+2,w
 21009  1E80  0471               	iorwf	??_timeKeeper+1,w
 21010  1E81  0470               	iorwf	??_timeKeeper,w
 21011  1E82  1D03               	skipz
 21012  1E83  2E85               	goto	u413_21
 21013  1E84  2E86               	goto	u413_20
 21014  1E85                     u413_21:
 21015  1E85  2E88               	goto	i1l1101
 21016  1E86                     u413_20:
 21017  1E86                     i1l5386:
 21018                           
 21019                           ;timers.c: 23:         oneSecBlink = 1;
 21020  1E86  01CB               	clrf	_oneSecBlink
 21021  1E87  0ACB               	incf	_oneSecBlink,f
 21022  1E88                     i1l1101:
 21023  1E88  0008               	return
 21024  1E89                     __end_of_timeKeeper:
 21025                           
 21026                           	psect	text105
 21027  1B3D                     __ptext105:	
 21028 ;; *************** function _TMR1_ISR *****************
 21029 ;; Defined at:
 21030 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 21031 ;; Parameters:    Size  Location     Type
 21032 ;;		None
 21033 ;; Auto vars:     Size  Location     Type
 21034 ;;		None
 21035 ;; Return value:  Size  Location     Type
 21036 ;;                  1    wreg      void 
 21037 ;; Registers used:
 21038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21039 ;; Tracked objects:
 21040 ;;		On entry : 0/0
 21041 ;;		On exit  : 0/0
 21042 ;;		Unchanged: 0/0
 21043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21048 ;;Total ram usage:        0 bytes
 21049 ;; Hardware stack levels used:    1
 21050 ;; Hardware stack levels required when called:    6
 21051 ;; This function calls:
 21052 ;;		_TMR1_CallBack
 21053 ;;		_TMR1_WriteTimer
 21054 ;; This function is called by:
 21055 ;;		_INTERRUPT_InterruptManager
 21056 ;; This function uses a non-reentrant model
 21057 ;;
 21058                           
 21059                           
 21060                           ;psect for function _TMR1_ISR
 21061  1B3D                     _TMR1_ISR:
 21062  1B3D                     i1l5990:	
 21063                           ;incstack = 0
 21064                           ; Regs used in _TMR1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21065                           
 21066                           
 21067                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 21068  1B3D  014E               	movlb	14	; select bank14
 21069  1B3E  1010               	bcf	16,0	;volatile
 21070  1B3F                     i1l5992:
 21071                           
 21072                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 21073  1B3F  0141               	movlb	1	; select bank1
 21074  1B40  0859               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 21075  1B41  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 21076  1B42  0858               	movf	_timer1ReloadVal^(0+128),w	;volatile
 21077  1B43  00F0               	movwf	TMR1_WriteTimer@timerVal
 21078  1B44  319B  23C6  319B   	fcall	_TMR1_WriteTimer
 21079  1B47                     i1l5994:
 21080                           
 21081                           ;mcc_generated_files/tmr1.c: 173:     TMR1_CallBack();
 21082  1B47  319B  2309  319B   	fcall	_TMR1_CallBack
 21083  1B4A                     i1l59:
 21084  1B4A  0008               	return
 21085  1B4B                     __end_of_TMR1_ISR:
 21086                           
 21087                           	psect	text106
 21088  1BC6                     __ptext106:	
 21089 ;; *************** function _TMR1_WriteTimer *****************
 21090 ;; Defined at:
 21091 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 21092 ;; Parameters:    Size  Location     Type
 21093 ;;  timerVal        2    0[COMMON] unsigned short 
 21094 ;; Auto vars:     Size  Location     Type
 21095 ;;		None
 21096 ;; Return value:  Size  Location     Type
 21097 ;;                  1    wreg      void 
 21098 ;; Registers used:
 21099 ;;		wreg, status,2
 21100 ;; Tracked objects:
 21101 ;;		On entry : 0/0
 21102 ;;		On exit  : 0/0
 21103 ;;		Unchanged: 0/0
 21104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21108 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21109 ;;Total ram usage:        2 bytes
 21110 ;; Hardware stack levels used:    1
 21111 ;; This function calls:
 21112 ;;		Nothing
 21113 ;; This function is called by:
 21114 ;;		_TMR1_ISR
 21115 ;;		_TMR1_Reload
 21116 ;; This function uses a non-reentrant model
 21117 ;;
 21118                           
 21119                           
 21120                           ;psect for function _TMR1_WriteTimer
 21121  1BC6                     _TMR1_WriteTimer:
 21122  1BC6                     i1l5600:	
 21123                           ;incstack = 0
 21124                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 21125                           
 21126                           
 21127                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.NOT_SYNC == 1)
 21128  1BC6  0144               	movlb	4	; select bank4
 21129  1BC7  1D0E               	btfss	14,2	;volatile
 21130  1BC8  2BCA               	goto	u441_21
 21131  1BC9  2BCB               	goto	u441_20
 21132  1BCA                     u441_21:
 21133  1BCA  2BD2               	goto	i1l5610
 21134  1BCB                     u441_20:
 21135  1BCB                     i1l5602:
 21136                           
 21137                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 21138  1BCB  100E               	bcf	14,0	;volatile
 21139  1BCC                     i1l5604:
 21140                           
 21141                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 21142  1BCC  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 21143  1BCD  008D               	movwf	13	;volatile
 21144  1BCE                     i1l5606:
 21145                           
 21146                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 21147  1BCE  0870               	movf	TMR1_WriteTimer@timerVal,w
 21148  1BCF  008C               	movwf	12	;volatile
 21149  1BD0                     i1l5608:
 21150                           
 21151                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 21152  1BD0  140E               	bsf	14,0	;volatile
 21153                           
 21154                           ;mcc_generated_files/tmr1.c: 140:     }
 21155  1BD1  2BD6               	goto	i1l47
 21156  1BD2                     i1l5610:
 21157                           
 21158                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 21159  1BD2  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 21160  1BD3  008D               	movwf	13	;volatile
 21161  1BD4                     i1l5612:
 21162                           
 21163                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 21164  1BD4  0870               	movf	TMR1_WriteTimer@timerVal,w
 21165  1BD5  008C               	movwf	12	;volatile
 21166  1BD6                     i1l47:
 21167  1BD6  0008               	return
 21168  1BD7                     __end_of_TMR1_WriteTimer:
 21169                           
 21170                           	psect	text107
 21171  1B09                     __ptext107:	
 21172 ;; *************** function _TMR1_CallBack *****************
 21173 ;; Defined at:
 21174 ;;		line 176 in file "mcc_generated_files/tmr1.c"
 21175 ;; Parameters:    Size  Location     Type
 21176 ;;		None
 21177 ;; Auto vars:     Size  Location     Type
 21178 ;;		None
 21179 ;; Return value:  Size  Location     Type
 21180 ;;                  1    wreg      void 
 21181 ;; Registers used:
 21182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21183 ;; Tracked objects:
 21184 ;;		On entry : 0/0
 21185 ;;		On exit  : 0/0
 21186 ;;		Unchanged: 0/0
 21187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21192 ;;Total ram usage:        0 bytes
 21193 ;; Hardware stack levels used:    1
 21194 ;; Hardware stack levels required when called:    5
 21195 ;; This function calls:
 21196 ;;		Absolute function
 21197 ;;		_TMR1_DefaultInterruptHandler
 21198 ;;		_readJoystick
 21199 ;; This function is called by:
 21200 ;;		_TMR1_ISR
 21201 ;; This function uses a non-reentrant model
 21202 ;;
 21203                           
 21204                           
 21205                           ;psect for function _TMR1_CallBack
 21206  1B09                     _TMR1_CallBack:
 21207  1B09                     i1l5614:	
 21208                           ;incstack = 0
 21209                           ; Regs used in _TMR1_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21210                           
 21211                           
 21212                           ;mcc_generated_files/tmr1.c: 179:     if(TMR1_InterruptHandler)
 21213  1B09  0141               	movlb	1	; select bank1
 21214  1B0A  0856               	movf	_TMR1_InterruptHandler^(0+128),w
 21215  1B0B  0457               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 21216  1B0C  1903               	btfsc	3,2
 21217  1B0D  2B0F               	goto	u442_21
 21218  1B0E  2B10               	goto	u442_20
 21219  1B0F                     u442_21:
 21220  1B0F  2B15               	goto	i1l63
 21221  1B10                     u442_20:
 21222  1B10                     i1l5616:
 21223                           
 21224                           ;mcc_generated_files/tmr1.c: 180:     {;mcc_generated_files/tmr1.c: 181:         TMR1_In
      +                          terruptHandler();
 21225  1B10  0857               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 21226  1B11  008A               	movwf	10
 21227  1B12  0856               	movf	_TMR1_InterruptHandler^(0+128),w
 21228  1B13  000A               	callw
 21229  1B14  319B               	pagesel	$
 21230  1B15                     i1l63:
 21231  1B15  0008               	return
 21232  1B16                     __end_of_TMR1_CallBack:
 21233                           
 21234                           	psect	text108
 21235  19E3                     __ptext108:	
 21236 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 21237 ;; Defined at:
 21238 ;;		line 189 in file "mcc_generated_files/tmr1.c"
 21239 ;; Parameters:    Size  Location     Type
 21240 ;;		None
 21241 ;; Auto vars:     Size  Location     Type
 21242 ;;		None
 21243 ;; Return value:  Size  Location     Type
 21244 ;;                  1    wreg      void 
 21245 ;; Registers used:
 21246 ;;		None
 21247 ;; Tracked objects:
 21248 ;;		On entry : 0/0
 21249 ;;		On exit  : 0/0
 21250 ;;		Unchanged: 0/0
 21251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21256 ;;Total ram usage:        0 bytes
 21257 ;; Hardware stack levels used:    1
 21258 ;; This function calls:
 21259 ;;		Nothing
 21260 ;; This function is called by:
 21261 ;;		_TMR1_Initialize
 21262 ;;		_TMR1_CallBack
 21263 ;; This function uses a non-reentrant model
 21264 ;;
 21265                           
 21266                           
 21267                           ;psect for function _TMR1_DefaultInterruptHandler
 21268  19E3                     _TMR1_DefaultInterruptHandler:
 21269  19E3                     i1l69:	
 21270                           ;incstack = 0
 21271                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 21272                           
 21273  19E3  0008               	return
 21274  19E4                     __end_of_TMR1_DefaultInterruptHandler:
 21275                           
 21276                           	psect	text109
 21277  0766                     __ptext109:	
 21278 ;; *************** function _readJoystick *****************
 21279 ;; Defined at:
 21280 ;;		line 135 in file "joystick.c"
 21281 ;; Parameters:    Size  Location     Type
 21282 ;;		None
 21283 ;; Auto vars:     Size  Location     Type
 21284 ;;		None
 21285 ;; Return value:  Size  Location     Type
 21286 ;;                  1    wreg      void 
 21287 ;; Registers used:
 21288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21289 ;; Tracked objects:
 21290 ;;		On entry : 0/0
 21291 ;;		On exit  : 0/0
 21292 ;;		Unchanged: 0/0
 21293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21296 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21297 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21298 ;;Total ram usage:        2 bytes
 21299 ;; Hardware stack levels used:    1
 21300 ;; Hardware stack levels required when called:    4
 21301 ;; This function calls:
 21302 ;;		_readButtonJoystick
 21303 ;;		_readPotJoystick
 21304 ;;		_sendBTEstopCmd
 21305 ;;		i1_EUSART1_Read
 21306 ;;		i1_EUSART1_is_rx_ready
 21307 ;;		i1_getTicks
 21308 ;;		i1_getTicksSince
 21309 ;;		i1_resetBTTimer
 21310 ;;		i1_setBTTimeout
 21311 ;;		i1_stopMotion
 21312 ;; This function is called by:
 21313 ;;		_initJoystick
 21314 ;;		_TMR1_CallBack
 21315 ;; This function uses a non-reentrant model
 21316 ;;
 21317                           
 21318                           
 21319                           ;psect for function _readJoystick
 21320  0766                     _readJoystick:
 21321  0766                     i1l5336:	
 21322                           ;incstack = 0
 21323                           ; Regs used in _readJoystick: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21324                           
 21325                           
 21326                           ;joystick.c: 136:     if (joystickEnabled) {
 21327  0766  0141               	movlb	1	; select bank1
 21328  0767  0849               	movf	_joystickEnabled^(0+128),w
 21329  0768  1903               	btfsc	3,2
 21330  0769  2F6B               	goto	u406_21
 21331  076A  2F6C               	goto	u406_20
 21332  076B                     u406_21:
 21333  076B  2FF7               	goto	i1l922
 21334  076C                     u406_20:
 21335  076C                     i1l5338:
 21336                           
 21337                           ;joystick.c: 139:         if (PORTCbits.RC2 == 0) {
 21338  076C  0140               	movlb	0	; select bank0
 21339  076D  190E               	btfsc	14,2	;volatile
 21340  076E  2F70               	goto	u407_21
 21341  076F  2F71               	goto	u407_20
 21342  0770                     u407_21:
 21343  0770  2FA9               	goto	i1l5352
 21344  0771                     u407_20:
 21345  0771                     i1l5340:
 21346                           
 21347                           ;joystick.c: 140:             if (estopPending){
 21348  0771  084D               	movf	_estopPending,w
 21349  0772  1903               	btfsc	3,2
 21350  0773  2F75               	goto	u408_21
 21351  0774  2F76               	goto	u408_20
 21352  0775                     u408_21:
 21353  0775  2F96               	goto	i1l5346
 21354  0776                     u408_20:
 21355  0776                     i1l5342:
 21356                           
 21357                           ;joystick.c: 141:                 if (getTicksSince(estopTimer) > 1000) {
 21358  0776  0141               	movlb	1	; select bank1
 21359  0777  0837               	movf	(_estopTimer+3)^(0+128),w
 21360  0778  00F3               	movwf	i1getTicksSince@from+3
 21361  0779  0836               	movf	(_estopTimer+2)^(0+128),w
 21362  077A  00F2               	movwf	i1getTicksSince@from+2
 21363  077B  0835               	movf	(_estopTimer+1)^(0+128),w
 21364  077C  00F1               	movwf	i1getTicksSince@from+1
 21365  077D  0834               	movf	_estopTimer^(0+128),w
 21366  077E  00F0               	movwf	i1getTicksSince@from
 21367  077F  3190  2000  3187   	fcall	i1_getTicksSince
 21368  0782  1BF3               	btfsc	?i1_getTicksSince+3,7
 21369  0783  2F91               	goto	u409_21
 21370  0784  0873               	movf	?i1_getTicksSince+3,w
 21371  0785  1D03               	btfss	3,2
 21372  0786  2F92               	goto	u409_20
 21373  0787  0872               	movf	?i1_getTicksSince+2,w
 21374  0788  1D03               	btfss	3,2
 21375  0789  2F92               	goto	u409_20
 21376  078A  30E9               	movlw	233
 21377  078B  0270               	subwf	?i1_getTicksSince,w
 21378  078C  3003               	movlw	3
 21379  078D  3B71               	subwfb	?i1_getTicksSince+1,w
 21380  078E  1C03               	btfss	3,0
 21381  078F  2F91               	goto	u409_21
 21382  0790  2F92               	goto	u409_20
 21383  0791                     u409_21:
 21384  0791  2FAB               	goto	i1l5354
 21385  0792                     u409_20:
 21386  0792                     i1l5344:
 21387                           
 21388                           ;joystick.c: 142:                     estopActive = 1;
 21389  0792  0140               	movlb	0	; select bank0
 21390  0793  01CC               	clrf	_estopActive
 21391  0794  0ACC               	incf	_estopActive,f
 21392  0795  2FAB               	goto	i1l5354
 21393  0796                     i1l5346:
 21394                           
 21395                           ;joystick.c: 145:                 estopTimer = getTicks();
 21396  0796  319A  22B4  3187   	fcall	i1_getTicks
 21397  0799  0873               	movf	?i1_getTicks+3,w
 21398  079A  0141               	movlb	1	; select bank1
 21399  079B  00B7               	movwf	(_estopTimer+3)^(0+128)
 21400  079C  0872               	movf	?i1_getTicks+2,w
 21401  079D  00B6               	movwf	(_estopTimer+2)^(0+128)
 21402  079E  0871               	movf	?i1_getTicks+1,w
 21403  079F  00B5               	movwf	(_estopTimer+1)^(0+128)
 21404  07A0  0870               	movf	?i1_getTicks,w
 21405  07A1  00B4               	movwf	_estopTimer^(0+128)
 21406  07A2                     i1l5348:
 21407                           
 21408                           ;joystick.c: 146:                 estopPending = 1;
 21409  07A2  0140               	movlb	0	; select bank0
 21410  07A3  01CD               	clrf	_estopPending
 21411  07A4  0ACD               	incf	_estopPending,f
 21412  07A5                     i1l5350:
 21413                           
 21414                           ;joystick.c: 149:                 stopMotion();
 21415  07A5  319D  257A  3187   	fcall	i1_stopMotion
 21416  07A8  2FAB               	goto	i1l5354
 21417  07A9                     i1l5352:
 21418                           
 21419                           ;joystick.c: 152:             estopPending = 0;
 21420  07A9  01CD               	clrf	_estopPending
 21421                           
 21422                           ;joystick.c: 153:             estopActive = 0;
 21423  07AA  01CC               	clrf	_estopActive
 21424  07AB                     i1l5354:
 21425                           
 21426                           ;joystick.c: 157:         if (estopActive){
 21427  07AB  0140               	movlb	0	; select bank0
 21428  07AC  084C               	movf	_estopActive,w
 21429  07AD  1903               	btfsc	3,2
 21430  07AE  2FB0               	goto	u410_21
 21431  07AF  2FB1               	goto	u410_20
 21432  07B0                     u410_21:
 21433  07B0  2FC9               	goto	i1l5372
 21434  07B1                     u410_20:
 21435  07B1                     i1l5356:
 21436                           
 21437                           ;joystick.c: 158:             sendBTEstopCmd();
 21438  07B1  319C  241C  3187   	fcall	_sendBTEstopCmd
 21439  07B4                     i1l5358:
 21440                           
 21441                           ;joystick.c: 160:             targetAxialFP = 0;
 21442  07B4  0140               	movlb	0	; select bank0
 21443  07B5  01C1               	clrf	_targetAxialFP
 21444  07B6  01C2               	clrf	_targetAxialFP+1
 21445  07B7                     i1l5360:
 21446                           
 21447                           ;joystick.c: 161:             targetYawFP = 0;
 21448  07B7  0141               	movlb	1	; select bank1
 21449  07B8  01C4               	clrf	_targetYawFP^(0+128)
 21450  07B9  01C5               	clrf	(_targetYawFP+1)^(0+128)
 21451  07BA                     i1l5362:
 21452                           
 21453                           ;joystick.c: 162:             limitedAxialFP = 0;
 21454  07BA  0140               	movlb	0	; select bank0
 21455  07BB  01BF               	clrf	_limitedAxialFP
 21456  07BC  01C0               	clrf	_limitedAxialFP+1
 21457  07BD                     i1l5364:
 21458                           
 21459                           ;joystick.c: 163:             limitedYawFP = 0;
 21460  07BD  0141               	movlb	1	; select bank1
 21461  07BE  01C2               	clrf	_limitedYawFP^(0+128)
 21462  07BF  01C3               	clrf	(_limitedYawFP+1)^(0+128)
 21463                           
 21464                           ;joystick.c: 164:         } else {
 21465  07C0  2FEF               	goto	i1l918
 21466  07C1                     i1l5366:
 21467                           
 21468                           ;joystick.c: 169:                     readButtonJoystick();
 21469  07C1  318D  25DA  3187   	fcall	_readButtonJoystick
 21470                           
 21471                           ;joystick.c: 170:                     break;
 21472  07C4  2FEF               	goto	i1l918
 21473  07C5                     i1l5368:
 21474                           
 21475                           ;joystick.c: 173:                     readPotJoystick();
 21476  07C5  3185  25D2  3187   	fcall	_readPotJoystick
 21477                           
 21478                           ;joystick.c: 174:                     break;
 21479  07C8  2FEF               	goto	i1l918
 21480  07C9                     i1l5372:
 21481  07C9  084E               	movf	_joystickType,w
 21482  07CA  00B9               	movwf	??_readJoystick
 21483  07CB  01BA               	clrf	??_readJoystick+1
 21484                           
 21485                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21486                           ; Switch size 1, requested type "simple"
 21487                           ; Number of cases is 1, Range of values is 0 to 0
 21488                           ; switch strategies available:
 21489                           ; Name         Instructions Cycles
 21490                           ; simple_byte            4     3 (average)
 21491                           ; direct_byte            8     6 (fixed)
 21492                           ; jumptable            260     6 (fixed)
 21493                           ;	Chosen strategy is simple_byte
 21494  07CC  083A               	movf	??_readJoystick+1,w
 21495  07CD  3A00               	xorlw	0	; case 0
 21496  07CE  1903               	skipnz
 21497  07CF  2FD1               	goto	i1l7906
 21498  07D0  2FC1               	goto	i1l5366
 21499  07D1                     i1l7906:
 21500                           
 21501                           ; Switch size 1, requested type "simple"
 21502                           ; Number of cases is 2, Range of values is 0 to 1
 21503                           ; switch strategies available:
 21504                           ; Name         Instructions Cycles
 21505                           ; simple_byte            7     4 (average)
 21506                           ; direct_byte           10     6 (fixed)
 21507                           ; jumptable            260     6 (fixed)
 21508                           ;	Chosen strategy is simple_byte
 21509  07D1  0839               	movf	??_readJoystick,w
 21510  07D2  3A00               	xorlw	0	; case 0
 21511  07D3  1903               	skipnz
 21512  07D4  2FC1               	goto	i1l5366
 21513  07D5  3A01               	xorlw	1	; case 1
 21514  07D6  1903               	skipnz
 21515  07D7  2FC5               	goto	i1l5368
 21516  07D8  2FC1               	goto	i1l5366
 21517  07D9                     i1l5374:
 21518                           
 21519                           ;joystick.c: 182:             if (EUSART1_Read() == '/') {
 21520  07D9  3190  20C2  3187   	fcall	i1_EUSART1_Read
 21521  07DC  3A2F               	xorlw	47
 21522  07DD  1D03               	skipz
 21523  07DE  2FE0               	goto	u411_21
 21524  07DF  2FE1               	goto	u411_20
 21525  07E0                     u411_21:
 21526  07E0  2FEF               	goto	i1l918
 21527  07E1                     u411_20:
 21528  07E1                     i1l5376:
 21529                           
 21530                           ;joystick.c: 183:                 resetBTTimer();
 21531  07E1  319B  23B5  3187   	fcall	i1_resetBTTimer
 21532                           
 21533                           ;joystick.c: 184:                 setBTTimeout(30000);
 21534  07E4  3000               	movlw	0
 21535  07E5  00F3               	movwf	i1setBTTimeout@timeout+3
 21536  07E6  3000               	movlw	0
 21537  07E7  00F2               	movwf	i1setBTTimeout@timeout+2
 21538  07E8  3075               	movlw	117
 21539  07E9  00F1               	movwf	i1setBTTimeout@timeout+1
 21540  07EA  3030               	movlw	48
 21541  07EB  00F0               	movwf	i1setBTTimeout@timeout
 21542  07EC  319A  22BE  3187   	fcall	i1_setBTTimeout
 21543  07EF                     i1l918:	
 21544                           ;joystick.c: 186:         }
 21545                           
 21546                           
 21547                           ;joystick.c: 181:         while (EUSART1_is_rx_ready()) {
 21548  07EF  319A  2251  3187   	fcall	i1_EUSART1_is_rx_ready
 21549  07F2  3A00               	xorlw	0
 21550  07F3  1D03               	skipz
 21551  07F4  2FF6               	goto	u412_21
 21552  07F5  2FF7               	goto	u412_20
 21553  07F6                     u412_21:
 21554  07F6  2FD9               	goto	i1l5374
 21555  07F7                     u412_20:
 21556  07F7                     i1l922:
 21557  07F7  0008               	return
 21558  07F8                     __end_of_readJoystick:
 21559                           
 21560                           	psect	text110
 21561  1D7A                     __ptext110:	
 21562 ;; *************** function i1_stopMotion *****************
 21563 ;; Defined at:
 21564 ;;		line 126 in file "joystick.c"
 21565 ;; Parameters:    Size  Location     Type
 21566 ;;		None
 21567 ;; Auto vars:     Size  Location     Type
 21568 ;;		None
 21569 ;; Return value:  Size  Location     Type
 21570 ;;                  1    wreg      void 
 21571 ;; Registers used:
 21572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21573 ;; Tracked objects:
 21574 ;;		On entry : 0/0
 21575 ;;		On exit  : 0/0
 21576 ;;		Unchanged: 0/0
 21577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21582 ;;Total ram usage:        0 bytes
 21583 ;; Hardware stack levels used:    1
 21584 ;; Hardware stack levels required when called:    3
 21585 ;; This function calls:
 21586 ;;		i1_sendBTSpeedCmd
 21587 ;; This function is called by:
 21588 ;;		_readJoystick
 21589 ;; This function uses a non-reentrant model
 21590 ;;
 21591                           
 21592                           
 21593                           ;psect for function i1_stopMotion
 21594  1D7A                     i1_stopMotion:
 21595  1D7A                     i1l5214:	
 21596                           ;incstack = 0
 21597                           ; Regs used in i1_stopMotion: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21598                           
 21599                           
 21600                           ;joystick.c: 127:     targetAxialFP = 0;
 21601  1D7A  0140               	movlb	0	; select bank0
 21602  1D7B  01C1               	clrf	_targetAxialFP
 21603  1D7C  01C2               	clrf	_targetAxialFP+1
 21604                           
 21605                           ;joystick.c: 128:     targetYawFP = 0;
 21606  1D7D  0141               	movlb	1	; select bank1
 21607  1D7E  01C4               	clrf	_targetYawFP^(0+128)
 21608  1D7F  01C5               	clrf	(_targetYawFP+1)^(0+128)
 21609                           
 21610                           ;joystick.c: 129:     limitedAxialFP = 0;
 21611  1D80  0140               	movlb	0	; select bank0
 21612  1D81  01BF               	clrf	_limitedAxialFP
 21613  1D82  01C0               	clrf	_limitedAxialFP+1
 21614                           
 21615                           ;joystick.c: 130:     limitedYawFP = 0;
 21616  1D83  0141               	movlb	1	; select bank1
 21617  1D84  01C2               	clrf	_limitedYawFP^(0+128)
 21618  1D85  01C3               	clrf	(_limitedYawFP+1)^(0+128)
 21619  1D86                     i1l5216:
 21620                           
 21621                           ;joystick.c: 131:     if (joystickEnabled)
 21622  1D86  0849               	movf	_joystickEnabled^(0+128),w
 21623  1D87  1903               	btfsc	3,2
 21624  1D88  2D8A               	goto	u397_21
 21625  1D89  2D8B               	goto	u397_20
 21626  1D8A                     u397_21:
 21627  1D8A  2D96               	goto	i1l902
 21628  1D8B                     u397_20:
 21629  1D8B                     i1l5218:
 21630                           
 21631                           ;joystick.c: 132:         sendBTSpeedCmd(0, 0, 0);
 21632  1D8B  3000               	movlw	0
 21633  1D8C  0140               	movlb	0	; select bank0
 21634  1D8D  00A6               	movwf	i1sendBTSpeedCmd@axial
 21635  1D8E  00A7               	movwf	i1sendBTSpeedCmd@axial+1
 21636  1D8F  3000               	movlw	0
 21637  1D90  00A8               	movwf	i1sendBTSpeedCmd@yaw
 21638  1D91  00A9               	movwf	i1sendBTSpeedCmd@yaw+1
 21639  1D92  01AA               	clrf	i1sendBTSpeedCmd@blockIfBusy
 21640  1D93  318B  23F9  319D   	fcall	i1_sendBTSpeedCmd
 21641  1D96                     i1l902:
 21642  1D96  0008               	return
 21643  1D97                     __end_ofi1_stopMotion:
 21644                           
 21645                           	psect	text111
 21646  1ABE                     __ptext111:	
 21647 ;; *************** function i1_setBTTimeout *****************
 21648 ;; Defined at:
 21649 ;;		line 53 in file "timers.c"
 21650 ;; Parameters:    Size  Location     Type
 21651 ;;  timeout         4    0[COMMON] unsigned long 
 21652 ;; Auto vars:     Size  Location     Type
 21653 ;;		None
 21654 ;; Return value:  Size  Location     Type
 21655 ;;                  1    wreg      void 
 21656 ;; Registers used:
 21657 ;;		wreg
 21658 ;; Tracked objects:
 21659 ;;		On entry : 0/0
 21660 ;;		On exit  : 0/0
 21661 ;;		Unchanged: 0/0
 21662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21663 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21666 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21667 ;;Total ram usage:        4 bytes
 21668 ;; Hardware stack levels used:    1
 21669 ;; This function calls:
 21670 ;;		Nothing
 21671 ;; This function is called by:
 21672 ;;		_readJoystick
 21673 ;; This function uses a non-reentrant model
 21674 ;;
 21675                           
 21676                           
 21677                           ;psect for function i1_setBTTimeout
 21678  1ABE                     i1_setBTTimeout:
 21679  1ABE                     i1l5230:	
 21680                           ;incstack = 0
 21681                           ; Regs used in i1_setBTTimeout: [wreg]
 21682                           
 21683                           
 21684                           ;timers.c: 54:     BTTimeout = timeout;
 21685  1ABE  0873               	movf	i1setBTTimeout@timeout+3,w
 21686  1ABF  0141               	movlb	1	; select bank1
 21687  1AC0  00A7               	movwf	(_BTTimeout+3)^(0+128)
 21688  1AC1  0872               	movf	i1setBTTimeout@timeout+2,w
 21689  1AC2  00A6               	movwf	(_BTTimeout+2)^(0+128)
 21690  1AC3  0871               	movf	i1setBTTimeout@timeout+1,w
 21691  1AC4  00A5               	movwf	(_BTTimeout+1)^(0+128)
 21692  1AC5  0870               	movf	i1setBTTimeout@timeout,w
 21693  1AC6  00A4               	movwf	_BTTimeout^(0+128)
 21694  1AC7                     i1l1124:
 21695  1AC7  0008               	return
 21696  1AC8                     __end_ofi1_setBTTimeout:
 21697                           
 21698                           	psect	text112
 21699  1BB5                     __ptext112:	
 21700 ;; *************** function i1_resetBTTimer *****************
 21701 ;; Defined at:
 21702 ;;		line 49 in file "timers.c"
 21703 ;; Parameters:    Size  Location     Type
 21704 ;;		None
 21705 ;; Auto vars:     Size  Location     Type
 21706 ;;		None
 21707 ;; Return value:  Size  Location     Type
 21708 ;;                  1    wreg      void 
 21709 ;; Registers used:
 21710 ;;		wreg
 21711 ;; Tracked objects:
 21712 ;;		On entry : 0/0
 21713 ;;		On exit  : 0/0
 21714 ;;		Unchanged: 0/0
 21715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21720 ;;Total ram usage:        0 bytes
 21721 ;; Hardware stack levels used:    1
 21722 ;; This function calls:
 21723 ;;		Nothing
 21724 ;; This function is called by:
 21725 ;;		_readJoystick
 21726 ;; This function uses a non-reentrant model
 21727 ;;
 21728                           
 21729                           
 21730                           ;psect for function i1_resetBTTimer
 21731  1BB5                     i1_resetBTTimer:
 21732  1BB5                     i1l5228:	
 21733                           ;incstack = 0
 21734                           ; Regs used in i1_resetBTTimer: [wreg]
 21735                           
 21736                           
 21737                           ;timers.c: 50:     lastBTTime = systemTime;
 21738  1BB5  0140               	movlb	0	; select bank0
 21739  1BB6  083E               	movf	_systemTime+3,w
 21740  1BB7  0141               	movlb	1	; select bank1
 21741  1BB8  00AB               	movwf	(_lastBTTime+3)^(0+128)
 21742  1BB9  0140               	movlb	0	; select bank0
 21743  1BBA  083D               	movf	_systemTime+2,w
 21744  1BBB  0141               	movlb	1	; select bank1
 21745  1BBC  00AA               	movwf	(_lastBTTime+2)^(0+128)
 21746  1BBD  0140               	movlb	0	; select bank0
 21747  1BBE  083C               	movf	_systemTime+1,w
 21748  1BBF  0141               	movlb	1	; select bank1
 21749  1BC0  00A9               	movwf	(_lastBTTime+1)^(0+128)
 21750  1BC1  0140               	movlb	0	; select bank0
 21751  1BC2  083B               	movf	_systemTime,w
 21752  1BC3  0141               	movlb	1	; select bank1
 21753  1BC4  00A8               	movwf	_lastBTTime^(0+128)
 21754  1BC5                     i1l1121:
 21755  1BC5  0008               	return
 21756  1BC6                     __end_ofi1_resetBTTimer:
 21757                           
 21758                           	psect	text113
 21759  1000                     __ptext113:	
 21760 ;; *************** function i1_getTicksSince *****************
 21761 ;; Defined at:
 21762 ;;		line 44 in file "timers.c"
 21763 ;; Parameters:    Size  Location     Type
 21764 ;;  from            4    0[COMMON] unsigned long 
 21765 ;; Auto vars:     Size  Location     Type
 21766 ;;		None
 21767 ;; Return value:  Size  Location     Type
 21768 ;;                  4    0[COMMON] long 
 21769 ;; Registers used:
 21770 ;;		wreg
 21771 ;; Tracked objects:
 21772 ;;		On entry : 0/0
 21773 ;;		On exit  : 0/0
 21774 ;;		Unchanged: 0/0
 21775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21776 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21778 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21779 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21780 ;;Total ram usage:        8 bytes
 21781 ;; Hardware stack levels used:    1
 21782 ;; This function calls:
 21783 ;;		Nothing
 21784 ;; This function is called by:
 21785 ;;		_readJoystick
 21786 ;; This function uses a non-reentrant model
 21787 ;;
 21788                           
 21789                           
 21790                           ;psect for function i1_getTicksSince
 21791  1000                     i1_getTicksSince:
 21792  1000                     i1l5224:	
 21793                           ;incstack = 0
 21794                           ; Regs used in i1_getTicksSince: [wreg]
 21795                           
 21796                           
 21797                           ;timers.c: 45:     return (systemTime - from);
 21798  1000  0870               	movf	i1getTicksSince@from,w
 21799  1001  0140               	movlb	0	; select bank0
 21800  1002  023B               	subwf	_systemTime,w
 21801  1003  00F4               	movwf	??i1_getTicksSince
 21802  1004  0871               	movf	i1getTicksSince@from+1,w
 21803  1005  3B3C               	subwfb	_systemTime+1,w
 21804  1006  00F5               	movwf	??i1_getTicksSince+1
 21805  1007  0872               	movf	i1getTicksSince@from+2,w
 21806  1008  3B3D               	subwfb	_systemTime+2,w
 21807  1009  00F6               	movwf	??i1_getTicksSince+2
 21808  100A  0873               	movf	i1getTicksSince@from+3,w
 21809  100B  3B3E               	subwfb	_systemTime+3,w
 21810  100C  00F7               	movwf	??i1_getTicksSince+3
 21811  100D  0877               	movf	??i1_getTicksSince+3,w
 21812  100E  00F3               	movwf	?i1_getTicksSince+3
 21813  100F  0876               	movf	??i1_getTicksSince+2,w
 21814  1010  00F2               	movwf	?i1_getTicksSince+2
 21815  1011  0875               	movf	??i1_getTicksSince+1,w
 21816  1012  00F1               	movwf	?i1_getTicksSince+1
 21817  1013  0874               	movf	??i1_getTicksSince,w
 21818  1014  00F0               	movwf	?i1_getTicksSince
 21819  1015                     i1l1118:
 21820  1015  0008               	return
 21821  1016                     __end_ofi1_getTicksSince:
 21822                           
 21823                           	psect	text114
 21824  1AB4                     __ptext114:	
 21825 ;; *************** function i1_getTicks *****************
 21826 ;; Defined at:
 21827 ;;		line 40 in file "timers.c"
 21828 ;; Parameters:    Size  Location     Type
 21829 ;;		None
 21830 ;; Auto vars:     Size  Location     Type
 21831 ;;		None
 21832 ;; Return value:  Size  Location     Type
 21833 ;;                  4    0[COMMON] unsigned long 
 21834 ;; Registers used:
 21835 ;;		wreg
 21836 ;; Tracked objects:
 21837 ;;		On entry : 0/0
 21838 ;;		On exit  : 0/0
 21839 ;;		Unchanged: 0/0
 21840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21841 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21844 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21845 ;;Total ram usage:        4 bytes
 21846 ;; Hardware stack levels used:    1
 21847 ;; This function calls:
 21848 ;;		Nothing
 21849 ;; This function is called by:
 21850 ;;		_readJoystick
 21851 ;; This function uses a non-reentrant model
 21852 ;;
 21853                           
 21854                           
 21855                           ;psect for function i1_getTicks
 21856  1AB4                     i1_getTicks:
 21857  1AB4                     i1l5220:	
 21858                           ;incstack = 0
 21859                           ; Regs used in i1_getTicks: [wreg]
 21860                           
 21861                           
 21862                           ;timers.c: 41:     return systemTime;
 21863  1AB4  0140               	movlb	0	; select bank0
 21864  1AB5  083E               	movf	_systemTime+3,w
 21865  1AB6  00F3               	movwf	?i1_getTicks+3
 21866  1AB7  083D               	movf	_systemTime+2,w
 21867  1AB8  00F2               	movwf	?i1_getTicks+2
 21868  1AB9  083C               	movf	_systemTime+1,w
 21869  1ABA  00F1               	movwf	?i1_getTicks+1
 21870  1ABB  083B               	movf	_systemTime,w
 21871  1ABC  00F0               	movwf	?i1_getTicks
 21872  1ABD                     i1l1115:
 21873  1ABD  0008               	return
 21874  1ABE                     __end_ofi1_getTicks:
 21875                           
 21876                           	psect	text115
 21877  1A51                     __ptext115:	
 21878 ;; *************** function i1_EUSART1_is_rx_ready *****************
 21879 ;; Defined at:
 21880 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 21881 ;; Parameters:    Size  Location     Type
 21882 ;;		None
 21883 ;; Auto vars:     Size  Location     Type
 21884 ;;		None
 21885 ;; Return value:  Size  Location     Type
 21886 ;;                  1    wreg      _Bool 
 21887 ;; Registers used:
 21888 ;;		wreg, status,2, status,0
 21889 ;; Tracked objects:
 21890 ;;		On entry : 0/0
 21891 ;;		On exit  : 0/0
 21892 ;;		Unchanged: 0/0
 21893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21898 ;;Total ram usage:        0 bytes
 21899 ;; Hardware stack levels used:    1
 21900 ;; This function calls:
 21901 ;;		Nothing
 21902 ;; This function is called by:
 21903 ;;		_readJoystick
 21904 ;; This function uses a non-reentrant model
 21905 ;;
 21906                           
 21907                           
 21908                           ;psect for function i1_EUSART1_is_rx_ready
 21909  1A51                     i1_EUSART1_is_rx_ready:
 21910  1A51                     i1l5188:	
 21911                           ;incstack = 0
 21912                           ; Regs used in i1_EUSART1_is_rx_ready: [wreg+status,2+status,0]
 21913                           
 21914                           
 21915                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 21916  1A51  0140               	movlb	0	; select bank0
 21917  1A52  0850               	movf	_eusart1RxCount,w	;volatile
 21918  1A53  1D03               	btfss	3,2
 21919  1A54  2A56               	goto	u393_21
 21920  1A55  2A58               	goto	u393_20
 21921  1A56                     u393_21:
 21922  1A56  3001               	movlw	1
 21923  1A57  2A59               	goto	u394_20
 21924  1A58                     u393_20:
 21925  1A58  3000               	movlw	0
 21926  1A59                     u394_20:
 21927  1A59                     i1l236:
 21928  1A59  0008               	return
 21929  1A5A                     __end_ofi1_EUSART1_is_rx_ready:
 21930                           
 21931                           	psect	text116
 21932  10C2                     __ptext116:	
 21933 ;; *************** function i1_EUSART1_Read *****************
 21934 ;; Defined at:
 21935 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 21936 ;; Parameters:    Size  Location     Type
 21937 ;;		None
 21938 ;; Auto vars:     Size  Location     Type
 21939 ;;  readValue       1    1[COMMON] unsigned char 
 21940 ;; Return value:  Size  Location     Type
 21941 ;;                  1    wreg      unsigned char 
 21942 ;; Registers used:
 21943 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21944 ;; Tracked objects:
 21945 ;;		On entry : 0/0
 21946 ;;		On exit  : 0/0
 21947 ;;		Unchanged: 0/0
 21948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21950 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21951 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21952 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21953 ;;Total ram usage:        2 bytes
 21954 ;; Hardware stack levels used:    1
 21955 ;; This function calls:
 21956 ;;		Nothing
 21957 ;; This function is called by:
 21958 ;;		_readJoystick
 21959 ;; This function uses a non-reentrant model
 21960 ;;
 21961                           
 21962                           
 21963                           ;psect for function i1_EUSART1_Read
 21964  10C2                     i1_EUSART1_Read:
 21965  10C2                     i1l5192:	
 21966                           ;incstack = 0
 21967                           ; Regs used in i1_EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 21968                           
 21969  10C2                     i1l5194:	
 21970                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 21971                           
 21972                           
 21973                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 21974  10C2  0140               	movlb	0	; select bank0
 21975  10C3  0850               	movf	_eusart1RxCount,w	;volatile
 21976  10C4  1903               	btfsc	3,2
 21977  10C5  28C7               	goto	u395_21
 21978  10C6  28C8               	goto	u395_20
 21979  10C7                     u395_21:
 21980  10C7  28C2               	goto	i1l5194
 21981  10C8                     u395_20:
 21982  10C8                     i1l5196:
 21983                           
 21984                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 21985  10C8  0851               	movf	_eusart1RxTail,w	;volatile
 21986  10C9  3EA0               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 21987  10CA  0086               	movwf	6
 21988  10CB  3001               	movlw	1	; select bank3/4
 21989  10CC  0087               	movwf	7
 21990  10CD  0801               	movf	1,w
 21991  10CE  00F0               	movwf	??i1_EUSART1_Read
 21992  10CF  0870               	movf	??i1_EUSART1_Read,w
 21993  10D0  00CF               	movwf	_eusart1RxLastError	;volatile
 21994                           
 21995                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 21996  10D1  0851               	movf	_eusart1RxTail,w
 21997  10D2  3E20               	addlw	(low (_eusart1RxBuffer| (0+512)))& (0+255)
 21998  10D3  0086               	movwf	6
 21999  10D4  3002               	movlw	2	; select bank4/5
 22000  10D5  0087               	movwf	7
 22001  10D6  0801               	movf	1,w
 22002  10D7  00F0               	movwf	??i1_EUSART1_Read
 22003  10D8  0870               	movf	??i1_EUSART1_Read,w
 22004  10D9  00F1               	movwf	i1EUSART1_Read@readValue
 22005  10DA                     i1l5198:
 22006  10DA  3001               	movlw	1
 22007  10DB  00F0               	movwf	??i1_EUSART1_Read
 22008  10DC  0870               	movf	??i1_EUSART1_Read,w
 22009  10DD  07D1               	addwf	_eusart1RxTail,f	;volatile
 22010  10DE                     i1l5200:
 22011                           
 22012                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 22013  10DE  3020               	movlw	32
 22014  10DF  0251               	subwf	_eusart1RxTail,w	;volatile
 22015  10E0  1C03               	skipc
 22016  10E1  28E3               	goto	u396_21
 22017  10E2  28E4               	goto	u396_20
 22018  10E3                     u396_21:
 22019  10E3  28E5               	goto	i1l5204
 22020  10E4                     u396_20:
 22021  10E4                     i1l5202:
 22022                           
 22023                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 22024  10E4  01D1               	clrf	_eusart1RxTail	;volatile
 22025  10E5                     i1l5204:
 22026                           
 22027                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
 22028  10E5  014E               	movlb	14	; select bank14
 22029  10E6  1299               	bcf	25,5	;volatile
 22030  10E7                     i1l5206:
 22031                           
 22032                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 22033  10E7  3001               	movlw	1
 22034  10E8  0140               	movlb	0	; select bank0
 22035  10E9  02D0               	subwf	_eusart1RxCount,f	;volatile
 22036  10EA                     i1l5208:
 22037                           
 22038                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
 22039  10EA  014E               	movlb	14	; select bank14
 22040  10EB  1699               	bsf	25,5	;volatile
 22041  10EC                     i1l5210:
 22042                           
 22043                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 22044  10EC  0871               	movf	i1EUSART1_Read@readValue,w
 22045  10ED                     i1l249:
 22046  10ED  0008               	return
 22047  10EE                     __end_ofi1_EUSART1_Read:
 22048                           
 22049                           	psect	text117
 22050  1C1C                     __ptext117:	
 22051 ;; *************** function _sendBTEstopCmd *****************
 22052 ;; Defined at:
 22053 ;;		line 57 in file "serial.c"
 22054 ;; Parameters:    Size  Location     Type
 22055 ;;		None
 22056 ;; Auto vars:     Size  Location     Type
 22057 ;;		None
 22058 ;; Return value:  Size  Location     Type
 22059 ;;                  1    wreg      _Bool 
 22060 ;; Registers used:
 22061 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22062 ;; Tracked objects:
 22063 ;;		On entry : 0/0
 22064 ;;		On exit  : 0/0
 22065 ;;		Unchanged: 0/0
 22066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22069 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22070 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22071 ;;Total ram usage:        1 bytes
 22072 ;; Hardware stack levels used:    1
 22073 ;; Hardware stack levels required when called:    2
 22074 ;; This function calls:
 22075 ;;		i1_calcCRC
 22076 ;;		i1_sendBTBuffer
 22077 ;; This function is called by:
 22078 ;;		_readJoystick
 22079 ;; This function uses a non-reentrant model
 22080 ;;
 22081                           
 22082                           
 22083                           ;psect for function _sendBTEstopCmd
 22084  1C1C                     _sendBTEstopCmd:
 22085  1C1C                     i1l4928:	
 22086                           ;incstack = 0
 22087                           ; Regs used in _sendBTEstopCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22088                           
 22089                           
 22090                           ;serial.c: 58:     calcCRC(estopBuffer);
 22091  1C1C  3064               	movlw	(low (_estopBuffer| (0+256)))& (0+255)
 22092  1C1D  3196  26D9  319C   	fcall	i1_calcCRC
 22093  1C20                     i1l4930:
 22094                           
 22095                           ;serial.c: 59:     return sendBTBuffer((void *)estopBuffer, sizeof(estopBuffer), 1);;	Re
      +                          turn value of _sendBTEstopCmd is never used
 22096  1C20  3064               	movlw	low _estopBuffer
 22097  1C21  00F5               	movwf	i1sendBTBuffer@buffer
 22098  1C22  3001               	movlw	high _estopBuffer
 22099  1C23  00F6               	movwf	i1sendBTBuffer@buffer+1
 22100  1C24  3008               	movlw	8
 22101  1C25  00F9               	movwf	??_sendBTEstopCmd
 22102  1C26  0879               	movf	??_sendBTEstopCmd,w
 22103  1C27  00F7               	movwf	i1sendBTBuffer@length
 22104  1C28  01F8               	clrf	i1sendBTBuffer@blockIfBusy
 22105  1C29  0AF8               	incf	i1sendBTBuffer@blockIfBusy,f
 22106  1C2A  3190  2096  319C   	fcall	i1_sendBTBuffer
 22107  1C2D                     i1l1011:
 22108  1C2D  0008               	return
 22109  1C2E                     __end_of_sendBTEstopCmd:
 22110                           
 22111                           	psect	text118
 22112  05D2                     __ptext118:	
 22113 ;; *************** function _readPotJoystick *****************
 22114 ;; Defined at:
 22115 ;;		line 233 in file "joystick.c"
 22116 ;; Parameters:    Size  Location     Type
 22117 ;;		None
 22118 ;; Auto vars:     Size  Location     Type
 22119 ;;  yaw             2   23[BANK0 ] short 
 22120 ;;  axial           2   21[BANK0 ] short 
 22121 ;; Return value:  Size  Location     Type
 22122 ;;                  1    wreg      void 
 22123 ;; Registers used:
 22124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22125 ;; Tracked objects:
 22126 ;;		On entry : 0/0
 22127 ;;		On exit  : 0/0
 22128 ;;		Unchanged: 0/0
 22129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22131 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22132 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22133 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22134 ;;Total ram usage:        9 bytes
 22135 ;; Hardware stack levels used:    1
 22136 ;; Hardware stack levels required when called:    3
 22137 ;; This function calls:
 22138 ;;		___lmul
 22139 ;;		_calculateMotion
 22140 ;;		_deadband
 22141 ;;		i1_ADCC_GetSingleConversion
 22142 ;;		i1_sendBTSpeedCmd
 22143 ;; This function is called by:
 22144 ;;		_readJoystick
 22145 ;; This function uses a non-reentrant model
 22146 ;;
 22147                           
 22148                           
 22149                           ;psect for function _readPotJoystick
 22150  05D2                     _readPotJoystick:
 22151  05D2                     i1l4970:	
 22152                           ;incstack = 0
 22153                           ; Regs used in _readPotJoystick: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22154                           
 22155                           
 22156                           ;joystick.c: 234:     accelAxialFP = 2048;
 22157  05D2  3000               	movlw	0
 22158  05D3  0141               	movlb	1	; select bank1
 22159  05D4  00C0               	movwf	_accelAxialFP^(0+128)
 22160  05D5  3008               	movlw	8
 22161  05D6  00C1               	movwf	(_accelAxialFP^(0+128)+1)
 22162                           
 22163                           ;joystick.c: 235:     accelYawFP = 2048;
 22164  05D7  3000               	movlw	0
 22165  05D8  00BE               	movwf	_accelYawFP^(0+128)
 22166  05D9  3008               	movlw	8
 22167  05DA  00BF               	movwf	(_accelYawFP^(0+128)+1)
 22168  05DB                     i1l4972:
 22169                           
 22170                           ;joystick.c: 237:     int16_t axial = - deadband(ADCC_GetSingleConversion(JSDO), axialCe
      +                          nter);
 22171  05DB  3002               	movlw	2
 22172  05DC  319C  240A  3185   	fcall	i1_ADCC_GetSingleConversion
 22173  05DF  0871               	movf	?i1_ADCC_GetSingleConversion+1,w
 22174  05E0  0140               	movlb	0	; select bank0
 22175  05E1  00A7               	movwf	deadband@jsValue+1
 22176  05E2  0870               	movf	?i1_ADCC_GetSingleConversion,w
 22177  05E3  00A6               	movwf	deadband@jsValue
 22178  05E4  0141               	movlb	1	; select bank1
 22179  05E5  0867               	movf	(_axialCenter+1)^(0+128),w
 22180  05E6  0140               	movlb	0	; select bank0
 22181  05E7  00A9               	movwf	deadband@center+1
 22182  05E8  0141               	movlb	1	; select bank1
 22183  05E9  0866               	movf	_axialCenter^(0+128),w
 22184  05EA  0140               	movlb	0	; select bank0
 22185  05EB  00A8               	movwf	deadband@center
 22186  05EC  318A  22E4  3185   	fcall	_deadband
 22187  05EF  0140               	movlb	0	; select bank0
 22188  05F0  0926               	comf	?_deadband,w
 22189  05F1  00B0               	movwf	??_readPotJoystick
 22190  05F2  0927               	comf	?_deadband+1,w
 22191  05F3  00B1               	movwf	??_readPotJoystick+1
 22192  05F4  0AB0               	incf	??_readPotJoystick,f
 22193  05F5  1903               	skipnz
 22194  05F6  0AB1               	incf	??_readPotJoystick+1,f
 22195  05F7  0830               	movf	??_readPotJoystick,w
 22196  05F8  00B5               	movwf	readPotJoystick@axial
 22197  05F9  0831               	movf	??_readPotJoystick+1,w
 22198  05FA  00B6               	movwf	readPotJoystick@axial+1
 22199  05FB                     i1l4974:
 22200                           
 22201                           ;joystick.c: 238:     int16_t yaw = - deadband(ADCC_GetSingleConversion(JSLE), yawCenter
      +                          );
 22202  05FB  3001               	movlw	1
 22203  05FC  319C  240A  3185   	fcall	i1_ADCC_GetSingleConversion
 22204  05FF  0871               	movf	?i1_ADCC_GetSingleConversion+1,w
 22205  0600  0140               	movlb	0	; select bank0
 22206  0601  00A7               	movwf	deadband@jsValue+1
 22207  0602  0870               	movf	?i1_ADCC_GetSingleConversion,w
 22208  0603  00A6               	movwf	deadband@jsValue
 22209  0604  0141               	movlb	1	; select bank1
 22210  0605  0865               	movf	(_yawCenter+1)^(0+128),w
 22211  0606  0140               	movlb	0	; select bank0
 22212  0607  00A9               	movwf	deadband@center+1
 22213  0608  0141               	movlb	1	; select bank1
 22214  0609  0864               	movf	_yawCenter^(0+128),w
 22215  060A  0140               	movlb	0	; select bank0
 22216  060B  00A8               	movwf	deadband@center
 22217  060C  318A  22E4  3185   	fcall	_deadband
 22218  060F  0140               	movlb	0	; select bank0
 22219  0610  0926               	comf	?_deadband,w
 22220  0611  00B0               	movwf	??_readPotJoystick
 22221  0612  0927               	comf	?_deadband+1,w
 22222  0613  00B1               	movwf	??_readPotJoystick+1
 22223  0614  0AB0               	incf	??_readPotJoystick,f
 22224  0615  1903               	skipnz
 22225  0616  0AB1               	incf	??_readPotJoystick+1,f
 22226  0617  0830               	movf	??_readPotJoystick,w
 22227  0618  00B7               	movwf	readPotJoystick@yaw
 22228  0619  0831               	movf	??_readPotJoystick+1,w
 22229  061A  00B8               	movwf	readPotJoystick@yaw+1
 22230  061B                     i1l4976:
 22231                           
 22232                           ;joystick.c: 240:     targetAxialFP = (int16_t)((topAxialSpeedFP * (int32_t)axial) >> 11
      +                          );
 22233  061B  0141               	movlb	1	; select bank1
 22234  061C  083C               	movf	_topAxialSpeedFP^(0+128),w
 22235  061D  00F0               	movwf	___lmul@multiplier
 22236  061E  083D               	movf	(_topAxialSpeedFP+1)^(0+128),w
 22237  061F  00F1               	movwf	___lmul@multiplier+1
 22238  0620  0D89               	rlf	9,f
 22239  0621  3B89               	subwfb	9,f
 22240  0622  0989               	comf	9,f
 22241  0623  00F2               	movwf	___lmul@multiplier+2
 22242  0624  00F3               	movwf	___lmul@multiplier+3
 22243  0625  0140               	movlb	0	; select bank0
 22244  0626  0835               	movf	readPotJoystick@axial,w
 22245  0627  00F4               	movwf	___lmul@multiplicand
 22246  0628  0836               	movf	readPotJoystick@axial+1,w
 22247  0629  00F5               	movwf	___lmul@multiplicand+1
 22248  062A  0D89               	rlf	9,f
 22249  062B  3B89               	subwfb	9,f
 22250  062C  0989               	comf	9,f
 22251  062D  00F6               	movwf	___lmul@multiplicand+2
 22252  062E  00F7               	movwf	___lmul@multiplicand+3
 22253  062F  3192  2268  3185   	fcall	___lmul
 22254  0632  0870               	movf	?___lmul,w
 22255  0633  0140               	movlb	0	; select bank0
 22256  0634  00B0               	movwf	??_readPotJoystick
 22257  0635  0871               	movf	?___lmul+1,w
 22258  0636  00B1               	movwf	??_readPotJoystick+1
 22259  0637  0872               	movf	?___lmul+2,w
 22260  0638  00B2               	movwf	??_readPotJoystick+2
 22261  0639  0873               	movf	?___lmul+3,w
 22262  063A  00B3               	movwf	??_readPotJoystick+3
 22263  063B  300B               	movlw	11
 22264  063C  00B4               	movwf	??_readPotJoystick+4
 22265  063D                     u363_25:
 22266  063D  37B3               	asrf	??_readPotJoystick+3,f
 22267  063E  0CB2               	rrf	??_readPotJoystick+2,f
 22268  063F  0CB1               	rrf	??_readPotJoystick+1,f
 22269  0640  0CB0               	rrf	??_readPotJoystick,f
 22270  0641                     u363_20:
 22271  0641  0BB4               	decfsz	??_readPotJoystick+4,f
 22272  0642  2E3D               	goto	u363_25
 22273  0643  0831               	movf	??_readPotJoystick+1,w
 22274  0644  00C2               	movwf	_targetAxialFP+1
 22275  0645  0830               	movf	??_readPotJoystick,w
 22276  0646  00C1               	movwf	_targetAxialFP
 22277  0647                     i1l4978:
 22278                           
 22279                           ;joystick.c: 241:     targetYawFP = (int16_t)((topYawSpeedFP * (int32_t)yaw) >> 11);
 22280  0647  0141               	movlb	1	; select bank1
 22281  0648  083A               	movf	_topYawSpeedFP^(0+128),w
 22282  0649  00F0               	movwf	___lmul@multiplier
 22283  064A  083B               	movf	(_topYawSpeedFP+1)^(0+128),w
 22284  064B  00F1               	movwf	___lmul@multiplier+1
 22285  064C  0D89               	rlf	9,f
 22286  064D  3B89               	subwfb	9,f
 22287  064E  0989               	comf	9,f
 22288  064F  00F2               	movwf	___lmul@multiplier+2
 22289  0650  00F3               	movwf	___lmul@multiplier+3
 22290  0651  0140               	movlb	0	; select bank0
 22291  0652  0837               	movf	readPotJoystick@yaw,w
 22292  0653  00F4               	movwf	___lmul@multiplicand
 22293  0654  0838               	movf	readPotJoystick@yaw+1,w
 22294  0655  00F5               	movwf	___lmul@multiplicand+1
 22295  0656  0D89               	rlf	9,f
 22296  0657  3B89               	subwfb	9,f
 22297  0658  0989               	comf	9,f
 22298  0659  00F6               	movwf	___lmul@multiplicand+2
 22299  065A  00F7               	movwf	___lmul@multiplicand+3
 22300  065B  3192  2268  3185   	fcall	___lmul
 22301  065E  0870               	movf	?___lmul,w
 22302  065F  0140               	movlb	0	; select bank0
 22303  0660  00B0               	movwf	??_readPotJoystick
 22304  0661  0871               	movf	?___lmul+1,w
 22305  0662  00B1               	movwf	??_readPotJoystick+1
 22306  0663  0872               	movf	?___lmul+2,w
 22307  0664  00B2               	movwf	??_readPotJoystick+2
 22308  0665  0873               	movf	?___lmul+3,w
 22309  0666  00B3               	movwf	??_readPotJoystick+3
 22310  0667  300B               	movlw	11
 22311  0668  00B4               	movwf	??_readPotJoystick+4
 22312  0669                     u364_25:
 22313  0669  37B3               	asrf	??_readPotJoystick+3,f
 22314  066A  0CB2               	rrf	??_readPotJoystick+2,f
 22315  066B  0CB1               	rrf	??_readPotJoystick+1,f
 22316  066C  0CB0               	rrf	??_readPotJoystick,f
 22317  066D                     u364_20:
 22318  066D  0BB4               	decfsz	??_readPotJoystick+4,f
 22319  066E  2E69               	goto	u364_25
 22320  066F  0831               	movf	??_readPotJoystick+1,w
 22321  0670  0141               	movlb	1	; select bank1
 22322  0671  00C5               	movwf	(_targetYawFP+1)^(0+128)
 22323  0672  0140               	movlb	0	; select bank0
 22324  0673  0830               	movf	??_readPotJoystick,w
 22325  0674  0141               	movlb	1	; select bank1
 22326  0675  00C4               	movwf	_targetYawFP^(0+128)
 22327  0676                     i1l4980:
 22328                           
 22329                           ;joystick.c: 244:     calculateMotion();
 22330  0676  3190  206A  3185   	fcall	_calculateMotion
 22331  0679                     i1l4982:
 22332                           
 22333                           ;joystick.c: 245:     sendBTSpeedCmd(limitedAxialFP >> 2, limitedYawFP >> 2, 0);
 22334  0679  0140               	movlb	0	; select bank0
 22335  067A  0840               	movf	_limitedAxialFP+1,w
 22336  067B  00B1               	movwf	??_readPotJoystick+1
 22337  067C  083F               	movf	_limitedAxialFP,w
 22338  067D  00B0               	movwf	??_readPotJoystick
 22339  067E  0D31               	rlf	??_readPotJoystick+1,w
 22340  067F  0CB1               	rrf	??_readPotJoystick+1,f
 22341  0680  0CB0               	rrf	??_readPotJoystick,f
 22342  0681  0D31               	rlf	??_readPotJoystick+1,w
 22343  0682  0CB1               	rrf	??_readPotJoystick+1,f
 22344  0683  0CB0               	rrf	??_readPotJoystick,f
 22345  0684  0830               	movf	??_readPotJoystick,w
 22346  0685  00A6               	movwf	i1sendBTSpeedCmd@axial
 22347  0686  0831               	movf	??_readPotJoystick+1,w
 22348  0687  00A7               	movwf	i1sendBTSpeedCmd@axial+1
 22349  0688  0141               	movlb	1	; select bank1
 22350  0689  0843               	movf	(_limitedYawFP+1)^(0+128),w
 22351  068A  0140               	movlb	0	; select bank0
 22352  068B  00B3               	movwf	??_readPotJoystick+3
 22353  068C  0141               	movlb	1	; select bank1
 22354  068D  0842               	movf	_limitedYawFP^(0+128),w
 22355  068E  0140               	movlb	0	; select bank0
 22356  068F  00B2               	movwf	??_readPotJoystick+2
 22357  0690  0D33               	rlf	??_readPotJoystick+3,w
 22358  0691  0CB3               	rrf	??_readPotJoystick+3,f
 22359  0692  0CB2               	rrf	??_readPotJoystick+2,f
 22360  0693  0D33               	rlf	??_readPotJoystick+3,w
 22361  0694  0CB3               	rrf	??_readPotJoystick+3,f
 22362  0695  0CB2               	rrf	??_readPotJoystick+2,f
 22363  0696  0832               	movf	??_readPotJoystick+2,w
 22364  0697  00A8               	movwf	i1sendBTSpeedCmd@yaw
 22365  0698  0833               	movf	??_readPotJoystick+3,w
 22366  0699  00A9               	movwf	i1sendBTSpeedCmd@yaw+1
 22367  069A  01AA               	clrf	i1sendBTSpeedCmd@blockIfBusy
 22368  069B  318B  23F9  3185   	fcall	i1_sendBTSpeedCmd
 22369  069E                     i1l940:
 22370  069E  0008               	return
 22371  069F                     __end_of_readPotJoystick:
 22372                           
 22373                           	psect	text119
 22374  1C0A                     __ptext119:	
 22375 ;; *************** function i1_ADCC_GetSingleConversion *****************
 22376 ;; Defined at:
 22377 ;;		line 138 in file "mcc_generated_files/adcc.c"
 22378 ;; Parameters:    Size  Location     Type
 22379 ;;  channel         1    wreg     enum E10887
 22380 ;; Auto vars:     Size  Location     Type
 22381 ;;  channel         1    3[COMMON] enum E10887
 22382 ;; Return value:  Size  Location     Type
 22383 ;;                  2    0[COMMON] unsigned short 
 22384 ;; Registers used:
 22385 ;;		wreg
 22386 ;; Tracked objects:
 22387 ;;		On entry : 0/0
 22388 ;;		On exit  : 0/0
 22389 ;;		Unchanged: 0/0
 22390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22391 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22392 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22394 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22395 ;;Total ram usage:        4 bytes
 22396 ;; Hardware stack levels used:    1
 22397 ;; This function calls:
 22398 ;;		Nothing
 22399 ;; This function is called by:
 22400 ;;		_readPotJoystick
 22401 ;; This function uses a non-reentrant model
 22402 ;;
 22403                           
 22404                           
 22405                           ;psect for function i1_ADCC_GetSingleConversion
 22406  1C0A                     i1_ADCC_GetSingleConversion:
 22407                           
 22408                           ;incstack = 0
 22409                           ; Regs used in i1_ADCC_GetSingleConversion: [wreg]
 22410                           ;i1ADCC_GetSingleConversion@channel stored from wreg
 22411  1C0A  00F3               	movwf	i1ADCC_GetSingleConversion@channel
 22412  1C0B                     i1l4876:
 22413                           
 22414                           ;mcc_generated_files/adcc.c: 138: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 139: {;mcc_generated_files/adcc.c: 141:     ADPCH = 
      +                          channel;
 22415  1C0B  0873               	movf	i1ADCC_GetSingleConversion@channel,w
 22416  1C0C  0141               	movlb	1	; select bank1
 22417  1C0D  009F               	movwf	31	;volatile
 22418  1C0E                     i1l4878:
 22419                           
 22420                           ;mcc_generated_files/adcc.c: 144:     ADCON0bits.ADON = 1;
 22421  1C0E  0142               	movlb	2	; select bank2
 22422  1C0F  1791               	bsf	17,7	;volatile
 22423  1C10                     i1l4880:
 22424                           
 22425                           ;mcc_generated_files/adcc.c: 147:     ADCON0bits.ADCONT = 0;
 22426  1C10  1311               	bcf	17,6	;volatile
 22427  1C11                     i1l4882:
 22428                           
 22429                           ;mcc_generated_files/adcc.c: 150:     ADCON0bits.ADGO = 1;
 22430  1C11  1411               	bsf	17,0	;volatile
 22431  1C12                     i1l651:	
 22432                           ;mcc_generated_files/adcc.c: 155:     {;mcc_generated_files/adcc.c: 156:     }
 22433                           
 22434                           
 22435                           ;mcc_generated_files/adcc.c: 154:     while (ADCON0bits.ADGO)
 22436  1C12  1811               	btfsc	17,0	;volatile
 22437  1C13  2C15               	goto	u354_21
 22438  1C14  2C16               	goto	u354_20
 22439  1C15                     u354_21:
 22440  1C15  2C12               	goto	i1l651
 22441  1C16                     u354_20:
 22442  1C16                     i1l4884:
 22443                           
 22444                           ;mcc_generated_files/adcc.c: 160:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 22445  1C16  0141               	movlb	1	; select bank1
 22446  1C17  081E               	movf	30,w	;volatile
 22447  1C18  00F1               	movwf	?i1_ADCC_GetSingleConversion+1
 22448  1C19  081D               	movf	29,w	;volatile
 22449  1C1A  00F0               	movwf	?i1_ADCC_GetSingleConversion
 22450  1C1B                     i1l654:
 22451  1C1B  0008               	return
 22452  1C1C                     __end_ofi1_ADCC_GetSingleConversion:
 22453                           
 22454                           	psect	text120
 22455  0AE4                     __ptext120:	
 22456 ;; *************** function _deadband *****************
 22457 ;; Defined at:
 22458 ;;		line 249 in file "joystick.c"
 22459 ;; Parameters:    Size  Location     Type
 22460 ;;  jsValue         2    6[BANK0 ] short 
 22461 ;;  center          2    8[BANK0 ] short 
 22462 ;; Auto vars:     Size  Location     Type
 22463 ;;		None
 22464 ;; Return value:  Size  Location     Type
 22465 ;;                  2    6[BANK0 ] short 
 22466 ;; Registers used:
 22467 ;;		wreg, status,2, status,0, pclath, cstack
 22468 ;; Tracked objects:
 22469 ;;		On entry : 0/0
 22470 ;;		On exit  : 0/0
 22471 ;;		Unchanged: 0/0
 22472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22473 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22475 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22476 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22477 ;;Total ram usage:       10 bytes
 22478 ;; Hardware stack levels used:    1
 22479 ;; Hardware stack levels required when called:    1
 22480 ;; This function calls:
 22481 ;;		___aldiv
 22482 ;; This function is called by:
 22483 ;;		_readPotJoystick
 22484 ;; This function uses a non-reentrant model
 22485 ;;
 22486                           
 22487                           
 22488                           ;psect for function _deadband
 22489  0AE4                     _deadband:
 22490  0AE4                     i1l4702:	
 22491                           ;incstack = 0
 22492                           ; Regs used in _deadband: [wreg+status,2+status,0+pclath+cstack]
 22493                           
 22494                           
 22495                           ;joystick.c: 250:     jsValue -= center ;
 22496  0AE4  0140               	movlb	0	; select bank0
 22497  0AE5  0828               	movf	deadband@center,w
 22498  0AE6  02A6               	subwf	deadband@jsValue,f
 22499  0AE7  0829               	movf	deadband@center+1,w
 22500  0AE8  3BA7               	subwfb	deadband@jsValue+1,f
 22501                           
 22502                           ;joystick.c: 251:     if (jsValue > 512) {
 22503  0AE9  0827               	movf	deadband@jsValue+1,w
 22504  0AEA  3A80               	xorlw	128
 22505  0AEB  00AA               	movwf	??_deadband
 22506  0AEC  3082               	movlw	130
 22507  0AED  022A               	subwf	??_deadband,w
 22508  0AEE  1D03               	skipz
 22509  0AEF  2AF2               	goto	u316_25
 22510  0AF0  3001               	movlw	1
 22511  0AF1  0226               	subwf	deadband@jsValue,w
 22512  0AF2                     u316_25:
 22513  0AF2  1C03               	skipc
 22514  0AF3  2AF5               	goto	u316_21
 22515  0AF4  2AF6               	goto	u316_20
 22516  0AF5                     u316_21:
 22517  0AF5  2B26               	goto	i1l4706
 22518  0AF6                     u316_20:
 22519  0AF6                     i1l4704:
 22520                           
 22521                           ;joystick.c: 252:         jsValue = (int16_t)(((int32_t)(jsValue - 512) * 2048) / (2048 
      +                          - 512));
 22522  0AF6  3000               	movlw	0
 22523  0AF7  00F3               	movwf	___aldiv@divisor+3
 22524  0AF8  3000               	movlw	0
 22525  0AF9  00F2               	movwf	___aldiv@divisor+2
 22526  0AFA  3006               	movlw	6
 22527  0AFB  00F1               	movwf	___aldiv@divisor+1
 22528  0AFC  3000               	movlw	0
 22529  0AFD  00F0               	movwf	___aldiv@divisor
 22530  0AFE  0140               	movlb	0	; select bank0
 22531  0AFF  0826               	movf	deadband@jsValue,w
 22532  0B00  3E00               	addlw	0
 22533  0B01  00AA               	movwf	??_deadband
 22534  0B02  30FE               	movlw	254
 22535  0B03  3D27               	addwfc	deadband@jsValue+1,w
 22536  0B04  00AB               	movwf	??_deadband+1
 22537  0B05  082A               	movf	??_deadband,w
 22538  0B06  00AC               	movwf	??_deadband+2
 22539  0B07  082B               	movf	??_deadband+1,w
 22540  0B08  00AD               	movwf	??_deadband+3
 22541  0B09  3000               	movlw	0
 22542  0B0A  1BAD               	btfsc	??_deadband+3,7
 22543  0B0B  30FF               	movlw	255
 22544  0B0C  00AE               	movwf	??_deadband+4
 22545  0B0D  00AF               	movwf	??_deadband+5
 22546  0B0E  300B               	movlw	11
 22547  0B0F                     u317_25:
 22548  0B0F  35AC               	lslf	??_deadband+2,f
 22549  0B10  0DAD               	rlf	??_deadband+3,f
 22550  0B11  0DAE               	rlf	??_deadband+4,f
 22551  0B12  0DAF               	rlf	??_deadband+5,f
 22552  0B13                     u317_20:
 22553  0B13  0B89               	decfsz	9,f
 22554  0B14  2B0F               	goto	u317_25
 22555  0B15  082F               	movf	??_deadband+5,w
 22556  0B16  00F7               	movwf	___aldiv@dividend+3
 22557  0B17  082E               	movf	??_deadband+4,w
 22558  0B18  00F6               	movwf	___aldiv@dividend+2
 22559  0B19  082D               	movf	??_deadband+3,w
 22560  0B1A  00F5               	movwf	___aldiv@dividend+1
 22561  0B1B  082C               	movf	??_deadband+2,w
 22562  0B1C  00F4               	movwf	___aldiv@dividend
 22563  0B1D  318B  2369  318A   	fcall	___aldiv
 22564  0B20  0871               	movf	?___aldiv+1,w
 22565  0B21  0140               	movlb	0	; select bank0
 22566  0B22  00A7               	movwf	deadband@jsValue+1
 22567  0B23  0870               	movf	?___aldiv,w
 22568  0B24  00A6               	movwf	deadband@jsValue
 22569                           
 22570                           ;joystick.c: 253:     } else if (jsValue < -512) {
 22571  0B25  2B68               	goto	i1l944
 22572  0B26                     i1l4706:
 22573  0B26  0140               	movlb	0	; select bank0
 22574  0B27  0827               	movf	deadband@jsValue+1,w
 22575  0B28  3A80               	xorlw	128
 22576  0B29  00AA               	movwf	??_deadband
 22577  0B2A  307E               	movlw	126
 22578  0B2B  022A               	subwf	??_deadband,w
 22579  0B2C  1D03               	skipz
 22580  0B2D  2B30               	goto	u318_25
 22581  0B2E  3000               	movlw	0
 22582  0B2F  0226               	subwf	deadband@jsValue,w
 22583  0B30                     u318_25:
 22584  0B30  1803               	skipnc
 22585  0B31  2B33               	goto	u318_21
 22586  0B32  2B34               	goto	u318_20
 22587  0B33                     u318_21:
 22588  0B33  2B64               	goto	i1l4710
 22589  0B34                     u318_20:
 22590  0B34                     i1l4708:
 22591                           
 22592                           ;joystick.c: 254:         jsValue = (int16_t)(((int32_t)(jsValue + 512) * 2048) / (2048 
      +                          - 512));
 22593  0B34  3000               	movlw	0
 22594  0B35  00F3               	movwf	___aldiv@divisor+3
 22595  0B36  3000               	movlw	0
 22596  0B37  00F2               	movwf	___aldiv@divisor+2
 22597  0B38  3006               	movlw	6
 22598  0B39  00F1               	movwf	___aldiv@divisor+1
 22599  0B3A  3000               	movlw	0
 22600  0B3B  00F0               	movwf	___aldiv@divisor
 22601  0B3C  0140               	movlb	0	; select bank0
 22602  0B3D  0826               	movf	deadband@jsValue,w
 22603  0B3E  3E00               	addlw	0
 22604  0B3F  00AA               	movwf	??_deadband
 22605  0B40  3002               	movlw	2
 22606  0B41  3D27               	addwfc	deadband@jsValue+1,w
 22607  0B42  00AB               	movwf	??_deadband+1
 22608  0B43  082A               	movf	??_deadband,w
 22609  0B44  00AC               	movwf	??_deadband+2
 22610  0B45  082B               	movf	??_deadband+1,w
 22611  0B46  00AD               	movwf	??_deadband+3
 22612  0B47  3000               	movlw	0
 22613  0B48  1BAD               	btfsc	??_deadband+3,7
 22614  0B49  30FF               	movlw	255
 22615  0B4A  00AE               	movwf	??_deadband+4
 22616  0B4B  00AF               	movwf	??_deadband+5
 22617  0B4C  300B               	movlw	11
 22618  0B4D                     u319_25:
 22619  0B4D  35AC               	lslf	??_deadband+2,f
 22620  0B4E  0DAD               	rlf	??_deadband+3,f
 22621  0B4F  0DAE               	rlf	??_deadband+4,f
 22622  0B50  0DAF               	rlf	??_deadband+5,f
 22623  0B51                     u319_20:
 22624  0B51  0B89               	decfsz	9,f
 22625  0B52  2B4D               	goto	u319_25
 22626  0B53  082F               	movf	??_deadband+5,w
 22627  0B54  00F7               	movwf	___aldiv@dividend+3
 22628  0B55  082E               	movf	??_deadband+4,w
 22629  0B56  00F6               	movwf	___aldiv@dividend+2
 22630  0B57  082D               	movf	??_deadband+3,w
 22631  0B58  00F5               	movwf	___aldiv@dividend+1
 22632  0B59  082C               	movf	??_deadband+2,w
 22633  0B5A  00F4               	movwf	___aldiv@dividend
 22634  0B5B  318B  2369  318A   	fcall	___aldiv
 22635  0B5E  0871               	movf	?___aldiv+1,w
 22636  0B5F  0140               	movlb	0	; select bank0
 22637  0B60  00A7               	movwf	deadband@jsValue+1
 22638  0B61  0870               	movf	?___aldiv,w
 22639  0B62  00A6               	movwf	deadband@jsValue
 22640                           
 22641                           ;joystick.c: 255:     } else {
 22642  0B63  2B68               	goto	i1l944
 22643  0B64                     i1l4710:
 22644                           
 22645                           ;joystick.c: 256:         return 0;
 22646  0B64  0140               	movlb	0	; select bank0
 22647  0B65  01A6               	clrf	?_deadband
 22648  0B66  01A7               	clrf	?_deadband+1
 22649  0B67  2B68               	goto	i1l947
 22650  0B68                     i1l944:
 22651  0B68                     i1l947:	
 22652                           ;joystick.c: 258:     return jsValue;
 22653                           
 22654  0B68  0008               	return
 22655  0B69                     __end_of_deadband:
 22656                           
 22657                           	psect	text121
 22658  0B69                     __ptext121:	
 22659 ;; *************** function ___aldiv *****************
 22660 ;; Defined at:
 22661 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aldiv.c"
 22662 ;; Parameters:    Size  Location     Type
 22663 ;;  divisor         4    0[COMMON] long 
 22664 ;;  dividend        4    4[COMMON] long 
 22665 ;; Auto vars:     Size  Location     Type
 22666 ;;  quotient        4    2[BANK0 ] long 
 22667 ;;  sign            1    1[BANK0 ] unsigned char 
 22668 ;;  counter         1    0[BANK0 ] unsigned char 
 22669 ;; Return value:  Size  Location     Type
 22670 ;;                  4    0[COMMON] long 
 22671 ;; Registers used:
 22672 ;;		wreg, status,2, status,0
 22673 ;; Tracked objects:
 22674 ;;		On entry : 0/0
 22675 ;;		On exit  : 0/0
 22676 ;;		Unchanged: 0/0
 22677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22678 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22679 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22680 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22681 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22682 ;;Total ram usage:       15 bytes
 22683 ;; Hardware stack levels used:    1
 22684 ;; This function calls:
 22685 ;;		Nothing
 22686 ;; This function is called by:
 22687 ;;		_deadband
 22688 ;; This function uses a non-reentrant model
 22689 ;;
 22690                           
 22691                           
 22692                           ;psect for function ___aldiv
 22693  0B69                     ___aldiv:
 22694  0B69                     i1l4534:	
 22695                           ;incstack = 0
 22696                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 22697                           
 22698  0B69  0140               	movlb	0	; select bank0
 22699  0B6A  01A1               	clrf	___aldiv@sign
 22700  0B6B                     i1l4536:
 22701  0B6B  1FF3               	btfss	___aldiv@divisor+3,7
 22702  0B6C  2B6E               	goto	u289_21
 22703  0B6D  2B6F               	goto	u289_20
 22704  0B6E                     u289_21:
 22705  0B6E  2B7C               	goto	i1l1687
 22706  0B6F                     u289_20:
 22707  0B6F                     i1l4538:
 22708  0B6F  09F0               	comf	___aldiv@divisor,f
 22709  0B70  09F1               	comf	___aldiv@divisor+1,f
 22710  0B71  09F2               	comf	___aldiv@divisor+2,f
 22711  0B72  09F3               	comf	___aldiv@divisor+3,f
 22712  0B73  0AF0               	incf	___aldiv@divisor,f
 22713  0B74  1903               	skipnz
 22714  0B75  0AF1               	incf	___aldiv@divisor+1,f
 22715  0B76  1903               	skipnz
 22716  0B77  0AF2               	incf	___aldiv@divisor+2,f
 22717  0B78  1903               	skipnz
 22718  0B79  0AF3               	incf	___aldiv@divisor+3,f
 22719  0B7A  01A1               	clrf	___aldiv@sign
 22720  0B7B  0AA1               	incf	___aldiv@sign,f
 22721  0B7C                     i1l1687:
 22722  0B7C  1FF7               	btfss	___aldiv@dividend+3,7
 22723  0B7D  2B7F               	goto	u290_21
 22724  0B7E  2B80               	goto	u290_20
 22725  0B7F                     u290_21:
 22726  0B7F  2B8F               	goto	i1l4544
 22727  0B80                     u290_20:
 22728  0B80                     i1l4540:
 22729  0B80  09F4               	comf	___aldiv@dividend,f
 22730  0B81  09F5               	comf	___aldiv@dividend+1,f
 22731  0B82  09F6               	comf	___aldiv@dividend+2,f
 22732  0B83  09F7               	comf	___aldiv@dividend+3,f
 22733  0B84  0AF4               	incf	___aldiv@dividend,f
 22734  0B85  1903               	skipnz
 22735  0B86  0AF5               	incf	___aldiv@dividend+1,f
 22736  0B87  1903               	skipnz
 22737  0B88  0AF6               	incf	___aldiv@dividend+2,f
 22738  0B89  1903               	skipnz
 22739  0B8A  0AF7               	incf	___aldiv@dividend+3,f
 22740  0B8B                     i1l4542:
 22741  0B8B  3001               	movlw	1
 22742  0B8C  00F8               	movwf	??___aldiv
 22743  0B8D  0878               	movf	??___aldiv,w
 22744  0B8E  06A1               	xorwf	___aldiv@sign,f
 22745  0B8F                     i1l4544:
 22746  0B8F  3000               	movlw	0
 22747  0B90  00A5               	movwf	___aldiv@quotient+3
 22748  0B91  3000               	movlw	0
 22749  0B92  00A4               	movwf	___aldiv@quotient+2
 22750  0B93  3000               	movlw	0
 22751  0B94  00A3               	movwf	___aldiv@quotient+1
 22752  0B95  3000               	movlw	0
 22753  0B96  00A2               	movwf	___aldiv@quotient
 22754  0B97                     i1l4546:
 22755  0B97  0873               	movf	___aldiv@divisor+3,w
 22756  0B98  0472               	iorwf	___aldiv@divisor+2,w
 22757  0B99  0471               	iorwf	___aldiv@divisor+1,w
 22758  0B9A  0470               	iorwf	___aldiv@divisor,w
 22759  0B9B  1903               	skipnz
 22760  0B9C  2B9E               	goto	u291_21
 22761  0B9D  2B9F               	goto	u291_20
 22762  0B9E                     u291_21:
 22763  0B9E  2BE0               	goto	i1l4566
 22764  0B9F                     u291_20:
 22765  0B9F                     i1l4548:
 22766  0B9F  01A0               	clrf	___aldiv@counter
 22767  0BA0  0AA0               	incf	___aldiv@counter,f
 22768  0BA1  2BAD               	goto	i1l4552
 22769  0BA2                     i1l4550:
 22770  0BA2  3001               	movlw	1
 22771  0BA3                     u292_25:
 22772  0BA3  35F0               	lslf	___aldiv@divisor,f
 22773  0BA4  0DF1               	rlf	___aldiv@divisor+1,f
 22774  0BA5  0DF2               	rlf	___aldiv@divisor+2,f
 22775  0BA6  0DF3               	rlf	___aldiv@divisor+3,f
 22776  0BA7  0B89               	decfsz	9,f
 22777  0BA8  2BA3               	goto	u292_25
 22778  0BA9  3001               	movlw	1
 22779  0BAA  00F8               	movwf	??___aldiv
 22780  0BAB  0878               	movf	??___aldiv,w
 22781  0BAC  07A0               	addwf	___aldiv@counter,f
 22782  0BAD                     i1l4552:
 22783  0BAD  1FF3               	btfss	___aldiv@divisor+3,7
 22784  0BAE  2BB0               	goto	u293_21
 22785  0BAF  2BB1               	goto	u293_20
 22786  0BB0                     u293_21:
 22787  0BB0  2BA2               	goto	i1l4550
 22788  0BB1                     u293_20:
 22789  0BB1                     i1l4554:
 22790  0BB1  3001               	movlw	1
 22791  0BB2                     u294_25:
 22792  0BB2  35A2               	lslf	___aldiv@quotient,f
 22793  0BB3  0DA3               	rlf	___aldiv@quotient+1,f
 22794  0BB4  0DA4               	rlf	___aldiv@quotient+2,f
 22795  0BB5  0DA5               	rlf	___aldiv@quotient+3,f
 22796  0BB6  0B89               	decfsz	9,f
 22797  0BB7  2BB2               	goto	u294_25
 22798  0BB8                     i1l4556:
 22799  0BB8  0873               	movf	___aldiv@divisor+3,w
 22800  0BB9  0277               	subwf	___aldiv@dividend+3,w
 22801  0BBA  1D03               	skipz
 22802  0BBB  2BC6               	goto	u295_25
 22803  0BBC  0872               	movf	___aldiv@divisor+2,w
 22804  0BBD  0276               	subwf	___aldiv@dividend+2,w
 22805  0BBE  1D03               	skipz
 22806  0BBF  2BC6               	goto	u295_25
 22807  0BC0  0871               	movf	___aldiv@divisor+1,w
 22808  0BC1  0275               	subwf	___aldiv@dividend+1,w
 22809  0BC2  1D03               	skipz
 22810  0BC3  2BC6               	goto	u295_25
 22811  0BC4  0870               	movf	___aldiv@divisor,w
 22812  0BC5  0274               	subwf	___aldiv@dividend,w
 22813  0BC6                     u295_25:
 22814  0BC6  1C03               	skipc
 22815  0BC7  2BC9               	goto	u295_21
 22816  0BC8  2BCA               	goto	u295_20
 22817  0BC9                     u295_21:
 22818  0BC9  2BD3               	goto	i1l4562
 22819  0BCA                     u295_20:
 22820  0BCA                     i1l4558:
 22821  0BCA  0870               	movf	___aldiv@divisor,w
 22822  0BCB  02F4               	subwf	___aldiv@dividend,f
 22823  0BCC  0871               	movf	___aldiv@divisor+1,w
 22824  0BCD  3BF5               	subwfb	___aldiv@dividend+1,f
 22825  0BCE  0872               	movf	___aldiv@divisor+2,w
 22826  0BCF  3BF6               	subwfb	___aldiv@dividend+2,f
 22827  0BD0  0873               	movf	___aldiv@divisor+3,w
 22828  0BD1  3BF7               	subwfb	___aldiv@dividend+3,f
 22829  0BD2                     i1l4560:
 22830  0BD2  1422               	bsf	___aldiv@quotient,0
 22831  0BD3                     i1l4562:
 22832  0BD3  3001               	movlw	1
 22833  0BD4                     u296_25:
 22834  0BD4  36F3               	lsrf	___aldiv@divisor+3,f
 22835  0BD5  0CF2               	rrf	___aldiv@divisor+2,f
 22836  0BD6  0CF1               	rrf	___aldiv@divisor+1,f
 22837  0BD7  0CF0               	rrf	___aldiv@divisor,f
 22838  0BD8  0B89               	decfsz	9,f
 22839  0BD9  2BD4               	goto	u296_25
 22840  0BDA                     i1l4564:
 22841  0BDA  3001               	movlw	1
 22842  0BDB  02A0               	subwf	___aldiv@counter,f
 22843  0BDC  1D03               	btfss	3,2
 22844  0BDD  2BDF               	goto	u297_21
 22845  0BDE  2BE0               	goto	u297_20
 22846  0BDF                     u297_21:
 22847  0BDF  2BB1               	goto	i1l4554
 22848  0BE0                     u297_20:
 22849  0BE0                     i1l4566:
 22850  0BE0  0821               	movf	___aldiv@sign,w
 22851  0BE1  1903               	btfsc	3,2
 22852  0BE2  2BE4               	goto	u298_21
 22853  0BE3  2BE5               	goto	u298_20
 22854  0BE4                     u298_21:
 22855  0BE4  2BF0               	goto	i1l4570
 22856  0BE5                     u298_20:
 22857  0BE5                     i1l4568:
 22858  0BE5  09A2               	comf	___aldiv@quotient,f
 22859  0BE6  09A3               	comf	___aldiv@quotient+1,f
 22860  0BE7  09A4               	comf	___aldiv@quotient+2,f
 22861  0BE8  09A5               	comf	___aldiv@quotient+3,f
 22862  0BE9  0AA2               	incf	___aldiv@quotient,f
 22863  0BEA  1903               	skipnz
 22864  0BEB  0AA3               	incf	___aldiv@quotient+1,f
 22865  0BEC  1903               	skipnz
 22866  0BED  0AA4               	incf	___aldiv@quotient+2,f
 22867  0BEE  1903               	skipnz
 22868  0BEF  0AA5               	incf	___aldiv@quotient+3,f
 22869  0BF0                     i1l4570:
 22870  0BF0  0825               	movf	___aldiv@quotient+3,w
 22871  0BF1  00F3               	movwf	?___aldiv+3
 22872  0BF2  0824               	movf	___aldiv@quotient+2,w
 22873  0BF3  00F2               	movwf	?___aldiv+2
 22874  0BF4  0823               	movf	___aldiv@quotient+1,w
 22875  0BF5  00F1               	movwf	?___aldiv+1
 22876  0BF6  0822               	movf	___aldiv@quotient,w
 22877  0BF7  00F0               	movwf	?___aldiv
 22878  0BF8                     i1l1697:
 22879  0BF8  0008               	return
 22880  0BF9                     __end_of___aldiv:
 22881                           
 22882                           	psect	text122
 22883  1268                     __ptext122:	
 22884 ;; *************** function ___lmul *****************
 22885 ;; Defined at:
 22886 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul32.c"
 22887 ;; Parameters:    Size  Location     Type
 22888 ;;  multiplier      4    0[COMMON] unsigned long 
 22889 ;;  multiplicand    4    4[COMMON] unsigned long 
 22890 ;; Auto vars:     Size  Location     Type
 22891 ;;  product         4    8[COMMON] unsigned long 
 22892 ;; Return value:  Size  Location     Type
 22893 ;;                  4    0[COMMON] unsigned long 
 22894 ;; Registers used:
 22895 ;;		wreg, status,2, status,0
 22896 ;; Tracked objects:
 22897 ;;		On entry : 0/0
 22898 ;;		On exit  : 0/0
 22899 ;;		Unchanged: 0/0
 22900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22901 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22902 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22904 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22905 ;;Total ram usage:       12 bytes
 22906 ;; Hardware stack levels used:    1
 22907 ;; This function calls:
 22908 ;;		Nothing
 22909 ;; This function is called by:
 22910 ;;		_readPotJoystick
 22911 ;; This function uses a non-reentrant model
 22912 ;;
 22913                           
 22914                           
 22915                           ;psect for function ___lmul
 22916  1268                     ___lmul:
 22917  1268                     i1l4776:	
 22918                           ;incstack = 0
 22919                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 22920                           
 22921  1268  3000               	movlw	0
 22922  1269  00FB               	movwf	___lmul@product+3
 22923  126A  3000               	movlw	0
 22924  126B  00FA               	movwf	___lmul@product+2
 22925  126C  3000               	movlw	0
 22926  126D  00F9               	movwf	___lmul@product+1
 22927  126E  3000               	movlw	0
 22928  126F  00F8               	movwf	___lmul@product
 22929  1270                     i1l4778:
 22930  1270  1C70               	btfss	___lmul@multiplier,0
 22931  1271  2A73               	goto	u332_21
 22932  1272  2A74               	goto	u332_20
 22933  1273                     u332_21:
 22934  1273  2A7C               	goto	i1l4782
 22935  1274                     u332_20:
 22936  1274                     i1l4780:
 22937  1274  0874               	movf	___lmul@multiplicand,w
 22938  1275  07F8               	addwf	___lmul@product,f
 22939  1276  0875               	movf	___lmul@multiplicand+1,w
 22940  1277  3DF9               	addwfc	___lmul@product+1,f
 22941  1278  0876               	movf	___lmul@multiplicand+2,w
 22942  1279  3DFA               	addwfc	___lmul@product+2,f
 22943  127A  0877               	movf	___lmul@multiplicand+3,w
 22944  127B  3DFB               	addwfc	___lmul@product+3,f
 22945  127C                     i1l4782:
 22946  127C  3001               	movlw	1
 22947  127D                     u333_25:
 22948  127D  35F4               	lslf	___lmul@multiplicand,f
 22949  127E  0DF5               	rlf	___lmul@multiplicand+1,f
 22950  127F  0DF6               	rlf	___lmul@multiplicand+2,f
 22951  1280  0DF7               	rlf	___lmul@multiplicand+3,f
 22952  1281  0B89               	decfsz	9,f
 22953  1282  2A7D               	goto	u333_25
 22954  1283                     i1l4784:
 22955  1283  3001               	movlw	1
 22956  1284                     u334_25:
 22957  1284  36F3               	lsrf	___lmul@multiplier+3,f
 22958  1285  0CF2               	rrf	___lmul@multiplier+2,f
 22959  1286  0CF1               	rrf	___lmul@multiplier+1,f
 22960  1287  0CF0               	rrf	___lmul@multiplier,f
 22961  1288  0B89               	decfsz	9,f
 22962  1289  2A84               	goto	u334_25
 22963  128A  0873               	movf	___lmul@multiplier+3,w
 22964  128B  0472               	iorwf	___lmul@multiplier+2,w
 22965  128C  0471               	iorwf	___lmul@multiplier+1,w
 22966  128D  0470               	iorwf	___lmul@multiplier,w
 22967  128E  1D03               	skipz
 22968  128F  2A91               	goto	u335_21
 22969  1290  2A92               	goto	u335_20
 22970  1291                     u335_21:
 22971  1291  2A70               	goto	i1l4778
 22972  1292                     u335_20:
 22973  1292                     i1l4786:
 22974  1292  087B               	movf	___lmul@product+3,w
 22975  1293  00F3               	movwf	?___lmul+3
 22976  1294  087A               	movf	___lmul@product+2,w
 22977  1295  00F2               	movwf	?___lmul+2
 22978  1296  0879               	movf	___lmul@product+1,w
 22979  1297  00F1               	movwf	?___lmul+1
 22980  1298  0878               	movf	___lmul@product,w
 22981  1299  00F0               	movwf	?___lmul
 22982  129A                     i1l1636:
 22983  129A  0008               	return
 22984  129B                     __end_of___lmul:
 22985                           
 22986                           	psect	text123
 22987  0DDA                     __ptext123:	
 22988 ;; *************** function _readButtonJoystick *****************
 22989 ;; Defined at:
 22990 ;;		line 190 in file "joystick.c"
 22991 ;; Parameters:    Size  Location     Type
 22992 ;;		None
 22993 ;; Auto vars:     Size  Location     Type
 22994 ;;		None
 22995 ;; Return value:  Size  Location     Type
 22996 ;;                  1    wreg      void 
 22997 ;; Registers used:
 22998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22999 ;; Tracked objects:
 23000 ;;		On entry : 0/0
 23001 ;;		On exit  : 0/0
 23002 ;;		Unchanged: 0/0
 23003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23006 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23007 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23008 ;;Total ram usage:        4 bytes
 23009 ;; Hardware stack levels used:    1
 23010 ;; Hardware stack levels required when called:    3
 23011 ;; This function calls:
 23012 ;;		_calculateMotion
 23013 ;;		i1_sendBTSpeedCmd
 23014 ;; This function is called by:
 23015 ;;		_readJoystick
 23016 ;; This function uses a non-reentrant model
 23017 ;;
 23018                           
 23019                           
 23020                           ;psect for function _readButtonJoystick
 23021  0DDA                     _readButtonJoystick:
 23022  0DDA                     i1l4934:	
 23023                           ;incstack = 0
 23024                           ; Regs used in _readButtonJoystick: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23025                           
 23026                           
 23027                           ;joystick.c: 192:     accelAxialFP = accelLimitAxialFP;
 23028  0DDA  0141               	movlb	1	; select bank1
 23029  0DDB  0863               	movf	(_accelLimitAxialFP+1)^(0+128),w
 23030  0DDC  00C1               	movwf	(_accelAxialFP+1)^(0+128)
 23031  0DDD  0862               	movf	_accelLimitAxialFP^(0+128),w
 23032  0DDE  00C0               	movwf	_accelAxialFP^(0+128)
 23033                           
 23034                           ;joystick.c: 193:     accelYawFP = accelLimitYawFP;
 23035  0DDF  085F               	movf	(_accelLimitYawFP+1)^(0+128),w
 23036  0DE0  00BF               	movwf	(_accelYawFP+1)^(0+128)
 23037  0DE1  085E               	movf	_accelLimitYawFP^(0+128),w
 23038  0DE2  00BE               	movwf	_accelYawFP^(0+128)
 23039  0DE3                     i1l4936:
 23040                           
 23041                           ;joystick.c: 196:     if (PORTCbits.RC0 == 0)
 23042  0DE3  0140               	movlb	0	; select bank0
 23043  0DE4  180E               	btfsc	14,0	;volatile
 23044  0DE5  2DE7               	goto	u357_21
 23045  0DE6  2DE8               	goto	u357_20
 23046  0DE7                     u357_21:
 23047  0DE7  2DF1               	goto	i1l925
 23048  0DE8                     u357_20:
 23049  0DE8                     i1l4938:
 23050                           
 23051                           ;joystick.c: 197:         targetAxialFP = topAxialSpeedFP;
 23052  0DE8  0141               	movlb	1	; select bank1
 23053  0DE9  083D               	movf	(_topAxialSpeedFP+1)^(0+128),w
 23054  0DEA  0140               	movlb	0	; select bank0
 23055  0DEB  00C2               	movwf	_targetAxialFP+1
 23056  0DEC  0141               	movlb	1	; select bank1
 23057  0DED  083C               	movf	_topAxialSpeedFP^(0+128),w
 23058  0DEE  0140               	movlb	0	; select bank0
 23059  0DEF  00C1               	movwf	_targetAxialFP
 23060  0DF0  2E0D               	goto	i1l4946
 23061  0DF1                     i1l925:	
 23062                           ;joystick.c: 198:     else if (PORTAbits.RA2 == 0)
 23063                           
 23064  0DF1  190C               	btfsc	12,2	;volatile
 23065  0DF2  2DF4               	goto	u358_21
 23066  0DF3  2DF5               	goto	u358_20
 23067  0DF4                     u358_21:
 23068  0DF4  2E05               	goto	i1l4942
 23069  0DF5                     u358_20:
 23070  0DF5                     i1l4940:
 23071                           
 23072                           ;joystick.c: 199:         targetAxialFP = -topAxialSpeedFP;
 23073  0DF5  0141               	movlb	1	; select bank1
 23074  0DF6  093C               	comf	_topAxialSpeedFP^(0+128),w
 23075  0DF7  0140               	movlb	0	; select bank0
 23076  0DF8  00AD               	movwf	??_readButtonJoystick
 23077  0DF9  0141               	movlb	1	; select bank1
 23078  0DFA  093D               	comf	(_topAxialSpeedFP+1)^(0+128),w
 23079  0DFB  0140               	movlb	0	; select bank0
 23080  0DFC  00AE               	movwf	??_readButtonJoystick+1
 23081  0DFD  0AAD               	incf	??_readButtonJoystick,f
 23082  0DFE  1903               	skipnz
 23083  0DFF  0AAE               	incf	??_readButtonJoystick+1,f
 23084  0E00  082D               	movf	??_readButtonJoystick,w
 23085  0E01  00C1               	movwf	_targetAxialFP
 23086  0E02  082E               	movf	??_readButtonJoystick+1,w
 23087  0E03  00C2               	movwf	_targetAxialFP+1
 23088  0E04  2E0D               	goto	i1l4946
 23089  0E05                     i1l4942:
 23090                           
 23091                           ;joystick.c: 201:         accelAxialFP = accelLimitAxialStopFP;
 23092  0E05  0141               	movlb	1	; select bank1
 23093  0E06  0861               	movf	(_accelLimitAxialStopFP+1)^(0+128),w
 23094  0E07  00C1               	movwf	(_accelAxialFP+1)^(0+128)
 23095  0E08  0860               	movf	_accelLimitAxialStopFP^(0+128),w
 23096  0E09  00C0               	movwf	_accelAxialFP^(0+128)
 23097  0E0A                     i1l4944:
 23098                           
 23099                           ;joystick.c: 202:         targetAxialFP = 0;
 23100  0E0A  0140               	movlb	0	; select bank0
 23101  0E0B  01C1               	clrf	_targetAxialFP
 23102  0E0C  01C2               	clrf	_targetAxialFP+1
 23103  0E0D                     i1l4946:
 23104                           
 23105                           ;joystick.c: 205:     if (PORTCbits.RC1 == 0){
 23106  0E0D  188E               	btfsc	14,1	;volatile
 23107  0E0E  2E10               	goto	u359_21
 23108  0E0F  2E11               	goto	u359_20
 23109  0E10                     u359_21:
 23110  0E10  2E27               	goto	i1l929
 23111  0E11                     u359_20:
 23112  0E11                     i1l4948:
 23113                           
 23114                           ;joystick.c: 206:         if (targetAxialFP == 0) {
 23115  0E11  0841               	movf	_targetAxialFP,w
 23116  0E12  0442               	iorwf	_targetAxialFP+1,w
 23117  0E13  1D03               	btfss	3,2
 23118  0E14  2E16               	goto	u360_21
 23119  0E15  2E17               	goto	u360_20
 23120  0E16                     u360_21:
 23121  0E16  2E1D               	goto	i1l4952
 23122  0E17                     u360_20:
 23123  0E17                     i1l4950:
 23124                           
 23125                           ;joystick.c: 207:             targetYawFP = topYawSpeedFP;
 23126  0E17  0141               	movlb	1	; select bank1
 23127  0E18  083B               	movf	(_topYawSpeedFP+1)^(0+128),w
 23128  0E19  00C5               	movwf	(_targetYawFP+1)^(0+128)
 23129  0E1A  083A               	movf	_topYawSpeedFP^(0+128),w
 23130  0E1B  00C4               	movwf	_targetYawFP^(0+128)
 23131                           
 23132                           ;joystick.c: 208:         }
 23133  0E1C  2E62               	goto	i1l4966
 23134  0E1D                     i1l4952:
 23135                           
 23136                           ;joystick.c: 210:             targetYawFP = topSweepSpeedFP;
 23137  0E1D  0141               	movlb	1	; select bank1
 23138  0E1E  0839               	movf	(_topSweepSpeedFP+1)^(0+128),w
 23139  0E1F  00C5               	movwf	(_targetYawFP+1)^(0+128)
 23140  0E20  0838               	movf	_topSweepSpeedFP^(0+128),w
 23141  0E21  00C4               	movwf	_targetYawFP^(0+128)
 23142                           
 23143                           ;joystick.c: 211:             accelYawFP = accelLimitSweepFP;
 23144  0E22  085B               	movf	(_accelLimitSweepFP+1)^(0+128),w
 23145  0E23  00BF               	movwf	(_accelYawFP+1)^(0+128)
 23146  0E24  085A               	movf	_accelLimitSweepFP^(0+128),w
 23147  0E25  00BE               	movwf	_accelYawFP^(0+128)
 23148  0E26  2E62               	goto	i1l4966
 23149  0E27                     i1l929:	
 23150                           ;joystick.c: 214:     else if (PORTAbits.RA1 == 0){
 23151                           
 23152  0E27  188C               	btfsc	12,1	;volatile
 23153  0E28  2E2A               	goto	u361_21
 23154  0E29  2E2B               	goto	u361_20
 23155  0E2A                     u361_21:
 23156  0E2A  2E5B               	goto	i1l4962
 23157  0E2B                     u361_20:
 23158  0E2B                     i1l4954:
 23159                           
 23160                           ;joystick.c: 215:         if (targetAxialFP == 0) {
 23161  0E2B  0841               	movf	_targetAxialFP,w
 23162  0E2C  0442               	iorwf	_targetAxialFP+1,w
 23163  0E2D  1D03               	btfss	3,2
 23164  0E2E  2E30               	goto	u362_21
 23165  0E2F  2E31               	goto	u362_20
 23166  0E30                     u362_21:
 23167  0E30  2E44               	goto	i1l4958
 23168  0E31                     u362_20:
 23169  0E31                     i1l4956:
 23170                           
 23171                           ;joystick.c: 216:             targetYawFP = -topYawSpeedFP;
 23172  0E31  0141               	movlb	1	; select bank1
 23173  0E32  093A               	comf	_topYawSpeedFP^(0+128),w
 23174  0E33  0140               	movlb	0	; select bank0
 23175  0E34  00AD               	movwf	??_readButtonJoystick
 23176  0E35  0141               	movlb	1	; select bank1
 23177  0E36  093B               	comf	(_topYawSpeedFP+1)^(0+128),w
 23178  0E37  0140               	movlb	0	; select bank0
 23179  0E38  00AE               	movwf	??_readButtonJoystick+1
 23180  0E39  0AAD               	incf	??_readButtonJoystick,f
 23181  0E3A  1903               	skipnz
 23182  0E3B  0AAE               	incf	??_readButtonJoystick+1,f
 23183  0E3C  082D               	movf	??_readButtonJoystick,w
 23184  0E3D  0141               	movlb	1	; select bank1
 23185  0E3E  00C4               	movwf	_targetYawFP^(0+128)
 23186  0E3F  0140               	movlb	0	; select bank0
 23187  0E40  082E               	movf	??_readButtonJoystick+1,w
 23188  0E41  0141               	movlb	1	; select bank1
 23189  0E42  00C5               	movwf	(_targetYawFP+1)^(0+128)
 23190                           
 23191                           ;joystick.c: 217:         }
 23192  0E43  2E62               	goto	i1l4966
 23193  0E44                     i1l4958:
 23194                           
 23195                           ;joystick.c: 219:             targetYawFP = -topSweepSpeedFP;
 23196  0E44  0141               	movlb	1	; select bank1
 23197  0E45  0938               	comf	_topSweepSpeedFP^(0+128),w
 23198  0E46  0140               	movlb	0	; select bank0
 23199  0E47  00AD               	movwf	??_readButtonJoystick
 23200  0E48  0141               	movlb	1	; select bank1
 23201  0E49  0939               	comf	(_topSweepSpeedFP+1)^(0+128),w
 23202  0E4A  0140               	movlb	0	; select bank0
 23203  0E4B  00AE               	movwf	??_readButtonJoystick+1
 23204  0E4C  0AAD               	incf	??_readButtonJoystick,f
 23205  0E4D  1903               	skipnz
 23206  0E4E  0AAE               	incf	??_readButtonJoystick+1,f
 23207  0E4F  082D               	movf	??_readButtonJoystick,w
 23208  0E50  0141               	movlb	1	; select bank1
 23209  0E51  00C4               	movwf	_targetYawFP^(0+128)
 23210  0E52  0140               	movlb	0	; select bank0
 23211  0E53  082E               	movf	??_readButtonJoystick+1,w
 23212  0E54  0141               	movlb	1	; select bank1
 23213  0E55  00C5               	movwf	(_targetYawFP+1)^(0+128)
 23214  0E56                     i1l4960:
 23215                           
 23216                           ;joystick.c: 220:             accelYawFP = accelLimitSweepFP;
 23217  0E56  085B               	movf	(_accelLimitSweepFP+1)^(0+128),w
 23218  0E57  00BF               	movwf	(_accelYawFP+1)^(0+128)
 23219  0E58  085A               	movf	_accelLimitSweepFP^(0+128),w
 23220  0E59  00BE               	movwf	_accelYawFP^(0+128)
 23221  0E5A  2E62               	goto	i1l4966
 23222  0E5B                     i1l4962:
 23223                           
 23224                           ;joystick.c: 224:         targetYawFP = 0;
 23225  0E5B  0141               	movlb	1	; select bank1
 23226  0E5C  01C4               	clrf	_targetYawFP^(0+128)
 23227  0E5D  01C5               	clrf	(_targetYawFP+1)^(0+128)
 23228  0E5E                     i1l4964:
 23229                           
 23230                           ;joystick.c: 225:         accelYawFP = accelLimitYawStopFP;
 23231  0E5E  085D               	movf	(_accelLimitYawStopFP+1)^(0+128),w
 23232  0E5F  00BF               	movwf	(_accelYawFP+1)^(0+128)
 23233  0E60  085C               	movf	_accelLimitYawStopFP^(0+128),w
 23234  0E61  00BE               	movwf	_accelYawFP^(0+128)
 23235  0E62                     i1l4966:
 23236                           
 23237                           ;joystick.c: 229:     calculateMotion();
 23238  0E62  3190  206A  318D   	fcall	_calculateMotion
 23239  0E65                     i1l4968:
 23240                           
 23241                           ;joystick.c: 230:     sendBTSpeedCmd(limitedAxialFP >> 2, limitedYawFP >> 2, 0);
 23242  0E65  0140               	movlb	0	; select bank0
 23243  0E66  0840               	movf	_limitedAxialFP+1,w
 23244  0E67  00AE               	movwf	??_readButtonJoystick+1
 23245  0E68  083F               	movf	_limitedAxialFP,w
 23246  0E69  00AD               	movwf	??_readButtonJoystick
 23247  0E6A  0D2E               	rlf	??_readButtonJoystick+1,w
 23248  0E6B  0CAE               	rrf	??_readButtonJoystick+1,f
 23249  0E6C  0CAD               	rrf	??_readButtonJoystick,f
 23250  0E6D  0D2E               	rlf	??_readButtonJoystick+1,w
 23251  0E6E  0CAE               	rrf	??_readButtonJoystick+1,f
 23252  0E6F  0CAD               	rrf	??_readButtonJoystick,f
 23253  0E70  082D               	movf	??_readButtonJoystick,w
 23254  0E71  00A6               	movwf	i1sendBTSpeedCmd@axial
 23255  0E72  082E               	movf	??_readButtonJoystick+1,w
 23256  0E73  00A7               	movwf	i1sendBTSpeedCmd@axial+1
 23257  0E74  0141               	movlb	1	; select bank1
 23258  0E75  0843               	movf	(_limitedYawFP+1)^(0+128),w
 23259  0E76  0140               	movlb	0	; select bank0
 23260  0E77  00B0               	movwf	??_readButtonJoystick+3
 23261  0E78  0141               	movlb	1	; select bank1
 23262  0E79  0842               	movf	_limitedYawFP^(0+128),w
 23263  0E7A  0140               	movlb	0	; select bank0
 23264  0E7B  00AF               	movwf	??_readButtonJoystick+2
 23265  0E7C  0D30               	rlf	??_readButtonJoystick+3,w
 23266  0E7D  0CB0               	rrf	??_readButtonJoystick+3,f
 23267  0E7E  0CAF               	rrf	??_readButtonJoystick+2,f
 23268  0E7F  0D30               	rlf	??_readButtonJoystick+3,w
 23269  0E80  0CB0               	rrf	??_readButtonJoystick+3,f
 23270  0E81  0CAF               	rrf	??_readButtonJoystick+2,f
 23271  0E82  082F               	movf	??_readButtonJoystick+2,w
 23272  0E83  00A8               	movwf	i1sendBTSpeedCmd@yaw
 23273  0E84  0830               	movf	??_readButtonJoystick+3,w
 23274  0E85  00A9               	movwf	i1sendBTSpeedCmd@yaw+1
 23275  0E86  01AA               	clrf	i1sendBTSpeedCmd@blockIfBusy
 23276  0E87  318B  23F9  318D   	fcall	i1_sendBTSpeedCmd
 23277  0E8A                     i1l937:
 23278  0E8A  0008               	return
 23279  0E8B                     __end_of_readButtonJoystick:
 23280                           
 23281                           	psect	text124
 23282  0BF9                     __ptext124:	
 23283 ;; *************** function i1_sendBTSpeedCmd *****************
 23284 ;; Defined at:
 23285 ;;		line 35 in file "serial.c"
 23286 ;; Parameters:    Size  Location     Type
 23287 ;;  axial           2    6[BANK0 ] short 
 23288 ;;  yaw             2    8[BANK0 ] short 
 23289 ;;  blockIfBusy     1   10[BANK0 ] _Bool 
 23290 ;; Auto vars:     Size  Location     Type
 23291 ;;		None
 23292 ;; Return value:  Size  Location     Type
 23293 ;;                  1    wreg      _Bool 
 23294 ;; Registers used:
 23295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23296 ;; Tracked objects:
 23297 ;;		On entry : 0/0
 23298 ;;		On exit  : 0/0
 23299 ;;		Unchanged: 0/0
 23300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23301 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23303 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23304 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23305 ;;Total ram usage:        7 bytes
 23306 ;; Hardware stack levels used:    1
 23307 ;; Hardware stack levels required when called:    2
 23308 ;; This function calls:
 23309 ;;		i1_calcCRC
 23310 ;;		i1_clampInt
 23311 ;;		i1_int16ToBytes
 23312 ;;		i1_int16cat
 23313 ;;		i1_sendBTBuffer
 23314 ;;		i1_strcat
 23315 ;;		i1_strlen
 23316 ;; This function is called by:
 23317 ;;		_readButtonJoystick
 23318 ;;		_readPotJoystick
 23319 ;;		i1_stopMotion
 23320 ;; This function uses a non-reentrant model
 23321 ;;
 23322                           
 23323                           
 23324                           ;psect for function i1_sendBTSpeedCmd
 23325  0BF9                     i1_sendBTSpeedCmd:
 23326  0BF9                     i1l4888:	
 23327                           ;incstack = 0
 23328                           ; Regs used in i1_sendBTSpeedCmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23329                           
 23330                           
 23331                           ;serial.c: 36:     axial = clampInt(axial, 5000);
 23332  0BF9  0140               	movlb	0	; select bank0
 23333  0BFA  0827               	movf	i1sendBTSpeedCmd@axial+1,w
 23334  0BFB  00F1               	movwf	i1clampInt@num+1
 23335  0BFC  0826               	movf	i1sendBTSpeedCmd@axial,w
 23336  0BFD  00F0               	movwf	i1clampInt@num
 23337  0BFE  3088               	movlw	136
 23338  0BFF  00F2               	movwf	i1clampInt@limit
 23339  0C00  3013               	movlw	19
 23340  0C01  00F3               	movwf	i1clampInt@limit+1
 23341  0C02  3192  229B  318B   	fcall	i1_clampInt
 23342  0C05  0871               	movf	?i1_clampInt+1,w
 23343  0C06  0140               	movlb	0	; select bank0
 23344  0C07  00A7               	movwf	i1sendBTSpeedCmd@axial+1
 23345  0C08  0870               	movf	?i1_clampInt,w
 23346  0C09  00A6               	movwf	i1sendBTSpeedCmd@axial
 23347                           
 23348                           ;serial.c: 37:     yaw = clampInt(yaw, 5000);
 23349  0C0A  0829               	movf	i1sendBTSpeedCmd@yaw+1,w
 23350  0C0B  00F1               	movwf	i1clampInt@num+1
 23351  0C0C  0828               	movf	i1sendBTSpeedCmd@yaw,w
 23352  0C0D  00F0               	movwf	i1clampInt@num
 23353  0C0E  3088               	movlw	136
 23354  0C0F  00F2               	movwf	i1clampInt@limit
 23355  0C10  3013               	movlw	19
 23356  0C11  00F3               	movwf	i1clampInt@limit+1
 23357  0C12  3192  229B  318B   	fcall	i1_clampInt
 23358  0C15  0871               	movf	?i1_clampInt+1,w
 23359  0C16  0140               	movlb	0	; select bank0
 23360  0C17  00A9               	movwf	i1sendBTSpeedCmd@yaw+1
 23361  0C18  0870               	movf	?i1_clampInt,w
 23362  0C19  00A8               	movwf	i1sendBTSpeedCmd@yaw
 23363  0C1A                     i1l4890:
 23364                           
 23365                           ;serial.c: 40:     if (sendDebugText){
 23366  0C1A  0141               	movlb	1	; select bank1
 23367  0C1B  0848               	movf	_sendDebugText^(0+128),w
 23368  0C1C  1903               	btfsc	3,2
 23369  0C1D  2C1F               	goto	u355_21
 23370  0C1E  2C20               	goto	u355_20
 23371  0C1F                     u355_21:
 23372  0C1F  2C67               	goto	i1l4910
 23373  0C20                     u355_20:
 23374  0C20                     i1l4892:
 23375                           
 23376                           ;serial.c: 41:         debugBuffer[0] = 0;
 23377  0C20  0142               	movlb	2	; select bank2
 23378  0C21  01A8               	clrf	_debugBuffer^(0+256)
 23379  0C22                     i1l4894:
 23380                           
 23381                           ;serial.c: 42:         strcat(debugBuffer, "> ");
 23382  0C22  3061               	movlw	low (STR_1| (0+32768))
 23383  0C23  0140               	movlb	0	; select bank0
 23384  0C24  00A0               	movwf	i1strcat@src
 23385  0C25  30A0               	movlw	high (STR_1| (0+32768))
 23386  0C26  00A1               	movwf	i1strcat@src+1
 23387  0C27  3028               	movlw	(low (_debugBuffer| (0+256)))& (0+255)
 23388  0C28  319C  24AB  318B   	fcall	i1_strcat
 23389  0C2B                     i1l4896:
 23390                           
 23391                           ;serial.c: 43:         int16cat(debugBuffer, axial);
 23392  0C2B  0140               	movlb	0	; select bank0
 23393  0C2C  0827               	movf	i1sendBTSpeedCmd@axial+1,w
 23394  0C2D  00FA               	movwf	i1int16cat@num+1
 23395  0C2E  0826               	movf	i1sendBTSpeedCmd@axial,w
 23396  0C2F  00F9               	movwf	i1int16cat@num
 23397  0C30  3028               	movlw	(low (_debugBuffer| (0+256)))& (0+255)
 23398  0C31  318C  2494  318B   	fcall	i1_int16cat
 23399  0C34                     i1l4898:
 23400                           
 23401                           ;serial.c: 44:         strcat(debugBuffer, ",");
 23402  0C34  3064               	movlw	low (STR_2| (0+32768))
 23403  0C35  0140               	movlb	0	; select bank0
 23404  0C36  00A0               	movwf	i1strcat@src
 23405  0C37  30A0               	movlw	high (STR_2| (0+32768))
 23406  0C38  00A1               	movwf	i1strcat@src+1
 23407  0C39  3028               	movlw	(low (_debugBuffer| (0+256)))& (0+255)
 23408  0C3A  319C  24AB  318B   	fcall	i1_strcat
 23409  0C3D                     i1l4900:
 23410                           
 23411                           ;serial.c: 45:         int16cat(debugBuffer, yaw);
 23412  0C3D  0140               	movlb	0	; select bank0
 23413  0C3E  0829               	movf	i1sendBTSpeedCmd@yaw+1,w
 23414  0C3F  00FA               	movwf	i1int16cat@num+1
 23415  0C40  0828               	movf	i1sendBTSpeedCmd@yaw,w
 23416  0C41  00F9               	movwf	i1int16cat@num
 23417  0C42  3028               	movlw	(low (_debugBuffer| (0+256)))& (0+255)
 23418  0C43  318C  2494  318B   	fcall	i1_int16cat
 23419  0C46                     i1l4902:
 23420                           
 23421                           ;serial.c: 46:         strcat(debugBuffer, "\n");
 23422  0C46  3053               	movlw	low ((STR_4+4)| (0+32768))
 23423  0C47  0140               	movlb	0	; select bank0
 23424  0C48  00A0               	movwf	i1strcat@src
 23425  0C49  30A0               	movlw	high ((STR_4+4)| (0+32768))
 23426  0C4A  00A1               	movwf	i1strcat@src+1
 23427  0C4B  3028               	movlw	(low (_debugBuffer| (0+256)))& (0+255)
 23428  0C4C  319C  24AB  318B   	fcall	i1_strcat
 23429  0C4F                     i1l4904:
 23430                           
 23431                           ;serial.c: 48:         return sendBTBuffer((void *)debugBuffer, strlen(debugBuffer), blo
      +                          ckIfBusy);;	Return value of i1_sendBTSpeedCmd is never used
 23432  0C4F  3028               	movlw	low _debugBuffer
 23433  0C50  00F5               	movwf	i1sendBTBuffer@buffer
 23434  0C51  3001               	movlw	high _debugBuffer
 23435  0C52  00F6               	movwf	i1sendBTBuffer@buffer+1
 23436  0C53  3028               	movlw	low _debugBuffer
 23437  0C54  00F0               	movwf	i1strlen@s
 23438  0C55  3001               	movlw	high _debugBuffer
 23439  0C56  00F1               	movwf	i1strlen@s+1
 23440  0C57  319C  24C3  318B   	fcall	i1_strlen
 23441  0C5A  0870               	movf	?i1_strlen,w
 23442  0C5B  0140               	movlb	0	; select bank0
 23443  0C5C  00AB               	movwf	??i1_sendBTSpeedCmd
 23444  0C5D  082B               	movf	??i1_sendBTSpeedCmd,w
 23445  0C5E  00F7               	movwf	i1sendBTBuffer@length
 23446  0C5F  082A               	movf	i1sendBTSpeedCmd@blockIfBusy,w
 23447  0C60  00AC               	movwf	??i1_sendBTSpeedCmd+1
 23448  0C61  082C               	movf	??i1_sendBTSpeedCmd+1,w
 23449  0C62  00F8               	movwf	i1sendBTBuffer@blockIfBusy
 23450  0C63  3190  2096  318B   	fcall	i1_sendBTBuffer
 23451  0C66  2C93               	goto	i1l1007
 23452  0C67                     i1l4910:
 23453                           
 23454                           ;serial.c: 50:         int16ToBytes(axial, speedBuffer + 5);
 23455  0C67  0140               	movlb	0	; select bank0
 23456  0C68  0827               	movf	i1sendBTSpeedCmd@axial+1,w
 23457  0C69  00F1               	movwf	i1int16ToBytes@num+1
 23458  0C6A  0826               	movf	i1sendBTSpeedCmd@axial,w
 23459  0C6B  00F0               	movwf	i1int16ToBytes@num
 23460  0C6C  3055               	movlw	(low ((_speedBuffer| (0+256)+5)))& (0+255)
 23461  0C6D  00AB               	movwf	??i1_sendBTSpeedCmd
 23462  0C6E  082B               	movf	??i1_sendBTSpeedCmd,w
 23463  0C6F  00F2               	movwf	i1int16ToBytes@ndata
 23464  0C70  3191  2149  318B   	fcall	i1_int16ToBytes
 23465                           
 23466                           ;serial.c: 51:         int16ToBytes(yaw, speedBuffer + 7);
 23467  0C73  0140               	movlb	0	; select bank0
 23468  0C74  0829               	movf	i1sendBTSpeedCmd@yaw+1,w
 23469  0C75  00F1               	movwf	i1int16ToBytes@num+1
 23470  0C76  0828               	movf	i1sendBTSpeedCmd@yaw,w
 23471  0C77  00F0               	movwf	i1int16ToBytes@num
 23472  0C78  3057               	movlw	(low ((_speedBuffer| (0+256)+7)))& (0+255)
 23473  0C79  00AB               	movwf	??i1_sendBTSpeedCmd
 23474  0C7A  082B               	movf	??i1_sendBTSpeedCmd,w
 23475  0C7B  00F2               	movwf	i1int16ToBytes@ndata
 23476  0C7C  3191  2149  318B   	fcall	i1_int16ToBytes
 23477                           
 23478                           ;serial.c: 52:         calcCRC(speedBuffer);
 23479  0C7F  3050               	movlw	(low (_speedBuffer| (0+256)))& (0+255)
 23480  0C80  3196  26D9  318B   	fcall	i1_calcCRC
 23481  0C83                     i1l4912:
 23482                           
 23483                           ;serial.c: 53:         return sendBTBuffer((void *)speedBuffer, sizeof(speedBuffer), blo
      +                          ckIfBusy);;	Return value of i1_sendBTSpeedCmd is never used
 23484  0C83  3050               	movlw	low _speedBuffer
 23485  0C84  00F5               	movwf	i1sendBTBuffer@buffer
 23486  0C85  3001               	movlw	high _speedBuffer
 23487  0C86  00F6               	movwf	i1sendBTBuffer@buffer+1
 23488  0C87  300C               	movlw	12
 23489  0C88  0140               	movlb	0	; select bank0
 23490  0C89  00AB               	movwf	??i1_sendBTSpeedCmd
 23491  0C8A  082B               	movf	??i1_sendBTSpeedCmd,w
 23492  0C8B  00F7               	movwf	i1sendBTBuffer@length
 23493  0C8C  082A               	movf	i1sendBTSpeedCmd@blockIfBusy,w
 23494  0C8D  00AC               	movwf	??i1_sendBTSpeedCmd+1
 23495  0C8E  082C               	movf	??i1_sendBTSpeedCmd+1,w
 23496  0C8F  00F8               	movwf	i1sendBTBuffer@blockIfBusy
 23497  0C90  3190  2096  318B   	fcall	i1_sendBTBuffer
 23498  0C93                     i1l1007:
 23499  0C93  0008               	return
 23500  0C94                     __end_ofi1_sendBTSpeedCmd:
 23501                           
 23502                           	psect	text125
 23503  1CAB                     __ptext125:	
 23504 ;; *************** function i1_strcat *****************
 23505 ;; Defined at:
 23506 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcat.c"
 23507 ;; Parameters:    Size  Location     Type
 23508 ;;  dest            1    wreg     PTR unsigned char 
 23509 ;;		 -> debugBuffer(16), 
 23510 ;;  src             2    0[BANK0 ] PTR const unsigned char 
 23511 ;;		 -> STR_3(2), STR_2(2), STR_1(3), 
 23512 ;; Auto vars:     Size  Location     Type
 23513 ;;  dest            1   13[COMMON] PTR unsigned char 
 23514 ;;		 -> debugBuffer(16), 
 23515 ;; Return value:  Size  Location     Type
 23516 ;;                  1    wreg      PTR unsigned char 
 23517 ;; Registers used:
 23518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23519 ;; Tracked objects:
 23520 ;;		On entry : 0/0
 23521 ;;		On exit  : 0/0
 23522 ;;		Unchanged: 0/0
 23523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23524 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23525 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23526 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23527 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23528 ;;Total ram usage:        5 bytes
 23529 ;; Hardware stack levels used:    1
 23530 ;; Hardware stack levels required when called:    1
 23531 ;; This function calls:
 23532 ;;		i1_strcpy
 23533 ;;		i1_strlen
 23534 ;; This function is called by:
 23535 ;;		i1_sendBTSpeedCmd
 23536 ;; This function uses a non-reentrant model
 23537 ;;
 23538                           
 23539                           
 23540                           ;psect for function i1_strcat
 23541  1CAB                     i1_strcat:
 23542                           
 23543                           ;incstack = 0
 23544                           ; Regs used in i1_strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23545                           ;i1strcat@dest stored from wreg
 23546  1CAB  00FD               	movwf	i1strcat@dest
 23547  1CAC                     i1l4696:
 23548  1CAC  0140               	movlb	0	; select bank0
 23549  1CAD  0821               	movf	i1strcat@src+1,w
 23550  1CAE  00F6               	movwf	i1strcpy@src+1
 23551  1CAF  0820               	movf	i1strcat@src,w
 23552  1CB0  00F5               	movwf	i1strcpy@src
 23553  1CB1  087D               	movf	i1strcat@dest,w
 23554  1CB2  00F0               	movwf	i1strlen@s
 23555  1CB3  3001               	movlw	1
 23556  1CB4  00F1               	movwf	i1strlen@s+1
 23557  1CB5  319C  24C3  319C   	fcall	i1_strlen
 23558  1CB8  0870               	movf	?i1_strlen,w
 23559  1CB9  0140               	movlb	0	; select bank0
 23560  1CBA  00A2               	movwf	??i1_strcat
 23561  1CBB  0871               	movf	?i1_strlen+1,w
 23562  1CBC  00A3               	movwf	??i1_strcat+1
 23563  1CBD  087D               	movf	i1strcat@dest,w
 23564  1CBE  0722               	addwf	??i1_strcat,w
 23565  1CBF  319E  26C9  319C   	fcall	i1_strcpy
 23566  1CC2                     i1l2101:
 23567  1CC2  0008               	return
 23568  1CC3                     __end_ofi1_strcat:
 23569                           
 23570                           	psect	text126
 23571  1CC3                     __ptext126:	
 23572 ;; *************** function i1_strlen *****************
 23573 ;; Defined at:
 23574 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
 23575 ;; Parameters:    Size  Location     Type
 23576 ;;  s               2    0[COMMON] PTR const unsigned char 
 23577 ;;		 -> STR_26(3), STR_25(9), STR_24(9), STR_23(9), 
 23578 ;;		 -> STR_22(9), STR_21(3), STR_20(3), STR_19(7), 
 23579 ;;		 -> STR_18(3), STR_17(3), STR_16(6), STR_15(9), 
 23580 ;;		 -> STR_14(3), STR_13(9), STR_12(9), STR_11(3), 
 23581 ;;		 -> STR_10(9), STR_9(3), STR_8(9), STR_7(3), 
 23582 ;;		 -> STR_6(6), STR_4(6), debugBuffer(16), 
 23583 ;; Auto vars:     Size  Location     Type
 23584 ;;  a               2    3[COMMON] PTR const unsigned char 
 23585 ;;		 -> STR_26(3), STR_25(9), STR_24(9), STR_23(9), 
 23586 ;;		 -> STR_22(9), STR_21(3), STR_20(3), STR_19(7), 
 23587 ;;		 -> STR_18(3), STR_17(3), STR_16(6), STR_15(9), 
 23588 ;;		 -> STR_14(3), STR_13(9), STR_12(9), STR_11(3), 
 23589 ;;		 -> STR_10(9), STR_9(3), STR_8(9), STR_7(3), 
 23590 ;;		 -> STR_6(6), STR_4(6), debugBuffer(16), 
 23591 ;; Return value:  Size  Location     Type
 23592 ;;                  2    0[COMMON] unsigned int 
 23593 ;; Registers used:
 23594 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 23595 ;; Tracked objects:
 23596 ;;		On entry : 0/0
 23597 ;;		On exit  : 0/0
 23598 ;;		Unchanged: 0/0
 23599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23601 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23602 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23603 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23604 ;;Total ram usage:        5 bytes
 23605 ;; Hardware stack levels used:    1
 23606 ;; This function calls:
 23607 ;;		Nothing
 23608 ;; This function is called by:
 23609 ;;		i1_sendBTSpeedCmd
 23610 ;;		i1_strcat
 23611 ;; This function uses a non-reentrant model
 23612 ;;
 23613                           
 23614                           
 23615                           ;psect for function i1_strlen
 23616  1CC3                     i1_strlen:
 23617  1CC3                     i1l4450:	
 23618                           ;incstack = 0
 23619                           ; Regs used in i1_strlen: [wreg-fsr0h+status,2+status,0]
 23620                           
 23621  1CC3  0871               	movf	i1strlen@s+1,w
 23622  1CC4  00F4               	movwf	i1strlen@a+1
 23623  1CC5  0870               	movf	i1strlen@s,w
 23624  1CC6  00F3               	movwf	i1strlen@a
 23625  1CC7  2CCC               	goto	i1l4454
 23626  1CC8                     i1l4452:
 23627  1CC8  3001               	movlw	1
 23628  1CC9  07F0               	addwf	i1strlen@s,f
 23629  1CCA  3000               	movlw	0
 23630  1CCB  3DF1               	addwfc	i1strlen@s+1,f
 23631  1CCC                     i1l4454:
 23632  1CCC  0870               	movf	i1strlen@s,w
 23633  1CCD  0084               	movwf	4
 23634  1CCE  0871               	movf	i1strlen@s+1,w
 23635  1CCF  0085               	movwf	5
 23636  1CD0  0012               	moviw fsr0++
 23637  1CD1  1D03               	btfss	3,2
 23638  1CD2  2CD4               	goto	u273_21
 23639  1CD3  2CD5               	goto	u273_20
 23640  1CD4                     u273_21:
 23641  1CD4  2CC8               	goto	i1l4452
 23642  1CD5                     u273_20:
 23643  1CD5                     i1l4456:
 23644  1CD5  0873               	movf	i1strlen@a,w
 23645  1CD6  0270               	subwf	i1strlen@s,w
 23646  1CD7  00F0               	movwf	?i1_strlen
 23647  1CD8  0874               	movf	i1strlen@a+1,w
 23648  1CD9  3B71               	subwfb	i1strlen@s+1,w
 23649  1CDA  00F1               	movwf	?i1_strlen+1
 23650  1CDB                     i1l2113:
 23651  1CDB  0008               	return
 23652  1CDC                     __end_ofi1_strlen:
 23653                           
 23654                           	psect	text127
 23655  1EC9                     __ptext127:	
 23656 ;; *************** function i1_strcpy *****************
 23657 ;; Defined at:
 23658 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
 23659 ;; Parameters:    Size  Location     Type
 23660 ;;  dest            1    wreg     PTR unsigned char 
 23661 ;;		 -> debugBuffer(16), 
 23662 ;;  src             2    5[COMMON] PTR const unsigned char 
 23663 ;;		 -> STR_3(2), STR_2(2), STR_1(3), 
 23664 ;; Auto vars:     Size  Location     Type
 23665 ;;  dest            1   11[COMMON] PTR unsigned char 
 23666 ;;		 -> debugBuffer(16), 
 23667 ;;  s               2    9[COMMON] PTR const unsigned char 
 23668 ;;		 -> STR_3(2), STR_2(2), STR_1(3), 
 23669 ;;  d               1   12[COMMON] PTR unsigned char 
 23670 ;;		 -> debugBuffer(16), 
 23671 ;; Return value:  Size  Location     Type
 23672 ;;                  1    wreg      PTR unsigned char 
 23673 ;; Registers used:
 23674 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 23675 ;; Tracked objects:
 23676 ;;		On entry : 0/0
 23677 ;;		On exit  : 0/0
 23678 ;;		Unchanged: 0/0
 23679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23681 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23682 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23683 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23684 ;;Total ram usage:        8 bytes
 23685 ;; Hardware stack levels used:    1
 23686 ;; This function calls:
 23687 ;;		Nothing
 23688 ;; This function is called by:
 23689 ;;		i1_strcat
 23690 ;; This function uses a non-reentrant model
 23691 ;;
 23692                           
 23693                           
 23694                           ;psect for function i1_strcpy
 23695  1EC9                     i1_strcpy:
 23696                           
 23697                           ;incstack = 0
 23698                           ; Regs used in i1_strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 23699                           ;i1strcpy@dest stored from wreg
 23700  1EC9  00FB               	movwf	i1strcpy@dest
 23701  1ECA                     i1l4446:
 23702  1ECA  0876               	movf	i1strcpy@src+1,w
 23703  1ECB  00FA               	movwf	i1strcpy@s+1
 23704  1ECC  0875               	movf	i1strcpy@src,w
 23705  1ECD  00F9               	movwf	i1strcpy@s
 23706  1ECE  087B               	movf	i1strcpy@dest,w
 23707  1ECF  00F7               	movwf	??i1_strcpy
 23708  1ED0  0877               	movf	??i1_strcpy,w
 23709  1ED1  00FC               	movwf	i1strcpy@d
 23710  1ED2                     i1l4448:
 23711  1ED2  087C               	movf	i1strcpy@d,w
 23712  1ED3  0086               	movwf	6
 23713  1ED4  3001               	movlw	1	; select bank2/3
 23714  1ED5  0087               	movwf	7
 23715  1ED6  0AFC               	incf	i1strcpy@d,f
 23716  1ED7  087A               	movf	i1strcpy@s+1,w
 23717  1ED8  00F8               	movwf	??i1_strcpy+1
 23718  1ED9  0879               	movf	i1strcpy@s,w
 23719  1EDA  00F7               	movwf	??i1_strcpy
 23720  1EDB  0AF9               	incf	i1strcpy@s,f
 23721  1EDC  1903               	skipnz
 23722  1EDD  0AFA               	incf	i1strcpy@s+1,f
 23723  1EDE  0877               	movf	??i1_strcpy,w
 23724  1EDF  0084               	movwf	4
 23725  1EE0  0878               	movf	??i1_strcpy+1,w
 23726  1EE1  0085               	movwf	5
 23727  1EE2  0800               	movf	0,w	;code access
 23728  1EE3  3FC0               	movwi [0]fsr1
 23729  1EE4  0889               	movf	9,f
 23730  1EE5  1D03               	btfss	3,2
 23731  1EE6  2EE8               	goto	u272_21
 23732  1EE7  2EE9               	goto	u272_20
 23733  1EE8                     u272_21:
 23734  1EE8  2ED2               	goto	i1l4448
 23735  1EE9                     u272_20:
 23736  1EE9                     i1l2107:
 23737  1EE9  0008               	return
 23738  1EEA                     __end_ofi1_strcpy:
 23739                           
 23740                           	psect	text128
 23741  1096                     __ptext128:	
 23742 ;; *************** function i1_sendBTBuffer *****************
 23743 ;; Defined at:
 23744 ;;		line 67 in file "serial.c"
 23745 ;; Parameters:    Size  Location     Type
 23746 ;;  buffer          2    5[COMMON] PTR unsigned char 
 23747 ;;		 -> STR_25(9), STR_24(9), STR_23(9), STR_22(9), 
 23748 ;;		 -> STR_21(3), STR_19(7), STR_17(3), STR_15(9), 
 23749 ;;		 -> STR_13(9), STR_12(9), STR_11(3), STR_10(9), 
 23750 ;;		 -> STR_9(3), STR_8(9), STR_7(3), STR_4(6), 
 23751 ;;		 -> masterMAC(12), slaveMAC(12), estopBuffer(8), debugBuffer(16), 
 23752 ;;		 -> speedBuffer(12), 
 23753 ;;  length          1    7[COMMON] unsigned char 
 23754 ;;  blockIfBusy     1    8[COMMON] _Bool 
 23755 ;; Auto vars:     Size  Location     Type
 23756 ;;		None
 23757 ;; Return value:  Size  Location     Type
 23758 ;;                  1    wreg      _Bool 
 23759 ;; Registers used:
 23760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23761 ;; Tracked objects:
 23762 ;;		On entry : 0/0
 23763 ;;		On exit  : 0/0
 23764 ;;		Unchanged: 0/0
 23765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23766 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23769 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23770 ;;Total ram usage:        4 bytes
 23771 ;; Hardware stack levels used:    1
 23772 ;; Hardware stack levels required when called:    1
 23773 ;; This function calls:
 23774 ;;		i1_EUSART1_Write
 23775 ;;		i1_EUSART1_is_tx_ready
 23776 ;; This function is called by:
 23777 ;;		_sendBTEstopCmd
 23778 ;;		i1_sendBTSpeedCmd
 23779 ;; This function uses a non-reentrant model
 23780 ;;
 23781                           
 23782                           
 23783                           ;psect for function i1_sendBTBuffer
 23784  1096                     i1_sendBTBuffer:
 23785  1096                     i1l4574:	
 23786                           ;incstack = 0
 23787                           ; Regs used in i1_sendBTBuffer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23788                           
 23789                           
 23790                           ;serial.c: 68:     if (blockIfBusy || (eusart1TxBufferRemaining > length)){
 23791  1096  0878               	movf	i1sendBTBuffer@blockIfBusy,w
 23792  1097  1D03               	btfss	3,2
 23793  1098  289A               	goto	u299_21
 23794  1099  289B               	goto	u299_20
 23795  109A                     u299_21:
 23796  109A  28B9               	goto	i1l4586
 23797  109B                     u299_20:
 23798  109B                     i1l4576:
 23799  109B  0140               	movlb	0	; select bank0
 23800  109C  0855               	movf	_eusart1TxBufferRemaining,w	;volatile
 23801  109D  0277               	subwf	i1sendBTBuffer@length,w
 23802  109E  1803               	skipnc
 23803  109F  28A1               	goto	u300_21
 23804  10A0  28A2               	goto	u300_20
 23805  10A1                     u300_21:
 23806  10A1  28C0               	goto	i1l4594
 23807  10A2                     u300_20:
 23808  10A2  28B9               	goto	i1l4586
 23809  10A3                     i1l4578:
 23810  10A3  319A  2248  3190   	fcall	i1_EUSART1_is_tx_ready
 23811  10A6  3A00               	xorlw	0
 23812  10A7  1903               	skipnz
 23813  10A8  28AA               	goto	u301_21
 23814  10A9  28AB               	goto	u301_20
 23815  10AA                     u301_21:
 23816  10AA  28A3               	goto	i1l4578
 23817  10AB                     u301_20:
 23818  10AB                     i1l4580:
 23819                           
 23820                           ;serial.c: 74:             EUSART1_Write(*buffer++);
 23821  10AB  0875               	movf	i1sendBTBuffer@buffer,w
 23822  10AC  0084               	movwf	4
 23823  10AD  0876               	movf	i1sendBTBuffer@buffer+1,w
 23824  10AE  0085               	movwf	5
 23825  10AF  0800               	movf	0,w	;code access
 23826  10B0  3190  203F  3190   	fcall	i1_EUSART1_Write
 23827  10B3                     i1l4582:
 23828  10B3  3001               	movlw	1
 23829  10B4  07F5               	addwf	i1sendBTBuffer@buffer,f
 23830  10B5  3000               	movlw	0
 23831  10B6  3DF6               	addwfc	i1sendBTBuffer@buffer+1,f
 23832  10B7                     i1l4584:
 23833                           
 23834                           ;serial.c: 75:             length--;
 23835  10B7  3001               	movlw	1
 23836  10B8  02F7               	subwf	i1sendBTBuffer@length,f
 23837  10B9                     i1l4586:
 23838                           
 23839                           ;serial.c: 69:         while (length > 0) {
 23840  10B9  0877               	movf	i1sendBTBuffer@length,w
 23841  10BA  1D03               	btfss	3,2
 23842  10BB  28BD               	goto	u302_21
 23843  10BC  28BE               	goto	u302_20
 23844  10BD                     u302_21:
 23845  10BD  28A3               	goto	i1l4578
 23846  10BE                     u302_20:
 23847  10BE                     i1l4588:
 23848                           
 23849                           ;serial.c: 77:         return 1;
 23850  10BE  3001               	movlw	1
 23851  10BF  28C1               	goto	i1l1026
 23852  10C0                     i1l4594:
 23853                           
 23854                           ;serial.c: 80:         return 0;
 23855  10C0  3000               	movlw	0
 23856  10C1                     i1l1026:
 23857  10C1  0008               	return
 23858  10C2                     __end_ofi1_sendBTBuffer:
 23859                           
 23860                           	psect	text129
 23861  1A48                     __ptext129:	
 23862 ;; *************** function i1_EUSART1_is_tx_ready *****************
 23863 ;; Defined at:
 23864 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 23865 ;; Parameters:    Size  Location     Type
 23866 ;;		None
 23867 ;; Auto vars:     Size  Location     Type
 23868 ;;		None
 23869 ;; Return value:  Size  Location     Type
 23870 ;;                  1    wreg      _Bool 
 23871 ;; Registers used:
 23872 ;;		wreg, status,2, status,0
 23873 ;; Tracked objects:
 23874 ;;		On entry : 0/0
 23875 ;;		On exit  : 0/0
 23876 ;;		Unchanged: 0/0
 23877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23882 ;;Total ram usage:        0 bytes
 23883 ;; Hardware stack levels used:    1
 23884 ;; This function calls:
 23885 ;;		Nothing
 23886 ;; This function is called by:
 23887 ;;		i1_sendBTBuffer
 23888 ;; This function uses a non-reentrant model
 23889 ;;
 23890                           
 23891                           
 23892                           ;psect for function i1_EUSART1_is_tx_ready
 23893  1A48                     i1_EUSART1_is_tx_ready:
 23894  1A48                     i1l4366:	
 23895                           ;incstack = 0
 23896                           ; Regs used in i1_EUSART1_is_tx_ready: [wreg+status,2+status,0]
 23897                           
 23898                           
 23899                           ;mcc_generated_files/eusart1.c: 134:     return (eusart1TxBufferRemaining ? 1 : 0);
 23900  1A48  0140               	movlb	0	; select bank0
 23901  1A49  0855               	movf	_eusart1TxBufferRemaining,w	;volatile
 23902  1A4A  1D03               	btfss	3,2
 23903  1A4B  2A4D               	goto	u253_21
 23904  1A4C  2A4F               	goto	u253_20
 23905  1A4D                     u253_21:
 23906  1A4D  3001               	movlw	1
 23907  1A4E  2A50               	goto	u254_20
 23908  1A4F                     u253_20:
 23909  1A4F  3000               	movlw	0
 23910  1A50                     u254_20:
 23911  1A50                     i1l233:
 23912  1A50  0008               	return
 23913  1A51                     __end_ofi1_EUSART1_is_tx_ready:
 23914                           
 23915                           	psect	text130
 23916  103F                     __ptext130:	
 23917 ;; *************** function i1_EUSART1_Write *****************
 23918 ;; Defined at:
 23919 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 23920 ;; Parameters:    Size  Location     Type
 23921 ;;  txData          1    wreg     unsigned char 
 23922 ;; Auto vars:     Size  Location     Type
 23923 ;;  txData          1    1[COMMON] unsigned char 
 23924 ;; Return value:  Size  Location     Type
 23925 ;;                  1    wreg      void 
 23926 ;; Registers used:
 23927 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23928 ;; Tracked objects:
 23929 ;;		On entry : 0/0
 23930 ;;		On exit  : 0/0
 23931 ;;		Unchanged: 0/0
 23932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23935 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23936 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23937 ;;Total ram usage:        2 bytes
 23938 ;; Hardware stack levels used:    1
 23939 ;; This function calls:
 23940 ;;		Nothing
 23941 ;; This function is called by:
 23942 ;;		i1_sendBTBuffer
 23943 ;; This function uses a non-reentrant model
 23944 ;;
 23945                           
 23946                           
 23947                           ;psect for function i1_EUSART1_Write
 23948  103F                     i1_EUSART1_Write:
 23949                           
 23950                           ;incstack = 0
 23951                           ; Regs used in i1_EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 23952                           ;i1EUSART1_Write@txData stored from wreg
 23953  103F  00F1               	movwf	i1EUSART1_Write@txData
 23954  1040                     i1l4370:
 23955  1040                     i1l4372:	
 23956                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 23957                           
 23958                           
 23959                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 23960  1040  0140               	movlb	0	; select bank0
 23961  1041  0855               	movf	_eusart1TxBufferRemaining,w	;volatile
 23962  1042  1903               	btfsc	3,2
 23963  1043  2845               	goto	u255_21
 23964  1044  2846               	goto	u255_20
 23965  1045                     u255_21:
 23966  1045  2840               	goto	i1l4372
 23967  1046                     u255_20:
 23968  1046                     i1l254:
 23969                           
 23970                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
 23971  1046  014E               	movlb	14	; select bank14
 23972  1047  1A19               	btfsc	25,4	;volatile
 23973  1048  284A               	goto	u256_21
 23974  1049  284B               	goto	u256_20
 23975  104A                     u256_21:
 23976  104A  284F               	goto	i1l255
 23977  104B                     u256_20:
 23978  104B                     i1l4374:
 23979                           
 23980                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
 23981  104B  0871               	movf	i1EUSART1_Write@txData,w
 23982  104C  0142               	movlb	2	; select bank2
 23983  104D  009A               	movwf	26	;volatile
 23984                           
 23985                           ;mcc_generated_files/eusart1.c: 182:     }
 23986  104E  2867               	goto	i1l4386
 23987  104F                     i1l255:	
 23988                           ;mcc_generated_files/eusart1.c: 183:     else
 23989                           
 23990                           
 23991                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
 23992  104F  1219               	bcf	25,4	;volatile
 23993  1050                     i1l4376:
 23994                           
 23995                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 23996  1050  0871               	movf	i1EUSART1_Write@txData,w
 23997  1051  00F0               	movwf	??i1_EUSART1_Write
 23998  1052  0140               	movlb	0	; select bank0
 23999  1053  0854               	movf	_eusart1TxHead,w
 24000  1054  3E40               	addlw	(low (_eusart1TxBuffer| (0+512)))& (0+255)
 24001  1055  0086               	movwf	6
 24002  1056  3002               	movlw	2	; select bank4/5
 24003  1057  0087               	movwf	7
 24004  1058  0870               	movf	??i1_EUSART1_Write,w
 24005  1059  0081               	movwf	1
 24006  105A                     i1l4378:
 24007  105A  3001               	movlw	1
 24008  105B  00F0               	movwf	??i1_EUSART1_Write
 24009  105C  0870               	movf	??i1_EUSART1_Write,w
 24010  105D  07D4               	addwf	_eusart1TxHead,f	;volatile
 24011  105E                     i1l4380:
 24012                           
 24013                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 24014  105E  3020               	movlw	32
 24015  105F  0254               	subwf	_eusart1TxHead,w	;volatile
 24016  1060  1C03               	skipc
 24017  1061  2863               	goto	u257_21
 24018  1062  2864               	goto	u257_20
 24019  1063                     u257_21:
 24020  1063  2865               	goto	i1l4384
 24021  1064                     u257_20:
 24022  1064                     i1l4382:
 24023                           
 24024                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 24025  1064  01D4               	clrf	_eusart1TxHead	;volatile
 24026  1065                     i1l4384:
 24027                           
 24028                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 24029  1065  3001               	movlw	1
 24030  1066  02D5               	subwf	_eusart1TxBufferRemaining,f	;volatile
 24031  1067                     i1l4386:
 24032                           
 24033                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
 24034  1067  014E               	movlb	14	; select bank14
 24035  1068  1619               	bsf	25,4	;volatile
 24036  1069                     i1l258:
 24037  1069  0008               	return
 24038  106A                     __end_ofi1_EUSART1_Write:
 24039                           
 24040                           	psect	text131
 24041  0C94                     __ptext131:	
 24042 ;; *************** function i1_int16cat *****************
 24043 ;; Defined at:
 24044 ;;		line 157 in file "serial.c"
 24045 ;; Parameters:    Size  Location     Type
 24046 ;;  bufP            1    wreg     PTR unsigned char 
 24047 ;;		 -> debugBuffer(16), 
 24048 ;;  num             2    9[COMMON] short 
 24049 ;; Auto vars:     Size  Location     Type
 24050 ;;  bufP            1    5[BANK0 ] PTR unsigned char 
 24051 ;;		 -> debugBuffer(16), 
 24052 ;;  divider         2    3[BANK0 ] short 
 24053 ;;  digit           2    1[BANK0 ] short 
 24054 ;;  suppress        1    0[BANK0 ] _Bool 
 24055 ;; Return value:  Size  Location     Type
 24056 ;;                  1    wreg      void 
 24057 ;; Registers used:
 24058 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24059 ;; Tracked objects:
 24060 ;;		On entry : 0/0
 24061 ;;		On exit  : 0/0
 24062 ;;		Unchanged: 0/0
 24063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24064 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24065 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24066 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24067 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24068 ;;Total ram usage:        9 bytes
 24069 ;; Hardware stack levels used:    1
 24070 ;; Hardware stack levels required when called:    1
 24071 ;; This function calls:
 24072 ;;		i1___awdiv
 24073 ;;		i1___wmul
 24074 ;; This function is called by:
 24075 ;;		i1_sendBTSpeedCmd
 24076 ;; This function uses a non-reentrant model
 24077 ;;
 24078                           
 24079                           
 24080                           ;psect for function i1_int16cat
 24081  0C94                     i1_int16cat:
 24082                           
 24083                           ;incstack = 0
 24084                           ; Regs used in i1_int16cat: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 24085                           ;i1int16cat@bufP stored from wreg
 24086  0C94  0140               	movlb	0	; select bank0
 24087  0C95  00A5               	movwf	i1int16cat@bufP
 24088  0C96                     i1l4656:
 24089                           
 24090                           ;serial.c: 158:     _Bool suppress = 1;
 24091  0C96  01A0               	clrf	i1int16cat@suppress
 24092  0C97  0AA0               	incf	i1int16cat@suppress,f
 24093  0C98                     i1l4658:
 24094  0C98                     i1l4660:
 24095                           
 24096                           ;serial.c: 160:     int16_t divider = 10000;
 24097  0C98  3010               	movlw	16
 24098  0C99  00A3               	movwf	i1int16cat@divider
 24099  0C9A  3027               	movlw	39
 24100  0C9B  00A4               	movwf	i1int16cat@divider+1
 24101                           
 24102                           ;serial.c: 163:     while (*bufP != 0)
 24103  0C9C  2CA1               	goto	i1l4664
 24104  0C9D                     i1l4662:
 24105                           
 24106                           ;serial.c: 164:         bufP++;
 24107  0C9D  3001               	movlw	1
 24108  0C9E  00FB               	movwf	??i1_int16cat
 24109  0C9F  087B               	movf	??i1_int16cat,w
 24110  0CA0  07A5               	addwf	i1int16cat@bufP,f
 24111  0CA1                     i1l4664:
 24112                           
 24113                           ;serial.c: 163:     while (*bufP != 0)
 24114  0CA1  0825               	movf	i1int16cat@bufP,w
 24115  0CA2  0086               	movwf	6
 24116  0CA3  3001               	movlw	1	; select bank2/3
 24117  0CA4  0087               	movwf	7
 24118  0CA5  0801               	movf	1,w
 24119  0CA6  1D03               	btfss	3,2
 24120  0CA7  2CA9               	goto	u310_21
 24121  0CA8  2CAA               	goto	u310_20
 24122  0CA9                     u310_21:
 24123  0CA9  2C9D               	goto	i1l4662
 24124  0CAA                     u310_20:
 24125  0CAA                     i1l1069:
 24126                           
 24127                           ;serial.c: 167:     if (num < 0) {
 24128  0CAA  1FFA               	btfss	i1int16cat@num+1,7
 24129  0CAB  2CAD               	goto	u311_21
 24130  0CAC  2CAE               	goto	u311_20
 24131  0CAD                     u311_21:
 24132  0CAD  2D09               	goto	i1l4684
 24133  0CAE                     u311_20:
 24134  0CAE                     i1l4666:
 24135                           
 24136                           ;serial.c: 168:         num = -num;
 24137  0CAE  09F9               	comf	i1int16cat@num,f
 24138  0CAF  09FA               	comf	i1int16cat@num+1,f
 24139  0CB0  0AF9               	incf	i1int16cat@num,f
 24140  0CB1  1903               	skipnz
 24141  0CB2  0AFA               	incf	i1int16cat@num+1,f
 24142  0CB3                     i1l4668:
 24143                           
 24144                           ;serial.c: 169:         *bufP++ = '-';
 24145  0CB3  302D               	movlw	45
 24146  0CB4  00FB               	movwf	??i1_int16cat
 24147  0CB5  0825               	movf	i1int16cat@bufP,w
 24148  0CB6  0086               	movwf	6
 24149  0CB7  3001               	movlw	1	; select bank2/3
 24150  0CB8  0087               	movwf	7
 24151  0CB9  087B               	movf	??i1_int16cat,w
 24152  0CBA  0081               	movwf	1
 24153  0CBB                     i1l4670:
 24154  0CBB  3001               	movlw	1
 24155  0CBC  00FB               	movwf	??i1_int16cat
 24156  0CBD  087B               	movf	??i1_int16cat,w
 24157  0CBE  07A5               	addwf	i1int16cat@bufP,f
 24158  0CBF  2D09               	goto	i1l4684
 24159  0CC0                     i1l4672:
 24160                           
 24161                           ;serial.c: 174:         digit = num / divider;
 24162  0CC0  0140               	movlb	0	; select bank0
 24163  0CC1  0824               	movf	i1int16cat@divider+1,w
 24164  0CC2  00F1               	movwf	i1___awdiv@divisor+1
 24165  0CC3  0823               	movf	i1int16cat@divider,w
 24166  0CC4  00F0               	movwf	i1___awdiv@divisor
 24167  0CC5  087A               	movf	i1int16cat@num+1,w
 24168  0CC6  00F3               	movwf	i1___awdiv@dividend+1
 24169  0CC7  0879               	movf	i1int16cat@num,w
 24170  0CC8  00F2               	movwf	i1___awdiv@dividend
 24171  0CC9  3196  267A  318C   	fcall	i1___awdiv
 24172  0CCC  0871               	movf	?i1___awdiv+1,w
 24173  0CCD  0140               	movlb	0	; select bank0
 24174  0CCE  00A2               	movwf	i1int16cat@digit+1
 24175  0CCF  0870               	movf	?i1___awdiv,w
 24176  0CD0  00A1               	movwf	i1int16cat@digit
 24177                           
 24178                           ;serial.c: 175:         num = num - (digit * divider);
 24179  0CD1  0822               	movf	i1int16cat@digit+1,w
 24180  0CD2  00F1               	movwf	i1___wmul@multiplier+1
 24181  0CD3  0821               	movf	i1int16cat@digit,w
 24182  0CD4  00F0               	movwf	i1___wmul@multiplier
 24183  0CD5  0824               	movf	i1int16cat@divider+1,w
 24184  0CD6  00F3               	movwf	i1___wmul@multiplicand+1
 24185  0CD7  0823               	movf	i1int16cat@divider,w
 24186  0CD8  00F2               	movwf	i1___wmul@multiplicand
 24187  0CD9  319E  262B  318C   	fcall	i1___wmul
 24188  0CDC  0870               	movf	?i1___wmul,w
 24189  0CDD  0279               	subwf	i1int16cat@num,w
 24190  0CDE  00F9               	movwf	i1int16cat@num
 24191  0CDF  0871               	movf	?i1___wmul+1,w
 24192  0CE0  3B7A               	subwfb	i1int16cat@num+1,w
 24193  0CE1  00FA               	movwf	i1int16cat@num+1
 24194                           
 24195                           ;serial.c: 176:         divider /= 10;
 24196  0CE2  300A               	movlw	10
 24197  0CE3  00F0               	movwf	i1___awdiv@divisor
 24198  0CE4  3000               	movlw	0
 24199  0CE5  00F1               	movwf	i1___awdiv@divisor+1
 24200  0CE6  0140               	movlb	0	; select bank0
 24201  0CE7  0824               	movf	i1int16cat@divider+1,w
 24202  0CE8  00F3               	movwf	i1___awdiv@dividend+1
 24203  0CE9  0823               	movf	i1int16cat@divider,w
 24204  0CEA  00F2               	movwf	i1___awdiv@dividend
 24205  0CEB  3196  267A  318C   	fcall	i1___awdiv
 24206  0CEE  0871               	movf	?i1___awdiv+1,w
 24207  0CEF  0140               	movlb	0	; select bank0
 24208  0CF0  00A4               	movwf	i1int16cat@divider+1
 24209  0CF1  0870               	movf	?i1___awdiv,w
 24210  0CF2  00A3               	movwf	i1int16cat@divider
 24211  0CF3                     i1l4674:
 24212                           
 24213                           ;serial.c: 178:         if ((digit != 0) || !suppress){
 24214  0CF3  0821               	movf	i1int16cat@digit,w
 24215  0CF4  0422               	iorwf	i1int16cat@digit+1,w
 24216  0CF5  1D03               	btfss	3,2
 24217  0CF6  2CF8               	goto	u312_21
 24218  0CF7  2CF9               	goto	u312_20
 24219  0CF8                     u312_21:
 24220  0CF8  2CFE               	goto	i1l4678
 24221  0CF9                     u312_20:
 24222  0CF9                     i1l4676:
 24223  0CF9  0820               	movf	i1int16cat@suppress,w
 24224  0CFA  1D03               	btfss	3,2
 24225  0CFB  2CFD               	goto	u313_21
 24226  0CFC  2CFE               	goto	u313_20
 24227  0CFD                     u313_21:
 24228  0CFD  2D09               	goto	i1l4684
 24229  0CFE                     u313_20:
 24230  0CFE                     i1l4678:
 24231                           
 24232                           ;serial.c: 179:             suppress = 0;
 24233  0CFE  01A0               	clrf	i1int16cat@suppress
 24234  0CFF                     i1l4680:
 24235                           
 24236                           ;serial.c: 180:             *bufP++ = '0' + digit;
 24237  0CFF  0821               	movf	i1int16cat@digit,w
 24238  0D00  3E30               	addlw	48
 24239  0D01  00FB               	movwf	??i1_int16cat
 24240  0D02  0825               	movf	i1int16cat@bufP,w
 24241  0D03  0086               	movwf	6
 24242  0D04  3001               	movlw	1	; select bank2/3
 24243  0D05  0087               	movwf	7
 24244  0D06  087B               	movf	??i1_int16cat,w
 24245  0D07  0081               	movwf	1
 24246  0D08  2CBB               	goto	i1l4670
 24247  0D09                     i1l4684:
 24248                           
 24249                           ;serial.c: 173:     while (divider > 0){
 24250  0D09  0824               	movf	i1int16cat@divider+1,w
 24251  0D0A  3A80               	xorlw	128
 24252  0D0B  00FB               	movwf	??i1_int16cat
 24253  0D0C  3080               	movlw	128
 24254  0D0D  027B               	subwf	??i1_int16cat,w
 24255  0D0E  1D03               	skipz
 24256  0D0F  2D12               	goto	u314_25
 24257  0D10  3001               	movlw	1
 24258  0D11  0223               	subwf	i1int16cat@divider,w
 24259  0D12                     u314_25:
 24260  0D12  1803               	skipnc
 24261  0D13  2D15               	goto	u314_21
 24262  0D14  2D16               	goto	u314_20
 24263  0D15                     u314_21:
 24264  0D15  2CC0               	goto	i1l4672
 24265  0D16                     u314_20:
 24266  0D16                     i1l4686:
 24267                           
 24268                           ;serial.c: 184:     if (suppress)
 24269  0D16  0140               	movlb	0	; select bank0
 24270  0D17  0820               	movf	i1int16cat@suppress,w
 24271  0D18  1903               	btfsc	3,2
 24272  0D19  2D1B               	goto	u315_21
 24273  0D1A  2D1C               	goto	u315_20
 24274  0D1B                     u315_21:
 24275  0D1B  2D28               	goto	i1l4692
 24276  0D1C                     u315_20:
 24277  0D1C                     i1l4688:
 24278                           
 24279                           ;serial.c: 185:         *bufP++ = '0';
 24280  0D1C  3030               	movlw	48
 24281  0D1D  00FB               	movwf	??i1_int16cat
 24282  0D1E  0825               	movf	i1int16cat@bufP,w
 24283  0D1F  0086               	movwf	6
 24284  0D20  3001               	movlw	1	; select bank2/3
 24285  0D21  0087               	movwf	7
 24286  0D22  087B               	movf	??i1_int16cat,w
 24287  0D23  0081               	movwf	1
 24288  0D24                     i1l4690:
 24289  0D24  3001               	movlw	1
 24290  0D25  00FB               	movwf	??i1_int16cat
 24291  0D26  087B               	movf	??i1_int16cat,w
 24292  0D27  07A5               	addwf	i1int16cat@bufP,f
 24293  0D28                     i1l4692:
 24294                           
 24295                           ;serial.c: 187:     *bufP++ = 0;
 24296  0D28  0825               	movf	i1int16cat@bufP,w
 24297  0D29  0086               	movwf	6
 24298  0D2A  3001               	movlw	1	; select bank2/3
 24299  0D2B  0087               	movwf	7
 24300  0D2C  0181               	clrf	1
 24301  0D2D                     i1l4694:
 24302  0D2D  3001               	movlw	1
 24303  0D2E  00FB               	movwf	??i1_int16cat
 24304  0D2F  087B               	movf	??i1_int16cat,w
 24305  0D30  07A5               	addwf	i1int16cat@bufP,f
 24306  0D31                     i1l1078:
 24307  0D31  0008               	return
 24308  0D32                     __end_ofi1_int16cat:
 24309                           
 24310                           	psect	text132
 24311  1E2B                     __ptext132:	
 24312 ;; *************** function i1___wmul *****************
 24313 ;; Defined at:
 24314 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 24315 ;; Parameters:    Size  Location     Type
 24316 ;;  multiplier      2    0[COMMON] unsigned int 
 24317 ;;  multiplicand    2    2[COMMON] unsigned int 
 24318 ;; Auto vars:     Size  Location     Type
 24319 ;;  product         2    4[COMMON] unsigned int 
 24320 ;; Return value:  Size  Location     Type
 24321 ;;                  2    0[COMMON] unsigned int 
 24322 ;; Registers used:
 24323 ;;		wreg, status,2, status,0
 24324 ;; Tracked objects:
 24325 ;;		On entry : 0/0
 24326 ;;		On exit  : 0/0
 24327 ;;		Unchanged: 0/0
 24328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24329 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24330 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24332 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24333 ;;Total ram usage:        6 bytes
 24334 ;; Hardware stack levels used:    1
 24335 ;; This function calls:
 24336 ;;		Nothing
 24337 ;; This function is called by:
 24338 ;;		i1_int16cat
 24339 ;; This function uses a non-reentrant model
 24340 ;;
 24341                           
 24342                           
 24343                           ;psect for function i1___wmul
 24344  1E2B                     i1___wmul:
 24345  1E2B                     i1l4388:	
 24346                           ;incstack = 0
 24347                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 24348                           
 24349  1E2B  01F4               	clrf	i1___wmul@product
 24350  1E2C  01F5               	clrf	i1___wmul@product+1
 24351  1E2D                     i1l4390:
 24352  1E2D  1C70               	btfss	i1___wmul@multiplier,0
 24353  1E2E  2E30               	goto	u258_21
 24354  1E2F  2E31               	goto	u258_20
 24355  1E30                     u258_21:
 24356  1E30  2E35               	goto	i1l1622
 24357  1E31                     u258_20:
 24358  1E31                     i1l4392:
 24359  1E31  0872               	movf	i1___wmul@multiplicand,w
 24360  1E32  07F4               	addwf	i1___wmul@product,f
 24361  1E33  0873               	movf	i1___wmul@multiplicand+1,w
 24362  1E34  3DF5               	addwfc	i1___wmul@product+1,f
 24363  1E35                     i1l1622:
 24364  1E35  3001               	movlw	1
 24365  1E36                     u259_25:
 24366  1E36  35F2               	lslf	i1___wmul@multiplicand,f
 24367  1E37  0DF3               	rlf	i1___wmul@multiplicand+1,f
 24368  1E38  0B89               	decfsz	9,f
 24369  1E39  2E36               	goto	u259_25
 24370  1E3A                     i1l4394:
 24371  1E3A  3001               	movlw	1
 24372  1E3B                     u260_25:
 24373  1E3B  36F1               	lsrf	i1___wmul@multiplier+1,f
 24374  1E3C  0CF0               	rrf	i1___wmul@multiplier,f
 24375  1E3D  0B89               	decfsz	9,f
 24376  1E3E  2E3B               	goto	u260_25
 24377  1E3F                     i1l4396:
 24378  1E3F  0870               	movf	i1___wmul@multiplier,w
 24379  1E40  0471               	iorwf	i1___wmul@multiplier+1,w
 24380  1E41  1D03               	btfss	3,2
 24381  1E42  2E44               	goto	u261_21
 24382  1E43  2E45               	goto	u261_20
 24383  1E44                     u261_21:
 24384  1E44  2E2D               	goto	i1l4390
 24385  1E45                     u261_20:
 24386  1E45                     i1l4398:
 24387  1E45  0875               	movf	i1___wmul@product+1,w
 24388  1E46  00F1               	movwf	?i1___wmul+1
 24389  1E47  0874               	movf	i1___wmul@product,w
 24390  1E48  00F0               	movwf	?i1___wmul
 24391  1E49                     i1l1624:
 24392  1E49  0008               	return
 24393  1E4A                     __end_ofi1___wmul:
 24394                           
 24395                           	psect	text133
 24396  167A                     __ptext133:	
 24397 ;; *************** function i1___awdiv *****************
 24398 ;; Defined at:
 24399 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 24400 ;; Parameters:    Size  Location     Type
 24401 ;;  divisor         2    0[COMMON] int 
 24402 ;;  dividend        2    2[COMMON] int 
 24403 ;; Auto vars:     Size  Location     Type
 24404 ;;  quotient        2    7[COMMON] int 
 24405 ;;  sign            1    6[COMMON] unsigned char 
 24406 ;;  counter         1    5[COMMON] unsigned char 
 24407 ;; Return value:  Size  Location     Type
 24408 ;;                  2    0[COMMON] int 
 24409 ;; Registers used:
 24410 ;;		wreg, status,2, status,0
 24411 ;; Tracked objects:
 24412 ;;		On entry : 0/0
 24413 ;;		On exit  : 0/0
 24414 ;;		Unchanged: 0/0
 24415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24416 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24417 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24418 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24419 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24420 ;;Total ram usage:        9 bytes
 24421 ;; Hardware stack levels used:    1
 24422 ;; This function calls:
 24423 ;;		Nothing
 24424 ;; This function is called by:
 24425 ;;		i1_int16cat
 24426 ;; This function uses a non-reentrant model
 24427 ;;
 24428                           
 24429                           
 24430                           ;psect for function i1___awdiv
 24431  167A                     i1___awdiv:
 24432  167A                     i1l4402:	
 24433                           ;incstack = 0
 24434                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
 24435                           
 24436  167A  01F6               	clrf	i1___awdiv@sign
 24437  167B                     i1l4404:
 24438  167B  1FF1               	btfss	i1___awdiv@divisor+1,7
 24439  167C  2E7E               	goto	u262_21
 24440  167D  2E7F               	goto	u262_20
 24441  167E                     u262_21:
 24442  167E  2E86               	goto	i1l4410
 24443  167F                     u262_20:
 24444  167F                     i1l4406:
 24445  167F  09F0               	comf	i1___awdiv@divisor,f
 24446  1680  09F1               	comf	i1___awdiv@divisor+1,f
 24447  1681  0AF0               	incf	i1___awdiv@divisor,f
 24448  1682  1903               	skipnz
 24449  1683  0AF1               	incf	i1___awdiv@divisor+1,f
 24450  1684                     i1l4408:
 24451  1684  01F6               	clrf	i1___awdiv@sign
 24452  1685  0AF6               	incf	i1___awdiv@sign,f
 24453  1686                     i1l4410:
 24454  1686  1FF3               	btfss	i1___awdiv@dividend+1,7
 24455  1687  2E89               	goto	u263_21
 24456  1688  2E8A               	goto	u263_20
 24457  1689                     u263_21:
 24458  1689  2E93               	goto	i1l4416
 24459  168A                     u263_20:
 24460  168A                     i1l4412:
 24461  168A  09F2               	comf	i1___awdiv@dividend,f
 24462  168B  09F3               	comf	i1___awdiv@dividend+1,f
 24463  168C  0AF2               	incf	i1___awdiv@dividend,f
 24464  168D  1903               	skipnz
 24465  168E  0AF3               	incf	i1___awdiv@dividend+1,f
 24466  168F                     i1l4414:
 24467  168F  3001               	movlw	1
 24468  1690  00F4               	movwf	??i1___awdiv
 24469  1691  0874               	movf	??i1___awdiv,w
 24470  1692  06F6               	xorwf	i1___awdiv@sign,f
 24471  1693                     i1l4416:
 24472  1693  01F7               	clrf	i1___awdiv@quotient
 24473  1694  01F8               	clrf	i1___awdiv@quotient+1
 24474  1695                     i1l4418:
 24475  1695  0870               	movf	i1___awdiv@divisor,w
 24476  1696  0471               	iorwf	i1___awdiv@divisor+1,w
 24477  1697  1903               	btfsc	3,2
 24478  1698  2E9A               	goto	u264_21
 24479  1699  2E9B               	goto	u264_20
 24480  169A                     u264_21:
 24481  169A  2ECA               	goto	i1l4438
 24482  169B                     u264_20:
 24483  169B                     i1l4420:
 24484  169B  01F5               	clrf	i1___awdiv@counter
 24485  169C  0AF5               	incf	i1___awdiv@counter,f
 24486  169D  2EA7               	goto	i1l4426
 24487  169E                     i1l4422:
 24488  169E  3001               	movlw	1
 24489  169F                     u265_25:
 24490  169F  35F0               	lslf	i1___awdiv@divisor,f
 24491  16A0  0DF1               	rlf	i1___awdiv@divisor+1,f
 24492  16A1  0B89               	decfsz	9,f
 24493  16A2  2E9F               	goto	u265_25
 24494  16A3                     i1l4424:
 24495  16A3  3001               	movlw	1
 24496  16A4  00F4               	movwf	??i1___awdiv
 24497  16A5  0874               	movf	??i1___awdiv,w
 24498  16A6  07F5               	addwf	i1___awdiv@counter,f
 24499  16A7                     i1l4426:
 24500  16A7  1FF1               	btfss	i1___awdiv@divisor+1,7
 24501  16A8  2EAA               	goto	u266_21
 24502  16A9  2EAB               	goto	u266_20
 24503  16AA                     u266_21:
 24504  16AA  2E9E               	goto	i1l4422
 24505  16AB                     u266_20:
 24506  16AB                     i1l4428:
 24507  16AB  3001               	movlw	1
 24508  16AC                     u267_25:
 24509  16AC  35F7               	lslf	i1___awdiv@quotient,f
 24510  16AD  0DF8               	rlf	i1___awdiv@quotient+1,f
 24511  16AE  0B89               	decfsz	9,f
 24512  16AF  2EAC               	goto	u267_25
 24513  16B0  0871               	movf	i1___awdiv@divisor+1,w
 24514  16B1  0273               	subwf	i1___awdiv@dividend+1,w
 24515  16B2  1D03               	skipz
 24516  16B3  2EB6               	goto	u268_25
 24517  16B4  0870               	movf	i1___awdiv@divisor,w
 24518  16B5  0272               	subwf	i1___awdiv@dividend,w
 24519  16B6                     u268_25:
 24520  16B6  1C03               	skipc
 24521  16B7  2EB9               	goto	u268_21
 24522  16B8  2EBA               	goto	u268_20
 24523  16B9                     u268_21:
 24524  16B9  2EBF               	goto	i1l4434
 24525  16BA                     u268_20:
 24526  16BA                     i1l4430:
 24527  16BA  0870               	movf	i1___awdiv@divisor,w
 24528  16BB  02F2               	subwf	i1___awdiv@dividend,f
 24529  16BC  0871               	movf	i1___awdiv@divisor+1,w
 24530  16BD  3BF3               	subwfb	i1___awdiv@dividend+1,f
 24531  16BE                     i1l4432:
 24532  16BE  1477               	bsf	i1___awdiv@quotient,0
 24533  16BF                     i1l4434:
 24534  16BF  3001               	movlw	1
 24535  16C0                     u269_25:
 24536  16C0  36F1               	lsrf	i1___awdiv@divisor+1,f
 24537  16C1  0CF0               	rrf	i1___awdiv@divisor,f
 24538  16C2  0B89               	decfsz	9,f
 24539  16C3  2EC0               	goto	u269_25
 24540  16C4                     i1l4436:
 24541  16C4  3001               	movlw	1
 24542  16C5  02F5               	subwf	i1___awdiv@counter,f
 24543  16C6  1D03               	btfss	3,2
 24544  16C7  2EC9               	goto	u270_21
 24545  16C8  2ECA               	goto	u270_20
 24546  16C9                     u270_21:
 24547  16C9  2EAB               	goto	i1l4428
 24548  16CA                     u270_20:
 24549  16CA                     i1l4438:
 24550  16CA  0876               	movf	i1___awdiv@sign,w
 24551  16CB  1903               	btfsc	3,2
 24552  16CC  2ECE               	goto	u271_21
 24553  16CD  2ECF               	goto	u271_20
 24554  16CE                     u271_21:
 24555  16CE  2ED4               	goto	i1l4442
 24556  16CF                     u271_20:
 24557  16CF                     i1l4440:
 24558  16CF  09F7               	comf	i1___awdiv@quotient,f
 24559  16D0  09F8               	comf	i1___awdiv@quotient+1,f
 24560  16D1  0AF7               	incf	i1___awdiv@quotient,f
 24561  16D2  1903               	skipnz
 24562  16D3  0AF8               	incf	i1___awdiv@quotient+1,f
 24563  16D4                     i1l4442:
 24564  16D4  0878               	movf	i1___awdiv@quotient+1,w
 24565  16D5  00F1               	movwf	?i1___awdiv+1
 24566  16D6  0877               	movf	i1___awdiv@quotient,w
 24567  16D7  00F0               	movwf	?i1___awdiv
 24568  16D8                     i1l1775:
 24569  16D8  0008               	return
 24570  16D9                     __end_ofi1___awdiv:
 24571                           
 24572                           	psect	text134
 24573  1149                     __ptext134:	
 24574 ;; *************** function i1_int16ToBytes *****************
 24575 ;; Defined at:
 24576 ;;		line 142 in file "serial.c"
 24577 ;; Parameters:    Size  Location     Type
 24578 ;;  num             2    0[COMMON] short 
 24579 ;;  ndata           1    2[COMMON] PTR unsigned char 
 24580 ;;		 -> speedBuffer(12), 
 24581 ;; Auto vars:     Size  Location     Type
 24582 ;;  i               2    6[COMMON] int 
 24583 ;; Return value:  Size  Location     Type
 24584 ;;                  1    wreg      void 
 24585 ;; Registers used:
 24586 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24587 ;; Tracked objects:
 24588 ;;		On entry : 0/0
 24589 ;;		On exit  : 0/0
 24590 ;;		Unchanged: 0/0
 24591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24592 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24593 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24594 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24595 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24596 ;;Total ram usage:        8 bytes
 24597 ;; Hardware stack levels used:    1
 24598 ;; This function calls:
 24599 ;;		Nothing
 24600 ;; This function is called by:
 24601 ;;		i1_sendBTSpeedCmd
 24602 ;; This function uses a non-reentrant model
 24603 ;;
 24604                           
 24605                           
 24606                           ;psect for function i1_int16ToBytes
 24607  1149                     i1_int16ToBytes:
 24608  1149                     i1l4628:	
 24609                           ;incstack = 0
 24610                           ; Regs used in i1_int16ToBytes: [wreg+fsr1l+fsr1h+status,2+status,0]
 24611                           
 24612                           
 24613                           ;serial.c: 143:  for (int i = 0; i < 2; i++) {
 24614  1149  01F6               	clrf	i1int16ToBytes@i
 24615  114A  01F7               	clrf	i1int16ToBytes@i+1
 24616  114B                     i1l4634:
 24617                           
 24618                           ;serial.c: 144:   *ndata++ = ((uint8_t)(num & 0xFF));
 24619  114B  0870               	movf	i1int16ToBytes@num,w
 24620  114C  00F3               	movwf	??i1_int16ToBytes
 24621  114D  0872               	movf	i1int16ToBytes@ndata,w
 24622  114E  0086               	movwf	6
 24623  114F  3001               	movlw	1	; select bank2/3
 24624  1150  0087               	movwf	7
 24625  1151  0873               	movf	??i1_int16ToBytes,w
 24626  1152  0081               	movwf	1
 24627  1153                     i1l4636:
 24628  1153  3001               	movlw	1
 24629  1154  00F3               	movwf	??i1_int16ToBytes
 24630  1155  0873               	movf	??i1_int16ToBytes,w
 24631  1156  07F2               	addwf	i1int16ToBytes@ndata,f
 24632  1157                     i1l4638:
 24633                           
 24634                           ;serial.c: 145:   num = num >> 8;
 24635  1157  0871               	movf	i1int16ToBytes@num+1,w
 24636  1158  00F4               	movwf	??i1_int16ToBytes+1
 24637  1159  0870               	movf	i1int16ToBytes@num,w
 24638  115A  00F3               	movwf	??i1_int16ToBytes
 24639  115B  3008               	movlw	8
 24640  115C  00F5               	movwf	??i1_int16ToBytes+2
 24641  115D                     u306_25:
 24642  115D  0D74               	rlf	??i1_int16ToBytes+1,w
 24643  115E  0CF4               	rrf	??i1_int16ToBytes+1,f
 24644  115F  0CF3               	rrf	??i1_int16ToBytes,f
 24645  1160  0BF5               	decfsz	??i1_int16ToBytes+2,f
 24646  1161  295D               	goto	u306_25
 24647  1162  0873               	movf	??i1_int16ToBytes,w
 24648  1163  00F0               	movwf	i1int16ToBytes@num
 24649  1164  0874               	movf	??i1_int16ToBytes+1,w
 24650  1165  00F1               	movwf	i1int16ToBytes@num+1
 24651  1166                     i1l4640:
 24652                           
 24653                           ;serial.c: 146:  }
 24654  1166  3001               	movlw	1
 24655  1167  07F6               	addwf	i1int16ToBytes@i,f
 24656  1168  3000               	movlw	0
 24657  1169  3DF7               	addwfc	i1int16ToBytes@i+1,f
 24658  116A                     i1l4642:
 24659  116A  0877               	movf	i1int16ToBytes@i+1,w
 24660  116B  3A80               	xorlw	128
 24661  116C  00F3               	movwf	??i1_int16ToBytes
 24662  116D  3080               	movlw	128
 24663  116E  0273               	subwf	??i1_int16ToBytes,w
 24664  116F  1D03               	skipz
 24665  1170  2973               	goto	u307_25
 24666  1171  3002               	movlw	2
 24667  1172  0276               	subwf	i1int16ToBytes@i,w
 24668  1173                     u307_25:
 24669  1173  1C03               	skipc
 24670  1174  2976               	goto	u307_21
 24671  1175  2977               	goto	u307_20
 24672  1176                     u307_21:
 24673  1176  294B               	goto	i1l4634
 24674  1177                     u307_20:
 24675  1177                     i1l1058:
 24676  1177  0008               	return
 24677  1178                     __end_ofi1_int16ToBytes:
 24678                           
 24679                           	psect	text135
 24680  129B                     __ptext135:	
 24681 ;; *************** function i1_clampInt *****************
 24682 ;; Defined at:
 24683 ;;		line 149 in file "serial.c"
 24684 ;; Parameters:    Size  Location     Type
 24685 ;;  num             2    0[COMMON] short 
 24686 ;;  limit           2    2[COMMON] short 
 24687 ;; Auto vars:     Size  Location     Type
 24688 ;;		None
 24689 ;; Return value:  Size  Location     Type
 24690 ;;                  2    0[COMMON] short 
 24691 ;; Registers used:
 24692 ;;		wreg, status,2, status,0
 24693 ;; Tracked objects:
 24694 ;;		On entry : 0/0
 24695 ;;		On exit  : 0/0
 24696 ;;		Unchanged: 0/0
 24697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24698 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24700 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24701 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24702 ;;Total ram usage:        7 bytes
 24703 ;; Hardware stack levels used:    1
 24704 ;; This function calls:
 24705 ;;		Nothing
 24706 ;; This function is called by:
 24707 ;;		i1_sendBTSpeedCmd
 24708 ;; This function uses a non-reentrant model
 24709 ;;
 24710                           
 24711                           
 24712                           ;psect for function i1_clampInt
 24713  129B                     i1_clampInt:
 24714  129B                     i1l4644:	
 24715                           ;incstack = 0
 24716                           ; Regs used in i1_clampInt: [wreg+status,2+status,0]
 24717                           
 24718                           
 24719                           ;serial.c: 150:     if (num > limit)
 24720  129B  0873               	movf	i1clampInt@limit+1,w
 24721  129C  3A80               	xorlw	128
 24722  129D  00F4               	movwf	??i1_clampInt
 24723  129E  0871               	movf	i1clampInt@num+1,w
 24724  129F  3A80               	xorlw	128
 24725  12A0  0274               	subwf	??i1_clampInt,w
 24726  12A1  1D03               	skipz
 24727  12A2  2AA5               	goto	u308_25
 24728  12A3  0870               	movf	i1clampInt@num,w
 24729  12A4  0272               	subwf	i1clampInt@limit,w
 24730  12A5                     u308_25:
 24731  12A5  1803               	skipnc
 24732  12A6  2AA8               	goto	u308_21
 24733  12A7  2AA9               	goto	u308_20
 24734  12A8                     u308_21:
 24735  12A8  2AAE               	goto	i1l4648
 24736  12A9                     u308_20:
 24737  12A9                     i1l4646:
 24738                           
 24739                           ;serial.c: 151:         num = limit ;
 24740  12A9  0873               	movf	i1clampInt@limit+1,w
 24741  12AA  00F1               	movwf	i1clampInt@num+1
 24742  12AB  0872               	movf	i1clampInt@limit,w
 24743  12AC  00F0               	movwf	i1clampInt@num
 24744  12AD  2ACE               	goto	i1l4652
 24745  12AE                     i1l4648:
 24746  12AE  0972               	comf	i1clampInt@limit,w
 24747  12AF  00F4               	movwf	??i1_clampInt
 24748  12B0  0973               	comf	i1clampInt@limit+1,w
 24749  12B1  00F5               	movwf	??i1_clampInt+1
 24750  12B2  0AF4               	incf	??i1_clampInt,f
 24751  12B3  1903               	skipnz
 24752  12B4  0AF5               	incf	??i1_clampInt+1,f
 24753  12B5  0871               	movf	i1clampInt@num+1,w
 24754  12B6  3A80               	xorlw	128
 24755  12B7  00F6               	movwf	??i1_clampInt+2
 24756  12B8  0875               	movf	??i1_clampInt+1,w
 24757  12B9  3A80               	xorlw	128
 24758  12BA  0276               	subwf	??i1_clampInt+2,w
 24759  12BB  1D03               	skipz
 24760  12BC  2ABF               	goto	u309_25
 24761  12BD  0874               	movf	??i1_clampInt,w
 24762  12BE  0270               	subwf	i1clampInt@num,w
 24763  12BF                     u309_25:
 24764  12BF  1803               	skipnc
 24765  12C0  2AC2               	goto	u309_21
 24766  12C1  2AC3               	goto	u309_20
 24767  12C2                     u309_21:
 24768  12C2  2ACE               	goto	i1l4652
 24769  12C3                     u309_20:
 24770  12C3                     i1l4650:
 24771                           
 24772                           ;serial.c: 153:         num = - limit;
 24773  12C3  0972               	comf	i1clampInt@limit,w
 24774  12C4  00F4               	movwf	??i1_clampInt
 24775  12C5  0973               	comf	i1clampInt@limit+1,w
 24776  12C6  00F5               	movwf	??i1_clampInt+1
 24777  12C7  0AF4               	incf	??i1_clampInt,f
 24778  12C8  1903               	skipnz
 24779  12C9  0AF5               	incf	??i1_clampInt+1,f
 24780  12CA  0874               	movf	??i1_clampInt,w
 24781  12CB  00F0               	movwf	i1clampInt@num
 24782  12CC  0875               	movf	??i1_clampInt+1,w
 24783  12CD  00F1               	movwf	i1clampInt@num+1
 24784  12CE                     i1l4652:
 24785  12CE                     i1l1064:	
 24786                           ;serial.c: 154:     return num;
 24787                           
 24788  12CE  0008               	return
 24789  12CF                     __end_ofi1_clampInt:
 24790                           
 24791                           	psect	text136
 24792  16D9                     __ptext136:	
 24793 ;; *************** function i1_calcCRC *****************
 24794 ;; Defined at:
 24795 ;;		line 116 in file "serial.c"
 24796 ;; Parameters:    Size  Location     Type
 24797 ;;  ptr             1    wreg     PTR unsigned char 
 24798 ;;		 -> estopBuffer(8), speedBuffer(12), 
 24799 ;; Auto vars:     Size  Location     Type
 24800 ;;  ptr             1    5[COMMON] PTR unsigned char 
 24801 ;;		 -> estopBuffer(8), speedBuffer(12), 
 24802 ;;  crc             2    6[COMMON] unsigned short 
 24803 ;;  count           1    4[COMMON] char 
 24804 ;;  i               1    3[COMMON] unsigned char 
 24805 ;; Return value:  Size  Location     Type
 24806 ;;                  2    0[None  ] unsigned short 
 24807 ;; Registers used:
 24808 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24809 ;; Tracked objects:
 24810 ;;		On entry : 0/0
 24811 ;;		On exit  : 0/0
 24812 ;;		Unchanged: 0/0
 24813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24815 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24816 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24817 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24818 ;;Total ram usage:        8 bytes
 24819 ;; Hardware stack levels used:    1
 24820 ;; This function calls:
 24821 ;;		Nothing
 24822 ;; This function is called by:
 24823 ;;		_sendBTEstopCmd
 24824 ;;		i1_sendBTSpeedCmd
 24825 ;; This function uses a non-reentrant model
 24826 ;;
 24827                           
 24828                           
 24829                           ;psect for function i1_calcCRC
 24830  16D9                     i1_calcCRC:
 24831                           
 24832                           ;incstack = 0
 24833                           ; Regs used in i1_calcCRC: [wreg+fsr1l+fsr1h+status,2+status,0]
 24834                           ;i1calcCRC@ptr stored from wreg
 24835  16D9  00F5               	movwf	i1calcCRC@ptr
 24836  16DA                     i1l4598:
 24837                           
 24838                           ;serial.c: 116: uint16_t calcCRC(uint8_t *ptr);serial.c: 117: {;serial.c: 118:   uint16_
      +                          t crc;;serial.c: 119:   uint8_t i;;serial.c: 120:   int8_t count = ptr[1] + 5;
 24839  16DA  0A75               	incf	i1calcCRC@ptr,w
 24840  16DB  0086               	movwf	6
 24841  16DC  3001               	movlw	1	; select bank2/3
 24842  16DD  0087               	movwf	7
 24843  16DE  0801               	movf	1,w
 24844  16DF  3E05               	addlw	5
 24845  16E0  00F0               	movwf	??i1_calcCRC
 24846  16E1  0870               	movf	??i1_calcCRC,w
 24847  16E2  00F4               	movwf	i1calcCRC@count
 24848  16E3                     i1l4600:
 24849                           
 24850                           ;serial.c: 121:   crc = 0;
 24851  16E3  01F6               	clrf	i1calcCRC@crc
 24852  16E4  01F7               	clrf	i1calcCRC@crc+1
 24853                           
 24854                           ;serial.c: 123:   while (--count >= 0)
 24855  16E5  2F19               	goto	i1l4616
 24856  16E6                     i1l4602:
 24857                           
 24858                           ;serial.c: 124:   {;serial.c: 125:     crc = crc ^ (uint16_t) *ptr++ << 8;
 24859  16E6  0875               	movf	i1calcCRC@ptr,w
 24860  16E7  0086               	movwf	6
 24861  16E8  3001               	movlw	1	; select bank2/3
 24862  16E9  0087               	movwf	7
 24863  16EA  0801               	movf	1,w
 24864  16EB  00F0               	movwf	??i1_calcCRC
 24865  16EC  01F1               	clrf	??i1_calcCRC+1
 24866  16ED  0870               	movf	??i1_calcCRC,w
 24867  16EE  00F1               	movwf	??i1_calcCRC+1
 24868  16EF  01F0               	clrf	??i1_calcCRC
 24869  16F0  0876               	movf	i1calcCRC@crc,w
 24870  16F1  0670               	xorwf	??i1_calcCRC,w
 24871  16F2  00F6               	movwf	i1calcCRC@crc
 24872  16F3  0877               	movf	i1calcCRC@crc+1,w
 24873  16F4  0671               	xorwf	??i1_calcCRC+1,w
 24874  16F5  00F7               	movwf	i1calcCRC@crc+1
 24875  16F6                     i1l4604:
 24876  16F6  3001               	movlw	1
 24877  16F7  00F0               	movwf	??i1_calcCRC
 24878  16F8  0870               	movf	??i1_calcCRC,w
 24879  16F9  07F5               	addwf	i1calcCRC@ptr,f
 24880  16FA                     i1l4606:
 24881                           
 24882                           ;serial.c: 126:     i = 8;
 24883  16FA  3008               	movlw	8
 24884  16FB  00F0               	movwf	??i1_calcCRC
 24885  16FC  0870               	movf	??i1_calcCRC,w
 24886  16FD  00F3               	movwf	i1calcCRC@i
 24887  16FE                     i1l4608:
 24888                           
 24889                           ;serial.c: 128:     {;serial.c: 129:       if (crc & 0x8000)
 24890  16FE  1FF7               	btfss	i1calcCRC@crc+1,7
 24891  16FF  2F01               	goto	u303_21
 24892  1700  2F02               	goto	u303_20
 24893  1701                     u303_21:
 24894  1701  2F0F               	goto	i1l4612
 24895  1702                     u303_20:
 24896  1702                     i1l4610:
 24897                           
 24898                           ;serial.c: 130:         crc = crc << 1 ^ 0x1021;
 24899  1702  0877               	movf	i1calcCRC@crc+1,w
 24900  1703  00F1               	movwf	??i1_calcCRC+1
 24901  1704  0876               	movf	i1calcCRC@crc,w
 24902  1705  00F0               	movwf	??i1_calcCRC
 24903  1706  35F0               	lslf	??i1_calcCRC,f
 24904  1707  0DF1               	rlf	??i1_calcCRC+1,f
 24905  1708  3021               	movlw	33
 24906  1709  0670               	xorwf	??i1_calcCRC,w
 24907  170A  00F6               	movwf	i1calcCRC@crc
 24908  170B  3010               	movlw	16
 24909  170C  0671               	xorwf	??i1_calcCRC+1,w
 24910  170D  00F7               	movwf	i1calcCRC@crc+1
 24911  170E  2F13               	goto	i1l4614
 24912  170F                     i1l4612:
 24913                           
 24914                           ;serial.c: 132:         crc = crc << 1;
 24915  170F  3576               	lslf	i1calcCRC@crc,w
 24916  1710  00F6               	movwf	i1calcCRC@crc
 24917  1711  0D77               	rlf	i1calcCRC@crc+1,w
 24918  1712  00F7               	movwf	i1calcCRC@crc+1
 24919  1713                     i1l4614:
 24920                           
 24921                           ;serial.c: 133:     } while(--i);
 24922  1713  3001               	movlw	1
 24923  1714  02F3               	subwf	i1calcCRC@i,f
 24924  1715  1D03               	btfss	3,2
 24925  1716  2F18               	goto	u304_21
 24926  1717  2F19               	goto	u304_20
 24927  1718                     u304_21:
 24928  1718  2EFE               	goto	i1l4608
 24929  1719                     u304_20:
 24930  1719                     i1l4616:
 24931                           
 24932                           ;serial.c: 123:   while (--count >= 0)
 24933  1719  30FF               	movlw	255
 24934  171A  00F0               	movwf	??i1_calcCRC
 24935  171B  0870               	movf	??i1_calcCRC,w
 24936  171C  07F4               	addwf	i1calcCRC@count,f
 24937  171D  1FF4               	btfss	i1calcCRC@count,7
 24938  171E  2F20               	goto	u305_21
 24939  171F  2F21               	goto	u305_20
 24940  1720                     u305_21:
 24941  1720  2EE6               	goto	i1l4602
 24942  1721                     u305_20:
 24943  1721                     i1l4618:
 24944                           
 24945                           ;serial.c: 136:   *ptr++ = crc & 0xFF;
 24946  1721  0876               	movf	i1calcCRC@crc,w
 24947  1722  00F0               	movwf	??i1_calcCRC
 24948  1723  0875               	movf	i1calcCRC@ptr,w
 24949  1724  0086               	movwf	6
 24950  1725  3001               	movlw	1	; select bank2/3
 24951  1726  0087               	movwf	7
 24952  1727  0870               	movf	??i1_calcCRC,w
 24953  1728  0081               	movwf	1
 24954  1729                     i1l4620:
 24955  1729  3001               	movlw	1
 24956  172A  00F0               	movwf	??i1_calcCRC
 24957  172B  0870               	movf	??i1_calcCRC,w
 24958  172C  07F5               	addwf	i1calcCRC@ptr,f
 24959  172D                     i1l4622:
 24960                           
 24961                           ;serial.c: 137:   *ptr++ = (crc >> 8) & 0xFF;
 24962  172D  0877               	movf	i1calcCRC@crc+1,w
 24963  172E  00F0               	movwf	??i1_calcCRC
 24964  172F  0875               	movf	i1calcCRC@ptr,w
 24965  1730  0086               	movwf	6
 24966  1731  3001               	movlw	1	; select bank2/3
 24967  1732  0087               	movwf	7
 24968  1733  0870               	movf	??i1_calcCRC,w
 24969  1734  0081               	movwf	1
 24970  1735                     i1l4624:
 24971  1735  3001               	movlw	1
 24972  1736  00F0               	movwf	??i1_calcCRC
 24973  1737  0870               	movf	??i1_calcCRC,w
 24974  1738  07F5               	addwf	i1calcCRC@ptr,f
 24975  1739                     i1l1053:
 24976  1739  0008               	return
 24977  173A                     __end_ofi1_calcCRC:
 24978                           
 24979                           	psect	text137
 24980  106A                     __ptext137:	
 24981 ;; *************** function _calculateMotion *****************
 24982 ;; Defined at:
 24983 ;;		line 261 in file "joystick.c"
 24984 ;; Parameters:    Size  Location     Type
 24985 ;;		None
 24986 ;; Auto vars:     Size  Location     Type
 24987 ;;		None
 24988 ;; Return value:  Size  Location     Type
 24989 ;;                  1    wreg      void 
 24990 ;; Registers used:
 24991 ;;		wreg, status,2, status,0, pclath, cstack
 24992 ;; Tracked objects:
 24993 ;;		On entry : 0/0
 24994 ;;		On exit  : 0/0
 24995 ;;		Unchanged: 0/0
 24996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25001 ;;Total ram usage:        0 bytes
 25002 ;; Hardware stack levels used:    1
 25003 ;; Hardware stack levels required when called:    1
 25004 ;; This function calls:
 25005 ;;		_limitSpeed
 25006 ;; This function is called by:
 25007 ;;		_readButtonJoystick
 25008 ;;		_readPotJoystick
 25009 ;; This function uses a non-reentrant model
 25010 ;;
 25011                           
 25012                           
 25013                           ;psect for function _calculateMotion
 25014  106A                     _calculateMotion:
 25015  106A                     i1l4700:	
 25016                           ;incstack = 0
 25017                           ; Regs used in _calculateMotion: [wreg+status,2+status,0+pclath+cstack]
 25018                           
 25019                           
 25020                           ;joystick.c: 263:     limitedAxialFP = limitSpeed(targetAxialFP, limitedAxialFP, accelAx
      +                          ialFP);
 25021  106A  0140               	movlb	0	; select bank0
 25022  106B  0842               	movf	_targetAxialFP+1,w
 25023  106C  00F1               	movwf	limitSpeed@targetFP+1
 25024  106D  0841               	movf	_targetAxialFP,w
 25025  106E  00F0               	movwf	limitSpeed@targetFP
 25026  106F  0840               	movf	_limitedAxialFP+1,w
 25027  1070  00F3               	movwf	limitSpeed@limitedFP+1
 25028  1071  083F               	movf	_limitedAxialFP,w
 25029  1072  00F2               	movwf	limitSpeed@limitedFP
 25030  1073  0141               	movlb	1	; select bank1
 25031  1074  0841               	movf	(_accelAxialFP+1)^(0+128),w
 25032  1075  00F5               	movwf	limitSpeed@accelFP+1
 25033  1076  0840               	movf	_accelAxialFP^(0+128),w
 25034  1077  00F4               	movwf	limitSpeed@accelFP
 25035  1078  3195  2517  3190   	fcall	_limitSpeed
 25036  107B  0871               	movf	?_limitSpeed+1,w
 25037  107C  0140               	movlb	0	; select bank0
 25038  107D  00C0               	movwf	_limitedAxialFP+1
 25039  107E  0870               	movf	?_limitSpeed,w
 25040  107F  00BF               	movwf	_limitedAxialFP
 25041                           
 25042                           ;joystick.c: 264:     limitedYawFP = limitSpeed(targetYawFP, limitedYawFP, accelYawFP);
 25043  1080  0141               	movlb	1	; select bank1
 25044  1081  0845               	movf	(_targetYawFP+1)^(0+128),w
 25045  1082  00F1               	movwf	limitSpeed@targetFP+1
 25046  1083  0844               	movf	_targetYawFP^(0+128),w
 25047  1084  00F0               	movwf	limitSpeed@targetFP
 25048  1085  0843               	movf	(_limitedYawFP+1)^(0+128),w
 25049  1086  00F3               	movwf	limitSpeed@limitedFP+1
 25050  1087  0842               	movf	_limitedYawFP^(0+128),w
 25051  1088  00F2               	movwf	limitSpeed@limitedFP
 25052  1089  083F               	movf	(_accelYawFP+1)^(0+128),w
 25053  108A  00F5               	movwf	limitSpeed@accelFP+1
 25054  108B  083E               	movf	_accelYawFP^(0+128),w
 25055  108C  00F4               	movwf	limitSpeed@accelFP
 25056  108D  3195  2517  3190   	fcall	_limitSpeed
 25057  1090  0871               	movf	?_limitSpeed+1,w
 25058  1091  0141               	movlb	1	; select bank1
 25059  1092  00C3               	movwf	(_limitedYawFP+1)^(0+128)
 25060  1093  0870               	movf	?_limitSpeed,w
 25061  1094  00C2               	movwf	_limitedYawFP^(0+128)
 25062  1095                     i1l950:
 25063  1095  0008               	return
 25064  1096                     __end_of_calculateMotion:
 25065                           
 25066                           	psect	text138
 25067  1517                     __ptext138:	
 25068 ;; *************** function _limitSpeed *****************
 25069 ;; Defined at:
 25070 ;;		line 267 in file "joystick.c"
 25071 ;; Parameters:    Size  Location     Type
 25072 ;;  targetFP        2    0[COMMON] short 
 25073 ;;  limitedFP       2    2[COMMON] short 
 25074 ;;  accelFP         2    4[COMMON] short 
 25075 ;; Auto vars:     Size  Location     Type
 25076 ;;  diffFP          2   11[COMMON] short 
 25077 ;;  speedFP         2    9[COMMON] short 
 25078 ;; Return value:  Size  Location     Type
 25079 ;;                  2    0[COMMON] short 
 25080 ;; Registers used:
 25081 ;;		wreg, status,2, status,0
 25082 ;; Tracked objects:
 25083 ;;		On entry : 0/0
 25084 ;;		On exit  : 0/0
 25085 ;;		Unchanged: 0/0
 25086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25087 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25088 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25089 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25090 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25091 ;;Total ram usage:       13 bytes
 25092 ;; Hardware stack levels used:    1
 25093 ;; This function calls:
 25094 ;;		Nothing
 25095 ;; This function is called by:
 25096 ;;		_calculateMotion
 25097 ;; This function uses a non-reentrant model
 25098 ;;
 25099                           
 25100                           
 25101                           ;psect for function _limitSpeed
 25102  1517                     _limitSpeed:
 25103  1517                     i1l4512:	
 25104                           ;incstack = 0
 25105                           ; Regs used in _limitSpeed: [wreg+status,2+status,0]
 25106                           
 25107                           
 25108                           ;joystick.c: 269:     int16_t diffFP = targetFP - limitedFP;
 25109  1517  0872               	movf	limitSpeed@limitedFP,w
 25110  1518  0270               	subwf	limitSpeed@targetFP,w
 25111  1519  00FB               	movwf	limitSpeed@diffFP
 25112  151A  0873               	movf	limitSpeed@limitedFP+1,w
 25113  151B  3B71               	subwfb	limitSpeed@targetFP+1,w
 25114  151C  00FC               	movwf	limitSpeed@diffFP+1
 25115  151D                     i1l4514:
 25116                           
 25117                           ;joystick.c: 270:     int16_t speedFP = targetFP;
 25118  151D  0871               	movf	limitSpeed@targetFP+1,w
 25119  151E  00FA               	movwf	limitSpeed@speedFP+1
 25120  151F  0870               	movf	limitSpeed@targetFP,w
 25121  1520  00F9               	movwf	limitSpeed@speedFP
 25122  1521                     i1l4516:
 25123                           
 25124                           ;joystick.c: 273:     if (targetFP == 0)
 25125  1521  0870               	movf	limitSpeed@targetFP,w
 25126  1522  0471               	iorwf	limitSpeed@targetFP+1,w
 25127  1523  1D03               	btfss	3,2
 25128  1524  2D26               	goto	u284_21
 25129  1525  2D27               	goto	u284_20
 25130  1526                     u284_21:
 25131  1526  2D2C               	goto	i1l4520
 25132  1527                     u284_20:
 25133  1527                     i1l4518:
 25134                           
 25135                           ;joystick.c: 274:         accelFP *= 2;
 25136  1527  3001               	movlw	1
 25137  1528                     u285_25:
 25138  1528  35F4               	lslf	limitSpeed@accelFP,f
 25139  1529  0DF5               	rlf	limitSpeed@accelFP+1,f
 25140  152A  0B89               	decfsz	9,f
 25141  152B  2D28               	goto	u285_25
 25142  152C                     i1l4520:
 25143                           
 25144                           ;joystick.c: 277:     if (accelFP == 0)
 25145  152C  0874               	movf	limitSpeed@accelFP,w
 25146  152D  0475               	iorwf	limitSpeed@accelFP+1,w
 25147  152E  1D03               	btfss	3,2
 25148  152F  2D31               	goto	u286_21
 25149  1530  2D32               	goto	u286_20
 25150  1531                     u286_21:
 25151  1531  2D36               	goto	i1l954
 25152  1532                     u286_20:
 25153  1532                     i1l4522:
 25154                           
 25155                           ;joystick.c: 278:         accelFP = 1;
 25156  1532  3001               	movlw	1
 25157  1533  00F4               	movwf	limitSpeed@accelFP
 25158  1534  3000               	movlw	0
 25159  1535  00F5               	movwf	limitSpeed@accelFP+1
 25160  1536                     i1l954:
 25161                           
 25162                           ;joystick.c: 281:     if (diffFP > accelFP){
 25163  1536  0875               	movf	limitSpeed@accelFP+1,w
 25164  1537  3A80               	xorlw	128
 25165  1538  00F6               	movwf	??_limitSpeed
 25166  1539  087C               	movf	limitSpeed@diffFP+1,w
 25167  153A  3A80               	xorlw	128
 25168  153B  0276               	subwf	??_limitSpeed,w
 25169  153C  1D03               	skipz
 25170  153D  2D40               	goto	u287_25
 25171  153E  087B               	movf	limitSpeed@diffFP,w
 25172  153F  0274               	subwf	limitSpeed@accelFP,w
 25173  1540                     u287_25:
 25174  1540  1803               	skipnc
 25175  1541  2D43               	goto	u287_21
 25176  1542  2D44               	goto	u287_20
 25177  1543                     u287_21:
 25178  1543  2D4B               	goto	i1l4526
 25179  1544                     u287_20:
 25180  1544                     i1l4524:
 25181                           
 25182                           ;joystick.c: 282:         speedFP = limitedFP + accelFP;
 25183  1544  0874               	movf	limitSpeed@accelFP,w
 25184  1545  0772               	addwf	limitSpeed@limitedFP,w
 25185  1546  00F9               	movwf	limitSpeed@speedFP
 25186  1547  0875               	movf	limitSpeed@accelFP+1,w
 25187  1548  3D73               	addwfc	limitSpeed@limitedFP+1,w
 25188  1549  00FA               	movwf	limitSpeed@speedFP+1
 25189                           
 25190                           ;joystick.c: 283:     } else if (diffFP < -accelFP){
 25191  154A  2D66               	goto	i1l4530
 25192  154B                     i1l4526:
 25193  154B  0974               	comf	limitSpeed@accelFP,w
 25194  154C  00F6               	movwf	??_limitSpeed
 25195  154D  0975               	comf	limitSpeed@accelFP+1,w
 25196  154E  00F7               	movwf	??_limitSpeed+1
 25197  154F  0AF6               	incf	??_limitSpeed,f
 25198  1550  1903               	skipnz
 25199  1551  0AF7               	incf	??_limitSpeed+1,f
 25200  1552  087C               	movf	limitSpeed@diffFP+1,w
 25201  1553  3A80               	xorlw	128
 25202  1554  00F8               	movwf	??_limitSpeed+2
 25203  1555  0877               	movf	??_limitSpeed+1,w
 25204  1556  3A80               	xorlw	128
 25205  1557  0278               	subwf	??_limitSpeed+2,w
 25206  1558  1D03               	skipz
 25207  1559  2D5C               	goto	u288_25
 25208  155A  0876               	movf	??_limitSpeed,w
 25209  155B  027B               	subwf	limitSpeed@diffFP,w
 25210  155C                     u288_25:
 25211  155C  1803               	skipnc
 25212  155D  2D5F               	goto	u288_21
 25213  155E  2D60               	goto	u288_20
 25214  155F                     u288_21:
 25215  155F  2D66               	goto	i1l4530
 25216  1560                     u288_20:
 25217  1560                     i1l4528:
 25218                           
 25219                           ;joystick.c: 284:         speedFP = limitedFP - accelFP;
 25220  1560  0874               	movf	limitSpeed@accelFP,w
 25221  1561  0272               	subwf	limitSpeed@limitedFP,w
 25222  1562  00F9               	movwf	limitSpeed@speedFP
 25223  1563  0875               	movf	limitSpeed@accelFP+1,w
 25224  1564  3B73               	subwfb	limitSpeed@limitedFP+1,w
 25225  1565  00FA               	movwf	limitSpeed@speedFP+1
 25226  1566                     i1l4530:
 25227                           
 25228                           ;joystick.c: 287:     return (speedFP);
 25229  1566  087A               	movf	limitSpeed@speedFP+1,w
 25230  1567  00F1               	movwf	?_limitSpeed+1
 25231  1568  0879               	movf	limitSpeed@speedFP,w
 25232  1569  00F0               	movwf	?_limitSpeed
 25233  156A                     i1l958:
 25234  156A  0008               	return
 25235  156B                     __end_of_limitSpeed:
 25236                           
 25237                           	psect	text139
 25238  1BA4                     __ptext139:	
 25239 ;; *************** function _PIN_MANAGER_IOC *****************
 25240 ;; Defined at:
 25241 ;;		line 140 in file "mcc_generated_files/pin_manager.c"
 25242 ;; Parameters:    Size  Location     Type
 25243 ;;		None
 25244 ;; Auto vars:     Size  Location     Type
 25245 ;;		None
 25246 ;; Return value:  Size  Location     Type
 25247 ;;                  1    wreg      void 
 25248 ;; Registers used:
 25249 ;;		wreg, status,2, status,0, pclath, cstack
 25250 ;; Tracked objects:
 25251 ;;		On entry : 0/0
 25252 ;;		On exit  : 0/0
 25253 ;;		Unchanged: 0/0
 25254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25259 ;;Total ram usage:        0 bytes
 25260 ;; Hardware stack levels used:    1
 25261 ;; Hardware stack levels required when called:    3
 25262 ;; This function calls:
 25263 ;;		_IOCCF0_ISR
 25264 ;;		_IOCCF2_ISR
 25265 ;; This function is called by:
 25266 ;;		_INTERRUPT_InterruptManager
 25267 ;; This function uses a non-reentrant model
 25268 ;;
 25269                           
 25270                           
 25271                           ;psect for function _PIN_MANAGER_IOC
 25272  1BA4                     _PIN_MANAGER_IOC:
 25273  1BA4                     i1l7514:	
 25274                           ;incstack = 0
 25275                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 25276                           
 25277                           
 25278                           ;mcc_generated_files/pin_manager.c: 143:     if(IOCCFbits.IOCCF0 == 1)
 25279  1BA4  017E               	movlb	62	; select bank62
 25280  1BA5  1C55               	btfss	85,0	;volatile
 25281  1BA6  2BA8               	goto	u616_21
 25282  1BA7  2BA9               	goto	u616_20
 25283  1BA8                     u616_21:
 25284  1BA8  2BAC               	goto	i1l7518
 25285  1BA9                     u616_20:
 25286  1BA9                     i1l7516:
 25287                           
 25288                           ;mcc_generated_files/pin_manager.c: 144:     {;mcc_generated_files/pin_manager.c: 145:  
      +                                 IOCCF0_ISR();
 25289  1BA9  319B  2367  319B   	fcall	_IOCCF0_ISR
 25290  1BAC                     i1l7518:
 25291                           
 25292                           ;mcc_generated_files/pin_manager.c: 148:     if(IOCCFbits.IOCCF2 == 1)
 25293  1BAC  017E               	movlb	62	; select bank62
 25294  1BAD  1D55               	btfss	85,2	;volatile
 25295  1BAE  2BB0               	goto	u617_21
 25296  1BAF  2BB1               	goto	u617_20
 25297  1BB0                     u617_21:
 25298  1BB0  2BB4               	goto	i1l428
 25299  1BB1                     u617_20:
 25300  1BB1                     i1l7520:
 25301                           
 25302                           ;mcc_generated_files/pin_manager.c: 149:     {;mcc_generated_files/pin_manager.c: 150:  
      +                                 IOCCF2_ISR();
 25303  1BB1  319B  2376  319B   	fcall	_IOCCF2_ISR
 25304  1BB4                     i1l428:
 25305  1BB4  0008               	return
 25306  1BB5                     __end_of_PIN_MANAGER_IOC:
 25307                           
 25308                           	psect	text140
 25309  1B76                     __ptext140:	
 25310 ;; *************** function _IOCCF2_ISR *****************
 25311 ;; Defined at:
 25312 ;;		line 187 in file "mcc_generated_files/pin_manager.c"
 25313 ;; Parameters:    Size  Location     Type
 25314 ;;		None
 25315 ;; Auto vars:     Size  Location     Type
 25316 ;;		None
 25317 ;; Return value:  Size  Location     Type
 25318 ;;                  1    wreg      void 
 25319 ;; Registers used:
 25320 ;;		wreg, status,2, status,0, pclath, cstack
 25321 ;; Tracked objects:
 25322 ;;		On entry : 0/0
 25323 ;;		On exit  : 0/0
 25324 ;;		Unchanged: 0/0
 25325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25330 ;;Total ram usage:        0 bytes
 25331 ;; Hardware stack levels used:    1
 25332 ;; Hardware stack levels required when called:    2
 25333 ;; This function calls:
 25334 ;;		Absolute function
 25335 ;;		_IOCCF2_DefaultInterruptHandler
 25336 ;;		i1_turnPowerOn
 25337 ;; This function is called by:
 25338 ;;		_PIN_MANAGER_IOC
 25339 ;; This function uses a non-reentrant model
 25340 ;;
 25341                           
 25342                           
 25343                           ;psect for function _IOCCF2_ISR
 25344  1B76                     _IOCCF2_ISR:
 25345  1B76                     i1l7308:	
 25346                           ;incstack = 0
 25347                           ; Regs used in _IOCCF2_ISR: [wreg+status,2+status,0+pclath+cstack]
 25348                           
 25349                           
 25350                           ;mcc_generated_files/pin_manager.c: 192:     if(IOCCF2_InterruptHandler)
 25351  1B76  0141               	movlb	1	; select bank1
 25352  1B77  084E               	movf	_IOCCF2_InterruptHandler^(0+128),w
 25353  1B78  044F               	iorwf	(_IOCCF2_InterruptHandler+1)^(0+128),w
 25354  1B79  1903               	btfsc	3,2
 25355  1B7A  2B7C               	goto	u602_21
 25356  1B7B  2B7D               	goto	u602_20
 25357  1B7C                     u602_21:
 25358  1B7C  2B82               	goto	i1l7312
 25359  1B7D                     u602_20:
 25360  1B7D                     i1l7310:
 25361                           
 25362                           ;mcc_generated_files/pin_manager.c: 193:     {;mcc_generated_files/pin_manager.c: 194:  
      +                                 IOCCF2_InterruptHandler();
 25363  1B7D  084F               	movf	(_IOCCF2_InterruptHandler+1)^(0+128),w
 25364  1B7E  008A               	movwf	10
 25365  1B7F  084E               	movf	_IOCCF2_InterruptHandler^(0+128),w
 25366  1B80  000A               	callw
 25367  1B81  319B               	pagesel	$
 25368  1B82                     i1l7312:
 25369                           
 25370                           ;mcc_generated_files/pin_manager.c: 196:     IOCCFbits.IOCCF2 = 0;
 25371  1B82  017E               	movlb	62	; select bank62
 25372  1B83  1155               	bcf	85,2	;volatile
 25373  1B84                     i1l442:
 25374  1B84  0008               	return
 25375  1B85                     __end_of_IOCCF2_ISR:
 25376                           
 25377                           	psect	text141
 25378  19E2                     __ptext141:	
 25379 ;; *************** function _IOCCF0_DefaultInterruptHandler *****************
 25380 ;; Defined at:
 25381 ;;		line 179 in file "mcc_generated_files/pin_manager.c"
 25382 ;; Parameters:    Size  Location     Type
 25383 ;;		None
 25384 ;; Auto vars:     Size  Location     Type
 25385 ;;		None
 25386 ;; Return value:  Size  Location     Type
 25387 ;;                  1    wreg      void 
 25388 ;; Registers used:
 25389 ;;		None
 25390 ;; Tracked objects:
 25391 ;;		On entry : 0/0
 25392 ;;		On exit  : 0/0
 25393 ;;		Unchanged: 0/0
 25394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25399 ;;Total ram usage:        0 bytes
 25400 ;; Hardware stack levels used:    1
 25401 ;; This function calls:
 25402 ;;		Nothing
 25403 ;; This function is called by:
 25404 ;;		_PIN_MANAGER_Initialize
 25405 ;;		_IOCCF0_ISR
 25406 ;; This function uses a non-reentrant model
 25407 ;;
 25408                           
 25409                           
 25410                           ;psect for function _IOCCF0_DefaultInterruptHandler
 25411  19E2                     _IOCCF0_DefaultInterruptHandler:
 25412  19E2                     i1l438:	
 25413                           ;incstack = 0
 25414                           ; Regs used in _IOCCF0_DefaultInterruptHandler: []
 25415                           
 25416  19E2  0008               	return
 25417  19E3                     __end_of_IOCCF0_DefaultInterruptHandler:
 25418                           
 25419                           	psect	text142
 25420  1AF1                     __ptext142:	
 25421 ;; *************** function i1_turnPowerOn *****************
 25422 ;; Defined at:
 25423 ;;		line 57 in file "configure.c"
 25424 ;; Parameters:    Size  Location     Type
 25425 ;;		None
 25426 ;; Auto vars:     Size  Location     Type
 25427 ;;		None
 25428 ;; Return value:  Size  Location     Type
 25429 ;;                  1    wreg      void 
 25430 ;; Registers used:
 25431 ;;		wreg, status,2, status,0, pclath, cstack
 25432 ;; Tracked objects:
 25433 ;;		On entry : 0/0
 25434 ;;		On exit  : 0/0
 25435 ;;		Unchanged: 0/0
 25436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25441 ;;Total ram usage:        0 bytes
 25442 ;; Hardware stack levels used:    1
 25443 ;; Hardware stack levels required when called:    1
 25444 ;; This function calls:
 25445 ;;		i1_SetSlaveTXRX
 25446 ;; This function is called by:
 25447 ;;		_IOCCF0_ISR
 25448 ;;		_IOCCF2_ISR
 25449 ;; This function uses a non-reentrant model
 25450 ;;
 25451                           
 25452                           
 25453                           ;psect for function i1_turnPowerOn
 25454  1AF1                     i1_turnPowerOn:
 25455  1AF1                     i1l1207:	
 25456                           ;incstack = 0
 25457                           ; Regs used in i1_turnPowerOn: [wreg+status,2+status,0+pclath+cstack]
 25458                           ;configure.c: 58:     do { LATCbits.LATC7 = 1; } while(0);
 25459                           
 25460  1AF1  0140               	movlb	0	; select bank0
 25461  1AF2  179A               	bsf	26,7	;volatile
 25462  1AF3                     i1l1209:	
 25463                           ;configure.c: 59:     do { LATAbits.LATA5 = 0; } while(0);
 25464                           
 25465  1AF3  1298               	bcf	24,5	;volatile
 25466  1AF4                     i1l5576:
 25467                           
 25468                           ;configure.c: 60:     TRISC = 0x2F;
 25469  1AF4  302F               	movlw	47
 25470  1AF5  0094               	movwf	20	;volatile
 25471  1AF6                     i1l5578:
 25472                           
 25473                           ;configure.c: 61:     SetSlaveTXRX();
 25474  1AF6  319A  223F  319A   	fcall	i1_SetSlaveTXRX
 25475  1AF9                     i1l5580:
 25476                           
 25477                           ;configure.c: 62:     powerOn = 1;
 25478  1AF9  0140               	movlb	0	; select bank0
 25479  1AFA  01CA               	clrf	_powerOn
 25480  1AFB  0ACA               	incf	_powerOn,f
 25481  1AFC                     i1l1211:
 25482  1AFC  0008               	return
 25483  1AFD                     __end_ofi1_turnPowerOn:
 25484                           
 25485                           	psect	text143
 25486  19E1                     __ptext143:	
 25487 ;; *************** function _IOCCF2_DefaultInterruptHandler *****************
 25488 ;; Defined at:
 25489 ;;		line 209 in file "mcc_generated_files/pin_manager.c"
 25490 ;; Parameters:    Size  Location     Type
 25491 ;;		None
 25492 ;; Auto vars:     Size  Location     Type
 25493 ;;		None
 25494 ;; Return value:  Size  Location     Type
 25495 ;;                  1    wreg      void 
 25496 ;; Registers used:
 25497 ;;		None
 25498 ;; Tracked objects:
 25499 ;;		On entry : 0/0
 25500 ;;		On exit  : 0/0
 25501 ;;		Unchanged: 0/0
 25502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25507 ;;Total ram usage:        0 bytes
 25508 ;; Hardware stack levels used:    1
 25509 ;; This function calls:
 25510 ;;		Nothing
 25511 ;; This function is called by:
 25512 ;;		_PIN_MANAGER_Initialize
 25513 ;;		_IOCCF2_ISR
 25514 ;; This function uses a non-reentrant model
 25515 ;;
 25516                           
 25517                           
 25518                           ;psect for function _IOCCF2_DefaultInterruptHandler
 25519  19E1                     _IOCCF2_DefaultInterruptHandler:
 25520  19E1                     i1l448:	
 25521                           ;incstack = 0
 25522                           ; Regs used in _IOCCF2_DefaultInterruptHandler: []
 25523                           
 25524  19E1  0008               	return
 25525  19E2                     __end_of_IOCCF2_DefaultInterruptHandler:
 25526                           
 25527                           	psect	text144
 25528  1B67                     __ptext144:	
 25529 ;; *************** function _IOCCF0_ISR *****************
 25530 ;; Defined at:
 25531 ;;		line 157 in file "mcc_generated_files/pin_manager.c"
 25532 ;; Parameters:    Size  Location     Type
 25533 ;;		None
 25534 ;; Auto vars:     Size  Location     Type
 25535 ;;		None
 25536 ;; Return value:  Size  Location     Type
 25537 ;;                  1    wreg      void 
 25538 ;; Registers used:
 25539 ;;		wreg, status,2, status,0, pclath, cstack
 25540 ;; Tracked objects:
 25541 ;;		On entry : 0/0
 25542 ;;		On exit  : 0/0
 25543 ;;		Unchanged: 0/0
 25544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25549 ;;Total ram usage:        0 bytes
 25550 ;; Hardware stack levels used:    1
 25551 ;; Hardware stack levels required when called:    2
 25552 ;; This function calls:
 25553 ;;		Absolute function
 25554 ;;		_IOCCF0_DefaultInterruptHandler
 25555 ;;		i1_turnPowerOn
 25556 ;; This function is called by:
 25557 ;;		_PIN_MANAGER_IOC
 25558 ;; This function uses a non-reentrant model
 25559 ;;
 25560                           
 25561                           
 25562                           ;psect for function _IOCCF0_ISR
 25563  1B67                     _IOCCF0_ISR:
 25564  1B67                     i1l7302:	
 25565                           ;incstack = 0
 25566                           ; Regs used in _IOCCF0_ISR: [wreg+status,2+status,0+pclath+cstack]
 25567                           
 25568                           
 25569                           ;mcc_generated_files/pin_manager.c: 162:     if(IOCCF0_InterruptHandler)
 25570  1B67  0141               	movlb	1	; select bank1
 25571  1B68  0850               	movf	_IOCCF0_InterruptHandler^(0+128),w
 25572  1B69  0451               	iorwf	(_IOCCF0_InterruptHandler+1)^(0+128),w
 25573  1B6A  1903               	btfsc	3,2
 25574  1B6B  2B6D               	goto	u601_21
 25575  1B6C  2B6E               	goto	u601_20
 25576  1B6D                     u601_21:
 25577  1B6D  2B73               	goto	i1l7306
 25578  1B6E                     u601_20:
 25579  1B6E                     i1l7304:
 25580                           
 25581                           ;mcc_generated_files/pin_manager.c: 163:     {;mcc_generated_files/pin_manager.c: 164:  
      +                                 IOCCF0_InterruptHandler();
 25582  1B6E  0851               	movf	(_IOCCF0_InterruptHandler+1)^(0+128),w
 25583  1B6F  008A               	movwf	10
 25584  1B70  0850               	movf	_IOCCF0_InterruptHandler^(0+128),w
 25585  1B71  000A               	callw
 25586  1B72  319B               	pagesel	$
 25587  1B73                     i1l7306:
 25588                           
 25589                           ;mcc_generated_files/pin_manager.c: 166:     IOCCFbits.IOCCF0 = 0;
 25590  1B73  017E               	movlb	62	; select bank62
 25591  1B74  1055               	bcf	85,0	;volatile
 25592  1B75                     i1l432:
 25593  1B75  0008               	return
 25594  1B76                     __end_of_IOCCF0_ISR:
 25595                           
 25596                           	psect	text145
 25597  1A3F                     __ptext145:	
 25598 ;; *************** function i1_SetSlaveTXRX *****************
 25599 ;; Defined at:
 25600 ;;		line 21 in file "configure.c"
 25601 ;; Parameters:    Size  Location     Type
 25602 ;;		None
 25603 ;; Auto vars:     Size  Location     Type
 25604 ;;		None
 25605 ;; Return value:  Size  Location     Type
 25606 ;;                  1    wreg      void 
 25607 ;; Registers used:
 25608 ;;		wreg
 25609 ;; Tracked objects:
 25610 ;;		On entry : 0/0
 25611 ;;		On exit  : 0/0
 25612 ;;		Unchanged: 0/0
 25613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25618 ;;Total ram usage:        0 bytes
 25619 ;; Hardware stack levels used:    1
 25620 ;; This function calls:
 25621 ;;		Nothing
 25622 ;; This function is called by:
 25623 ;;		i1_turnPowerOn
 25624 ;; This function uses a non-reentrant model
 25625 ;;
 25626                           
 25627                           
 25628                           ;psect for function i1_SetSlaveTXRX
 25629  1A3F                     i1_SetSlaveTXRX:
 25630  1A3F                     i1l5232:	
 25631                           ;incstack = 0
 25632                           ; Regs used in i1_SetSlaveTXRX: [wreg]
 25633                           
 25634                           
 25635                           ;configure.c: 22:     RX1DTPPS = 0x15;
 25636  1A3F  3015               	movlw	21
 25637  1A40  017D               	movlb	61	; select bank61
 25638  1A41  00CB               	movwf	75	;volatile
 25639                           
 25640                           ;configure.c: 23:     RC4PPS = 0x0F;
 25641  1A42  300F               	movlw	15
 25642  1A43  017E               	movlb	62	; select bank62
 25643  1A44  00A4               	movwf	36	;volatile
 25644                           
 25645                           ;configure.c: 24:     RC6PPS = 0x16;
 25646  1A45  3016               	movlw	22
 25647  1A46  00A6               	movwf	38	;volatile
 25648  1A47                     i1l1192:
 25649  1A47  0008               	return
 25650  1A48                     __end_ofi1_SetSlaveTXRX:
 25651                           
 25652                           	psect	text146
 25653  1F6E                     __ptext146:	
 25654 ;; *************** function _EUSART1_Transmit_ISR *****************
 25655 ;; Defined at:
 25656 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 25657 ;; Parameters:    Size  Location     Type
 25658 ;;		None
 25659 ;; Auto vars:     Size  Location     Type
 25660 ;;		None
 25661 ;; Return value:  Size  Location     Type
 25662 ;;                  1    wreg      void 
 25663 ;; Registers used:
 25664 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25665 ;; Tracked objects:
 25666 ;;		On entry : 0/0
 25667 ;;		On exit  : 0/0
 25668 ;;		Unchanged: 0/0
 25669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25672 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25673 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25674 ;;Total ram usage:        1 bytes
 25675 ;; Hardware stack levels used:    1
 25676 ;; This function calls:
 25677 ;;		Nothing
 25678 ;; This function is called by:
 25679 ;;		_EUSART1_Initialize
 25680 ;;		_INTERRUPT_InterruptManager
 25681 ;; This function uses a non-reentrant model
 25682 ;;
 25683                           
 25684                           
 25685                           ;psect for function _EUSART1_Transmit_ISR
 25686  1F6E                     _EUSART1_Transmit_ISR:
 25687  1F6E                     i1l6000:	
 25688                           ;incstack = 0
 25689                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 25690                           
 25691                           
 25692                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 25693  1F6E  3020               	movlw	32
 25694  1F6F  0140               	movlb	0	; select bank0
 25695  1F70  0255               	subwf	_eusart1TxBufferRemaining,w	;volatile
 25696  1F71  1803               	skipnc
 25697  1F72  2F74               	goto	u461_21
 25698  1F73  2F75               	goto	u461_20
 25699  1F74                     u461_21:
 25700  1F74  2F8E               	goto	i1l261
 25701  1F75                     u461_20:
 25702  1F75                     i1l6002:
 25703                           
 25704                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 25705  1F75  0853               	movf	_eusart1TxTail,w
 25706  1F76  3E40               	addlw	(low (_eusart1TxBuffer| (0+512)))& (0+255)
 25707  1F77  0086               	movwf	6
 25708  1F78  3002               	movlw	2	; select bank4/5
 25709  1F79  0087               	movwf	7
 25710  1F7A  0801               	movf	1,w
 25711  1F7B  0142               	movlb	2	; select bank2
 25712  1F7C  009A               	movwf	26	;volatile
 25713  1F7D                     i1l6004:
 25714  1F7D  3001               	movlw	1
 25715  1F7E  00F0               	movwf	??_EUSART1_Transmit_ISR
 25716  1F7F  0870               	movf	??_EUSART1_Transmit_ISR,w
 25717  1F80  0140               	movlb	0	; select bank0
 25718  1F81  07D3               	addwf	_eusart1TxTail,f	;volatile
 25719  1F82                     i1l6006:
 25720                           
 25721                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 25722  1F82  3020               	movlw	32
 25723  1F83  0253               	subwf	_eusart1TxTail,w	;volatile
 25724  1F84  1C03               	skipc
 25725  1F85  2F87               	goto	u462_21
 25726  1F86  2F88               	goto	u462_20
 25727  1F87                     u462_21:
 25728  1F87  2F89               	goto	i1l6010
 25729  1F88                     u462_20:
 25730  1F88                     i1l6008:
 25731                           
 25732                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 25733  1F88  01D3               	clrf	_eusart1TxTail	;volatile
 25734  1F89                     i1l6010:
 25735                           
 25736                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 25737  1F89  3001               	movlw	1
 25738  1F8A  00F0               	movwf	??_EUSART1_Transmit_ISR
 25739  1F8B  0870               	movf	??_EUSART1_Transmit_ISR,w
 25740  1F8C  07D5               	addwf	_eusart1TxBufferRemaining,f	;volatile
 25741                           
 25742                           ;mcc_generated_files/eusart1.c: 209:     }
 25743  1F8D  2F90               	goto	i1l264
 25744  1F8E                     i1l261:	
 25745                           ;mcc_generated_files/eusart1.c: 210:     else
 25746                           
 25747                           
 25748                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 25749  1F8E  014E               	movlb	14	; select bank14
 25750  1F8F  1219               	bcf	25,4	;volatile
 25751  1F90                     i1l264:
 25752  1F90  0008               	return
 25753  1F91                     __end_of_EUSART1_Transmit_ISR:
 25754                           
 25755                           	psect	text147
 25756  137A                     __ptext147:	
 25757 ;; *************** function _EUSART1_Receive_ISR *****************
 25758 ;; Defined at:
 25759 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 25760 ;; Parameters:    Size  Location     Type
 25761 ;;		None
 25762 ;; Auto vars:     Size  Location     Type
 25763 ;;		None
 25764 ;; Return value:  Size  Location     Type
 25765 ;;                  1    wreg      void 
 25766 ;; Registers used:
 25767 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25768 ;; Tracked objects:
 25769 ;;		On entry : 0/0
 25770 ;;		On exit  : 0/0
 25771 ;;		Unchanged: 0/0
 25772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25777 ;;Total ram usage:        0 bytes
 25778 ;; Hardware stack levels used:    1
 25779 ;; Hardware stack levels required when called:    2
 25780 ;; This function calls:
 25781 ;;		Absolute function
 25782 ;;		_EUSART1_DefaultErrorHandler
 25783 ;;		_EUSART1_DefaultFramingErrorHandler
 25784 ;;		_EUSART1_DefaultOverrunErrorHandler
 25785 ;;		_EUSART1_RxDataHandler
 25786 ;; This function is called by:
 25787 ;;		_EUSART1_Initialize
 25788 ;;		_INTERRUPT_InterruptManager
 25789 ;; This function uses a non-reentrant model
 25790 ;;
 25791                           
 25792                           
 25793                           ;psect for function _EUSART1_Receive_ISR
 25794  137A                     _EUSART1_Receive_ISR:
 25795  137A                     i1l6012:	
 25796                           ;incstack = 0
 25797                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 25798                           
 25799                           
 25800                           ;mcc_generated_files/eusart1.c: 218:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 25801  137A  0140               	movlb	0	; select bank0
 25802  137B  0852               	movf	_eusart1RxHead,w	;volatile
 25803  137C  3EA0               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 25804  137D  0086               	movwf	6
 25805  137E  3001               	movlw	1	; select bank3/4
 25806  137F  0087               	movwf	7
 25807  1380  0181               	clrf	1
 25808  1381                     i1l6014:
 25809                           
 25810                           ;mcc_generated_files/eusart1.c: 220:     if(RC1STAbits.FERR){
 25811  1381  0142               	movlb	2	; select bank2
 25812  1382  1D1D               	btfss	29,2	;volatile
 25813  1383  2B85               	goto	u463_21
 25814  1384  2B86               	goto	u463_20
 25815  1385                     u463_21:
 25816  1385  2B93               	goto	i1l6020
 25817  1386                     u463_20:
 25818  1386                     i1l6016:
 25819                           
 25820                           ;mcc_generated_files/eusart1.c: 221:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 25821  1386  0140               	movlb	0	; select bank0
 25822  1387  0852               	movf	_eusart1RxHead,w	;volatile
 25823  1388  3EA0               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 25824  1389  0086               	movwf	6
 25825  138A  3001               	movlw	1	; select bank3/4
 25826  138B  0087               	movwf	7
 25827  138C  1481               	bsf	1,1
 25828  138D                     i1l6018:
 25829                           
 25830                           ;mcc_generated_files/eusart1.c: 222:         EUSART1_FramingErrorHandler();
 25831  138D  0142               	movlb	2	; select bank2
 25832  138E  0861               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 25833  138F  008A               	movwf	10
 25834  1390  0860               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 25835  1391  000A               	callw
 25836  1392  3193               	pagesel	$
 25837  1393                     i1l6020:
 25838                           
 25839                           ;mcc_generated_files/eusart1.c: 225:     if(RC1STAbits.OERR){
 25840  1393  0142               	movlb	2	; select bank2
 25841  1394  1C9D               	btfss	29,1	;volatile
 25842  1395  2B97               	goto	u464_21
 25843  1396  2B98               	goto	u464_20
 25844  1397                     u464_21:
 25845  1397  2BA5               	goto	i1l6026
 25846  1398                     u464_20:
 25847  1398                     i1l6022:
 25848                           
 25849                           ;mcc_generated_files/eusart1.c: 226:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 25850  1398  0140               	movlb	0	; select bank0
 25851  1399  0852               	movf	_eusart1RxHead,w	;volatile
 25852  139A  3EA0               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 25853  139B  0086               	movwf	6
 25854  139C  3001               	movlw	1	; select bank3/4
 25855  139D  0087               	movwf	7
 25856  139E  1501               	bsf	1,2
 25857  139F                     i1l6024:
 25858                           
 25859                           ;mcc_generated_files/eusart1.c: 227:         EUSART1_OverrunErrorHandler();
 25860  139F  0142               	movlb	2	; select bank2
 25861  13A0  085F               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 25862  13A1  008A               	movwf	10
 25863  13A2  085E               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 25864  13A3  000A               	callw
 25865  13A4  3193               	pagesel	$
 25866  13A5                     i1l6026:
 25867                           
 25868                           ;mcc_generated_files/eusart1.c: 230:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 25869  13A5  0140               	movlb	0	; select bank0
 25870  13A6  0852               	movf	_eusart1RxHead,w	;volatile
 25871  13A7  3EA0               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 25872  13A8  0086               	movwf	6
 25873  13A9  3001               	movlw	1	; select bank3/4
 25874  13AA  0087               	movwf	7
 25875  13AB  0801               	movf	1,w
 25876  13AC  1903               	btfsc	3,2
 25877  13AD  2BAF               	goto	u465_21
 25878  13AE  2BB0               	goto	u465_20
 25879  13AF                     u465_21:
 25880  13AF  2BB7               	goto	i1l6030
 25881  13B0                     u465_20:
 25882  13B0                     i1l6028:
 25883                           
 25884                           ;mcc_generated_files/eusart1.c: 231:         EUSART1_ErrorHandler();
 25885  13B0  0142               	movlb	2	; select bank2
 25886  13B1  085D               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 25887  13B2  008A               	movwf	10
 25888  13B3  085C               	movf	_EUSART1_ErrorHandler^(0+256),w
 25889  13B4  000A               	callw
 25890  13B5  3193               	pagesel	$
 25891                           
 25892                           ;mcc_generated_files/eusart1.c: 232:     } else {
 25893  13B6  2BBA               	goto	i1l271
 25894  13B7                     i1l6030:
 25895                           
 25896                           ;mcc_generated_files/eusart1.c: 233:         EUSART1_RxDataHandler();
 25897  13B7  319D  2543  3193   	fcall	_EUSART1_RxDataHandler
 25898  13BA                     i1l271:
 25899  13BA  0008               	return
 25900  13BB                     __end_of_EUSART1_Receive_ISR:
 25901                           
 25902                           	psect	text148
 25903  19F7                     __ptext148:	
 25904 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 25905 ;; Defined at:
 25906 ;;		line 251 in file "mcc_generated_files/eusart1.c"
 25907 ;; Parameters:    Size  Location     Type
 25908 ;;		None
 25909 ;; Auto vars:     Size  Location     Type
 25910 ;;		None
 25911 ;; Return value:  Size  Location     Type
 25912 ;;                  1    wreg      void 
 25913 ;; Registers used:
 25914 ;;		None
 25915 ;; Tracked objects:
 25916 ;;		On entry : 0/0
 25917 ;;		On exit  : 0/0
 25918 ;;		Unchanged: 0/0
 25919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25924 ;;Total ram usage:        0 bytes
 25925 ;; Hardware stack levels used:    1
 25926 ;; This function calls:
 25927 ;;		Nothing
 25928 ;; This function is called by:
 25929 ;;		_EUSART1_Initialize
 25930 ;;		_EUSART1_Receive_ISR
 25931 ;; This function uses a non-reentrant model
 25932 ;;
 25933                           
 25934                           
 25935                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 25936  19F7                     _EUSART1_DefaultOverrunErrorHandler:
 25937  19F7                     i1l5670:	
 25938                           ;incstack = 0
 25939                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 25940                           
 25941                           
 25942                           ;mcc_generated_files/eusart1.c: 252:     RC1STAbits.CREN = 0;
 25943  19F7  0142               	movlb	2	; select bank2
 25944  19F8  121D               	bcf	29,4	;volatile
 25945                           
 25946                           ;mcc_generated_files/eusart1.c: 253:     RC1STAbits.CREN = 1;
 25947  19F9  161D               	bsf	29,4	;volatile
 25948  19FA                     i1l281:
 25949  19FA  0008               	return
 25950  19FB                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 25951                           
 25952                           	psect	text149
 25953  19E0                     __ptext149:	
 25954 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 25955 ;; Defined at:
 25956 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 25957 ;; Parameters:    Size  Location     Type
 25958 ;;		None
 25959 ;; Auto vars:     Size  Location     Type
 25960 ;;		None
 25961 ;; Return value:  Size  Location     Type
 25962 ;;                  1    wreg      void 
 25963 ;; Registers used:
 25964 ;;		None
 25965 ;; Tracked objects:
 25966 ;;		On entry : 0/0
 25967 ;;		On exit  : 0/0
 25968 ;;		Unchanged: 0/0
 25969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25974 ;;Total ram usage:        0 bytes
 25975 ;; Hardware stack levels used:    1
 25976 ;; This function calls:
 25977 ;;		Nothing
 25978 ;; This function is called by:
 25979 ;;		_EUSART1_Initialize
 25980 ;;		_EUSART1_Receive_ISR
 25981 ;; This function uses a non-reentrant model
 25982 ;;
 25983                           
 25984                           
 25985                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 25986  19E0                     _EUSART1_DefaultFramingErrorHandler:
 25987  19E0                     i1l278:	
 25988                           ;incstack = 0
 25989                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 25990                           
 25991  19E0  0008               	return
 25992  19E1                     __end_of_EUSART1_DefaultFramingErrorHandler:
 25993                           
 25994                           	psect	text150
 25995  19F3                     __ptext150:	
 25996 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 25997 ;; Defined at:
 25998 ;;		line 256 in file "mcc_generated_files/eusart1.c"
 25999 ;; Parameters:    Size  Location     Type
 26000 ;;		None
 26001 ;; Auto vars:     Size  Location     Type
 26002 ;;		None
 26003 ;; Return value:  Size  Location     Type
 26004 ;;                  1    wreg      void 
 26005 ;; Registers used:
 26006 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26007 ;; Tracked objects:
 26008 ;;		On entry : 0/0
 26009 ;;		On exit  : 0/0
 26010 ;;		Unchanged: 0/0
 26011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26016 ;;Total ram usage:        0 bytes
 26017 ;; Hardware stack levels used:    1
 26018 ;; Hardware stack levels required when called:    1
 26019 ;; This function calls:
 26020 ;;		_EUSART1_RxDataHandler
 26021 ;; This function is called by:
 26022 ;;		_EUSART1_Initialize
 26023 ;;		_EUSART1_Receive_ISR
 26024 ;; This function uses a non-reentrant model
 26025 ;;
 26026                           
 26027                           
 26028                           ;psect for function _EUSART1_DefaultErrorHandler
 26029  19F3                     _EUSART1_DefaultErrorHandler:
 26030  19F3                     i1l5672:	
 26031                           ;incstack = 0
 26032                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 26033                           
 26034                           
 26035                           ;mcc_generated_files/eusart1.c: 257:     EUSART1_RxDataHandler();
 26036  19F3  319D  2543  3199   	fcall	_EUSART1_RxDataHandler
 26037  19F6                     i1l284:
 26038  19F6  0008               	return
 26039  19F7                     __end_of_EUSART1_DefaultErrorHandler:
 26040                           
 26041                           	psect	text151
 26042  1D43                     __ptext151:	
 26043 ;; *************** function _EUSART1_RxDataHandler *****************
 26044 ;; Defined at:
 26045 ;;		line 239 in file "mcc_generated_files/eusart1.c"
 26046 ;; Parameters:    Size  Location     Type
 26047 ;;		None
 26048 ;; Auto vars:     Size  Location     Type
 26049 ;;		None
 26050 ;; Return value:  Size  Location     Type
 26051 ;;                  1    wreg      void 
 26052 ;; Registers used:
 26053 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 26054 ;; Tracked objects:
 26055 ;;		On entry : 0/0
 26056 ;;		On exit  : 0/0
 26057 ;;		Unchanged: 0/0
 26058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 26059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26061 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26062 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 26063 ;;Total ram usage:        1 bytes
 26064 ;; Hardware stack levels used:    1
 26065 ;; This function calls:
 26066 ;;		Nothing
 26067 ;; This function is called by:
 26068 ;;		_EUSART1_Receive_ISR
 26069 ;;		_EUSART1_DefaultErrorHandler
 26070 ;; This function uses a non-reentrant model
 26071 ;;
 26072                           
 26073                           
 26074                           ;psect for function _EUSART1_RxDataHandler
 26075  1D43                     _EUSART1_RxDataHandler:
 26076  1D43                     i1l5252:	
 26077                           ;incstack = 0
 26078                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 26079                           
 26080                           
 26081                           ;mcc_generated_files/eusart1.c: 241:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 26082  1D43  0142               	movlb	2	; select bank2
 26083  1D44  0819               	movf	25,w	;volatile
 26084  1D45  00F0               	movwf	??_EUSART1_RxDataHandler
 26085  1D46  0140               	movlb	0	; select bank0
 26086  1D47  0852               	movf	_eusart1RxHead,w
 26087  1D48  3E20               	addlw	(low (_eusart1RxBuffer| (0+512)))& (0+255)
 26088  1D49  0086               	movwf	6
 26089  1D4A  3002               	movlw	2	; select bank4/5
 26090  1D4B  0087               	movwf	7
 26091  1D4C  0870               	movf	??_EUSART1_RxDataHandler,w
 26092  1D4D  0081               	movwf	1
 26093  1D4E                     i1l5254:
 26094  1D4E  3001               	movlw	1
 26095  1D4F  00F0               	movwf	??_EUSART1_RxDataHandler
 26096  1D50  0870               	movf	??_EUSART1_RxDataHandler,w
 26097  1D51  07D2               	addwf	_eusart1RxHead,f	;volatile
 26098  1D52                     i1l5256:
 26099                           
 26100                           ;mcc_generated_files/eusart1.c: 242:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 26101  1D52  3020               	movlw	32
 26102  1D53  0252               	subwf	_eusart1RxHead,w	;volatile
 26103  1D54  1C03               	skipc
 26104  1D55  2D57               	goto	u398_21
 26105  1D56  2D58               	goto	u398_20
 26106  1D57                     u398_21:
 26107  1D57  2D59               	goto	i1l5260
 26108  1D58                     u398_20:
 26109  1D58                     i1l5258:
 26110                           
 26111                           ;mcc_generated_files/eusart1.c: 243:     {;mcc_generated_files/eusart1.c: 244:         e
      +                          usart1RxHead = 0;
 26112  1D58  01D2               	clrf	_eusart1RxHead	;volatile
 26113  1D59                     i1l5260:
 26114                           
 26115                           ;mcc_generated_files/eusart1.c: 246:     eusart1RxCount++;
 26116  1D59  3001               	movlw	1
 26117  1D5A  00F0               	movwf	??_EUSART1_RxDataHandler
 26118  1D5B  0870               	movf	??_EUSART1_RxDataHandler,w
 26119  1D5C  07D0               	addwf	_eusart1RxCount,f	;volatile
 26120  1D5D                     i1l275:
 26121  1D5D  0008               	return
 26122  1D5E                     __end_of_EUSART1_RxDataHandler:
 26123  007E                     btemp	set	126	;btemp
 26124  007E                     int$flags	set	126
 26125  007E                     wtemp0	set	126
 26126                           
 26127                           	psect	config
 26128                           
 26129                           ;Config register CONFIG1 @ 0x8007
 26130                           ;	External Oscillator mode selection bits
 26131                           ;	FEXTOSC = OFF, Oscillator not enabled
 26132                           ;	Power-up default value for COSC bits
 26133                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 26134                           ;	Clock Out Enable bit
 26135                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 26136                           ;	Clock Switch Enable bit
 26137                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 26138                           ;	Fail-Safe Clock Monitor Enable bit
 26139                           ;	FCMEN = ON, FSCM timer enabled
 26140  8007                     	org	32775
 26141  8007  3FEC               	dw	16364
 26142                           
 26143                           ;Config register CONFIG2 @ 0x8008
 26144                           ;	Master Clear Enable bit
 26145                           ;	MCLRE = ON, MCLR pin is Master Clear function
 26146                           ;	Power-up Timer Enable bit
 26147                           ;	PWRTS = OFF, PWRT disabled
 26148                           ;	Low-Power BOR enable bit
 26149                           ;	LPBOREN = OFF, ULPBOR disabled
 26150                           ;	Brown-out reset enable bits
 26151                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 26152                           ;	Brown-out Reset Voltage Selection
 26153                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
 26154                           ;	Zero-cross detect disable
 26155                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 26156                           ;	Peripheral Pin Select one-way control
 26157                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
 26158                           ;	Stack Overflow/Underflow Reset Enable bit
 26159                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 26160  8008                     	org	32776
 26161  8008  37FF               	dw	14335
 26162                           
 26163                           ;Config register CONFIG3 @ 0x8009
 26164                           ;	WDT Period Select bits
 26165                           ;	WDTCPS = WDTCPS_11, Divider ratio 1:65536
 26166                           ;	WDT operating mode
 26167                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 26168                           ;	WDT Window Select bits
 26169                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 26170                           ;	WDT input clock selector
 26171                           ;	WDTCCS = LFINTOSC, WDT reference clock is the 31.0kHz LFINTOSC output
 26172  8009                     	org	32777
 26173  8009  078B               	dw	1931
 26174                           
 26175                           ;Config register CONFIG4 @ 0x800A
 26176                           ;	Boot Block Size Selection bits
 26177                           ;	BBSIZE = BB512, 512 words boot block size
 26178                           ;	Boot Block Enable bit
 26179                           ;	BBEN = OFF, Boot Block disabled
 26180                           ;	SAF Enable bit
 26181                           ;	SAFEN = OFF, SAF disabled
 26182                           ;	Application Block Write Protection bit
 26183                           ;	WRTAPP = OFF, Application Block not write protected
 26184                           ;	Boot Block Write Protection bit
 26185                           ;	WRTB = OFF, Boot Block not write protected
 26186                           ;	Configuration Register Write Protection bit
 26187                           ;	WRTC = OFF, Configuration Register not write protected
 26188                           ;	Data EEPROM write protection bit
 26189                           ;	WRTD = OFF, Data EEPROM NOT write protected
 26190                           ;	Storage Area Flash Write Protection bit
 26191                           ;	WRTSAF = OFF, SAF not write protected
 26192                           ;	Low Voltage Programming Enable bit
 26193                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 26194  800A                     	org	32778
 26195  800A  3FFF               	dw	16383
 26196                           
 26197                           ;Config register CONFIG5 @ 0x800B
 26198                           ;	UserNVM Program memory code protection bit
 26199                           ;	CP = OFF, UserNVM code protection disabled
 26200  800B                     	org	32779
 26201  800B  3FFF               	dw	16383

Data Sizes:
    Strings     102
    Constant    0
    Data        22
    BSS         266
    Persistent  57
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     27      54
    BANK1            80      8      80
    BANK2            80      4      80
    BANK3            80      8      80
    BANK4            80     16      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_26(CODE[3]), STR_20(CODE[3]), STR_18(CODE[3]), STR_16(CODE[6]), 
		 -> STR_14(CODE[3]), STR_6(CODE[6]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_26(CODE[3]), STR_20(CODE[3]), STR_18(CODE[3]), STR_16(CODE[6]), 
		 -> STR_14(CODE[3]), STR_6(CODE[6]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), RX_Buffer(BANK3[40]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), RX_Buffer(BANK3[40]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), RX_Buffer(BANK3[40]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), RX_Buffer(BANK3[40]), 

    strstr@h	PTR const unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), RX_Buffer(BANK3[40]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_26(CODE[3]), STR_20(CODE[3]), STR_18(CODE[3]), STR_16(CODE[6]), 
		 -> STR_14(CODE[3]), STR_6(CODE[6]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_26(CODE[3]), STR_25(CODE[9]), STR_24(CODE[9]), STR_23(CODE[9]), 
		 -> STR_22(CODE[9]), STR_21(CODE[3]), STR_20(CODE[3]), STR_19(CODE[7]), 
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[6]), STR_15(CODE[9]), 
		 -> STR_14(CODE[3]), STR_13(CODE[9]), STR_12(CODE[9]), STR_11(CODE[3]), 
		 -> STR_10(CODE[9]), STR_9(CODE[3]), STR_8(CODE[9]), STR_7(CODE[3]), 
		 -> STR_6(CODE[6]), STR_4(CODE[6]), debugBuffer(BANK2[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_26(CODE[3]), STR_25(CODE[9]), STR_24(CODE[9]), STR_23(CODE[9]), 
		 -> STR_22(CODE[9]), STR_21(CODE[3]), STR_20(CODE[3]), STR_19(CODE[7]), 
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[6]), STR_15(CODE[9]), 
		 -> STR_14(CODE[3]), STR_13(CODE[9]), STR_12(CODE[9]), STR_11(CODE[3]), 
		 -> STR_10(CODE[9]), STR_9(CODE[3]), STR_8(CODE[9]), STR_7(CODE[3]), 
		 -> STR_6(CODE[6]), STR_4(CODE[6]), debugBuffer(BANK2[16]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 16
		 -> debugBuffer(BANK2[16]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 16
		 -> debugBuffer(BANK2[16]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[3]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[3]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 16
		 -> debugBuffer(BANK2[16]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[3]), 

    strcat@dest	PTR unsigned char  size(1) Largest target is 16
		 -> debugBuffer(BANK2[16]), 

    memset@dest	PTR void  size(1) Largest target is 12
		 -> speedBuffer(BANK2[12]), 

    memset@s	PTR unsigned char  size(1) Largest target is 12
		 -> speedBuffer(BANK2[12]), 

    memcpy@d1	PTR void  size(1) Largest target is 12
		 -> masterMAC(BANK2[12]), slaveMAC(BANK2[12]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 12
		 -> masterMAC(BANK2[12]), slaveMAC(BANK2[12]), 

    memcpy@s1	PTR const void  size(1) Largest target is 40
		 -> NULL(NULL[0]), RX_Buffer(BANK3[40]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), RX_Buffer(BANK3[40]), 

    __ctoee@addr	PTR eeprom void  size(1) Largest target is 1
		 -> EEPROM_uiBrakeMode(EEDATA[1]), EEPROM_uiSpeedMode(EEDATA[1]), 

    __eetoc@addr	PTR eeprom void  size(1) Largest target is 1
		 -> EEPROM_uiBrakeMode(EEDATA[1]), EEPROM_uiSpeedMode(EEDATA[1]), 

    __memcpyee@to	PTR eeprom unsigned char  size(1) Largest target is 1
		 -> EEPROM_uiBrakeMode(EEDATA[1]), EEPROM_uiSpeedMode(EEDATA[1]), 

    __memcpyee@from	PTR const unsigned char  size(1) Largest target is 8
		 -> __fltoee@data(COMMON[4]), __fttoee@data(COMMON[4]), __otoee@data(COMMON[8]), __ltoee@data(COMMON[4]), 
		 -> __mtoee@data(COMMON[3]), __itoee@data(COMMON[2]), __ctoee@data(BANK1[1]), 

    __memcpyee@ptr	PTR const unsigned char  size(1) Largest target is 8
		 -> __fltoee@data(COMMON[4]), __fttoee@data(COMMON[4]), __otoee@data(COMMON[8]), __ltoee@data(COMMON[4]), 
		 -> __mtoee@data(COMMON[3]), __itoee@data(COMMON[2]), __ctoee@data(BANK1[1]), 

    __eecpymem@from	PTR eeprom unsigned char  size(1) Largest target is 1
		 -> EEPROM_uiBrakeMode(EEDATA[1]), EEPROM_uiSpeedMode(EEDATA[1]), 

    __eecpymem@to	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoo@data(COMMON[8]), __eetol@data(COMMON[4]), 
		 -> __eetom@data(COMMON[3]), __eetoi@data(COMMON[2]), __eetoc@data(BANK1[1]), 

    __eecpymem@cp	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoo@data(COMMON[8]), __eetol@data(COMMON[4]), 
		 -> __eetom@data(COMMON[3]), __eetoi@data(COMMON[2]), __eetoc@data(BANK1[1]), 

    setBTConnection@MAC	PTR unsigned char  size(1) Largest target is 12
		 -> masterMAC(BANK2[12]), slaveMAC(BANK2[12]), 

    sp__memcpy	PTR void  size(1) Largest target is 12
		 -> masterMAC(BANK2[12]), slaveMAC(BANK2[12]), 

    getBTAddress@MAC	PTR unsigned char  size(1) Largest target is 12
		 -> masterMAC(BANK2[12]), slaveMAC(BANK2[12]), 

    getBTAddress@addrPointer	PTR unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), RX_Buffer(BANK3[40]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 40
		 -> NULL(NULL[0]), RX_Buffer(BANK3[40]), 

    int16cat@bufP	PTR unsigned char  size(1) Largest target is 16
		 -> debugBuffer(BANK2[16]), 

    int16ToBytes@ndata	PTR unsigned char  size(1) Largest target is 12
		 -> speedBuffer(BANK2[12]), 

    calcCRC@ptr	PTR unsigned char  size(1) Largest target is 12
		 -> estopBuffer(BANK2[8]), speedBuffer(BANK2[12]), 

    receiveBTBuffer@buffer	PTR unsigned char  size(1) Largest target is 40
		 -> RX_Buffer(BANK3[40]), 

    sendBTBuffer@buffer	PTR unsigned char  size(2) Largest target is 16
		 -> STR_25(CODE[9]), STR_24(CODE[9]), STR_23(CODE[9]), STR_22(CODE[9]), 
		 -> STR_21(CODE[3]), STR_19(CODE[7]), STR_17(CODE[3]), STR_15(CODE[9]), 
		 -> STR_13(CODE[9]), STR_12(CODE[9]), STR_11(CODE[3]), STR_10(CODE[9]), 
		 -> STR_9(CODE[3]), STR_8(CODE[9]), STR_7(CODE[3]), STR_4(CODE[6]), 
		 -> masterMAC(BANK2[12]), slaveMAC(BANK2[12]), estopBuffer(BANK2[8]), debugBuffer(BANK2[16]), 
		 -> speedBuffer(BANK2[12]), 

    sendBTString@buffer	PTR unsigned char  size(2) Largest target is 9
		 -> STR_25(CODE[9]), STR_24(CODE[9]), STR_23(CODE[9]), STR_22(CODE[9]), 
		 -> STR_21(CODE[3]), STR_19(CODE[7]), STR_17(CODE[3]), STR_15(CODE[9]), 
		 -> STR_13(CODE[9]), STR_12(CODE[9]), STR_11(CODE[3]), STR_10(CODE[9]), 
		 -> STR_9(CODE[3]), STR_8(CODE[9]), STR_7(CODE[3]), STR_4(CODE[6]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 16
		 -> debugBuffer(BANK2[16]), 

    sp__memset	PTR void  size(1) Largest target is 12
		 -> speedBuffer(BANK2[12]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UI_PWM_handler(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UI_PWM_handler(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    IOCCF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> turnPowerOn(), IOCCF2_DefaultInterruptHandler(), 

    IOCCF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i1_turnPowerOn(), turnPowerOn(), IOCCF2_DefaultInterruptHandler(), Absolute function(), 

    IOCCF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> turnPowerOn(), IOCCF0_DefaultInterruptHandler(), 

    IOCCF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i1_turnPowerOn(), turnPowerOn(), IOCCF0_DefaultInterruptHandler(), Absolute function(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), Absolute function(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timeKeeper(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timeKeeper(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> readJoystick(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> readJoystick(), Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR3_ISR->_TMR3_WriteTimer
    _TMR3_CallBack->_UI_PWM_handler
    _TMR2_CallBack->_timeKeeper
    _sendBTEstopCmd->i1_sendBTBuffer
    _deadband->___aldiv
    i1_sendBTSpeedCmd->i1_strcat
    i1_strcat->i1_strcpy
    i1_strcpy->i1_strlen
    i1_sendBTBuffer->i1_strlen
    i1_int16cat->i1___awdiv
    _calculateMotion->_limitSpeed
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_CallBack->_readJoystick
    _readJoystick->_readPotJoystick
    i1_stopMotion->i1_sendBTSpeedCmd
    _readPotJoystick->_deadband
    _deadband->___aldiv
    _readButtonJoystick->i1_sendBTSpeedCmd
    i1_sendBTSpeedCmd->i1_int16cat

Critical Paths under _main in BANK1

    _main->_BTTimeRemaining
    _runUI->_BTTimeRemaining
    _runUI->_BTTimeWaiting
    _runUI->_getTicksSince
    _getBTAddress->_memcpy
    _strstr->_strlen
    _strstr->_strncmp
    _receiveBTBuffer->_getTicksSince
    _bumpUIType->___ctoee
    _bumpUISpeedMode->___ctoee
    _bumpUISpeedMode->_setJoystickSpeed
    ___ctoee->___memcpyee
    _initUI->___eetoc
    ___eetoc->___eecpymem
    _initTimers->_TMR2_SetInterruptHandler
    _initSerial->_memset
    _initJoystick->_setJoystickSpeed
    _sendBTSpeedCmd->_calcCRC
    _sendBTSpeedCmd->_int16ToBytes
    _sendBTSpeedCmd->_int16cat
    _sendBTSpeedCmd->_strcat
    _strcat->_strcpy
    _strcpy->_strlen
    _sendBTBuffer->_strlen
    _int16cat->___awdiv
    _setJoystickSpeed->___awdiv
    ___awdiv->___wmul
    _sleep->_getTicksSince
    _SYSTEM_Initialize->_EUSART1_Initialize
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_BTTimeRemaining
    _main->_sleep
    _SetPowerdownTXRX->_sleep
    _showStartup->_sleep
    _showShutdown->_sleep
    _runUI->_BTTimeRemaining
    _pairBluetoothDevices->_sleep
    _setBTConnection->_sendBTBuffer
    _setBTConnection->_sleep
    _setBTBaudRatesTo38400->_sleep
    _getBTAddress->_sleep
    _SetMasterTXRX->_sleep
    _SetSlaveTXMasterRX->_sleep
    _doFactoryReset->_sleep
    _strstr->_strncmp
    _sendBTString->_sendBTBuffer
    _flushBTRXbuffer->_sleep
    _SetDualReceive->_sleep
    _pulseLEDColor->_sleep
    _initSerial->_memset
    _sendBTSpeedCmd->_sendBTBuffer
    _sendBTSpeedCmd->_strcat
    _strcat->_strcpy
    _int16cat->___awdiv
    _setJoystickType->_sleep
    _setJoystickSpeed->___awdiv
    _setSerialBaud->_sleep

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _SetPowerdownTXRX->_sleep
    _showStartup->_sleep
    _showShutdown->_sleep
    _pairBluetoothDevices->_getBTAddress
    _pairBluetoothDevices->_setBTConnection
    _setBTConnection->_sendBTString
    _setBTBaudRatesTo38400->_sendBTString
    _getBTAddress->_sendBTString
    _SetMasterTXRX->_sleep
    _SetSlaveTXMasterRX->_sleep
    _doFactoryReset->_sendBTString
    _flushBTRXbuffer->_sleep
    _SetDualReceive->_sleep
    _bumpUIType->_blinkLEDColor
    _bumpUISpeedMode->_blinkLEDColor
    _pulseLEDColor->_sleep
    _stopMotion->_sendBTSpeedCmd
    _sendBTSpeedCmd->_int16cat
    _sendBTSpeedCmd->_strcat
    _strcat->_strcpy
    _int16cat->___awdiv
    _setJoystickType->_sleep
    _setJoystickSpeed->___awdiv
    _initConfiguration->_setSerialBaud
    _setSerialBaud->_sleep

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_runUI
    _runUI->_pairBluetoothDevices
    _pairBluetoothDevices->_setBTConnection
    _setBTConnection->_pulseLEDColor
    _setBTConnection->_receiveBTBuffer
    _getBTAddress->_pulseLEDColor
    _getBTAddress->_receiveBTBuffer
    _doFactoryReset->_pulseLEDColor
    _doFactoryReset->_receiveBTBuffer
    _bumpUIType->_blinkLEDColor
    _bumpUISpeedMode->_blinkLEDColor
    _blinkLEDColor->_pulseLEDColor
    _stopMotion->_sendBTSpeedCmd
    _sendBTSpeedCmd->_int16cat

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  210846
                    _BTTimeRemaining
                  _SYSTEM_Initialize
                     _enableJoystick
                  _initConfiguration
                       _initJoystick
                         _initSerial
                         _initTimers
                             _initUI
                          _powerIsOn
                       _resetBTTimer
                              _runUI
                       _showShutdown
                        _showStartup
                              _sleep
                       _turnPowerOff
                        _turnPowerOn
 ---------------------------------------------------------------------------------
 (1) _turnPowerOn                                          0     0      0       0
                       _SetSlaveTXRX
 ---------------------------------------------------------------------------------
 (1) _turnPowerOff                                         0     0      0    3481
                   _SetPowerdownTXRX
 ---------------------------------------------------------------------------------
 (2) _SetPowerdownTXRX                                     0     0      0    3481
                              _sleep
 ---------------------------------------------------------------------------------
 (1) _showStartup                                          2     2      0    3957
                                              4 BANK3      2     2      0
                       _setBTTimeout
                              _sleep
 ---------------------------------------------------------------------------------
 (2) _setBTTimeout                                         4     0      4     176
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (1) _showShutdown                                         2     2      0    3583
                                              4 BANK3      2     2      0
                              _sleep
 ---------------------------------------------------------------------------------
 (1) _runUI                                                2     2      0  172241
                                             14 BANK4      2     2      0
                    _BTTimeRemaining
                      _BTTimeWaiting
                      _USER1_pressed
                      _USER2_pressed
                    _bumpUISpeedMode
                         _bumpUIType
                    _disableJoystick
                     _doFactoryReset
                     _enableJoystick
                           _getTicks
                      _getTicksSince
                             _oneSec
               _pairBluetoothDevices
                      _pulseLEDColor
 ---------------------------------------------------------------------------------
 (2) _pairBluetoothDevices                                 1     1      0  102516
                                             13 BANK4      1     1      0
                 _SetSlaveTXMasterRX
                       _SetSlaveTXRX
                      _USER1_pressed
                      _USER2_pressed
                       _getBTAddress
                      _pulseLEDColor
                    _receiveBTBuffer
                       _sendBTString
              _setBTBaudRatesTo38400
                    _setBTConnection
                              _sleep
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _setBTConnection                                      8     7      1   29162
                                              7 BANK3      1     0      1
                                              6 BANK4      7     7      0
                      _SetMasterTXRX
                       _SetSlaveTXRX
                      _pulseLEDColor
                    _receiveBTBuffer
                       _sendBTBuffer
                       _sendBTString
                              _sleep
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _setBTBaudRatesTo38400                                0     0      0   17871
                     _SetDualReceive
                       _sendBTString
                      _setSerialBaud
                              _sleep
 ---------------------------------------------------------------------------------
 (3) _getBTAddress                                         7     6      1   28177
                                              7 BANK3      1     0      1
                                              6 BANK4      6     6      0
                      _SetMasterTXRX
                       _SetSlaveTXRX
                             _memcpy
                      _pulseLEDColor
                    _receiveBTBuffer
                       _sendBTString
                              _sleep
                             _strstr
 ---------------------------------------------------------------------------------
 (4) _memcpy                                               8     5      3     424
                                              0 BANK1      8     5      3
 ---------------------------------------------------------------------------------
 (4) _SetMasterTXRX                                        0     0      0    3481
                              _sleep
 ---------------------------------------------------------------------------------
 (3) _USER2_pressed                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USER1_pressed                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SetSlaveTXMasterRX                                   0     0      0    3481
                              _sleep
 ---------------------------------------------------------------------------------
 (2) _oneSec                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _enableJoystick                                       0     0      0       0
                    _TMR1_StartTimer
                       _resetBTTimer
 ---------------------------------------------------------------------------------
 (3) _resetBTTimer                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _doFactoryReset                                       4     4      0   31305
                                              6 BANK4      4     4      0
                     _SetDualReceive
                       _SetSlaveTXRX
                      _pulseLEDColor
                    _receiveBTBuffer
                       _sendBTString
                      _setSerialBaud
                              _sleep
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               8     6      2    2353
                                              5 BANK1      2     0      2
                                              0 BANK3      6     6      0
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     5      4     541
                                              0 BANK1      5     1      4
                                              0 BANK2      4     4      0
 ---------------------------------------------------------------------------------
 (4) _strchr                                               3     1      2     250
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (4) _sendBTString                                         3     1      2    6947
                                              4 BANK3      3     1      2
                    _flushBTRXbuffer
                       _sendBTBuffer
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _flushBTRXbuffer                                      0     0      0    3518
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                              _sleep
 ---------------------------------------------------------------------------------
 (4) _receiveBTBuffer                                     14    11      3    2067
                                              0 BANK2      3     0      3
                                              0 BANK3      5     5      0
                                              0 BANK4      6     6      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                           _getTicks
                      _getTicksSince
 ---------------------------------------------------------------------------------
 (6) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Read                                         2     2      0      37
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (4) _SetDualReceive                                       0     0      0    3481
                              _sleep
 ---------------------------------------------------------------------------------
 (2) _disableJoystick                                      0     0      0       0
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bumpUIType                                           1     1      0   14773
                                              7 BANK4      1     1      0
                            ___ctoee
                      _blinkLEDColor
                    _setJoystickType
 ---------------------------------------------------------------------------------
 (2) _bumpUISpeedMode                                      1     1      0   14069
                                              7 BANK4      1     1      0
                            ___awmod
                            ___ctoee
                      _blinkLEDColor
                   _setJoystickSpeed
 ---------------------------------------------------------------------------------
 (3) _blinkLEDColor                                        5     2      3    9436
                                              4 BANK3      4     1      3
                                              6 BANK4      1     1      0
                      _pulseLEDColor
 ---------------------------------------------------------------------------------
 (2) _pulseLEDColor                                        6     0      6    8977
                                              0 BANK4      6     0      6
                        _setLEDColor
                              _sleep
 ---------------------------------------------------------------------------------
 (3) _setLEDColor                                          5     3      2     273
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (3) ___ctoee                                              3     2      1    1726
                                              5 BANK1      3     2      1
                         ___memcpyee
 ---------------------------------------------------------------------------------
 (4) ___memcpyee                                           5     3      2    1402
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (2) _BTTimeWaiting                                        8     4      4       0
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _BTTimeRemaining                                     12     8      4      65
                                              0 BANK1      8     4      4
                                              0 BANK2      4     4      0
 ---------------------------------------------------------------------------------
 (1) _powerIsOn                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUI                                               1     1      0    2206
                                              0 BANK2      1     1      0
         _IOCCF0_SetInterruptHandler
         _IOCCF2_SetInterruptHandler
           _TMR3_SetInterruptHandler
                            ___eetoc
                           _getTicks
 ---------------------------------------------------------------------------------
 (2) ___eetoc                                              3     3      0    1573
                                              5 BANK1      3     3      0
                         ___eecpymem
 ---------------------------------------------------------------------------------
 (3) ___eecpymem                                           5     3      2    1402
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _initTimers                                           0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _initSerial                                           1     1      0    1233
                                              6 BANK1      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                              10     6      4    1233
                                              0 BANK1      6     2      4
                                              0 BANK2      4     4      0
 ---------------------------------------------------------------------------------
 (1) _initJoystick                                         0     0      0   14766
           _TMR1_SetInterruptHandler
                     _getUISpeedMode
                          _getUIType
                   _setJoystickSpeed
                    _setJoystickType
                         _stopMotion
 ---------------------------------------------------------------------------------
 (2) _stopMotion                                           0     0      0    8650
                     _sendBTSpeedCmd
 ---------------------------------------------------------------------------------
 (3) _sendBTSpeedCmd                                       7     2      5    8650
                                              6 BANK3      2     2      0
                                              6 BANK4      5     0      5
                            _calcCRC
                           _clampInt
                       _int16ToBytes
                           _int16cat
                       _sendBTBuffer
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strcat                                               5     3      2    1231
                                              7 BANK1      1     1      0
                                              2 BANK2      2     0      2
                                              4 BANK3      2     2      0
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               5     3      2     490
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     6      2     263
                                              5 BANK1      2     0      2
                                              0 BANK2      2     2      0
                                              0 BANK3      4     4      0
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (5) _sendBTBuffer                                         4     0      4    1437
                                              0 BANK2      4     0      4
                      _EUSART1_Write
                _EUSART1_is_tx_ready
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _EUSART1_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        2     2      0      62
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (4) _int16cat                                             9     7      2    3050
                                              7 BANK1      1     1      0
                                              4 BANK3      2     0      2
                                              0 BANK4      6     6      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _int16ToBytes                                         8     5      3     527
                                              0 BANK1      8     5      3
 ---------------------------------------------------------------------------------
 (4) _clampInt                                             7     3      4     583
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (4) _calcCRC                                              8     8      0     478
                                              0 BANK1      8     8      0
 ---------------------------------------------------------------------------------
 (3) _setJoystickType                                      8     8      0    3611
                                              4 BANK3      3     3      0
                                              0 BANK4      5     5      0
           _ADCC_GetSingleConversion
                              _sleep
 ---------------------------------------------------------------------------------
 (4) _ADCC_GetSingleConversion                             4     1      3      31
                                              0 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (3) _setJoystickSpeed                                     1     1      0    2294
                                              7 BANK1      1     1      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     856
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1345
                                              6 BANK1      1     1      0
                                              0 BANK2      4     0      4
                                              0 BANK3      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _getUIType                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getUISpeedMode                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initConfiguration                                    0     0      0    3962
                       _SetSlaveTXRX
                      _setSerialBaud
 ---------------------------------------------------------------------------------
 (4) _setSerialBaud                                        2     0      2    3962
                                              4 BANK3      2     0      2
                              _sleep
 ---------------------------------------------------------------------------------
 (3) _sleep                                                8     4      4    3481
                                              0 BANK2      4     0      4
                                              0 BANK3      4     4      0
                           _getTicks
                      _getTicksSince
 ---------------------------------------------------------------------------------
 (4) _getTicksSince                                        8     4      4     536
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (4) _getTicks                                             4     0      4       0
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _SetSlaveTXRX                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1660
                    _ADCC_Initialize
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     211
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR1_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     422
         _IOCCF0_SetInterruptHandler
         _IOCCF2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _IOCCF2_SetInterruptHandler                           2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _IOCCF0_SetInterruptHandler                           2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     605
                                              2 BANK1      1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0   13600
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR3_ISR                                             0     0      0     240
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (10) _TMR3_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR3_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                     _UI_PWM_handler *
 ---------------------------------------------------------------------------------
 (11) _UI_PWM_handler                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (10) _TMR2_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                         _timeKeeper *
 ---------------------------------------------------------------------------------
 (11) _timeKeeper                                          4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (11) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR1_ISR                                             0     0      0   13360
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (10) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR1_CallBack                                       0     0      0   13120
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _readJoystick *
 ---------------------------------------------------------------------------------
 (11) _readJoystick                                        2     2      0   13120
                                             25 BANK0      2     2      0
                 _readButtonJoystick
                    _readPotJoystick
                     _sendBTEstopCmd
                     i1_EUSART1_Read
              i1_EUSART1_is_rx_ready
                         i1_getTicks
                    i1_getTicksSince
                     i1_resetBTTimer
                     i1_setBTTimeout
                       i1_stopMotion
 ---------------------------------------------------------------------------------
 (12) i1_stopMotion                                        0     0      0    3102
                   i1_sendBTSpeedCmd
 ---------------------------------------------------------------------------------
 (12) i1_setBTTimeout                                      4     0      4      48
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (12) i1_resetBTTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i1_getTicksSince                                     8     4      4      48
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (12) i1_getTicks                                          4     0      4       0
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (12) i1_EUSART1_is_rx_ready                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i1_EUSART1_Read                                      2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) _sendBTEstopCmd                                      1     1      0     647
                                              9 COMMON     1     1      0
                          i1_calcCRC
                     i1_sendBTBuffer
 ---------------------------------------------------------------------------------
 (12) _readPotJoystick                                     9     9      0    5379
                                             16 BANK0      9     9      0
                             ___lmul
                    _calculateMotion
                           _deadband
         i1_ADCC_GetSingleConversion
                   i1_sendBTSpeedCmd
 ---------------------------------------------------------------------------------
 (13) i1_ADCC_GetSingleConversion                          4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (13) _deadband                                           10     6      4    1043
                                              6 BANK0     10     6      4
                            ___aldiv
         i1_ADCC_GetSingleConversion (ARG)
 ---------------------------------------------------------------------------------
 (14) ___aldiv                                            15     7      8     604
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (13) ___lmul                                             12     4      8     396
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (12) _readButtonJoystick                                  4     4      0    3872
                                             13 BANK0      4     4      0
                    _calculateMotion
                   i1_sendBTSpeedCmd
 ---------------------------------------------------------------------------------
 (13) i1_sendBTSpeedCmd                                    7     2      5    3102
                                              6 BANK0      7     2      5
                          i1_calcCRC
                         i1_clampInt
                     i1_int16ToBytes
                         i1_int16cat
                     i1_sendBTBuffer
                           i1_strcat
                           i1_strlen
 ---------------------------------------------------------------------------------
 (14) i1_strcat                                            5     3      2     414
                                             13 COMMON     1     1      0
                                              0 BANK0      4     2      2
                           i1_strcpy
                           i1_strlen
 ---------------------------------------------------------------------------------
 (14) i1_strlen                                            5     3      2     142
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (15) i1_strcpy                                            8     6      2     122
                                              5 COMMON     8     6      2
                           i1_strlen (ARG)
 ---------------------------------------------------------------------------------
 (14) i1_sendBTBuffer                                      4     0      4     368
                                              5 COMMON     4     0      4
                    i1_EUSART1_Write
              i1_EUSART1_is_tx_ready
                           i1_strlen (ARG)
 ---------------------------------------------------------------------------------
 (15) i1_EUSART1_is_tx_ready                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i1_EUSART1_Write                                     2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (14) i1_int16cat                                          9     7      2    1009
                                              9 COMMON     3     1      2
                                              0 BANK0      6     6      0
                          i1___awdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (15) i1___wmul                                            6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (15) i1___awdiv                                           9     5      4     404
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (14) i1_int16ToBytes                                      8     5      3     218
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (14) i1_clampInt                                          7     3      4     260
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (14) i1_calcCRC                                           8     8      0     279
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (13) _calculateMotion                                     0     0      0     770
                         _limitSpeed
 ---------------------------------------------------------------------------------
 (14) _limitSpeed                                         13     7      6     770
                                              0 COMMON    13     7      6
 ---------------------------------------------------------------------------------
 (11) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCCF0_ISR
                         _IOCCF2_ISR
 ---------------------------------------------------------------------------------
 (10) _IOCCF2_ISR                                          0     0      0       0
                   Absolute function *
     _IOCCF2_DefaultInterruptHandler *
                      i1_turnPowerOn *
 ---------------------------------------------------------------------------------
 (11) _IOCCF2_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _IOCCF0_ISR                                          0     0      0       0
                   Absolute function *
     _IOCCF0_DefaultInterruptHandler *
                      i1_turnPowerOn *
 ---------------------------------------------------------------------------------
 (11) i1_turnPowerOn                                       0     0      0       0
                     i1_SetSlaveTXRX
 ---------------------------------------------------------------------------------
 (12) i1_SetSlaveTXRX                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _IOCCF0_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Receive_ISR                                  0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BTTimeRemaining
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF0_SetInterruptHandler
       _IOCCF2_SetInterruptHandler
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
   _enableJoystick
     _TMR1_StartTimer
     _resetBTTimer
   _initConfiguration
     _SetSlaveTXRX
     _setSerialBaud
       _sleep
         _getTicks
         _getTicksSince
   _initJoystick
     _TMR1_SetInterruptHandler
     _getUISpeedMode
     _getUIType
     _setJoystickSpeed
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _setJoystickType
       _ADCC_GetSingleConversion
       _sleep
         _getTicks
         _getTicksSince
     _stopMotion
       _sendBTSpeedCmd
         _calcCRC
         _clampInt
         _int16ToBytes
         _int16cat
           ___awdiv
             ___wmul (ARG)
           ___wmul
         _sendBTBuffer
           _EUSART1_Write
           _EUSART1_is_tx_ready
           _strlen (ARG)
         _strcat
           _strcpy
             _strlen (ARG)
           _strlen
         _strlen
   _initSerial
     _memset
   _initTimers
     _TMR2_SetInterruptHandler
   _initUI
     _IOCCF0_SetInterruptHandler
     _IOCCF2_SetInterruptHandler
     _TMR3_SetInterruptHandler
     ___eetoc
       ___eecpymem
     _getTicks
   _powerIsOn
   _resetBTTimer
   _runUI
     _BTTimeRemaining
     _BTTimeWaiting
     _USER1_pressed
     _USER2_pressed
     _bumpUISpeedMode
       ___awmod
       ___ctoee
         ___memcpyee
       _blinkLEDColor
         _pulseLEDColor
           _setLEDColor
           _sleep
             _getTicks
             _getTicksSince
       _setJoystickSpeed
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _bumpUIType
       ___ctoee
         ___memcpyee
       _blinkLEDColor
         _pulseLEDColor
           _setLEDColor
           _sleep
             _getTicks
             _getTicksSince
       _setJoystickType
         _ADCC_GetSingleConversion
         _sleep
           _getTicks
           _getTicksSince
     _disableJoystick
       _TMR1_StopTimer
     _doFactoryReset
       _SetDualReceive
         _sleep
           _getTicks
           _getTicksSince
       _SetSlaveTXRX
       _pulseLEDColor
         _setLEDColor
         _sleep
           _getTicks
           _getTicksSince
       _receiveBTBuffer
         _EUSART1_Read
         _EUSART1_is_rx_ready
         _getTicks
         _getTicksSince
       _sendBTString
         _flushBTRXbuffer
           _EUSART1_Read
           _EUSART1_is_rx_ready
           _sleep
             _getTicks
             _getTicksSince
         _sendBTBuffer
           _EUSART1_Write
           _EUSART1_is_tx_ready
           _strlen (ARG)
         _strlen
       _setSerialBaud
         _sleep
           _getTicks
           _getTicksSince
       _sleep
         _getTicks
         _getTicksSince
       _strstr
         _strchr
         _strlen
         _strncmp
     _enableJoystick
       _TMR1_StartTimer
       _resetBTTimer
     _getTicks
     _getTicksSince
     _oneSec
     _pairBluetoothDevices
       _SetSlaveTXMasterRX
         _sleep
           _getTicks
           _getTicksSince
       _SetSlaveTXRX
       _USER1_pressed
       _USER2_pressed
       _getBTAddress
         _SetMasterTXRX
           _sleep
             _getTicks
             _getTicksSince
         _SetSlaveTXRX
         _memcpy
         _pulseLEDColor
           _setLEDColor
           _sleep
             _getTicks
             _getTicksSince
         _receiveBTBuffer
           _EUSART1_Read
           _EUSART1_is_rx_ready
           _getTicks
           _getTicksSince
         _sendBTString
           _flushBTRXbuffer
             _EUSART1_Read
             _EUSART1_is_rx_ready
             _sleep
               _getTicks
               _getTicksSince
           _sendBTBuffer
             _EUSART1_Write
             _EUSART1_is_tx_ready
             _strlen (ARG)
           _strlen
         _sleep
           _getTicks
           _getTicksSince
         _strstr
           _strchr
           _strlen
           _strncmp
       _pulseLEDColor
         _setLEDColor
         _sleep
           _getTicks
           _getTicksSince
       _receiveBTBuffer
         _EUSART1_Read
         _EUSART1_is_rx_ready
         _getTicks
         _getTicksSince
       _sendBTString
         _flushBTRXbuffer
           _EUSART1_Read
           _EUSART1_is_rx_ready
           _sleep
             _getTicks
             _getTicksSince
         _sendBTBuffer
           _EUSART1_Write
           _EUSART1_is_tx_ready
           _strlen (ARG)
         _strlen
       _setBTBaudRatesTo38400
         _SetDualReceive
           _sleep
             _getTicks
             _getTicksSince
         _sendBTString
           _flushBTRXbuffer
             _EUSART1_Read
             _EUSART1_is_rx_ready
             _sleep
               _getTicks
               _getTicksSince
           _sendBTBuffer
             _EUSART1_Write
             _EUSART1_is_tx_ready
             _strlen (ARG)
           _strlen
         _setSerialBaud
           _sleep
             _getTicks
             _getTicksSince
         _sleep
           _getTicks
           _getTicksSince
       _setBTConnection
         _SetMasterTXRX
           _sleep
             _getTicks
             _getTicksSince
         _SetSlaveTXRX
         _pulseLEDColor
           _setLEDColor
           _sleep
             _getTicks
             _getTicksSince
         _receiveBTBuffer
           _EUSART1_Read
           _EUSART1_is_rx_ready
           _getTicks
           _getTicksSince
         _sendBTBuffer
           _EUSART1_Write
           _EUSART1_is_tx_ready
           _strlen (ARG)
         _sendBTString
           _flushBTRXbuffer
             _EUSART1_Read
             _EUSART1_is_rx_ready
             _sleep
               _getTicks
               _getTicksSince
           _sendBTBuffer
             _EUSART1_Write
             _EUSART1_is_tx_ready
             _strlen (ARG)
           _strlen
         _sleep
           _getTicks
           _getTicksSince
         _strstr
           _strchr
           _strlen
           _strncmp
       _sleep
         _getTicks
         _getTicksSince
       _strstr
         _strchr
         _strlen
         _strncmp
     _pulseLEDColor
       _setLEDColor
       _sleep
         _getTicks
         _getTicksSince
   _showShutdown
     _sleep
       _getTicks
       _getTicksSince
   _showStartup
     _setBTTimeout
     _sleep
       _getTicks
       _getTicksSince
   _sleep
     _getTicks
     _getTicksSince
   _turnPowerOff
     _SetPowerdownTXRX
       _sleep
         _getTicks
         _getTicksSince
   _turnPowerOn
     _SetSlaveTXRX

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCCF0_ISR
       Absolute function(Fake) *
       _IOCCF0_DefaultInterruptHandler *
       i1_turnPowerOn *
         i1_SetSlaveTXRX
     _IOCCF2_ISR
       Absolute function(Fake) *
       _IOCCF2_DefaultInterruptHandler *
       i1_turnPowerOn *
         i1_SetSlaveTXRX
   _TMR1_ISR *
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _readJoystick *
         _readButtonJoystick
           _calculateMotion
             _limitSpeed
           i1_sendBTSpeedCmd
             i1_calcCRC
             i1_clampInt
             i1_int16ToBytes
             i1_int16cat
               i1___awdiv
               i1___wmul
             i1_sendBTBuffer
               i1_EUSART1_Write
               i1_EUSART1_is_tx_ready
               i1_strlen (ARG)
             i1_strcat
               i1_strcpy
                 i1_strlen (ARG)
               i1_strlen
             i1_strlen
         _readPotJoystick
           ___lmul
           _calculateMotion
             _limitSpeed
           _deadband
             ___aldiv
             i1_ADCC_GetSingleConversion (ARG)
           i1_ADCC_GetSingleConversion
           i1_sendBTSpeedCmd
             i1_calcCRC
             i1_clampInt
             i1_int16ToBytes
             i1_int16cat
               i1___awdiv
               i1___wmul
             i1_sendBTBuffer
               i1_EUSART1_Write
               i1_EUSART1_is_tx_ready
               i1_strlen (ARG)
             i1_strcat
               i1_strcpy
                 i1_strlen (ARG)
               i1_strlen
             i1_strlen
         _sendBTEstopCmd
           i1_calcCRC
           i1_sendBTBuffer
             i1_EUSART1_Write
             i1_EUSART1_is_tx_ready
             i1_strlen (ARG)
         i1_EUSART1_Read
         i1_EUSART1_is_rx_ready
         i1_getTicks
         i1_getTicksSince
         i1_resetBTTimer
         i1_setBTTimeout
         i1_stopMotion
           i1_sendBTSpeedCmd
             i1_calcCRC
             i1_clampInt
             i1_int16ToBytes
             i1_int16cat
               i1___awdiv
               i1___wmul
             i1_sendBTBuffer
               i1_EUSART1_Write
               i1_EUSART1_is_tx_ready
               i1_strlen (ARG)
             i1_strcat
               i1_strcpy
                 i1_strlen (ARG)
               i1_strlen
             i1_strlen
     _TMR1_WriteTimer
   _TMR2_ISR *
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _timeKeeper *
   _TMR3_ISR *
     _TMR3_CallBack
       Absolute function(Fake) *
       _TMR3_DefaultInterruptHandler *
       _UI_PWM_handler *
     _TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       2       0        0.8%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1B      36       5       67.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     184       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      8      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      4      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      8      50      12      100.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50     10      50      14      100.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              20      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     184      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Oct 04 14:07:38 2020

                                ?_USER2_pressed 0070                              sendBTString@buffer 01EC  
              __end_of_TMR2_SetInterruptHandler 1A1F                        _eusart1TxBufferRemaining 0055  
                        ?i1_EUSART1_is_rx_ready 0070                          ?i1_EUSART1_is_tx_ready 0070  
                          __end_of_getBTAddress 0363                          BTTimeRemaining@elapsed 016C  
                                            l33 1F0A                                              l36 19F2  
                                            l39 19EF                                              l66 1A18  
                               ?i1_resetBTTimer 0070                                    ___awdiv@sign 01E9  
                           ___wmul@multiplicand 00EA                                i1___wmul@product 0074  
                            readPotJoystick@yaw 0037                                  ?_pulseLEDColor 0260  
                                    i1calcCRC@i 0073                                             l106 1CAA  
                                           l230 1483                                             l152 1A1E  
                                           l233 1A98                                             l236 1AAA  
                                           l350 1AD1                                             l254 11AF  
                                           l423 14C9                                             l255 11B9  
                                           l344 1CF4                                             l249 0830  
                                           l290 1A74                                             l514 1A24  
                                           l258 11D6                                             l347 1A86  
                                           l435 1A0C                                             l293 1A62  
                                           l445 1A12                                             l287 1A6B  
                                           l296 1A06                                             l481 1F2B  
                                           l299 1A7D                                             l651 1C36  
                                           l654 1C3F                                             l902 1DB3  
                                           l639 1D79                                             l761 15E8  
                                           l762 160D                                             l880 0AE3  
                                           l883 1ADB                                             l893 0E94  
                                           l877 1D28                                             l886 1AA1  
                                           l898 0F3D                                             _PR2 028D  
                                  ___ctoee@addr 00EF                                    ___ctoee@data 00ED  
                                    i1_clampInt 129B                                 _timer1ReloadVal 00D8  
                                    i1_int16cat 0C94                         __size_of_PMD_Initialize 000A  
                                  ___awmod@sign 00EE                                 _TMR2_Initialize 1C94  
                                           wreg 0009                                      i1_getTicks 1AB4  
              ??_IOCCF2_DefaultInterruptHandler 0070                 ?_IOCCF2_DefaultInterruptHandler 0070  
            __end_of_IOCCF0_SetInterruptHandler 1A0D                      _IOCCF0_SetInterruptHandler 1A07  
                               _topSweepSpeedFP 00B8                            getBTAddress@isMaster 01EF  
                       __size_of_UI_PWM_handler 003B                        __size_of_BTTimeRemaining 0064  
                                          l1003 1FFF                                            l1030 1F65  
                                          l1014 1FB3                                            l1007 0FFF  
                                          l1112 13FB                                            l1121 1C09  
                                          l1105 1AF0                                            l1201 1C7E  
                                          l1026 1206                                            l1034 1F6D  
                                          l1115 1BF8                                            l1043 0A62  
                                          l1211 1BA3                                            l1132 1E2A  
                                          l1204 1C69                                            l1124 1AE5  
                                          l1053 179B                                            l2101 1F4C  
                                          l1221 19EC                                            l1118 1DEE  
                                          l1214 1AAB                                            l1207 1B98  
                                          l1400 19E6                                            l1064 1306  
                                          l1128 17FF                                            l1216 1AAD  
                                          l2113 1D0E                                            l1241 0894  
                                          l1209 1B9A                                            l1226 1E0C  
                                          l1058 1267                                            l1234 0DAE  
                                          l1218 1AB3                                            l2107 1148  
                                          l1403 103E                                            l1500 14D5  
                                          l2132 1D2B                                            l1420 1EC8  
                                          l1069 051D                                            l1253 0362  
                                          l1406 19E9                                            l1078 05D1  
                                          l2134 1D42                                            l2126 1679  
                                          l1238 0DD9                                            l1503 14DF  
                                          l1423 1E68                                            l1415 0972  
                                          l1192 1A8F                                            l1360 143D  
                                          l1512 1516                                            l1432 1FD8  
                                          l1097 1DD0                                            l2081 122A  
                                          l1506 14FC                                            l1530 1B3C  
                                          l1426 111A                                            l1258 06AE  
                                          l1515 1B93                                            l1507 1503  
                                          l2139 0901                                            l1275 0433  
                                          l1195 1C93                                 _timer3ReloadVal 00CC  
                                          l2084 1236                                            l1268 0765  
                                          l1189 1B08                                            l1509 1507  
                                          l1622 1E94                                            l1198 1C54  
                                          l1470 1A3E                                            l1624 1EA8  
                                          l2088 0504                                            l1394 027C  
                                          l1491 1183                                            l1467 1A37  
                                          l1493 118B                                            l1397 133E  
                                          l1495 11A6                                            l1489 117E  
                                          l1498 14D0                                            l1775 09E6  
                                          l7000 02D4                                            l7010 0307  
                                          l7002 02E1                                            l1788 15BE  
                                          l7100 1571                                            l7020 0342  
                                          l7012 030F                                            l7004 02E7  
                                          l7110 1587                                            l7102 1576  
                                          l7014 0322                                            l7006 02EC  
                                          l7030 06A1                                            l7200 1AC8  
                                          l7120 15A1                                            l7112 158A  
                                          l7104 1578                                            l7016 032E  
                                          l7008 02FB                                            l7040 06D5  
                                          l7032 06A7                                            l7210 149D  
                                          l7202 1484                                            l7130 15BA  
                                          l7122 15A5                                            l7114 158F  
                                          l7106 157C                                            l7018 0333  
                                          l7026 0353                                            l7050 0708  
                                          l7042 06E2                                            l7034 06AB  
                                          l7220 14A5                                            l7212 149E  
                                          l7204 1491                                            l7140 1EF1  
                                          l7300 1F28                                            l6500 13BB  
                                          l7124 15AA                                            l7116 1593  
                                          l7108 1581                                            l7060 0751  
                                          l7052 0712                                            l7044 06E8  
                                          l7036 06BA                                            l7230 14AD  
                                          l7222 14A7                                            l7214 149F  
                                          l7206 1493                                            l7150 1F07  
                                          l7142 1EF3                                            l7134 1EEA  
                                          l6502 13CE                                            l6510 1D08  
                                          l7118 1597                                            l7126 15B0  
                                          l7062 0756                                            l7054 072B  
                                          l7046 06ED                                            l7038 06C2  
                                          l7240 14B9                                            l7232 14AE  
                                          l7224 14A9                                            l7216 14A1  
                                          l7208 149C                                            l7144 1EF5  
                                          l7136 1EED                                            l7160 1C9C  
                                          l7152 1C94                                            l6600 09CD  
                                          l6520 11EE                                            l6504 1CF5  
                                          l7080 117A                                            l7320 179C  
                                          l7128 15B5                                            l7072 1FB4  
                                          l7400 1AE6                                            l7064 1A31  
                                          l7056 073E                                            l7048 06FC  
                                          l7170 1440                                            l7250 1A81  
                                          l7242 14C1                                            l7234 14AF  
                                          l7226 14AB                                            l7218 14A3  
                                          l7146 1EFD                                            l7138 1EEF  
                                          l7162 1C9E                                            l7154 1C97  
                                          l6602 09D4                                            l6522 11F7  
                                          l6514 11D7                                            l6610 111D  
                                          l6506 1CFB                                            l7090 119E  
                                          l7082 1184                                            l7322 17DA  
                                          l7074 1FB7                                            l7314 1AD2  
                                          l7402 1AEC                                            l7410 1AEF  
                                          l7058 074B                                            l7260 1D6B  
                                          l7180 1459                                            l7172 1448  
                                          l7252 1A82                                            l7244 14C3  
                                          l7236 14B0                                            l7228 14AC  
                                          l7148 1EFF                                            l7164 1C9F  
                                          l7156 1C98                                            l7500 1CDF  
                                          l6444 1DD1                                            l7332 19E7  
                                          l6604 09DA                                            l6700 058D  
                                          l6452 1A90                                            l6524 11FC  
                                          l6516 11DD                                            l6612 112B  
                                          l6508 1CFF                                            l7340 1D97  
                                          l7084 118D                                            l7092 1B32  
                                          l7076 1FCA                                            l6460 0800  
                                          l6540 1F4E                                            l7316 1AD5  
                                          l7404 1AED                                            l7068 1A38  
                                          l7420 1C87                                            l7270 1D70  
                                          l7262 1D6C                                            l7190 1478  
                                          l7182 145B                                            l7174 1452  
                                          l7254 1A85                                            l7246 14C6  
                                          l7238 14B1                                            l7166 1CA7  
                                          l7158 1C9B                                            l7510 1CEE  
                                          l7502 1CE2                                            l6606 09DF  
                                          l6710 05B0                                            l6702 0592  
                                          l6518 11E6                                            l6534 1205  
                                          l6526 11FE                                            l7342 1DA3  
                                          l7086 1195                                            l7414 1E0D  
                                          l6550 1E61                                            l7078 1FD0  
                                          l7350 1A9E                                            l6470 0826  
                                          l6462 0800                                            l6542 1F51  
                                          l6630 08CD                                            l6622 08B5  
                                          l6614 0897                                            l7318 1AD8  
                                          l7430 0D6E                                            l7422 0D32  
                                          l7280 1D75                                            l7272 1D71  
                                          l7264 1D6D                                            l7256 1D5E  
                                          l7192 147E                                            l7184 145C  
                                          l7176 1455                                            l7168 143E  
                                          l7248 1A7E                                            l7512 1CF1  
                                          l7504 1CE5                                            l6800 1A87  
                                          l6448 1BE8                                            l7336 19E4  
                                          l6560 1E9E                                            l6552 1E89  
                                          l6720 1237                                            l6712 05B6  
                                          l6704 0593                                            l6528 1203  
                                          l7344 1DA8                                            l7360 0444  
                                          l7088 1199                                            l7328 17E4  
                                          l7096 156B                                            l6472 0827  
                                          l6464 0806                                            l6456 1AA2  
                                          l6544 1F59                                            l6640 1D2B  
                                          l6632 08D6                                            l6624 08BA  
                                          l6616 08A5                                            l7440 0DC2  
                                          l7432 0D7C                                            l7424 0D4F  
                                          l7352 1ADC                                            l7282 1D77  
                                          l7274 1D72                                            l7266 1D6E  
                                          l7258 1D68                                            l7194 147F  
                                          l7186 1464                                            l7178 1457  
                                          l7290 1F12                                            l7506 1CE8  
                                          l6570 097A                                            l6562 1EA4  
                                          l6554 1E8C                                            l6730 1247  
                                          l6714 05C1                                            l6490 11C6  
                                          l6482 11A9                                            l7370 0470  
                                          l7362 044E                                            l7354 0436  
                                          l7530 1FE5                                            l7522 1DB4  
                                          l7098 156D                                            l6546 1E4A  
                                          l7346 1A99                                            l6802 1C40  
                                          l6474 0829                                            l6466 081B  
                                          l6538 1F4D                                            l6642 1D35  
                                          l6634 08DD                                            l6626 08BE  
                                          l6618 08B2                                            l6810 161E  
                                          l7450 03A6                                            l7442 0DCA  
                                          l7434 0D8D                                            l7426 0D53  
                                          l7610 0943                                            l7602 0926  
                                          l7418 1C7F                                            l7276 1D73  
                                          l7268 1D6F                                            l7196 1480  
                                          l7188 146C                                            l7292 1F14  
                                          l7284 1F0B                                            l7508 1CEB  
                                          l6580 0992                                            l6572 097F  
                                          l6556 1E90                                            l6660 1C3A  
                                          l6652 1C30                                            l6900 0EA1  
                                          l6740 1748                                            l6732 1256  
                                          l6716 05C6                                            l6708 05A0  
                                          l6492 11CB                                            l6484 11A9  
                                          l7380 04A1                                            l7372 047B  
                                          l7364 045C                                            l7356 043C  
                                          l7540 1FF9                                            l7532 1FEB  
                                          l7524 1DC6                                            l6548 1E51  
                                          l7348 1A9C                                            l6804 1C48  
                                          l6476 082C                                            l6468 0820  
                                          l6636 08F1                                            l6628 08C3  
                                          l6820 1651                                            l6812 1625  
                                          l7460 03E2                                            l7452 03B2  
                                          l7444 0363                                            l7436 0D9E  
                                          l7428 0D5B                                            l7700 01DD  
                                          l7620 0958                                            l7604 092B  
                                          l7278 1D74                                            l7198 1481  
                                          l7294 1F16                                            l7286 1F0E  
                                          l6590 09AB                                            l6582 0995  
                                          l6574 0982                                            l6566 0973  
                                          l6558 1E99                                            l6654 1C32  
                                          l6902 0EA3                                            l6750 1771  
                                          l6742 1758                                            l6670 12FA  
                                          l6734 125A                                            l6726 123A  
                                          l6718 05CB                                            l6494 11D1  
                                          l6486 11B4                                            l7390 04E5  
                                          l7382 04BA                                            l7374 0489  
                                          l7534 1FF1                                            l7526 1DC8  
                                          l7550 1411                                            l7542 13FC  
                                          l6830 10EE                                            l6478 082E  
                                          l6646 1D37                                            l6814 1635  
                                          l6822 166A                                            l7470 0415  
                                          l7462 03EA                                            l7454 03C6  
                                          l7446 038A                                            l6806 1C6A  
                                          l7438 0DBA                                            l7710 01F4  
                                          l7630 00A2                                            l7622 095D  
                                          l7606 0937                                            l7296 1F1E  
                                          l7288 1F10                                            l6592 09B0  
                                          l6584 099C                                            l6576 0987  
                                          l6568 0975                                            l6656 1C34  
                                          l6920 0EEE                                            l6904 0EAE  
                                          l6760 178F                                            l6752 1775  
                                          l6744 175C                                            l6736 173C  
                                          l6672 1306                                            l6664 12CF  
                                          l6728 1243                                            l6680 0507  
                                          l6496 11D2                                            l6488 11BA  
                                          l7392 04EA                                            l7376 0497  
                                          l7368 0466                                            l7536 1FF2  
                                          l7528 1FD9                                            l7560 142D  
                                          l7552 1412                                            l7544 1402  
                                          l6840 14CC                                            l7480 1329  
                                          l6648 1D41                                            l6824 166F  
                                          l6816 164E                                            l7472 0424  
                                          l7464 03FD                                            l7456 03CE  
                                          l7448 0392                                            l6808 1C72  
                                          l6832 1209                                            l7704 01E1  
                                          l7640 00D1                                            l7720 0219  
                                          l7632 00AA                                            l7624 0964  
                                          l7616 0947                                            l7608 093C  
                                          l7800 15CF                                            l7298 1F20  
                                          l6594 09C1                                            l6586 09A0  
                                          l6578 098C                                            l6930 0A65  
                                          l6658 1C35                                            l6914 0EC2  
                                          l6906 0EB7                                            l6762 1797  
                                          l6746 1760                                            l6754 177B  
                                          l6738 1745                                            l6666 12DE  
                                          l6690 0522                                            l6682 0509  
                                          l6498 11D4                                            l7570 1D23  
                                          l7394 04F4                                            l7386 04C4  
                                          l7538 1FF8                                            l7562 1435  
                                          l7554 1413                                            l7546 140E  
                                          l6850 14EB                                            l6842 14D6  
                                          l7482 1339                                            l7490 1039  
                                          l6770 09E9                                            l6826 1678  
                                          l7474 0430                                            l7466 040A  
                                          l7458 03DA                                            l6834 1212  
                                          l7730 026C                                            l7722 0221  
                                          l7706 01E9                                            l7650 0112  
                                          l7642 00D8                                            l7634 00B6  
                                          l7626 0966                                            l7618 094C  
                                          l7810 15E5                                            l7802 15D0  
                                          l6596 09C5                                            l6588 09A5  
                                          l6916 0EDA                                            l6908 0EBF  
                                          l6924 0F2C                                            l6756 1783  
                                          l6748 1764                                            l6668 12E4  
                                          l6692 0527                                            l6684 0509  
                                          l6676 1F2E                                            l6940 0F7B  
                                          l6932 0F3E                                            l7572 1D25  
                                          l7564 1D0F                                            l7396 04F8  
                                          l7388 04DE                                            l7492 1B87  
                                          l7556 141C                                            l7548 140F  
                                          l6860 14FE                                            l6852 14F0  
                                          l6844 14DB                                            l7476 1307  
                                          l7484 1016                                            l6780 0A18  
                                          l6772 09FC                                            l7468 0410  
                                          l6836 121A                                            l7724 0235  
                                          l7708 01F1                                            l7652 0115  
                                          l7644 00E0                                            l7636 00BD  
                                          l7628 00A1                                            l7740 1AB1  
                                          l7580 1BA0                                            l7820 1607  
                                          l7812 15EB                                            l7804 15D3  
                                          l6790 1DEF                                            l7574 1AFD  
                                          l6598 09C7                                            l6918 0EDF  
                                          l6758 178B                                            l6694 0532  
                                          l6686 050E                                            l6942 0F87  
                                          l6934 0F6B                                            l7566 1D15  
                                          l7398 04FD                                            l7494 1B91  
                                          l7558 1425                                            l6862 1502  
                                          l6854 14F5                                            l6846 14DD  
                                          l7478 131F                                            l7486 101F  
                                          l6774 09FE                                            l6782 0A1E  
                                          l6766 1F91                                            l6870 19F0  
                                          l6838 121E                                            l7726 0246  
                                          l7902 0202                                            l7670 0167  
                                          l7662 0152                                            l7654 011D  
                                          l7646 00FE                                            l7638 00C5  
                                          l7718 01F8                                            l7750 1EAE  
                                          l7742 1EA9                                            l7590 090A  
                                          l7582 0902                                            l7814 15F7  
                                          l7806 15D6                                            l6880 1A63  
                                          l6792 1DF7                                            l7904 0F35  
                                          l6696 0538                                            l6688 0514  
                                          l6944 0F90                                            l6936 0F71  
                                          l7568 1D1B                                            l6864 150D  
                                          l6856 14F7                                            l6848 14E4  
                                          l7488 1029                                            l6872 19ED  
                                          l6784 0A26                                            l6776 0A06  
                                          l6768 1F94                                            l6960 1C55  
                                          l7728 025B                                            l7680 018B  
                                          l7672 0177                                            l7664 015A  
                                          l7656 013B                                            l7648 010E  
                                          l7752 1EB3                                            l7744 1EA9  
                                          l7592 0916                                            l7576 1B9B  
                                          l7816 15FE                                            l7808 15D9  
                                          l6882 1A6C                                            l6874 1A19  
                                          l6890 1A1F                                            l7498 1CDC  
                                          l6794 1DFA                                            l6698 0587  
                                          l6946 0F9C                                            l6938 0F73  
                                          l6954 0FC4                                            l6858 14FB  
                                          l6866 150E                                            l6786 0A60  
                                          l6778 0A13                                            l6962 1C5D  
                                          l6970 0858                                            l7690 01C1  
                                          l7674 017E                                            l7666 015D  
                                          l7658 014B                                            l7754 1EBF  
                                          l7594 091B                                            l7738 1AAE  
                                          l7578 1B9D                                            l7818 15FF  
                                          l6884 1A5A                                            l6876 1A75  
                                          l6868 1A13                                            l6796 1DFC  
                                          l6956 0FEA                                            l6948 0FA5  
                                          l6892 1BF9                                            l6980 027F  
                                          l6972 0864                                            l6964 0831  
                                          l7692 01C7                                            l7676 0186  
                                          l7668 015F                                            l7756 1EC4  
                                          l7596 0922                                            l7588 0905  
                                          l6878 1A01                                            l6886 1A07  
                                          l6798 1E01                                            l6894 0E8D  
                                          l7758 19EA                                            l6990 02A0  
                                          l6982 0285                                            l6974 0878  
                                          l6966 083C                                            l7694 01CF  
                                          l7686 0194                                            l7678 0189  
                                          l7790 15BF                                            l6888 1A0D  
                                          l6896 0E96                                            l6992 02AC  
                                          l6984 0289                                            l6976 0880  
                                          l6968 0844                                            l7696 01D7  
                                          l7688 01B1                                            l7792 15C5  
                                          l6898 0E9C                                            l6994 02B2  
                                          l6986 028C                                            l6978 088C  
                                          l7698 01DA                                            l7794 15C8  
                                          l6996 02BA                                            l6988 0294  
                                          l7796 15CB                                            l6998 02C1  
                                          l7798 15CE                                            STR_1 2061  
                                          STR_2 2064                                            STR_3 2053  
                                          STR_4 204F                                            STR_6 204F  
                                          STR_7 205E                                            STR_8 201B  
                                          STR_9 205E                                            _LATA 0018  
                                          _LATB 0019                                            _LATC 001A  
                                          _T2PR 028D                                            u5100 0826  
                                          u5101 0825                                            u5110 11AF  
                                          u5111 11AE                                            u5120 11B4  
                                          u6000 15B5                                            u5200 1F59  
                                          u5121 11B3                                            u6001 15B4  
                                          u5201 1F58                                            u5130 11D1  
                                          u5050 1A97                                            u5210 1F6D  
                                          u5131 11D0                                            u5051 1A95  
                                          u5211 1F6C                                            u5140 13FB  
                                          u5060 1A98                                            u6100 1AEC  
                                          u5141 13FA                                            u6101 1AEB  
                                          u5310 09B0                                            u5230 1E90  
                                          u5150 1D08                                            u6030 17DA  
                                          u5070 1AA9                                            u6110 0D6E  
                                          u5311 09AF                                            u5231 1E8F  
                                          u5151 1D07                                            u6031 17D9  
                                          u5071 1AA7                                            u6111 0D6D  
                                          u5160 11DD                                            u6040 1DA8  
                                          u5080 1AAA                                            u5400 08D6  
                                          u6120 0D7C                                            u6200 0964  
                                          u5145 13F7                                            u5305 09A1  
                                          u5161 11DC                                            u6041 1DA7  
                                          u5225 1E57                                            u5401 08D5  
                                          u6121 0D7B                                            u6201 0963  
                                          u5330 09C1                                            u5170 11E5  
                                          u6050 0443                                            u5090 0806  
                                          u5410 08DD                                            u6130 0DC2  
                                          u6210 00AA                                            u5331 09C0  
                                          u5171 11E4                                            u6051 0442  
                                          u6035 17D6                                            u5091 0805  
                                          u5411 08DC                                            u6131 0DC1  
                                          u6211 00A9                                            u5260 1EA4  
                                          u5500 058D                                            u5180 11EE  
                                          u6060 0465                                            u5420 08F1  
                                          u6140 0DCA                                            u6300 0193  
                                          u6220 00C5                                            _PMD0 0796  
                                          u5325 09B2                                            u5261 1EA3  
                                          u5245 1E95                                            u5501 058C  
                                          u5181 11ED                                            u6061 0464  
                                          u5421 08F0                                            u6141 0DC9  
                                          u6301 0192                                            u6221 00C4  
                                          _PMD1 0797                                            u5350 09D4  
                                          u5270 097A                                            u5510 0592  
                                          u5190 1203                                            u6070 04A0  
                                          u5430 1D35                                            u6150 040A  
                                          u6310 01B1                                            u6230 00E0  
                                          _PMD2 0798                                            u5351 09D3  
                                          u5335 09BD                                            u5271 0979  
                                          u5255 1E9A                                            u5511 0591  
                                          u5191 1202                                            u6071 049F  
                                          u5431 1D34                                            u6151 0409  
                                          u6311 01B0                                            u6231 00DF  
                                          _PMD3 0799                                            u5360 09DA  
                                          u5280 0987                                            u5520 05B0  
                                          u6080 04C3                                            u5600 0A26  
                                          u5440 1D41                                            u6320 01CF  
                                          u6240 00FE                                            _PMD4 079A  
                                          u5361 09D9                                            u5345 09C9  
                                          u5281 0986                                            u5521 05AF  
                                          u6081 04C2                                            u5601 0A25  
                                          u5441 1D40                                            u6321 01CE  
                                          u6241 00FD                                            _PMD5 079B  
                                          u5290 099C                                            u5450 1C3A  
                                          u5530 05B6                                            u5370 1148  
                                          u6090 0504                                            u5610 0A60  
                                          u6330 01D7                                            u6250 011D  
                                          _PMD6 079C                                            u5291 099B  
                                          u5451 1C39                                            u5531 05B5  
                                          u5371 1147                                            u6091 0503  
                                          u5611 0A5F                                            u6331 01D6  
                                          u6251 011C                                            _PMD7 079D  
                                          u5620 1DF7                                            u5460 12DE  
                                          u5700 14FB                                            u5380 08B2  
                                          u6340 01E9                                            u6260 013B  
                                          u6180 0922                                            u5621 1DF6  
                                          u5461 12DD                                            u5525 05AC  
                                          u5701 14FA                                            u5613 0A5C  
                                          u5381 08B1                                            u6341 01E8  
                                          u6261 013A                                            u6181 0921  
                                          u5470 12FA                                            u5550 1267  
                                          u5710 1507                                            u5390 08CD  
                                          u5630 1625                                            u6350 01F1  
                                          u6270 015A                                            u6190 0943  
                                          i1l63 1B15                                            i1l47 1BD6  
                                          u5471 12F9                                            u5551 1266  
                                          u5711 1506                                            u5391 08CC  
                                          u5631 1624                                            u6351 01F0  
                                          u6271 0159                                            u6191 0942  
                                          u5560 1764                                            u5480 051D  
                                          u5800 0F71                                            u5720 150D  
                                          u5640 164E                                            u6360 0221  
                                          u6280 0167                                            u5561 1763  
                                          u5465 12DA                                            u5545 124D  
                                          u5481 051C                                            u5801 0F70  
                                          u5721 150C                                            u5641 164D  
                                          u6361 0220                                            u6281 0166  
                                          u5570 177B                                            u5490 0522  
                                          u5730 1516                                            u5650 166F  
                                          u5810 0285                                            u6370 0235  
                                          u6290 0186                                            u6530 15F7  
                                          i1l59 1B4A                                            u5571 177A  
                                          u5475 12F6                                            u5555 1263  
                                          u5491 0521                                            u5731 1515  
                                          u5651 166E                                            u5811 0284  
                                          u6371 0234                                            u6291 0185  
                                          u6531 15F6                                            u5740 0EEE  
                                          u5580 1783                                            u5900 1183  
                                          u5660 1678                                            u5820 02B2  
                                          u6380 025B                                            u6540 1607  
                                          i1l69 19E3                                            u5741 0EED  
                                          u5581 1782                                            u5901 1182  
                                          u5661 1677                                            u5821 02B1  
                                          u6381 025A                                            u6541 1606  
                                          u5750 0F04                                            u5910 11A6  
                                          u5590 0A06                                            u5670 1236  
                                          u5830 02E1                                            u6390 1EC8  
                             ??_setBTConnection 0266                                            u5911 11A5  
                                          u5591 0A05                                            u5671 1235  
                                          u5831 02E0                                            u6391 1EC7  
                                          u5760 0F22                                            u5920 1571  
                                          u5680 14D5                                            u5840 0333  
                                          u5745 0EEA                                            u5921 1570  
                                          u5681 14D4                                            u5841 0332  
                                          u5930 157C                                            u5690 14E4  
                                          u5850 06A7                                            u5755 0F00  
                                          u5931 157B                                            u5691 14E3  
                                          u5851 06A6                                            u5940 1587  
                                          u5860 06E2                                            u5765 0F1E  
                                          u5941 1586                                            u5861 06E1  
                                          u5774 0A74                                            u5870 0712  
                                          u5871 0711                                            u5784 0A9E  
                                          u5960 1597                                            u5880 074B  
                                          u5961 1596                                            u5881 074A  
                                          u5794 0AC8                                            u5970 15A1  
                                          u5890 1FD8                                            u5971 15A0  
                                          u5955 158B                                            u5891 1FD7  
                                          u5990 15B0                                            u5991 15AF  
                                          u5975 159D                                            u5985 15A6  
                                          _TMR2 028C                                            _WPUA 1F39  
                                          _WPUB 1F44                                            _WPUC 1F4F  
                                deadband@center 0028                                   _EUSART1_Write 11A7  
                                          _main 15BF                                   ?_EUSART1_Read 0070  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          btemp 007E                            __end_ofi1_stopMotion 1D97  
                                          start 005B                             sendBTSpeedCmd@axial 0266  
                               _TMR3_Initialize 1F0B                      ??_TMR1_SetInterruptHandler 00EA  
                          readPotJoystick@axial 0035                                    _accelAxialFP 00C0  
                       __end_ofi1_getTicksSince 1016                           _accelLimitAxialStopFP 00E0  
                __size_of_OSCILLATOR_Initialize 0009                                ?_calculateMotion 0070  
                 __end_of_OSCILLATOR_Initialize 1A87                             __size_of_IOCCF0_ISR 000F  
                           _accelLimitYawStopFP 00DC                             __size_of_IOCCF2_ISR 000F  
                         _eusart1RxStatusBuffer 01A0                                 __end_of___aldiv 0BF9  
                                  i1calcCRC@crc 0076                                           _ADCAP 010E  
                                         _ADACT 0117                                           ?_main 0070  
                                         _ADCLK 0118                                  i1___awdiv@sign 0076  
                                         _ADCNT 0099                                 __end_of___eetoc 1B94  
                                         _ADPCH 009F                                           _ADREF 0116  
                               __end_of___awdiv 09E7                                    i1calcCRC@ptr 0075  
                                   _turnPowerOn 1B94                                           STR_10 2036  
                                         STR_11 205E                                           STR_20 205B  
                                         STR_12 2012                                           STR_21 205E  
                                         STR_13 2009                                           STR_14 205B  
                                         STR_22 202D                                           STR_15 2024  
                                         STR_23 2000                                           STR_24 2036  
                                         STR_16 2055                                           STR_17 205E  
                                         STR_25 203F                                 __end_of___ctoee 1B3D  
                                         STR_26 205B                                           STR_18 205B  
                                         STR_19 2048                                 __end_of___awmod 15BF  
                                         _ADRPT 009A                                 _TMR1_StartTimer 19F0  
                              ??_SetDualReceive 00F0                                 __end_of_calcCRC 179C  
                                         _T1CLK 0211                                 ___awdiv@divisor 016C  
                                         _T1CON 020E                                           _T3CLK 0217  
                                         _T2CON 028E                                           _T3CON 0214  
                                         _T2HLT 028F                                           _T2TMR 028C  
                                         i1l233 1A50                                           i1l145 1A00  
                                         _T2RST 0291                                           i1l155 0002  
                                         i1l236 1A59                                           i1l261 1F8E  
                                         i1l149 1B22                                           i1l254 1046  
                                         _B_LED 0045                                           i1l271 13BA  
                                         i1l255 104F                                           i1l511 1B2F  
                                         i1l264 1F90                                           i1l432 1B75  
                                         i1l281 19FA                                           i1l249 10ED  
                                         i1l442 1B84                                           i1l258 1069  
                                         i1l275 1D5D                                           i1l507 1B58  
                                         i1l284 19F6                                           i1l428 1BB4  
                                         i1l517 0003                                           i1l278 19E0  
                                         i1l438 19E2                                           i1l551 0023  
                                         i1l448 19E1                                           i1l560 0059  
                                         i1l553 002F                                           i1l554 0059  
                                         i1l651 1C12                                           i1l555 003B  
                                         i1l548 0013                                           i1l557 004A  
                                         i1l654 1C1B                                           i1l902 1D96  
                                         i1l495 1BE7                                           i1l922 07F7  
                                         i1l940 069E                                           i1l925 0DF1  
                                         i1l950 1095                                           i1l918 07EF  
                                         i1l944 0B68                                           i1l937 0E8A  
                                         i1l929 0E27                                           i1l954 1536  
                                         i1l947 0B68                                           i1l958 156A  
                                  ?_setLEDColor 00E8                                 ___awdiv@counter 01E8  
                          _pairBluetoothDevices 0D32                                showShutdown@ramp 01ED  
                           _doFactoryReset$2267 0268                                           _G_LED 0046  
                                         _OSCEN 0891                                           _TMR1H 020D  
                                         _TMR1L 020C                                           _TMR3H 0213  
                                         _TMR3L 0212                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
                                         _R_LED 0047               __size_of_TMR3_SetInterruptHandler 0006  
                           ___lmul@multiplicand 0074                            _EUSART1_Transmit_ISR 1F6E  
                     ?_TMR3_SetInterruptHandler 00E8                                __end_of_TMR1_ISR 1B4B  
                               showStartup@ramp 01ED                                __end_of_TMR2_ISR 1A01  
                              __end_of_TMR3_ISR 1B59                        __size_of_setJoystickType 00B3  
                               deadband@jsValue 0026                         __size_of_getUISpeedMode 0003  
                ??_TMR3_DefaultInterruptHandler 0070                         __end_of_PIN_MANAGER_IOC 1BB5  
                                         _sleep 13BB                                           _runUI 00A1  
                                ?_EUSART1_Write 0070                         __end_of_TMR1_Initialize 1F0B  
                          __end_of_int16ToBytes 1268                                           pclath 000A  
                              __end_ofi1___wmul 1E4A                                  ??_EUSART1_Read 00E8  
                                 ___memcpyee@to 00EC                                           status 0003  
                           i1___wmul@multiplier 0070                                           wtemp0 007E  
                             setSerialBaud@baud 01EC                              __size_ofi1___awdiv 005F  
                               __end_of_strncmp 0902                              __size_ofi1_calcCRC 0061  
    __end_of_EUSART1_DefaultFramingErrorHandler 19E1     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0070             ?_EUSART1_DefaultFramingErrorHandler 0070  
            _EUSART1_DefaultFramingErrorHandler 19E0                                 _TMR1_WriteTimer 1BC6  
                         __size_of_turnPowerOff 0009                                 ??_USER1_pressed 00E8  
                              ?_bumpUISpeedMode 0070                                ??i1_setBTTimeout 0074  
                              __end_ofi1_strcat 1CC3                                 ??_USER2_pressed 00E8  
                              __end_ofi1_strcpy 1EEA                                __end_ofi1_strlen 1CDC  
                       getBTAddress@addrPointer 026B                                 __initialization 005D  
                       ??_setBTBaudRatesTo38400 00F0                      __end_of_EUSART1_Initialize 1484  
                                  __end_of_main 161C                                 ??_pulseLEDColor 00F0  
                       __end_of_TMR2_Initialize 1CAB                     ?_INTERRUPT_InterruptManager 0070  
                              setJoystickType@i 01ED                        __end_of_SetPowerdownTXRX 1C94  
                         __end_of_setSerialBaud 1E0D                                 _readPotJoystick 05D2  
                      _TMR2_SetInterruptHandler 1A19                                          ??_main 00F0  
                         __end_ofi1_turnPowerOn 1AFD                           ?_pairBluetoothDevices 0070  
                         _TMR3_InterruptHandler 00CA                                     ?i1_clampInt 0070  
                                 ?_initJoystick 0070                                     ?i1_int16cat 0079  
                       _IOCCF2_InterruptHandler 00CE                           ?_EUSART1_Transmit_ISR 0070  
                                   ?i1_getTicks 0070                                ??i1_sendBTBuffer 0079  
                         __end_of_blinkLEDColor 1FD9                                i1_sendBTSpeedCmd 0BF9  
                                        _ADACCH 0097                                          _ADACCL 0096  
                                        _ADACCU 0098                                          _ADACQH 010D  
                                        _ADACQL 010C                                          _ADCON0 0111  
                                        _ADCON1 0112                                          _ADCON2 0113  
                                        _ADCON3 0114                                          _ADERRH 0091  
                                        _ADERRL 0090                                          _ADLTHH 008D  
                                        _ADLTHL 008C                                          _ADRESH 009E  
                                        _ADRESL 009D                                    _turnPowerOff 1AAB  
                                        _ADPREH 0110                                          _ADPREL 010F  
                                        _ADSTAT 0115                                   ?_readJoystick 0070  
                                        _ADUTHH 008F                                ___awdiv@dividend 016E  
                                        _ADUTHL 008E                                          ?_sleep 016C  
                                        ?_runUI 0070                                          _ANSELA 1F38  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                                        _T1GATE 0210                                          _T1GCON 020F  
                                        _T3GATE 0216                                          _T3GCON 0215  
                                        _RC1REG 0119                                          _RC1STA 011D  
                                        i1l1011 1C2D                                          i1l1101 1E88  
                                        i1l1007 0C93                                          i1l1121 1BC5  
                                        i1l1026 10C1                         TMR1_WriteTimer@timerVal 0070  
                                        i1l1211 1AFC                                          i1l1115 1ABD  
                                        _RC4PPS 1F24                                          i1l1124 1AC7  
                                        i1l1053 1739                                          i1l2101 1CC2  
                                        i1l1118 1015                                          i1l1207 1AF1  
                                        i1l1064 12CE                                          i1l1209 1AF3  
                                        i1l2113 1CDB                                          i1l1058 1177  
                                        i1l2107 1EE9                                          i1l1069 0CAA  
                                        i1l1078 0D31                                          i1l1192 1A47  
                                        i1l1440 1352                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          i1l1443 1358  
                                        _ODCONC 1F50                                          _RC6PPS 1F26  
                                        i1l1452 1362                                          i1l1437 1350  
                                        i1l1622 1E35                                          i1l1462 1378  
                                        i1l1446 135A                                          i1l1624 1E49  
                                        i1l1456 136A                                          i1l1464 1379  
                                        i1l1449 1360                    __size_of_EUSART1_is_rx_ready 0009  
                                        i1l1459 1371                                          i1l1636 129A  
                                        i1l6000 1F6E                                          i1l5200 10DE  
                                        i1l6010 1F89                                          i1l6002 1F75  
                                        i1l4410 1686                                          i1l4402 167A  
                                        i1l5210 10EC                                          i1l5202 10E4  
                                        i1l6020 1393                                          i1l6012 137A  
                                        i1l6004 1F7D                                          i1l4420 169B  
                                        i1l4412 168A                                          i1l4404 167B  
                                        i1l5204 10E5                                          i1l5220 1AB4  
                       __end_of_TMR3_Initialize 1F2C                                          i1l6030 13B7  
                                        i1l6022 1398                                          i1l6014 1381  
                                        i1l6006 1F82                                          i1l4430 16BA  
                                        i1l4422 169E                                          i1l4414 168F  
                                        i1l4406 167F                                          i1l5206 10E7  
                                        i1l5230 1ABE                                          i1l5214 1D7A  
                                        i1l1775 16D8                                          i1l1687 0B7C  
                                        i1l6024 139F                                          i1l6016 1386  
                                        i1l6008 1F88                                          i1l5232 1A3F  
                                        i1l4520 152C                                          i1l4512 1517  
                                        i1l4600 16E3                                          i1l4440 16CF  
                                        i1l4432 16BE                                          i1l4424 16A3  
                                        i1l4416 1693                                          i1l4408 1684  
                                        i1l5208 10EA                                          i1l5224 1000  
                                        i1l5216 1D86                                          i1l1697 0BF8  
                                        i1l6026 13A5                                          i1l6018 138D  
                                        i1l4530 1566                                          i1l4522 1532  
                                        i1l4514 151D                                          i1l4610 1702  
                                        i1l4602 16E6                                          i1l4442 16D4  
                                        i1l4434 16BF                                          i1l4426 16A7  
                                        i1l4418 1695                                          i1l4370 1040  
                                        i1l4450 1CC3                                          i1l5218 1D8B  
                                        i1l5260 1D59                                          i1l5252 1D43  
                                        i1l6028 13B0                                          i1l4524 1544  
                                        i1l4516 1521                                          i1l4700 106A  
                                        i1l4620 1729                                          i1l4612 170F  
                                        i1l4604 16F6                                          i1l4436 16C4  
                                        i1l4428 16AB                                          i1l4380 105E  
                                        i1l4372 1040                                          i1l4452 1CC8  
                                        i1l4540 0B80                                          i1l5228 1BB5  
                                        i1l5340 0771                                          i1l5254 1D4E  
                                        i1l4526 154B                                          i1l4518 1527  
                                        i1l4622 172D                                          i1l4614 1713  
                                        i1l4606 16FA                                          i1l4438 16CA  
                                        i1l4390 1E2D                                          i1l4382 1064  
                                        i1l4374 104B                                          i1l4366 1A48  
                                        i1l4446 1ECA                                          i1l4454 1CCC  
                                        i1l4550 0BA2                                          i1l4542 0B8B  
                                        i1l4534 0B69                                          i1l4710 0B64  
                                        i1l4702 0AE4                                          i1l5350 07A5  
                                        i1l5342 0776                                          i1l5510 134B  
                              ??i1_SetSlaveTXRX 0070                                          i1l5256 1D52  
                                        i1l4528 1560                                          i1l4624 1735  
                                        i1l4608 16FE                                          i1l4616 1719  
                                        i1l4640 1166                                          i1l4392 1E31  
                                        i1l4384 1065                                          i1l4376 1050  
                                        u300_20 10A2                                          i1l4448 1ED2  
                                        i1l4456 1CD5                                          i1l4560 0BD2  
                                        i1l4552 0BAD                                          i1l4544 0B8F  
                                        i1l4536 0B6B                                          i1l4704 0AF6  
                                        i1l5192 10C2                                          i1l5360 07B7  
                                        i1l5344 0792                                          i1l5352 07A9  
                                        i1l5336 0766                                          i1l5600 1BC6  
                                        i1l5520 1372                                          i1l5512 1353  
                                        i1l6056 1B4B                                          u300_21 10A1  
                                        i1l5258 1D58                                          i1l4618 1721  
                                        i1l4650 12C3                                          i1l4642 116A  
                                        i1l4634 114B                                          i1l4394 1E3A  
                                        i1l4378 105A                                          i1l4386 1067  
                                        i1l4570 0BF0                                          i1l4562 0BD3  
                                        i1l4554 0BB1                                          i1l4546 0B97  
                                        i1l4538 0B6F                                          i1l4706 0B26  
                                        i1l5194 10C2                                          i1l5362 07BA  
                                        i1l5354 07AB                                          i1l5346 0796  
                                        i1l5338 076C                                          i1l5602 1BCB  
                                        i1l5610 1BD2                                          i1l5514 135B  
                                        i1l6058 1B4D                                          i1l4652 12CE  
                                        i1l4644 129B                                          i1l4636 1153  
                                        i1l4628 1149                                          i1l4396 1E3F  
                                        i1l4388 1E2B                                          i1l4660 0C98  
                                        i1l4580 10AB                                          i1l4900 0C3D  
                                        i1l4564 0BDA                                          i1l4556 0BB8  
                                        i1l4548 0B9F                                          i1l4708 0B34  
                                        i1l5196 10C8                                          i1l5188 1A51  
                                        i1l5364 07BD                                          i1l5356 07B1  
                                        i1l5372 07C9                                          i1l5348 07A2  
                                        i1l5612 1BD4                                          i1l5604 1BCC  
                                        i1l5516 1364                                          i1l5508 133F  
                                        i1l7302 1B67                                          i1l7310 1B7D  
                                        i1l4646 12A9                                          i1l4638 1157  
                                        i1l4398 1E45                                          i1l4670 0CBB  
                                        i1l4662 0C9D                                          i1l4582 10B3  
                                        i1l4574 1096                                          i1l4902 0C46  
                                        i1l4910 0C67                                          i1l4558 0BCA  
                                        i1l4566 0BE0                                          i1l5198 10DA  
                                        i1l5374 07D9                                          i1l5366 07C1  
                                        i1l5358 07B4                                          i1l5614 1B09  
                                        i1l5606 1BCE                                          i1l5518 136B  
                                        i1l7304 1B6E                                          i1l7312 1B82  
                                        i1l4648 12AE                                          i1l4680 0CFF  
                                        i1l4672 0CC0                                          i1l4664 0CA1  
                                        i1l4656 0C96                                          i1l4584 10B7  
                                        u301_20 10AB                                          i1l4576 109B  
                                        i1l4912 0C83                                          i1l4904 0C4F  
                                        i1l4568 0BE5                                          i1l5376 07E1  
                                        i1l5368 07C5                                          i1l5616 1B10  
                                        i1l5608 1BD0                                          i1l5384 1E69  
                                        i1l5800 1BE5                                          u301_21 10AA  
                                        i1l7306 1B73                                          i1l4690 0D24  
                                        i1l4674 0CF3                                          i1l4666 0CAE  
                                        i1l4658 0C98                                          i1l4578 10A3  
                                        i1l4594 10C0                                          i1l4586 10B9  
                                        i1l4930 1C20                                          i1l5386 1E86  
                                        i1l5634 1B16                                          i1l5802 1B23  
                                        i1l5580 1AF9                                          i1l7308 1B76  
                                        i1l4692 0D28                                          i1l4676 0CF9  
                                        i1l4668 0CB3                                          i1l4684 0D09  
                                        i1l4588 10BE                                          i1l4940 0DF5  
                                        i1l4780 1274                                          i1l5636 1B1D  
                                        i1l5804 1B2A                                          i1l5670 19F7  
                                        i1l4598 16DA                                          i1l4694 0D2D  
                                        i1l4686 0D16                                          i1l4678 0CFE  
                                        i1l4950 0E17                                          i1l4942 0E05  
                                        i1l4934 0DDA                                          i1l4782 127C  
                                        i1l5672 19F3                                          i1l5576 1AF4  
                                        i1l7520 1BB1                                          i1l4688 0D1C  
                                        u310_20 0CAA                                          u302_20 10BE  
                                        i1l4696 1CAC                                          i1l4960 0E56  
                                        i1l4952 0E1D                                          i1l4944 0E0A  
                                        i1l4936 0DE3                                          i1l4784 1283  
                                        i1l4776 1268                                          i1l4880 1C10  
                                        i1l4928 1C1C                                          u310_21 0CA9  
                                        u302_21 10BD                                          i1l5578 1AF6  
                                        i1l7514 1BA4                                          i1l4890 0C1A  
                                        i1l4954 0E2B                                          i1l4962 0E5B  
                                        i1l4946 0E0D                                          i1l4938 0DE8  
                                        i1l4786 1292                                          i1l4778 1270  
                                        i1l4882 1C11                                          i1l4970 05D2  
                                        i1l7516 1BA9                                          i1l4892 0C20  
                                        i1l4964 0E5E                                          i1l4956 0E31  
                                        i1l4948 0E11                                          i1l4884 1C16  
                                        i1l4876 1C0B                                          i1l4980 0676  
                                        i1l4972 05DB                                          i1l7518 1BAC  
                                        i1l4894 0C22                                          i1l4958 0E44  
                                        i1l4966 0E62                                          i1l4878 1C0E  
                                        i1l4982 0679                                          i1l4974 05FB  
                                        i1l5790 1BDC                                          u303_20 1702  
                                        u311_20 0CAE                                          i1l4896 0C2B  
                                        i1l4888 0BF9                                          i1l4968 0E65  
                                        i1l4976 061B                                          i1l5792 1BDD  
                                        u303_21 1701                                          u311_21 0CAD  
                                        i1l4898 0C34                                          i1l4978 0647  
                                        i1l5794 1BDF                                          i1l5796 1BE1  
                                        i1l5788 1BD7                                          i1l5990 1B3D  
                                        i1l5798 1BE3                                          u304_20 1719  
                                        u312_20 0CF9                                          i1l5992 1B3F  
                                        u304_21 1718                                          u312_21 0CF8  
                                        _INLVLA 1F3C                                          i1l7906 07D1  
                                        i1l5994 1B47                                          i1l7770 001B  
                                        i1l7762 0006                                          _INLVLB 1F47  
                                        _INLVLC 1F52                                          i1l5996 19FB  
                                        i1l7780 0037                                          i1l7772 001F  
                                        i1l7764 000B                                          i1l5998 19FD  
                                        i1l7782 003F                                          i1l7774 0027  
                                        i1l7766 000F                                          u305_20 1721  
                                        u313_20 0CFE                                          i1l7784 0043  
                                        i1l7776 002B                                          i1l7768 0017  
                                        u305_21 1720                                          u313_21 0CFD  
                                        i1l7786 004E                                          i1l7778 0033  
                                        i1l7788 0052                                          u314_20 0D16  
                                        u410_20 07B1                                          u314_21 0D15  
                                        u410_21 07B0                                          u306_25 115D  
                                        u314_25 0D12                                          u307_20 1177  
                                        u315_20 0D1C                                          u411_20 07E1  
                                        u307_21 1176                                          u315_21 0D1B  
                                        u411_21 07E0                                          u307_25 1173  
                                        u308_20 12A9                                          u332_20 1274  
                                        u316_20 0AF6                                          u412_20 07F7  
                                        u308_21 12A8                                          u332_21 1273  
                                        u316_21 0AF5                                          u412_21 07F6  
                                        u308_25 12A5                                          u260_25 1E3B  
                                        u316_25 0AF2                                          u309_20 12C3  
                                        u261_20 1E45                                          u253_20 1A4F  
                                        u317_20 0B13                                          u413_20 1E86  
                                        u309_21 12C2                                          u261_21 1E44  
                                        u253_21 1A4D                                          u413_21 1E85  
                                        u309_25 12BF                                          u333_25 127D  
                                        u317_25 0B0F                                          u270_20 16CA  
                                        u262_20 167F                                          u254_20 1A50  
                                        u318_20 0B34                                          u406_20 076C  
                                        u270_21 16C9                                          u262_21 167E  
                                        u318_21 0B33                                          u406_21 076B  
                                        u334_25 1284                                          u318_25 0B30  
                                        u271_20 16CF                                          u263_20 168A  
                                        u255_20 1046                                          u335_20 1292  
                                        u319_20 0B51                                          u407_20 0771  
                                        u423_20 134B                                          u271_21 16CE  
                                        u263_21 1689                                          u255_21 1045  
                                        u335_21 1291                                          u407_21 0770  
                                        u423_21 134A                                          u319_25 0B4D  
                                        u264_20 169B                                          u256_20 104B  
                                        u272_20 1EE9                                          u360_20 0E17  
                                        u408_20 0776                                          u424_20 1350  
                                        u264_21 169A                                          u256_21 104A  
                                        u272_21 1EE8                                          u360_21 0E16  
                                        u408_21 0775                                          u424_21 134F  
                                        u601_20 1B6E                                          u257_20 1064  
                                        u273_20 1CD5                                          u361_20 0E2B  
                                        u409_20 0792                                          u441_20 1BCB  
                                        u425_20 1358                                          u601_21 1B6D  
                                        u257_21 1063                                          u273_21 1CD4  
                                        u361_21 0E2A                                          u409_21 0791  
                                        u441_21 1BCA                                          u425_21 1357  
                                        u265_25 169F                                          u602_20 1B7D  
                                        u266_20 16AB                                          u258_20 1E31  
                                        u362_20 0E31                                          u290_20 0B80  
                                        u354_20 1C16                                          u442_20 1B10  
                                        u426_20 1360                                          u602_21 1B7C  
                                        u266_21 16AA                                          u258_21 1E30  
                                        u362_21 0E30                                          u290_21 0B7F  
                                        u354_21 1C15                                          u442_21 1B0F  
                                        u426_21 135F                                          u355_20 0C20  
                                        u291_20 0B9F                                          u363_20 0641  
                                        u443_20 1B1D                                          u427_20 136A  
                                        u355_21 0C1F                                          u291_21 0B9E  
                                        u443_21 1B1C                                          u427_21 1369  
                                        u267_25 16AC                                          u259_25 1E36  
                                        u363_25 063D                                          u284_20 1527  
                                        u268_20 16BA                                          u364_20 066D  
                                        u428_20 1371                                          u284_21 1526  
                                        u268_21 16B9                                          u428_21 1370  
                                        u268_25 16B6                                          u292_25 0BA3  
                                        u364_25 0669                                          u461_20 1F75  
                                        u357_20 0DE8                                          u293_20 0BB1  
                                        u429_20 1378                                          u461_21 1F74  
                                        u357_21 0DE7                                          u293_21 0BB0  
                                        u429_21 1377                                          u285_25 1528  
                                        u269_25 16C0                                          u462_20 1F88  
                                        u286_20 1532                                          u358_20 0DF5  
                                        u446_20 1BDC                                          u462_21 1F87  
                                        u286_21 1531                                          u358_21 0DF4  
                                        u446_21 1BDB                                          u294_25 0BB2  
                                        u463_20 1386                                          u287_20 1544  
                                        u359_20 0E11                                          u295_20 0BCA  
                                        u447_20 1B2A                                          u463_21 1385  
                                        u287_21 1543                                          u359_21 0E10  
                                        u295_21 0BC9                                          u447_21 1B29  
                                        u287_25 1540                                          u295_25 0BC6  
                                        u464_20 1398                                          u616_20 1BA9  
                                        u288_20 1560                                          u640_20 000B  
                      __size_of_flushBTRXbuffer 0021                                          u464_21 1397  
                                        u616_21 1BA8                                          u288_21 155F  
                                        u640_21 000A                                          u288_25 155C  
                                        u296_25 0BD4                                          u465_20 13B0  
                                        u617_20 1BB1                                          u297_20 0BE0  
                                        u289_20 0B6F                                          u393_20 1A58  
                                        u641_20 000F                                          u465_21 13AF  
                                        u617_21 1BB0                                          u297_21 0BDF  
                                        u289_21 0B6E                                          u393_21 1A56  
                                        u641_21 000E                                          u298_20 0BE5  
                                        u394_20 1A59                                          u650_20 0043  
                                        u642_20 0017                                          u298_21 0BE4  
                                        u650_21 0042                                          u642_21 0016  
                                        u299_20 109B                                          u395_20 10C8  
                                        u651_20 004E                                          u643_20 001B  
                                        u299_21 109A                                          u395_21 10C7  
                                        u651_21 004D                                          u643_21 001A  
                                        u396_20 10E4                                          u652_20 0052  
                                        u644_20 001F                                          u396_21 10E3  
                                        u652_21 0051                                          u644_21 001E  
                                        _OSCFRQ 0893                                          u397_20 1D8B  
                                        u645_20 0027                                          u397_21 1D8A  
                                        u645_21 0026                                          u398_20 1D58  
                                        u646_20 002B                                          u398_21 1D57  
                                        u646_21 002A                                          u647_20 0033  
                                        u647_21 0032                                          u648_20 0037  
                                        u648_21 0036                                          u649_20 003F  
                                        u649_21 003E                    __size_of_EUSART1_is_tx_ready 0009  
                              __end_of_deadband 0B69                                          _TX1REG 011A  
                                        _TX1STA 011E                                 _TMR3_WriteTimer 1BD7  
                             ??_BTTimeRemaining 00EC                                __end_of_clampInt 1307  
                              __end_of_int16cat 05D2                           __size_of_getBTAddress 00E6  
                               i1_EUSART1_Write 103F                                __end_of_getTicks 1BF9  
          __end_of_TMR1_DefaultInterruptHandler 19E4           __size_of_TMR1_DefaultInterruptHandler 0001  
                  _TMR1_DefaultInterruptHandler 19E3                                          ___lmul 1268  
                       __end_of_TMR1_StartTimer 19F3                                       ??___aldiv 0078  
                                        ___wmul 1E89                                       ??___eetoc 00ED  
                                     ??___awdiv 00EE                              _EEPROM_uiBrakeMode 0000  
                                     ??___ctoee 00EE                                       ??___awmod 00EC  
                                 ?_setBTTimeout 00E8                                       ??_calcCRC 00E8  
                              ?i1_getTicksSince 0070                        ?_EUSART1_SetErrorHandler 00E8  
                                        _initUI 13FC                                          _memcpy 1207  
                                        _oneSec 1AE6                                          _memset 0434  
                              ___awdiv@quotient 01EA                                 ___awmod@divisor 00E8  
                                        _uiType 0048                                 ___awmod@counter 00ED  
              ??_EUSART1_SetOverrunErrorHandler 00EA                 ?_EUSART1_SetOverrunErrorHandler 00E8  
                           setBTTimeout@timeout 00E8                                          _strcat 1F2C  
                                        _strchr 1D29                                  ??_initJoystick 00F0  
                                        _strcpy 111B                                          _strlen 1CF5  
                                        _strstr 161C                               __end_ofi1___awdiv 16D9  
                               _ADCC_Initialize 1D5E                         __size_ofi1_int16ToBytes 002F  
                             __end_ofi1_calcCRC 173A                                  _PMD_Initialize 1AC8  
                      __end_of_setJoystickSpeed 0AE4                                 _disableJoystick 1A99  
                                _UI_PWM_handler 133F                                    ?_showStartup 0070  
                              ??_sendBTEstopCmd 0079               __size_of_ADCC_GetSingleConversion 0012  
                                ___memcpyee@ptr 00EB                       ?_ADCC_GetSingleConversion 00E8  
                                ??_readJoystick 0039                                 ??_EUSART1_Write 00E8  
      TMR3_SetInterruptHandler@InterruptHandler 00E8      IOCCF2_SetInterruptHandler@InterruptHandler 00E8  
    IOCCF0_SetInterruptHandler@InterruptHandler 00E8        TMR2_SetInterruptHandler@InterruptHandler 00E8  
      TMR1_SetInterruptHandler@InterruptHandler 00E8                                ?_PIN_MANAGER_IOC 0070  
                       __end_of_TMR1_WriteTimer 1BD7                               i1int16ToBytes@num 0070  
                               _eusart1RxBuffer 0220                                       ??_strncmp 00EC  
                                 ?_sendBTBuffer 016C                           __size_ofi1_stopMotion 001D  
                                  ??_IOCCF0_ISR 0070                            _setBTConnection$2256 0268  
                          _setBTConnection$2259 026A                              blinkLEDColor@blink 0266  
                                  ??_IOCCF2_ISR 0070                                    _getBTAddress 027D  
                         __end_of_TMR1_CallBack 1B16                               _initConfiguration 1AFD  
                               _eusart1TxBuffer 0240                                      ___eecpymem 1178  
                              ?_TMR1_Initialize 0070                               _SYSTEM_Initialize 1CDC  
                              ??_sendBTSpeedCmd 01EE                         __end_of__initialization 009D  
                             ??_setJoystickType 0260                                   ?_sendBTString 01EC  
                             getTicksSince@from 00E8                           __end_of_TMR2_CallBack 1B23  
                            ?_initConfiguration 0070                              ?_SYSTEM_Initialize 0070  
                                 ?_SetSlaveTXRX 0070                         ??i1_EUSART1_is_rx_ready 0070  
                         __end_of_TMR3_CallBack 1B30                             __size_ofi1_clampInt 0034  
                __size_of_EUSART1_RxDataHandler 001B                                ??i1_resetBTTimer 0070  
                        __size_of_BTTimeWaiting 001E                                      ___memcpyee 14CA  
                           __size_ofi1_int16cat 009E                         ??i1_EUSART1_is_tx_ready 0070  
                 __end_of_EUSART1_RxDataHandler 1D5E                         __end_of_readPotJoystick 069F  
                      __size_of_receiveBTBuffer 007C                               sendBTSpeedCmd@yaw 0268  
                           __size_ofi1_getTicks 000A                                  __pcstackCOMMON 0070  
                           ??_initConfiguration 00F0                                  ??_setBTTimeout 00EC  
                                  calcCRC@count 00EC                                      _accelYawFP 00BE  
                            setBTConnection@MAC 026C                                    __pidataBANK1 1B59  
                                  __pidataBANK2 07F8                             ??_SYSTEM_Initialize 00EB  
                                     ?_TMR1_ISR 0070                                       ?_TMR2_ISR 0070  
                 ?_TMR1_DefaultInterruptHandler 0070                                       ?_TMR3_ISR 0070  
                            _EEPROM_uiSpeedMode 0001                                   __end_of_sleep 13FC  
                                 __end_of_runUI 027D                                ?_TMR2_Initialize 0070  
                        ??_pairBluetoothDevices 026D                          __end_of_PMD_Initialize 1AD2  
                            __size_of_getUIType 0003                              _readButtonJoystick 0DDA  
                            __end_of_IOCCF0_ISR 1B76                            __end_of_EUSART1_Read 0831  
                                     ?i1___wmul 0070                              __end_of_IOCCF2_ISR 1B85  
                               _setBTConnection 069F                          ??_EUSART1_Transmit_ISR 0070  
                        __end_of_UI_PWM_handler 137A                                    i1_stopMotion 1D7A  
                   __end_of_EUSART1_Receive_ISR 13BB                           __size_of_int16ToBytes 0031  
                                   i1strcat@src 0020                                  _getUISpeedMode 19E4  
                          __size_of_setLEDColor 001F                                       ?i1_strcat 0020  
                           ?_readButtonJoystick 0070                                       ?i1_strcpy 0075  
                                     ?i1_strlen 0070                     ?_IOCCF0_SetInterruptHandler 00E8  
                        __size_of_SetMasterTXRX 0015                       __end_of_initConfiguration 1B09  
                                ??_sendBTBuffer 00ED                       __end_of_SYSTEM_Initialize 1CF5  
                              blinkLEDColor@RGB 01EC                                         ??_sleep 00F0  
                                       ??_runUI 026E                                     i1strcpy@src 0075  
                       __end_of_TMR3_WriteTimer 1BE8                                   _eusart1RxHead 0052  
                                 _eusart1TxHead 0054                                   _eusart1RxTail 0051  
                                    __pbssBANK0 003B                                      __pbssBANK1 00A0  
                                    __pbssBANK2 0120                                      __pbssBANK3 01A0  
                                    __pbssBANK4 0220                                   _eusart1TxTail 0053  
             _EUSART1_TxDefaultInterruptHandler 00D2                         __end_ofi1_EUSART1_Write 106A  
               ??_EUSART1_SetRxInterruptHandler 00EA                                ?_TMR3_Initialize 0070  
                                ??_sendBTString 01EE                                      calcCRC@crc 00EE  
                                    calcCRC@ptr 00ED                                  ??_SetSlaveTXRX 00E8  
                    __end_of_SetSlaveTXMasterRX 1C6A          __end_of_IOCCF2_DefaultInterruptHandler 19E2  
       __size_of_IOCCF2_DefaultInterruptHandler 0001                  _IOCCF2_DefaultInterruptHandler 19E1  
               __end_of_EUSART1_SetErrorHandler 1A63                               ??_flushBTRXbuffer 00F0  
                                    __pmaintext 15BF                            ??_readButtonJoystick 002D  
                                       ?___lmul 0070                __end_of_TMR3_SetInterruptHandler 1A25  
                                       ?___wmul 00E8                           __end_of_getTicksSince 1DEF  
                       __size_of_enableJoystick 000A                                ?_TMR1_StartTimer 0070  
                                    ??_TMR1_ISR 007E                                      ??_TMR2_ISR 0074  
                                    ??_TMR3_ISR 0072                         __end_of_ADCC_Initialize 1D7A  
                                    __pintentry 0004                                   ?_resetBTTimer 0070  
                                i1calcCRC@count 0074                                         _ADFLTRH 0095  
                                       _ADFLTRL 0094                                         ?_initUI 0070  
                                       ?_memcpy 00E8                                         ?_oneSec 0070  
                                       ?_memset 00E8                                  ___lmul@product 0078  
                                       _ADPREVH 009C                                         _ADPREVL 009B  
                                  _int16ToBytes 1237                         __end_of_disableJoystick 1AA2  
              ??_IOCCF0_DefaultInterruptHandler 0070                 ?_IOCCF0_DefaultInterruptHandler 0070  
                                       _ADSTPTH 0093                                         _ADSTPTL 0092  
                               ?_PMD_Initialize 0070                                    ?_turnPowerOn 0070  
                                       ?_strcat 016E                                      ??i1___wmul 0074  
                                       ?_strchr 00E8                                         ?_strcpy 00ED  
                                       ?_strlen 00E8          __end_of_EUSART1_SetFramingErrorHandler 1A6C  
       __size_of_EUSART1_SetFramingErrorHandler 0009                  _EUSART1_SetFramingErrorHandler 1A63  
                       __size_of_TMR1_StopTimer 0003                                         ?_strstr 00ED  
                                     ?_deadband 0026                              i1___awdiv@dividend 0072  
                        __end_of_getUISpeedMode 19E7                                 ?_UI_PWM_handler 0070  
                  ?_EUSART1_DefaultErrorHandler 0070                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                   _BTTimeWaiting 1E0D  
                            __size_of_powerIsOn 0003                                         _OSCCON1 088D  
                                       _OSCCON3 088F                                       ?_clampInt 00E8  
                                       _NVMADRH 081B                                      ??i1_strcat 0022  
                                       _NVMADRL 081A                                         _NVMDATH 081D  
                                       _OSCTUNE 0892                                         _NVMDATL 081C  
                                       _NVMCON2 081F                                       ?_int16cat 01EC  
                                    ??i1_strcpy 0077                                      ??i1_strlen 0072  
                                       _SLRCONA 1F3B                                         _SLRCONB 1F46  
                                       _SLRCONC 1F51                                       ?_getTicks 00E8  
                                    _bumpUIType 1016                            i1sendBTBuffer@buffer 0075  
                              ?_TMR1_WriteTimer 0070                            i1sendBTBuffer@length 0077  
                                   ?___eecpymem 00E8                                      _lastBTTime 00A8  
                             __end_of_getUIType 19EA                            __end_of_initJoystick 1D29  
                                   ?___memcpyee 00E8                              i1___awdiv@quotient 0077  
                       __size_ofi1_EUSART1_Read 002C                      ??_TMR2_SetInterruptHandler 00EA  
                       __size_of_doFactoryReset 00D1                                ?_readPotJoystick 0070  
                      __end_ofi1_sendBTSpeedCmd 0C94                                   _SetMasterTXRX 1C6A  
                                       ___aldiv 0B69                                         ___eetoc 1B85  
                                    _initSerial 1FD9                                  ??_resetBTTimer 00E8  
                                       ___awdiv 0973                         __end_of_setBTConnection 0766  
                               __size_of___lmul 0033                                         ___ctoee 1B30  
                                       ___awmod 156B                                      _initTimers 1DB4  
                          __end_of_readJoystick 07F8                                 __size_of___wmul 0020  
                                       _calcCRC 173A                  __size_of_setBTBaudRatesTo38400 0064  
                 __end_of_setBTBaudRatesTo38400 0895                             _EUSART1_is_rx_ready 1AA2  
                               __size_of_initUI 0042                                 __size_of_memcpy 0030  
                               __size_of_oneSec 000B                                 __size_of_memset 00D1  
                             ??_receiveBTBuffer 01E8                               ?_SetPowerdownTXRX 0070  
                           _EUSART1_is_tx_ready 1A90                                         __ptext1 1B94  
                                       __ptext2 1AAB                                         __ptext3 1C7F  
                                       __ptext4 0902                                         __ptext5 1ADC  
                                       __ptext6 1EA9                                         __ptext7 00A1  
                                       __ptext8 0D32                                         __ptext9 069F  
                                    _limitSpeed 1517                  ??_TMR1_DefaultInterruptHandler 0070  
                                    _estopTimer 00B4                                  i1_int16ToBytes 1149  
                               __size_of_strcat 0021                                 __size_of_strchr 001A  
                               __size_of_strcpy 002E                                 __size_of_strlen 001A  
                                  ??i1_clampInt 0074                                       _T1CONbits 020E  
                                    ??_deadband 002A                                 __size_of_strstr 005E  
                                 i1clampInt@num 0070                              ??_SetPowerdownTXRX 00F0  
                         _OSCILLATOR_Initialize 1A7E                                       _T2CONbits 028E  
                               ?_getUISpeedMode 0070                                    ??i1_int16cat 007B  
                                ?_BTTimeWaiting 00E8                                       _T3CONbits 0214  
                                  ??i1_getTicks 0074                                ___awmod@dividend 00EA  
             __size_of_TMR1_SetInterruptHandler 0006                                ___aldiv@dividend 0074  
                            _EUSART1_Initialize 143E                        ??_PIN_MANAGER_Initialize 00EA  
                     ?_TMR1_SetInterruptHandler 00E8                                         _uiState 0043  
                                     _T2HLTbits 028F                                       _IOCCFbits 1F55  
                                    ??_clampInt 00EC                              limitSpeed@targetFP 0070  
                              pulseLEDColor@RGB 0260                                       _IOCCNbits 1F54  
                                     _IOCCPbits 1F53                                      ??_int16cat 00EF  
                      __size_of_calculateMotion 002C                   ??_EUSART1_DefaultErrorHandler 0071  
                                       _powerOn 004A                                 _BTTimeRemaining 179C  
                                    ??_getTicks 00EC                      __size_of_initConfiguration 000C  
                    __size_of_SYSTEM_Initialize 0019                            __end_of_setBTTimeout 1AE6  
                                       clrloop0 1A26                                         _strncmp 0895  
                          end_of_initialization 009D                                ?_TMR3_WriteTimer 0070  
                          __size_of_showStartup 0071                            ?_EUSART1_is_rx_ready 0070  
                                     _T2RSTbits 0291                             ?_EUSART1_Initialize 0070  
                              ?i1_EUSART1_Write 0070                            ?_EUSART1_is_tx_ready 0070  
                                       memcpy@d 00EE                                         memcpy@n 00E9  
                                       memcpy@s 00EF                                 _topAxialSpeedFP 00BC  
                                       init_ram 1A2B                                         memset@c 00E8  
                                       memset@k 016D                                         memset@n 00EA  
                                       memset@s 016F                     _EUSART1_OverrunErrorHandler 015E  
                                       initloop 1A2C                               i1int16cat@divider 0023  
         __end_of_EUSART1_SetRxInterruptHandler 1A7E          __size_of_EUSART1_SetRxInterruptHandler 0009  
                 _EUSART1_SetRxInterruptHandler 1A75                                       _BTTimeout 00A4  
                     sendBTSpeedCmd@blockIfBusy 026A                           __end_of_USER1_pressed 1A38  
                                ?_SetMasterTXRX 0070                                      _timeKeeper 1E69  
                            __end_ofi1_clampInt 12CF                               __end_of_powerIsOn 19ED  
                                 i1int16cat@num 0079                                   ?_showShutdown 0070  
                            __end_ofi1_int16cat 0D32                           __end_of_USER2_pressed 1A3F  
                              ___aldiv@quotient 0022                              __end_ofi1_getTicks 1ABE  
                               ___memcpyee@from 00E8                           __size_of_EUSART1_Read 0031  
                               ___memcpyee@size 00E9                            __end_of_sendBTBuffer 1207  
                              ?_ADCC_Initialize 0070                __end_of_ADCC_GetSingleConversion 1C40  
                          ??_EUSART1_Initialize 00EA                           i1___wmul@multiplicand 0072  
                                       strchr@c 00E8                    ??i1_ADCC_GetSingleConversion 0073  
                                       strchr@s 00EA                        __size_of_bumpUISpeedMode 0038  
                                       strcpy@d 01EA                          __end_ofi1_int16ToBytes 1178  
                                       strlen@a 00EB                                         strcpy@s 01E8  
                                       strlen@s 00E8                                ?_disableJoystick 0070  
                         __end_of_pulseLEDColor 111B                             __size_of___eecpymem 002F  
                                       strstr@h 01ED                                         strstr@n 00ED  
                                     _PORTAbits 000C                                       _PORTBbits 000D  
                                     _PORTCbits 000E                            __end_of_sendBTString 1FB4  
                      _TMR3_SetInterruptHandler 1A1F                             blinkLEDColor@blinks 01EE  
                          __end_of_SetSlaveTXRX 1A90                               ?_setJoystickSpeed 0070  
                               _setJoystickType 0E8B                                   _sendDebugText 00C8  
                           __size_of___memcpyee 004D                                       i1___awdiv 167A  
                            ??_setJoystickSpeed 00EF                               _accelLimitAxialFP 00E2  
                                     i1_calcCRC 16D9                                     ?_bumpUIType 0070  
              __size_of_EUSART1_SetErrorHandler 0009                    ??_IOCCF2_SetInterruptHandler 00EA  
                           EUSART1_Write@txData 00E9                           ??_EUSART1_is_rx_ready 00E8  
                       __size_of_SetDualReceive 0015                           ??_EUSART1_is_tx_ready 00E8  
                       sendBTBuffer@blockIfBusy 016F                          __size_of_setSerialBaud 001E  
                             _accelLimitSweepFP 00DA                                    _EUSART1_Read 0800  
                                    _stopMotion 1D97                          __size_ofi1_turnPowerOn 000C  
                         i1sendBTSpeedCmd@axial 0026             __size_ofi1_ADCC_GetSingleConversion 0012  
                                ??_showShutdown 01EC            __size_of_EUSART1_DefaultErrorHandler 0004  
                                     _RX_Buffer 01C0                  __size_ofi1_EUSART1_is_rx_ready 0009  
                 __end_ofi1_EUSART1_is_rx_ready 1A5A                          __size_of_blinkLEDColor 0025  
                                _enableJoystick 1AD2                  __size_ofi1_EUSART1_is_tx_ready 0009  
                     i1sendBTBuffer@blockIfBusy 0078                                     ?_initSerial 0070  
                 __end_ofi1_EUSART1_is_tx_ready 1A51                                     ?_initTimers 0070  
                              ?_setBTConnection 01EF            __end_of_TMR2_DefaultInterruptHandler 0003  
         __size_of_TMR2_DefaultInterruptHandler 0001                    _TMR2_DefaultInterruptHandler 0002  
                                __end_of___lmul 129B                                  __end_of___wmul 1EA9  
                               ?i1_int16ToBytes 0070                               __size_of_TMR1_ISR 000E  
                             __size_of_TMR2_ISR 0006                               __size_of_TMR3_ISR 000E  
                                 clampInt@limit 00EA                                  _TMR1_StopTimer 19ED  
                       __size_ofi1_setBTTimeout 000A                                  __end_of_initUI 143E  
                                   ?_limitSpeed 0070                                 ??_BTTimeWaiting 00EC  
                                __end_of_memcpy 1237                          ?_OSCILLATOR_Initialize 0070  
                       __end_of_BTTimeRemaining 1800                                  __end_of_oneSec 1AF1  
                                __end_of_memset 0505             __size_of_IOCCF2_SetInterruptHandler 0006  
                   i1sendBTSpeedCmd@blockIfBusy 002A                                  __end_of_strcat 1F4D  
                                __end_of_strchr 1D43                                  __end_of_strcpy 1149  
                                __end_of_strlen 1D0F                                  __end_of_strstr 167A  
                          __size_of_turnPowerOn 0010                             start_initialization 005D  
                             __size_ofi1___wmul 001F                        __size_ofi1_getTicksSince 0016  
                                    _systemTime 003B                 __size_of_PIN_MANAGER_Initialize 0046  
                                    ?i1___awdiv 0070                                      ?i1_calcCRC 0070  
 EUSART1_SetRxInterruptHandler@interruptHandler 00E8   EUSART1_SetTxInterruptHandler@interruptHandler 00E8  
                                     i1strcpy@d 007C                            __end_of_resetBTTimer 1C0A  
                         __size_of_initJoystick 001A                                       i1strlen@a 0073  
                                     i1strcpy@s 0079                                       i1strlen@s 0070  
                               _flushBTRXbuffer 1F4D                               __size_ofi1_strcat 0018  
                         __end_of_EUSART1_Write 11D7                               __size_ofi1_strcpy 0021  
                             __size_ofi1_strlen 0019                               ??_calculateMotion 007D  
                       __size_ofi1_sendBTBuffer 002C                                 ??_SetMasterTXRX 00F0  
                      __size_of_PIN_MANAGER_IOC 0011                           __size_of_readJoystick 0092  
                        __end_of_enableJoystick 1ADC                                  i1_EUSART1_Read 10C2  
                                  i1strcat@dest 007D                                  _doFactoryReset 0363  
                                   ?_timeKeeper 0070                               int16ToBytes@ndata 00EA  
                      __size_of_TMR1_Initialize 0021                                ??_PMD_Initialize 00E8  
                                      ??___lmul 0078                         __size_ofi1_SetSlaveTXRX 0009  
                                      ??___wmul 00EC                           _EUSART1_RxDataHandler 1D43  
                ?_EUSART1_SetRxInterruptHandler 00E8                             __size_of_bumpUIType 0029  
                        __end_of_TMR1_StopTimer 19F0                                     __pdataBANK1 00DA  
                                   __pdataBANK2 0164                                        ??_initUI 016C  
                              ??_UI_PWM_handler 0070                                        ??_memcpy 00EB  
                                      ??_oneSec 00E8                                        ??_memset 00EC  
                       __end_of_setJoystickType 0F3E                                    i1strcpy@dest 007B  
                 ?_TMR2_DefaultInterruptHandler 0070                                      memset@dest 016C  
                            _SetSlaveTXMasterRX 1C55                          __size_of_TMR1_CallBack 000D  
                                 _setSerialBaud 1DEF                             i1getTicksSince@from 0070  
                                      ??_strcat 01EC                                        ??_strchr 00EA  
                                      ??_strcpy 016C                                        ??_strlen 00EA  
                                _eusart1RxCount 0050                                        ??_strstr 01E8  
                                 ??_setLEDColor 00EA                                   i1_turnPowerOn 1AF1  
                 __size_of_pairBluetoothDevices 00A8                        _ADCC_GetSingleConversion 1C2E  
                                   __pbssEEDATA 0000                          __size_of_TMR2_CallBack 000D  
                                  _initJoystick 1D0F                           __size_of_setBTTimeout 000A  
                                   _debugBuffer 0128                                 _accelLimitYawFP 00DE  
             _EUSART1_RxDefaultInterruptHandler 0162                               ??_bumpUISpeedMode 0267  
                                     ___latbits 0003                   __size_of_EUSART1_Transmit_ISR 0023  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00E8  
                                 __pcstackBANK2 016C                                   __pcstackBANK3 01E8  
                                 __pcstackBANK4 0260                             i1sendBTSpeedCmd@yaw 0028  
                           ?_SetSlaveTXMasterRX 0070                               __size_of_deadband 0085  
                      __size_of_TMR2_Initialize 0017                          __size_of_TMR3_CallBack 000D  
                                 _blinkLEDColor 1FB4                     setJoystickSpeed@jsSpeedMode 00EF  
                             __size_of_clampInt 0038                              sendBTBuffer@buffer 016C  
                                  _readJoystick 0766          __end_of_IOCCF0_DefaultInterruptHandler 19E3  
       __size_of_IOCCF0_DefaultInterruptHandler 0001                  _IOCCF0_DefaultInterruptHandler 19E2  
                           __size_of_initSerial 0027                         i1EUSART1_Read@readValue 0071  
                             __size_of_int16cat 00CD                                    ??___eecpymem 00EA  
                           __size_of_initTimers 001D                              sendBTBuffer@length 016E  
                      receiveBTBuffer@charsRead 0264                               __size_of_getTicks 0011  
               ??_EUSART1_SetTxInterruptHandler 00EA                ??_EUSART1_SetFramingErrorHandler 00EA  
               ?_EUSART1_SetFramingErrorHandler 00E8                                 int16ToBytes@num 00E8  
                  __size_of_EUSART1_Receive_ISR 0041                          __end_ofi1_EUSART1_Read 10EE  
                        __end_of_doFactoryReset 0434                                 _timeoutSequence 00C6  
                           __size_of_limitSpeed 0054                                       __pnvBANK0 0055  
                                     __pnvBANK1 00CA                                       __pnvBANK2 015C  
                                   ?_stopMotion 0070                         __size_of_sendBTEstopCmd 0012  
                                     _charsRead 00C7                                 _receiveBTBuffer 09E7  
                         __size_of_sendBTBuffer 0030                                   int16ToBytes@i 00EE  
                                 _targetAxialFP 0041                                 ?_enableJoystick 0070  
                                  ??___memcpyee 00EA                          _PIN_MANAGER_Initialize 1484  
                          ??_SetSlaveTXMasterRX 00F0                                       _getUIType 19E7  
                      __size_of_TMR3_Initialize 0021                     __size_of_readButtonJoystick 00B1  
              __end_of_TMR1_SetInterruptHandler 1A19                               ?i1_sendBTSpeedCmd 0026  
                                      ?___aldiv 0070               i1ADCC_GetSingleConversion@channel 0073  
               ADCC_GetSingleConversion@channel 00EB                           __size_of_sendBTString 0023  
                                      ?___eetoc 0070                                        ?___awdiv 016C  
                                     __ptext100 133F                                       __ptext101 19FB  
                                     __ptext110 1D7A                                       __ptext102 1B16  
                                     __ptext111 1ABE                                       __ptext103 0002  
                                     __ptext120 0AE4                                       __ptext112 1BB5  
                                     __ptext104 1E69                                       __ptext121 0B69  
                                     __ptext113 1000                                       __ptext105 1B3D  
                                     __ptext130 103F                                       __ptext122 1268  
                                     __ptext114 1AB4                                       __ptext106 1BC6  
                                     __ptext131 0C94                                       __ptext123 0DDA  
                                     __ptext115 1A51                                       __ptext107 1B09  
                                     __ptext140 1B76                                       __ptext132 1E2B  
                                     __ptext124 0BF9                                       __ptext116 10C2  
                                     __ptext108 19E3                                       __ptext141 19E2  
                                     __ptext133 167A                                       __ptext125 1CAB  
                                     __ptext117 1C1C                                       __ptext109 0766  
                                     __ptext150 19F3                                       __ptext142 1AF1  
                                     __ptext134 1149                                       __ptext126 1CC3  
                                     __ptext118 05D2                                       __ptext151 1D43  
                                     __ptext143 19E1                                       __ptext135 129B  
                                     __ptext127 1EC9                                       __ptext119 1C0A  
                                     __ptext144 1B67                                       __ptext136 16D9  
                                     __ptext128 1096                                       __ptext145 1A3F  
                                     __ptext137 106A                                       __ptext129 1A48  
                                     __ptext146 1F6E                                       __ptext138 1517  
                                     __ptext147 137A                                       __ptext139 1BA4  
                                     __ptext148 19F7                                       __ptext149 19E0  
                                      ?___ctoee 00ED                                        ?___awmod 00E8  
            __end_ofi1_ADCC_GetSingleConversion 1C1C                      i1_ADCC_GetSingleConversion 1C0A  
                       __size_of_sendBTSpeedCmd 00C2                                        ?_calcCRC 0070  
                                  _setBTTimeout 1ADC                                ??_getUISpeedMode 00E8  
                               ?_TMR1_StopTimer 0070                           __size_of_SetSlaveTXRX 0009  
                            ??i1_sendBTSpeedCmd 002B                               i1___awdiv@divisor 0070  
                                  _estopPending 004D                                  ?_setSerialBaud 01EC  
                             i1___awdiv@counter 0075                    ??_INTERRUPT_InterruptManager 007E  
                         i1setBTTimeout@timeout 0070                                  ?i1_turnPowerOn 0070  
                                  _limitedYawFP 00C2                              __end_of___eecpymem 11A7  
                              ?_BTTimeRemaining 00E8                         __size_ofi1_resetBTTimer 0011  
                                      _BAUD1CON 011F                               limitSpeed@accelFP 0074  
                      __size_of_TMR1_StartTimer 0003      __end_of_EUSART1_DefaultOverrunErrorHandler 19FB  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0070  
           ?_EUSART1_DefaultOverrunErrorHandler 0070              _EUSART1_DefaultOverrunErrorHandler 19F7  
                       __end_of_flushBTRXbuffer 1F6E                            _EUSART1_ErrorHandler 015C  
                                ?_blinkLEDColor 01EC                                 i1clampInt@limit 0072  
                          __end_of_showShutdown 1EC9                         _EUSART1_SetErrorHandler 1A5A  
            __end_of_IOCCF2_SetInterruptHandler 1A13                      _IOCCF2_SetInterruptHandler 1A0D  
                                   ??i1___awdiv 0074                             __size_of_timeKeeper 0020  
                                   ??i1_calcCRC 0070                           setJoystickType@jsType 01EC  
                                     _masterMAC 0138                                   ?_turnPowerOff 0070  
                            __end_of___memcpyee 1517                             __end_of_setLEDColor 1E69  
                                    sleep@delay 016C                                        _T2CLKCON 0290  
                         receiveBTBuffer@buffer 0265                                       _dutyCycle 0044  
                                      ?_strncmp 00E8                                  __size_of_sleep 0041  
                                __size_of_runUI 01DC                                  _SetDualReceive 1C40  
                                  _sendBTBuffer 11D7                          __size_of_getTicksSince 001E  
                                    sleep@start 01E8                       __size_of_SetPowerdownTXRX 0015  
                             ??i1_getTicksSince 0074                           _turnPowerOn$intlevel0 1B98  
                                 int16cat@digit 0261                                   _TMR1_CallBack 1B09  
                               ___aldiv@divisor 0070                               limitSpeed@speedFP 0079  
                               ___aldiv@counter 0020                                  ___wmul@product 00EC  
                                      _LATAbits 0018         EUSART1_SetErrorHandler@interruptHandler 00E8  
                                      _LATBbits 0019                                        _LATCbits 001A  
                                  _sendBTString 1F91                                 ?i1_EUSART1_Read 0070  
                               ?_doFactoryReset 0070                                       clear_ram0 1A25  
                                 _TMR2_CallBack 1B16                                        _PIE0bits 0716  
                                      _PIE3bits 0719                                        _PIE4bits 071A  
                                  _SetSlaveTXRX 1A87                                     _axialCenter 00E6  
                      __size_of_TMR1_WriteTimer 0011                        receiveBTBuffer@timeoutMS 016D  
           __size_of_INTERRUPT_InterruptManager 0057                                        _PIR0bits 070C  
                                      _PIR3bits 070F                                        _PIR4bits 0710  
                    ??_TMR3_SetInterruptHandler 00EA                                   _TMR3_CallBack 1B23  
                                    ?_getUIType 0070                                        _RX1DTPPS 1ECB  
                        ?_EUSART1_RxDataHandler 0070                                  setLEDColor@RGB 00E8  
                                     _yawCenter 00E4                                  _limitedAxialFP 003F  
                      receiveBTBuffer@startTime 0260                                        _TMR1_ISR 1B3D  
                                      _TMR2_ISR 19FB                                        _TMR3_ISR 1B4B  
                             ??_PIN_MANAGER_IOC 0070                                       _powerIsOn 19EA  
                              ?_setJoystickType 0070                                  i1_setBTTimeout 1ABE  
                             ??_TMR1_Initialize 00EA                                      _ADCON0bits 0111  
                                    _ADCON1bits 0112                           _setBTBaudRatesTo38400 0831  
                                    _ADCON2bits 0113                                      _ADCON3bits 0114  
                             ___wmul@multiplier 00E8                        __size_of_readPotJoystick 00CD  
                                      i1___wmul 1E2B                             __size_of_stopMotion 001D  
                         __size_of_resetBTTimer 0011                  ??_TMR2_DefaultInterruptHandler 0070  
             __size_of_TMR2_SetInterruptHandler 0006                       ?_TMR2_SetInterruptHandler 00E8  
                                 ??_showStartup 01EC                                        i1_strcat 1CAB  
                                ??_turnPowerOff 00F0                          __end_of_SetDualReceive 1C55  
                                      i1_strcpy 1EC9                                        i1_strlen 1CC3  
                                  ??_bumpUIType 0267                               ___lmul@multiplier 0070  
                                 ?_getBTAddress 01EF                         __end_of_receiveBTBuffer 0A63  
                                ?_TMR1_CallBack 0070                                int16cat@suppress 0260  
                             ??_TMR2_Initialize 00EA                                  i1_sendBTBuffer 1096  
                         EUSART1_Read@readValue 00E9                                  ?_TMR2_CallBack 0070  
                     __size_of_setJoystickSpeed 0081                                      _ADSTATbits 0115  
         __end_of_EUSART1_SetTxInterruptHandler 1A07          __size_of_EUSART1_SetTxInterruptHandler 0006  
                 _EUSART1_SetTxInterruptHandler 1A01                                  ?_TMR3_CallBack 0070  
                      __size_of_TMR3_WriteTimer 0011                                       memcpy@tmp 00EC  
                              ??i1_int16ToBytes 0073                        __size_ofi1_EUSART1_Write 002B  
                                i1_SetSlaveTXRX 1A3F                                    ??_initSerial 00EE  
                       setBTConnection@isMaster 01EF                                    ??_initTimers 00EA  
                               ??_setSerialBaud 00F0                          __end_ofi1_setBTTimeout 1AC8  
                       ??_OSCILLATOR_Initialize 00E8                                __size_of___aldiv 0090  
                               i1int16ToBytes@i 0076                                   _getTicksSince 1DD1  
                              __size_of___eetoc 000F                                __size_of___awdiv 0074  
                              __size_of___ctoee 000D                                __size_of___awmod 0054  
                                    ?_powerIsOn 0070                                    _resetBTTimer 1BF9  
                               ??i1_turnPowerOn 0070                                __size_of_calcCRC 0062  
                            __end_of_bumpUIType 103F                     __size_of_EUSART1_Initialize 0046  
                                  ??_limitSpeed 0076                               ??_TMR3_Initialize 00EA  
                      _TMR1_SetInterruptHandler 1A13                               _getBTAddress$2248 0268  
                               ??_blinkLEDColor 01EF                           _TMR1_InterruptHandler 00D6  
                     ??_EUSART1_SetErrorHandler 00EA                                        _deadband 0AE4  
                                   _setLEDColor 1E4A                                   ?i1_stopMotion 0070  
           __end_of_EUSART1_DefaultErrorHandler 19F7                     _EUSART1_DefaultErrorHandler 19F3  
                   __end_of_EUSART1_is_rx_ready 1AAB                         _IOCCF0_InterruptHandler 00D0  
                                    strcat@dest 00EF                                        calcCRC@i 00EB  
                      __size_of_ADCC_Initialize 001C                                ?_flushBTRXbuffer 0070  
                               _calculateMotion 106A                                  _axialCenterSum 00B0  
                   __end_of_EUSART1_is_tx_ready 1A99                                        _clampInt 12CF  
                                   _estopActive 004C                                     _oneSecBlink 004B  
                                      _int16cat 0505                                 ?_SetDualReceive 0070  
                                   _estopBuffer 0164                        __size_of_disableJoystick 0009  
                       receiveBTBuffer@maxChars 016C                          __size_of_USER1_pressed 0007  
                                      __ptext10 0831                                        __ptext11 027D  
                                      __ptext20 19F0                                        __ptext12 1207  
                                      __ptext21 0363                                        __ptext13 1C6A  
                                    _T1GCONbits 020F                                        __ptext30 1C40  
                                      __ptext22 161C                                        __ptext14 1A38  
                                      __ptext31 1A99                                        __ptext23 0895  
                                      __ptext15 1A31                                        __ptext40 156B  
                                      __ptext32 19ED                                        __ptext24 1D29  
                                      __ptext16 1C55                                        __ptext41 1E0D  
                                      __ptext33 1016                                        __ptext25 1F91  
                                      __ptext17 1AE6                                        __ptext50 1D0F  
                                      __ptext42 179C                                        __ptext34 1307  
                                      __ptext26 1F4D                                        __ptext18 1AD2  
                                      __ptext51 1D97                                        __ptext43 19EA  
                                      __ptext35 1FB4                                        __ptext27 09E7  
                                      __ptext19 1BF9                                        __ptext60 1237  
                                      __ptext52 0F3E                                        __ptext44 13FC  
                                      __ptext36 10EE                                        __ptext28 1AA2  
                                      __ptext61 12CF                                        __ptext53 1F2C  
                                      __ptext45 1B85                                        __ptext37 1E4A  
                                      __ptext29 0800                                        __ptext70 1AFD  
                                      __ptext62 173A                                        __ptext54 1CF5  
                                      __ptext46 1178                                        __ptext38 1B30  
                                      __ptext71 1DEF                                        __ptext63 0E8B  
                                      __ptext55 111B                                        __ptext47 1DB4  
                                      __ptext39 14CA                                        __ptext80 1A19  
                                      __ptext72 13BB                                        __ptext64 1C2E  
                                      __ptext56 11D7                                        __ptext48 1FD9  
                                      __ptext81 1EEA                                        __ptext73 1DD1  
                                      __ptext65 0A63                                        __ptext57 1A90  
                                      __ptext49 0434                                        __ptext90 1A75  
                                      __ptext82 1A13                                        __ptext74 1BE8  
                                      __ptext66 1E89                                        __ptext58 11A7  
                                      __ptext91 1A6C                                        __ptext83 1AC8  
                                      __ptext75 1A87                                        __ptext67 0973  
                                      __ptext59 0505                                        __ptext92 1A63  
                                      __ptext84 1484                                        __ptext76 1CDC  
                                      __ptext68 19E7                                        __ptext93 1A5A  
                                      __ptext85 1A0D                                        __ptext77 1F0B  
                                      __ptext69 19E4                                        __ptext94 1D5E  
                                      __ptext86 1A07                                        __ptext78 1A1F  
                                      __ptext87 1A7E                                        __ptext79 1C94  
                                      __ptext96 1B4B                                        __ptext88 143E  
                                      __ptext97 1BD7                                        __ptext89 1A01  
                                      __ptext98 1B23                                        __ptext99 0003  
                                      _getTicks 1BE8                    ??_IOCCF0_SetInterruptHandler 00EA  
                                ??_getBTAddress 0266                          __size_of_USER2_pressed 0007  
                        __end_ofi1_sendBTBuffer 10C2                               ??_TMR1_StartTimer 00E8  
                                    _T3GCONbits 0215                                      _IOCCF0_ISR 1B67  
                                    _IOCCF2_ISR 1B76                                      strcpy@dest 01EB  
                              __size_of_strncmp 006D                         TMR3_WriteTimer@timerVal 0070  
                            __end_of_initSerial 2000                             limitSpeed@limitedFP 0072  
                              limitSpeed@diffFP 007B                              __end_of_initTimers 1DD1  
                           __end_of_showStartup 0973                                   __size_of_main 005D  
                        __size_of_pulseLEDColor 002D                                  _sendBTEstopCmd 1C1C  
                                  int16cat@bufP 0265                          __end_ofi1_SetSlaveTXRX 1A48  
                            __end_of_limitSpeed 156B                                 i1int16cat@digit 0021  
                                  ??_timeKeeper 0070                                        _slaveMAC 0144  
                                   ??_getUIType 00E8                                      _RC1STAbits 011D  
                               int16cat@divider 0263  EUSART1_SetOverrunErrorHandler@interruptHandler 00E8  
                                _sendBTSpeedCmd 0F3E                      ??_ADCC_GetSingleConversion 00EB  
                                      int$flags 007E                                  ?_getTicksSince 00E8  
                                  _joystickType 004E                                 _bumpUISpeedMode 1307  
                               ?i1_setBTTimeout 0070                           i1_EUSART1_is_rx_ready 1A51  
            __end_of_INTERRUPT_InterruptManager 005B                      _INTERRUPT_InterruptManager 0004  
                                 ?_int16ToBytes 00E8                               ??_TMR1_WriteTimer 0072  
                        ?_setBTBaudRatesTo38400 0070                           i1_EUSART1_is_tx_ready 1A48  
          __end_of_TMR3_DefaultInterruptHandler 0004           __size_of_TMR3_DefaultInterruptHandler 0001  
                  _TMR3_DefaultInterruptHandler 0003                     _EUSART1_FramingErrorHandler 0160  
                           _EUSART1_Receive_ISR 137A                                   ??_turnPowerOn 00E8  
                                   _uiSpeedMode 0049                           __size_of_showShutdown 0020  
                                i1_resetBTTimer 1BB5             __size_of_IOCCF0_SetInterruptHandler 0006  
                                ??i1_stopMotion 007E                                     clampInt@num 00E8  
                               ___eecpymem@from 00E8                                 ___eecpymem@size 00E9  
                         __end_of_BTTimeWaiting 1E2B                                      _INTCONbits 000B  
                      __size_of_setBTConnection 00C7                                     _NVMCON1bits 081E  
                                   _uiStateTime 00A0                                        memcpy@d1 00ED  
                                      memcpy@s1 00E8                                  __pstringtext10 204F  
                                __pstringtext11 2055                                  __pstringtext12 205B  
                                __pstringtext13 205E                                  __pstringtext14 2061  
                                __pstringtext15 2064                                  __pstringtext16 0000  
                             ??_readPotJoystick 0030                                 ??_TMR1_CallBack 007E  
                            __end_of_timeKeeper 1E89                                    _yawCenterSum 00AC  
                               ?i1_sendBTBuffer 0075                                        intlevel1 0000  
                              ?_receiveBTBuffer 016C                                _SetPowerdownTXRX 1C7F  
                               ??_TMR2_CallBack 0074                                ??_enableJoystick 00E8  
                                     strcat@src 016E                          __end_of_sendBTEstopCmd 1C2E  
                          ?_EUSART1_Receive_ISR 0070                                     _targetYawFP 00C4  
                  __end_of_pairBluetoothDevices 0DDA                         ?_PIN_MANAGER_Initialize 0070  
                               ??_TMR3_CallBack 0071          __end_of_EUSART1_SetOverrunErrorHandler 1A75  
       __size_of_EUSART1_SetOverrunErrorHandler 0009                  _EUSART1_SetOverrunErrorHandler 1A6C  
                                  ??_stopMotion 00F0                                     _replyBuffer 0120  
                                     strcpy@src 00ED                    __end_of_EUSART1_Transmit_ISR 1F91  
                               ?i1_SetSlaveTXRX 0070                                       strncmp@_l 016C  
                                     strncmp@_r 00E8                                     int16cat@num 01EC  
                              ??_TMR1_StopTimer 00E8                          __end_of_sendBTSpeedCmd 1000  
                         __end_of_SetMasterTXRX 1C7F                                  i1int16cat@bufP 0025  
                                  _showShutdown 1EA9                                   _USER1_pressed 1A31  
                          __end_of_turnPowerOff 1AB4                                   _USER2_pressed 1A38  
EUSART1_SetFramingErrorHandler@interruptHandler 00E8                     ?i1_ADCC_GetSingleConversion 0070  
                ?_EUSART1_SetTxInterruptHandler 00E8                                  ??_int16ToBytes 00EB  
                        __end_ofi1_resetBTTimer 1BC6                                     ??_powerIsOn 00E8  
                       __end_of_calculateMotion 1096                               ??_TMR3_WriteTimer 0072  
                        __size_of_EUSART1_Write 0030                              _eusart1RxLastError 004F  
                                   _speedBuffer 0150                                   __pstringtext1 2000  
                                 __pstringtext2 2009                                   __pstringtext3 2012  
                                 __pstringtext4 201B                                   __pstringtext5 2024  
                                 __pstringtext6 202D                                   __pstringtext7 2036  
                                 __pstringtext8 203F                                   __pstringtext9 2048  
                             ??i1_EUSART1_Write 0070                                   _pulseLEDColor 10EE  
                 ?_TMR3_DefaultInterruptHandler 0070                                 i1_getTicksSince 1000  
                            i1int16cat@suppress 0020                                        strncmp@l 016F  
                                      strncmp@n 00EA                                        strncmp@r 016D  
                           i1int16ToBytes@ndata 0072                                    ___aldiv@sign 0021  
                            __end_of_stopMotion 1DB4                       __size_ofi1_sendBTSpeedCmd 009B  
                               _joystickEnabled 00C9                             __end_of_turnPowerOn 1BA4  
                                   _showStartup 0902                     ?_IOCCF2_SetInterruptHandler 00E8  
                                      strstr@nl 01EB                                      _TX1STAbits 011E  
                                 ___eecpymem@cp 00EB                           i1EUSART1_Write@txData 0071  
                                 ___eecpymem@to 00EC                                ??i1_EUSART1_Read 0070  
                              ??_doFactoryReset 0266                                     ?_IOCCF0_ISR 0070  
                                   ?_IOCCF2_ISR 0070                          pulseLEDColor@offTimeMS 0264  
                         ??_EUSART1_Receive_ISR 0071                  __end_of_PIN_MANAGER_Initialize 14CA  
                             ??_ADCC_Initialize 00E8                                 ?_sendBTEstopCmd 0070  
                                    _STATUSbits 0003                               ??_disableJoystick 00E8  
                               _PIN_MANAGER_IOC 1BA4                                   _topYawSpeedFP 00BA  
                         _TMR2_InterruptHandler 00D4                         ??_EUSART1_RxDataHandler 0070  
                              _setJoystickSpeed 0A63                         __end_of_bumpUISpeedMode 133F  
                    __end_of_readButtonJoystick 0E8B                           pulseLEDColor@onTimeMS 0262  
                               _TMR1_Initialize 1EEA                                 getBTAddress@MAC 026A  
                                  ___eetoc@addr 00EE                                 ?_sendBTSpeedCmd 0266  
                                  ___eetoc@data 00EF                                  ?_USER1_pressed 0070  
                               ??_getTicksSince 00EC                     __size_of_SetSlaveTXMasterRX 0015  
